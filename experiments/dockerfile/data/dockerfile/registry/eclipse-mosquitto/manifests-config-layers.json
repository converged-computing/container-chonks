{
    "manifests": {
        "1.4.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3360,
                "digest": "sha256:b5753184f322abaad8e0ecea111ab7324356b7802ab073928bcca3184fa26507"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1967927,
                    "digest": "sha256:6f821164d5b7ec94868795c1fb8dc6fd7d1fe51e04f97a6cf3a487868f2f5d68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 174629,
                    "digest": "sha256:2d11cec8b658eb49570fd4aa6bbf7a0c4d6f0fcdedfdfd08a92a9a14c78076dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145,
                    "digest": "sha256:8a19f739dca7066e36d14f124cbbd8f313c605445d2ebf713e30fc4fc55690ad"
                }
            ]
        },
        "1.4.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:309567a2781ad30367d0224ea2d877047b1a9f0f1332094b0d375b16da1e5b98",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.4.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3357,
                "digest": "sha256:b86d22286632e82b18d8373b1ba48f2f6434c53baa05f8ca034a0fb83d30f857"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2392516,
                    "digest": "sha256:a00145d6705d15cc09a8e92693337b2329eb41e38c0e797ba38cabba6489784b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151386,
                    "digest": "sha256:fb52da89bc340e640bd5ca1a58366e55811bc597b9642a17afb7e6b674f6186a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 144,
                    "digest": "sha256:cdb8cb72b8b676c7d80eb56e80bd964f49a741c22cfd3797a830f4f1999ef598"
                }
            ]
        },
        "1.4.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3357,
                "digest": "sha256:2a86975ac7b6f8c3d32604ce0509bfc3c72281dfe2e26e5eb08b04cc829522b4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2383064,
                    "digest": "sha256:486a8e636d6250a74d15cdb3582f4dd198271a80118f5a2f59de3d9cd8433611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167208,
                    "digest": "sha256:58510974d0468bf5dadcfe48abaa2823e13d0a93cc3540294c5ccb405c6d87df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145,
                    "digest": "sha256:d5d588d9bcda308417c1c405bed42ec6072af80555f9da55db9c036ed62e6ace"
                }
            ]
        },
        "1.5": {
            "manifests": [
                {
                    "digest": "sha256:aba9e5f2fb4358fab5e1ef36b335c439ffd31b240352400f1ef98eda71efa464",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:1996286198293ce07d9dba590cc18316acb157a956f97801a8388a88e097af84",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c2cbe23e3545a59691a5df0dd88928aa29fa35948de867f6ba76ad95efb98adc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:527dee1921ca920ee2c3d23ccd449510ec141e004c14d95d4653e9ea1d755974",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:091155a7733c6140b189efedf54093a6d62e9d61a6f850d80cacbac6d93284b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5bb83bfb3a3214f8181c69703181b9409bae1df9b2f6d118363f61b81837e7e0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.10": {
            "manifests": [
                {
                    "digest": "sha256:49e3c85e9a69ed6e8841f42086175b58c90e31c1d31b8e1e97acebdadc7c1763",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:43d9f16fc82d5a133ad24e3f18c57b4f0ca819093625a5f287f89a2382e9e85b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:395ded4d5df74fb66f6ae794d9b2a1c16c4c1e35c22a52fc93c36ee3a6412358",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d68522383369467370a9f5fa75c96701a35acc18437ef0feafb3140d73d38bcd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:8ad87de6c37b038dba23a31c07135fad88eb3915a89b3cd2a3dcafdd3d43e055",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:0c6985d7cb2326e3860cc2307f525082e799e010f5e07d833cb807a1dd4f27b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.11": {
            "manifests": [
                {
                    "digest": "sha256:aba9e5f2fb4358fab5e1ef36b335c439ffd31b240352400f1ef98eda71efa464",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:1996286198293ce07d9dba590cc18316acb157a956f97801a8388a88e097af84",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c2cbe23e3545a59691a5df0dd88928aa29fa35948de867f6ba76ad95efb98adc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:527dee1921ca920ee2c3d23ccd449510ec141e004c14d95d4653e9ea1d755974",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:091155a7733c6140b189efedf54093a6d62e9d61a6f850d80cacbac6d93284b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5bb83bfb3a3214f8181c69703181b9409bae1df9b2f6d118363f61b81837e7e0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:fff5f6bcba709c7614c4733bfd5425948ddcbff4cba5a40cf9c9aab5b714f201",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:24a5d2328dfda4384abc26edffdf9756986936a9b560e9bb53fd7f329ed420f7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:6860f6597ab07bfbf2df3b97f862d5ed32c396d8b05542aeeba8c3b10cca3529",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:a4e048a8f4b3ab639e394e5086a6e737e7a94a597fb519e0d9e469ca832e7c47",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:f80ec504d4c7c52364bbf5154b0d94b64f310e77cdff6bef5b31dc4657e70a2c",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:82b1ed4767805f247c7c8069a966964a3ee6bdc937034caaceee685d6640bae8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.5.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:15a0d9d2043be3777637a4f23b50598ff506cc739000791b832f99a49b7068ab",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:06562148facdea05affdcb80d88f12de946c2cf43a9fdaa35bc1ffa131d87bb7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:519870b2f63f8690ea49656d9be38b5c1b36c85660175e709953d6d04ad57a3b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:28e0774909a3e6d2c077710285b55cff7c7a28b7542111a73f759dffd368122e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:dce0e9868c3836473dd2a738c591fe6132576a57fa2866c70a646ed234fd5745",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:6f0ec7ef22a186349c74a3c11a00bef11e3ca45fad6ada56ee2b41e125558a3c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.5.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:0aca7bc1e5953af3c6773654706778c84766f0920dcc5272667d019810ad872f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:9376cb8282921084f031e21930bf30ee4ea48dfb3da8b3ccfdeeb1e2ce43d856",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:764ab002a62e5011708b9b804e7329c4c23b607968786c916ccbeee24be5d58e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:03d15c528efbb47df7ca78e859eb1217a6a416c980a602ce28a1a6149a635e7a",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:1f6d178d5bdff228bf2e9f9fe8155de34d60a2efb5d9c492ec1d46dd087dcc00",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:07a3067518c1a298d8e09a8e6e2dbf400e821f0baca3018482021082bf41bf12",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.5.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:51a5fca7263abb855766967bcaf51627440c6aad3b55a786f23c1d177cc7bb42",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:37e088c96f3cdba78a455ede82e0b3af9279860807076944f9bc34fd8fce6570",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:031c3a00b4a35e31cf091f67ac73c6164110703d457f8fda67ad84593d87a79b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:aba8896ba71c6be86bcd984ec77894578b7771bd8cc0dd278d898432eb131385",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:486008d5a3a34c021dabec369a0504b1724c506c22326dfd6f88e02d594f8087",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1152,
                    "digest": "sha256:d0bf7df588466c7e129bf4c8d9c8be5837d314844586e40ccae5b99f9ec3db86",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.5.8": {
            "manifests": [
                {
                    "digest": "sha256:6e8fb0e118f09f24e7d51ab2397f6bad4545f320cec4484068b98acfec851398",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0c2a6c7d598e8cdd315dc830e4f74de939178642671ed3231781a84bb7b00696",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:bee324e8cb8e372f03942bfee0b56e106895bafddb3dfdcef2555bf550c9cb75",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:4425f0d7f7fe7d6f411fd3c00fb66883acfc2e64fdc51a48ecb28aed56957a92",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:6983576c5f147bef5eb7b41aa8e6c73abeaa11f9c470a939dd2539639a4cbf4f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:8dd66281e41a0ada5b07268e4c3ffc5949aaba4384a1629e3e4738ccdbb916ec",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.9": {
            "manifests": [
                {
                    "digest": "sha256:19d81215300717643945775f19d5d81f79bfad02b772f0483207ce86fbd11972",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:e3b9cdf0270309bed178a8781134e124f4ace812a6c00a037b262f658042fbdf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:bfc98bc456fb9a1aad4103c8f14fc1a8680a64b0fce617b85f68da232f380d0e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:32cbaf47957cf58fe2059ad87053c22db0891086401c278831210e17553bdf7a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:ca1370a8558423ebd0c4e6c4d920fe8f65fba7f479123b98026dfa91a46b0b00",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c617863c4e59323ee31daaf6f66d77a100c0a7b2445765e6b2b342b7b862a76c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6": {
            "manifests": [
                {
                    "digest": "sha256:abc6b06c4b65adca0d1330e6ef58f795c77c22a0229ba8e465014acfaab451b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:27edba6f7c56819d2cfa1b9d3a2fd81038d8be50151409e785a387324d5e8423",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:351845de0e7f90859665b1fb4f63169d9178b8b1de4bbad4d5d5c2a73a190c5a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:6f82792eb82e1e5133b501ac7e3e7134892e39a6f3480526460fad9116b85e80",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:642ef608e8414369786db8dac4530bf09ada085037062cf43e904be90e0f92e7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:94766253a97ddfe549f22e324dba00f0e3e6530ed16049a281c6d8fffa13a68e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6-openssl": {
            "manifests": [
                {
                    "digest": "sha256:d2498c745eb544fbcb0c324ee5f642903aca80aa3f5ae19fa626ee42b24c4116",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:daa660035b58252128c08208813b0e0c199e4d6e6ecf6e9ed995176d15e7b67d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:2111cebd2df0c996ce4da6d64f284c5e8c4e5873372a44601fb5af45921bfa57",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b10a3cf56b75ca695967278fba8dfdb09c369437087ad08f41f53440c8ad2247",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3e0a536e6e472621224c83868a3ecaf2987f6f9c43ac15f52caf2e33a53281a7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:a5476568a138031e93eabc1015e12e3dc62334e2c95392859f83132d99d361a8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:2bdc00e3c7bf96dd3f072fc00b8bf88dca9eaae1f15f82e9da1c2b64bb7f83ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:6bd3f89b401615db5f58b104cf205f73b75ed4c3bc28a333c08a181d649f3997",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:1fdc2fc02206fa3420a2513e104e3d3b0865d964b368768015658469bda617d4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:f9bb9cdd316b1d7817aef87277a51d6e1d40d879d1b790af6516a3c397e84be4",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:b66f7b20be1ec65cfb4b6587d0a8a876a89103940e837de3422407444cf2093b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 945,
                    "digest": "sha256:5ef244cd35404e99d4fe053cfa6766fc376487ddaca5b286c279b6e11bbb5d68",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.6.10": {
            "manifests": [
                {
                    "digest": "sha256:6ba2e25501e63acb3b765dcb93a469effc93a1179f3e40c53c979359cfe0eb9e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b490a03dda5135347486509aa7f4efd7b4a8432a4ad24f93a357e8c3af6ad299",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:22a2746f118dd8636462f2a1fe5ffb3c638d76fa0bcea33a9c5cac89f47cf45f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:f7c11b99db619cea09bdc2a8468996c71b0f837ed1a0ee158515856e691d27d8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:979ba03e401999b5dec824f814807b858dedeec9f4fe3a8327a4a31277200dc9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:23399b1ae9998db54b47855512fc312e1daf2fc72ea5a45607aae335f051a42b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.11": {
            "manifests": [
                {
                    "digest": "sha256:d0a6d5015f715b15dbd8286ef71aa91b131ed3aec2067fd219e5e3227982895f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:8ac2bcd21a0a5c625d18d5c49eec92a28af0715d398a5446c9898b96cbfd9082",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:327319f456dfe5af0755a63628717fc88c31b8a083f21a2db04589dd117ed28a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9e387d6217266d31f8ab4d00d923d2d43c6c1f64f12db9004295fa84978413a2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5e3b810cfb055f04243dccd9562f6a3b041a4b4f180008f4d361bd4902b03697",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5ce5ed92936051c31ae85b2f4f8583dc135998701c3070636e095d30941238a6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.11-openssl": {
            "manifests": [
                {
                    "digest": "sha256:bc9ba6a38c124ed22ce184ecc088f912c1dd5d3d5d50f76aac8a20c57b7c30ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:abfce7025801760ce1034ea7d591ae63c969cb8cf034d86b17c66f73bae801b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:5d61f8e44c6634495a101d1cf001bc7eaf5885fb6e3cb59ae35569d8a2f980ae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:edec8ff0acff4e1ac983b6f34bff8bfaf046bbebc1c652d0c6f1c9e7ecb51644",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:638a0ba89c6cc0abd46ddf0724600538cc6ed947316ba634cddf724a49e87b0d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:24b25a0bf72906391fb0623f0df555fbd49aa9addbb16e906632f7a6a9785bed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.12": {
            "manifests": [
                {
                    "digest": "sha256:d10fcd6ae2a17ab285befff6d1465100ac3e6cbae977a7f0daf81e5c1f00167f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:01d179b8f72d5418c0af74010706eb39836185768d7cebb8251c4c3a94e1d22b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:685f9710b3d1e26766a57c0527532d8785fff85688648e7e3e3781aeeb23c33e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:037d01a4bdc5f73914850a70adca28c0558d829fd53c6f22e631870b73e7fc9b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:0e0592b74b9dab1f73ec199b86e6535f8bfcecade8e8cd26feb992eab17a2041",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:dfa49c0d38621964d700d2b8f57bc803e47671dcbd5e7c33c6f058f276cc7141",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.12-openssl": {
            "manifests": [
                {
                    "digest": "sha256:d8ba70e6e4ccf1b6a7a475df0832236a809d1959c63bd89686d2fa9593b9d7f0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:31b28728e28fc8ae342989b0abf021d973370e1545ceef767d62d01b5c6f9322",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:76458ac1ebdb66d4f22a3ee971540abe5a56399210eca9b2a63f790e4ada760d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3bfc67e5d761d6a0b9d4c9d3315ccc9714d8c9b4204603a23a273b6f0d96ed88",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:95f99843b32764a9b8eea6cefe79caf40c21a14dc6094cc4175b433eae5a0f10",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:042f86adcb724af5c2bd51eb78df701a9896a1a6a880d803e2cfa4a1f79d9fbf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.13": {
            "manifests": [
                {
                    "digest": "sha256:9cab849e220903349975f6f223f4b547b94b5d4a40c1e3d50cac911727192d41",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:430112bdc6fc670cef31104a8a38f71c78630a85bb8efc604f00a989e25ce315",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d857b8b6ebefeb7abee0b616f445e461f223299dec93a1a4a198b24c1509a5db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:f28fcaf8f0a92aca89f1a173a26b67c09808c1b496bd61537fbb8e10858b2a45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:3daabf4bf61d43c5274cfbd8acfc17ce6160e5e6969ee4b6423b5475d1ad9a63",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:0d2b14f26efd5bbc28e359c049d06bcab2b9f5a1375cfdad775de68435aa11bc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.13-openssl": {
            "manifests": [
                {
                    "digest": "sha256:1667d4cd9c2c54548d1877d4f7edd9cb3102e074b1e605dccef62ce7453e9e81",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:1c1f7956eb7fa1508f2e89f7661fe541945d1ccd8a5548664b9c060beeb28c4e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:bd6a0cfbabf443084b2b4285b3d0b22b57cabc484de6459e7db27cfe762881b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:dffe88d8bdf143896766418843c1696a9fe64e10b88dcded7baed4778a6aca0f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:92e6a9057915f61b4a710dcbd213dced5b924a08b8c43a331a40639dbfc60d61",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7bc5f5125c495d9df047fea6d155b186dced49f0b1c9b5d222dc93ac4d92b435",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.14": {
            "manifests": [
                {
                    "digest": "sha256:7784c315c1537082456643b3bfc8ae3d1b6a2a9356ba374eba448758f71052fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:1ff5892a1fd76e5426dca5ab821944f28014a06f59f486d9715d2ae2398edf1a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:2685178370c92734ec46803e464bf3e0f1bc2e02b16815a0a0cadde0826f545c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:1484cdbb1b89b8047e535667031b74282070e87710262547595bafea979fb8c7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d82c9abb6da10db43a4d79cf030544a455762cf520aba2b0474dc12010ddf2fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:3f8d8be82b28a33d1824711b1ec1e1477dc80d56421a86a448c3bc2da7f89750",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.14-openssl": {
            "manifests": [
                {
                    "digest": "sha256:947cab0cabc0dfd01fb8db04ffbd2ca4f6f4d673295bd1c5abef60b3e050190f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:04c5d2a1122775035e6623e94939c082777201bdba1d4934b50022b40156e540",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7daa8535b0f1c5c425643816e06962c1b06cd62a987fc132fd44d13748add071",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ad42c291431615ed8769a99ddf6ebc03cb2cb1f083741df21e061c92b1950eff",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:32bcbdf1a134c5310377c5ba0ba77eeb18705cf5a14134b5cd43618946ead7e6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3fbfa31ff6e83ddf840925d625f9e7754926968a64bee62ddc9a7acba797025c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.15": {
            "manifests": [
                {
                    "digest": "sha256:abc6b06c4b65adca0d1330e6ef58f795c77c22a0229ba8e465014acfaab451b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:27edba6f7c56819d2cfa1b9d3a2fd81038d8be50151409e785a387324d5e8423",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:351845de0e7f90859665b1fb4f63169d9178b8b1de4bbad4d5d5c2a73a190c5a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:6f82792eb82e1e5133b501ac7e3e7134892e39a6f3480526460fad9116b85e80",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:642ef608e8414369786db8dac4530bf09ada085037062cf43e904be90e0f92e7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:94766253a97ddfe549f22e324dba00f0e3e6530ed16049a281c6d8fffa13a68e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.15-openssl": {
            "manifests": [
                {
                    "digest": "sha256:d2498c745eb544fbcb0c324ee5f642903aca80aa3f5ae19fa626ee42b24c4116",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:daa660035b58252128c08208813b0e0c199e4d6e6ecf6e9ed995176d15e7b67d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:2111cebd2df0c996ce4da6d64f284c5e8c4e5873372a44601fb5af45921bfa57",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b10a3cf56b75ca695967278fba8dfdb09c369437087ad08f41f53440c8ad2247",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3e0a536e6e472621224c83868a3ecaf2987f6f9c43ac15f52caf2e33a53281a7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:a5476568a138031e93eabc1015e12e3dc62334e2c95392859f83132d99d361a8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.2": {
            "manifests": [
                {
                    "digest": "sha256:d449399866978b128e7cf4b6f21ee5c010b72188fca81e15e105cc962ecb7472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:5529bc5aad4a8e081b7b74a1e3ae4001e7a707521ea382af4a01f199596fbb2e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:41c6c3d474abe9519f5402855e18dd5533190bbc44254edba493e8b49618b9d6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:91553e0d1175d7400005fbd91b2b5a52f2f62fe3f3e3490e4195c17c25a72682",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:73d7b3fda095db786185c6bda81cf9c1005f64cb81dcd0b67053d34a307856e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:6e06c11cbc2ceb70b36e94005b0dad241b9a38b8dc3c86269548e4cc49a8c57a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.3": {
            "manifests": [
                {
                    "digest": "sha256:201dc2c8acb0769150d8573f0edba957fcacc1d3505bf274015bb821656c3b02",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:68b7fc0b9b5d784747c84a4e151c6e2526d8f8f7e1c209380fbbf877b34f6703",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:4e81a0d9094478547cbdb51ceb376e1e32ef999862586f5c9f8b414800cff11c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:e3edc978352900b04b801b6f85da5ab76a50e12ad1c9122acb61d9ba7443978f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0694f9577bcd39948961bce9d8cb12fa9f98c08771e7cb13ff11d4c3335b1a5a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7dcf9f7d1f6e04f2bfa5b02a90028ed8f589d603c1f4da862500f564fd95fb91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.4": {
            "manifests": [
                {
                    "digest": "sha256:abd5f5a0f0976a0765ed5070232848532e3d4f4bc4b59f6ed22ef9c73b70e067",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:57a977bd56d945866481e96a0dcfc0bbec293873ef2c381f702a6db0424abcc1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3b1f22a926e9ced44e140a91cd51bf7f112168b5defca7f33c8a97860a4f8835",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:44f52ba74aafcf46be0d50189783725f67e4202ade5b52b6b24842db7ecff392",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:757ef70027dd66d340749a01c21d91e2de9681c4468c1aeeb1190f8e9ad80238",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:85fc5c069bafd15bf0e79a54022f4728f75491c27b3f787dd4418f5262cfac83",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.5": {
            "manifests": [
                {
                    "digest": "sha256:d65dd189ead91768d2dcfd2f4ffcd4fa85e7f9736d062f3fb304393b327bdd6a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:43775e855355f14db9d3a0c68be4ba92b0ada7a8c4246869f7dd1d8a8550637f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ec600830e5a9059ac9321bd323898ff300d870ab9508194117fb43155bccc10b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3cf9c0b31df0ccb416e9afca2cf5895baff1cbf8ac5a70f70a044c6dc3c8b34f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:5e83a6e236a1c6b779adb5b7dcd5eaa69215dc26df06bc829ae26eef800e872b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:4cf8631a344b9280fd6fb4ef8eb05943f9007edd96a9b41e0d910dc3f7f0c8c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.6": {
            "manifests": [
                {
                    "digest": "sha256:273bb8661f3d8f0127918ad112d8336fba1754b0ac3d379df9902b10405f2722",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:314e335eed9a738bd350e84b2177e02084a7655dfd5a800938a0d758fe9c8cf4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:6d1e2a82812bd2b3dbb906302a3204c7cab4364f06302eeeb9f0d1352fac0061",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ec44aab09cce80189b84f114607ad291fa02fb9cb1f7de8c02f07f2e455522b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:6e5030e33956b248fa33dc23029cc9d2e4cc4d680cf841d22d16d1389868de63",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b330c3a262bba8418a158451769485accedc11c924a1c7e649a039070d8d8874",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.7": {
            "manifests": [
                {
                    "digest": "sha256:a92b72d7bfe7b0c227d88af3ca4ea3229fa420a050d9c14c3c74e83a666e7b20",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:785d2072b564249a4d11b3339c825631c1f96e379de1076a77f7f8518f864d90",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:13bbfbbc3ed64fe2dbafafd740790686ac1b3d9045fbd8fd964115718b4817b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:d5ea26b06a949795412947143084e6dc8dd89119da1676821520295159aa4d7a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:b1fefe0f70a074ae822218af5f73f1ab62660caa2ab24107daad555a56c2904e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:ddb5951f882934823111c0e8c2cfba128667afddf69c963062a26b81e06fead4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.8": {
            "manifests": [
                {
                    "digest": "sha256:c191987c6aaebea7680738ec6bdcc8a6ab0b53760cec5633546fc40025d88824",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:14bc26b4753c69b3c78627e49555a1d7730094bd19233ebdd1500e048cad50c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:a0c0f0b05a5f98d0382dde4b1874edc8a7aa026f78ef3ae9657baa6d76a1c9c7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:47a99e879a662c717b2df2726919bb1fc258324c559c9d61a014769465f8cac8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:a000e0ccac3c8e3ca255183479b0d35cf2438e923a693bcc40723ae0ac9a5f2c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:fa02789e97d318ab8cd57f0a5db0688392c9067a879daff5f9a64de781d2a5d9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.9": {
            "manifests": [
                {
                    "digest": "sha256:2f96254c4238b9a39da96b670a33b32c2f26889d1d71704f2ed3a6e1f7669598",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:88b43f5ea09ebf443dc66bdd675f5c84dbf6fcd6b7028dbc1873ec66d894c89c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:f9c8c1282a1b07dc18d21447e3a4dd72582d819dbef4da04aa6a7a2754ff4c3b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:1a26b160e05d4b4ea0fe1e05d07f930d654ded6d10aa41be63686c76a0b34275",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:a40e45273bf303a2f4bb05d2ba8467200c55c0b441088011cb65528fa956ccf9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:9bb2c62150b3ece5c289cc3189fe2b7d5c8ed499705a5b3d5f8b61c2e97cb88b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2": {
            "manifests": [
                {
                    "digest": "sha256:761147236a85bd0c33208ac55bb8e1026f7d74b6eeec7f95b25aebae49e01555",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:257ef746b13917426a8d155db2e5e9b63e7f01f2bdc6e47e4ba9f960d8b65daa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:da56f28cef444b6c0dd9be915026ed01d52c2f71d454064c40755cb59849e6e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5604e3720f6572491c79e5896ad496284458bb1827071975ccad4bc679994e9e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c46d5dd37de07fe97188ed14e931a6a66ecd37146cbf8c803337727e91c68d4d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c9d69d4239a88fbb008f05b29c098a66a7ff3331746cf2b5c4ca7dbe8431da11",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2-openssl": {
            "manifests": [
                {
                    "digest": "sha256:5fc8bf97f080f2904b142a064b057dd1240f4e2c471a53503c4e110895e43ce0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:e5863d018888f8c0e294d4076bfeeb4bb857d434f9c944e920ffd6924ca818c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:c2bb882bdab23093fa0223fc1becbf4dfe8da072307930813180e097b6e50b9b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3f8052715c7f4bee355d003e7fadbd62fbea47cc25392896403ee0107eb41303",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ce1cc15bbbc9c73024503723a90227b75d9bc5ea6052b4c96a0774916cfe7b39",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:086cd80efea906f8d8360173ba2133217e3492fa41ab1be83207143a32bb5c8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0": {
            "manifests": [
                {
                    "digest": "sha256:761147236a85bd0c33208ac55bb8e1026f7d74b6eeec7f95b25aebae49e01555",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:257ef746b13917426a8d155db2e5e9b63e7f01f2bdc6e47e4ba9f960d8b65daa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:da56f28cef444b6c0dd9be915026ed01d52c2f71d454064c40755cb59849e6e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5604e3720f6572491c79e5896ad496284458bb1827071975ccad4bc679994e9e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c46d5dd37de07fe97188ed14e931a6a66ecd37146cbf8c803337727e91c68d4d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c9d69d4239a88fbb008f05b29c098a66a7ff3331746cf2b5c4ca7dbe8431da11",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0-openssl": {
            "manifests": [
                {
                    "digest": "sha256:5fc8bf97f080f2904b142a064b057dd1240f4e2c471a53503c4e110895e43ce0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:e5863d018888f8c0e294d4076bfeeb4bb857d434f9c944e920ffd6924ca818c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:c2bb882bdab23093fa0223fc1becbf4dfe8da072307930813180e097b6e50b9b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3f8052715c7f4bee355d003e7fadbd62fbea47cc25392896403ee0107eb41303",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ce1cc15bbbc9c73024503723a90227b75d9bc5ea6052b4c96a0774916cfe7b39",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:086cd80efea906f8d8360173ba2133217e3492fa41ab1be83207143a32bb5c8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.0": {
            "manifests": [
                {
                    "digest": "sha256:d11128d1d9648a4a8c67d241874a341e2ce4bb82ffaa2854263d1a2b9dbdd7d7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:37a36f3f5ff8aa1ec187b9ed301713b554f99633467a0d64c3f43aa1dab1b873",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:76091078a0ac84473e44a0db69a17261a4bc4238c19be7db54f899cab412ea42",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:288f4f045b728b18df413f62135a7bebc7c57086336559016ac27da7495ad840",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:f7e94e9757b779c1ceb886e3377a4b33319f77f36daede2c6377786f75ad09fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:43b08d4a78ed02543f634f9d3c24a7dd40dcd750e0bf65d9c98e00515d46e01f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.0-openssl": {
            "manifests": [
                {
                    "digest": "sha256:6650814b3a6ba7f36c857dc3efe14e32804f5aa466789c08d8beb94f790f079f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5d7b9352e458de4fbb87ca0e918e7ec332ea1ae4d92837cb4db329b53ed2b07c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c7c09404e8df6bee559e64303133737d9e6c0dfac0ab0b6e67b919c2cc063d5d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:91cc1e379f6f687ab67a045d93240dc1fc792744917a5042ae237b0e14e672d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:291985e2687aa00383108fe587ac08fedafd8af3350397057b88d33d1111400e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c911757064c1a1c3456ccea25dc15d20a3ad3ab1653aaad1652b6360712621ae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.1": {
            "manifests": [
                {
                    "digest": "sha256:77f84cd01dee8d919d49806ae3be0f61d80c61c893afd9581244daa077ccafb7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:50f52c83415285ba5e66fb58798ffe3eed7363977c2fd23cc9dbcdb04d36c90c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d44539c6f4672f9d86eabd1058ddd2a919f2a2df3025fdd30bce054a96e3e3aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9414462efd48d4fddbba62ae7185bd462ae04f6df8e311fca00256dc156574c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:f004791cc6f673275e4bcb88e411c66d2f1e6690b0a3c5effcb9c99b61e5ce77",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:321d22d43c9ec783abf7db7da1888561946741b69882e32ea3bdb4147accaf86",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.1-openssl": {
            "manifests": [
                {
                    "digest": "sha256:eed44db2d2a091965434e0c710cf7b4654da847b0a0a4565000e3078af708fc5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:56841151669f6b62872da379b62064a75a7632ac61f3c2a4a7c855def0d78887",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:5e6b0a9b48d21b29982cc9689123a6a4a8294ac70309a6acc514537e36a82b43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:618ab8bce467af10291bb3b2b12fd92972adeefaa6f9712d1a5aac783396e1ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:c86764abdb00e7e266b71c17063d21a31036ab2bbc3dbcc0a46511eef9b9fba9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7c2ca670fbe540bcd1c19e695b22a7d81e636ba20b5b413c276386c66ce01d06",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.10": {
            "manifests": [
                {
                    "digest": "sha256:7221c4efbc1ca0715f680e9f98fa467364c9ee26969963cb80052f54ac2804e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:aec74f567bbf40072e75f587941b8df375ecc16788896ca4bc0ec491b53294bf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:381f15943436cb305134bc1afd5ed5477292467d8d26f1e2576e11bfc274a92e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:19474010d4cf814d004d6ca8892a2e70a956e12410fe728f86d5ef0a1aa0f562",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:bcd3b07e277cf37179df405654168aac33a85fb9d1486404f06633a4dc1f2eb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:3fe51e69feba9c20a2d16414052ad5639baa2afcfb33f4a955c6fd33e0903eb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.10-openssl": {
            "manifests": [
                {
                    "digest": "sha256:d8f00eb840750130e6ae19d6656ef9dd0625c53001064883b001f36f205714ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7052fe751d4f7409437268f7f4ba4582ad11d839669b49428855d5ffaee6ca37",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7c54f4f385f615fc200af39957accc60c9a4c42ab4ee0a47e9a6cdea7d915467",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:434174ded50887a566d7ad4efaf138d19077858f7221381ba45a3b660e470c4e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:17e472632d1f5aa8f0a3a8953d3bbe15adc303cf1005f718ffe5d65574cdb6fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:2104a11da85273235baa8d66db78ea9c351accdc243486a5a57c4cd38e55820e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.11": {
            "manifests": [
                {
                    "digest": "sha256:1689eec3d3da1d65dadbb25ba26c5ca85d0a9c5ceaad4877373b0b169336bca0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:b1dcd2d826f6f6fed24b37e8fb000b2d2b7f21fbfd45945357760b6db8630caa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:7dddabdd9894f98142aaf694beb6f0986064a33f17745910bd6feb7c3c41ff53",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:8b25ac147ce6d6b4a1cc047996a2af7366b46dc3884ac2a71746823546eac559",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:f0951cb45ce602fbe8e00a9682efdd0d7b09424277d28877fa26364993990fab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:91ac7753d6b88b8ae34e9b1fec64d7badabafbea33fafd13dfdc69771860db49",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.11-openssl": {
            "manifests": [
                {
                    "digest": "sha256:2a1fac7111f4d940571801389a29e52144af9284a898d8204e7bc1f8a87bf6c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:93635095e4fc98336fce72dd78ebed8da58735c6fab07c31fab74b3516f59f2a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:459f8503a3a248156855501a8fa718b92783bf02fc5b1ea414fae07ca1d1396d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:73b11938502d3650c11dd16d1d375e22d234abd571f3a7f6c5be66a0c44d5baa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:99d1b19426d5588f9e894813020602a5b1557f0da7e8ba2311995230de13b1ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:042e4468a2784da4ec1c4c7af82f30e4cd384d1b513e8d404bccfdb816be571a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.12": {
            "manifests": [
                {
                    "digest": "sha256:ca65494f0ecef3939f7e4efce85a3f03d97b67d855fc5a6aa4b00b485e23ea99",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:59533bb6961547ca19ef9d403f000b40e4da5f932d5eea1e424e50a2f83e2a36",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9a4abef3f1808bfa587d4049d78ba457cc5286b68e2473fc39d424e16b4485bd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:a4202e37ce6097fede7a27f5b173ca4455faa7a12a75b38e53feca0e9976447e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:36e9eae35008538b7bb3fc75fa9f980dfeab952d13863db9cf5a713fb2f0abc3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d95485a637de890ae2b9ce3c23838bb28fa2e0ea61057980ff5c7d77f4900d29",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.12-openssl": {
            "manifests": [
                {
                    "digest": "sha256:767ce2aafb46296e679d9b927efbf55154700f367e60f4c87034c6f94950e629",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b37b64ddd8ca5dd47f591fae9120539168f298bc8ed2f3d0d4074caf06bcf9b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:488991f395dec73314b3456a585f2c99f1ae5ee7fc063a9bada9e4ee9cfe0375",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b1147a935da6744af20e81eb6587b934de63d61e4fbd631b1c71741678da123f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:50b04a04278b71084be878476d62f501fc43eae17ca59410704ea46087b58e89",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:6cd28e26b03861f1e5f85988aca9b3e4257c4934aa7360b3c034aea3912c860a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.13": {
            "manifests": [
                {
                    "digest": "sha256:2a7cc9bb2ae6ffc9cefca176f0ea2b72cf3d0e20ecbe0d34e38714be3cea91bc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:7a984e8ae8352e8c2bf030d2d1c84a6bfc64981a193b863ee25a960303bf8c73",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:e3119fbc75341e4ae07c6e10187534739973be5109b780d715e31d93a3105f76",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:66ddb1c99bd7e5b1074132aed45cce070e3520ded9feecede3f0436fa84a1d59",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:3932064eb7d35406e7ce2765cd1ac0842c88e633c3aa05ee6d0af5905a36c541",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:266b68a67c1b945e963bdfd4eabe1b20f72e58ee82d2c5c7cd8465de502381d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.13-openssl": {
            "manifests": [
                {
                    "digest": "sha256:2125d8d73bd9acfd614c0fa90492dbbbdc5d2a3535497fd5455d86ed99d18dd1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7983c4c17e28cd55cca0ac0e36f55a6a965f6099715e391d6ae6d7ef1be792f3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:9c5202f685cc8934d7b26f1622d344978d9cdf8fff44d747fdfb42305520cddd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:484d445322c9a17064519780096d6763fd18f4c9cd2f408183e16c2394766b40",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:47840a30601d855c2b33698d99a1566f4e90c2cc551aa073bb081e781cee6af1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:08a312852b98b0709d6af32a66a5dbe8c6ee9a05b1ed2781b01ec40f40863833",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.14": {
            "manifests": [
                {
                    "digest": "sha256:f51f9a58887ec7f839402948015976a78b7341860af9948ed1e872c3dc18c732",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:417eb6ab842286e96889958b35a108178a41be8ab8c6304363b6202329316e4b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9881066d6b53c2eafe6db7121b2769ee26fb63641a418f73a71aa33c68f68df2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:a63837b71fa2f4df9ae4d62d68a1152da473b93a3a46df73ceb1f00357c45010",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:b7689e716fed245c350325945a62d5d64ac691c82719f40431ed617e2bab097e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:04c1027fde772b4f624865bffa55a2aba7f997c6e36849cc545fc3f551c160df",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.14-openssl": {
            "manifests": [
                {
                    "digest": "sha256:3c9d15fb7e6d27b592fb16178ba4ed9ffd6175b9688df79c59ff91474fbf712f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:63f8e6ba02e336fb8eb097beefa78a4e6fd90b03b82c629e24ede7cd643c7c87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:d123f709d8a83ce1aa8aa0691ecd349fb263c5af30ed988c2abff5756d0ef8ab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:110ba54b6f4f1291838ed64ab25aeb0f72eaa9320d60e5ab025deedabd0b9046",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3b0cae1608f6ef554b22eac7186e8d42955162a78297f41fb6c2ae65682c737b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0833f9b0ab3628f66d0c34cf130701136d044577b3e201bb1243313e61881124",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.15": {
            "manifests": [
                {
                    "digest": "sha256:ed9f8616d33ce45caca6f6c0fa18e631d9291ceeff0ecb31b6f24a9589c30038",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:da0f7be645380c2efcfc4d3267b69991eb4045d77c4c156c47759a485351be3f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9634fed65f110fbf6b56d4c80b7a464ffd7f4046c8c4aa8c4ac3bdaa7046139d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:e95cada9f95e4c575bcf4dcc2f6e125064d117be822722a3ef457162ae41903e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c27a105998b968365dc8226e44b42362934a2a40b3902a3282bc77c9145d6701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c9d69d4239a88fbb008f05b29c098a66a7ff3331746cf2b5c4ca7dbe8431da11",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.15-openssl": {
            "manifests": [
                {
                    "digest": "sha256:1ee02e5a21a0177bcf7edbe9b5ff8899768838176915158d106987f2d996a9ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:c9760e97d3fafad3d6950e4d6f3762f5f66069a537016620540d20eee9cff011",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0fd3b8fb86e1ae11e74e8a4f7c76f0cf5d18138f08480ee616bf56ca8cc88252",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:aab7cb41aec0ae5ddb0d39ecdefda8cdffa526edc910164820ee8d61f9e7668d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:759928d6acb191f99841bb5621abeb0fb7b214f317b9b51038b029c8b7c719f0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0b8ae2339bb9bbc4ed60b2cf89651267ba08b18431759830c7152ba7e081115f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.16": {
            "manifests": [
                {
                    "digest": "sha256:7937d71daf908c40a0b72f17e77ea331833f76b522cb4a8d9dfcecf89e65f7d8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:edca84fd41b85c602e630692103a1ae57a288b1c4027888a796f7d9a2538d19a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:a6651cc2efd34b65bffb2b5dd6e51ffb1032b78a97cc8ebd48fdb847b18151c5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:ade3e4123d487bf2425e84a469c669affb95bc4d49c4e00e3634ed33188b5d2c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:6d85bece5c853bcc4fce72dae6f85eeae89db57250b11b51eff07c319f0162ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.16-openssl": {
            "manifests": [
                {
                    "digest": "sha256:13f49eedca9d6e3b5450c10910074e76030af6d83adf4f4f526a6769ebe59db2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b21381615169689ce62ffe282982600b584b6a1003e387fb947391a40b9b642d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:62e24138da0696d4e2ee1beb55da49bcfa45b7fba7ef79d303c1fc4537bb79a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:61e0ce4ed39f39678e3d65861f752ab367fbb8ff1e982b5eeefd44d429d12ec5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ed03dc4778c72eb6cf8e860e4cf950e70008dbb3eca08a1b1cdd3bbd137afa91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:d8b30f99c798d0fdcca7b4733902a060653275df87f81803381d88d5ece9f267",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.17": {
            "manifests": [
                {
                    "digest": "sha256:35e9318e1860f2f6e709e8b6c3630163104ae7f5894474874dc02fbdb0d863e2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:61741e4b46b9c777a63e13ecbd6a5d0a4c50031103ff82bdb8698a423fb3f649",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:247d81c1845010df7805f1b811eef826e2b321721b7fa438822272a1083d3d01",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:35b635147c1deafd15ab2daff15f94e4cdd0a7b9cf7c6321bb8c831e75efe055",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d43a1b9d607072dd18a7810e65c034140b9c331208269805376ef7361a9cbc43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.17-openssl": {
            "manifests": [
                {
                    "digest": "sha256:f6f7d1728a23dc0310266075c4baf8080ad0c12048a914dbaa89490657640af9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:4f3780318eb9c25dab403e46a09862a08e456ee2592eb3f9a8e0b16b053511fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:4b5cd12bda9b24909d02d808e821f0b94e147cae639028a9f1bb83641b10291f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:f6428eba2d91f50bb77bd6078121496e3bae3c2f607821509944b184fd5e74ae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:091f84ce1f9c9d404220afb77ffbfd94f4007730a16700ad734758a763bca12b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:65e4920c2df85fc36a019fb987a93c9113518832ed2494a044b751a12dcd02ef",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.18": {
            "manifests": [
                {
                    "digest": "sha256:761147236a85bd0c33208ac55bb8e1026f7d74b6eeec7f95b25aebae49e01555",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:257ef746b13917426a8d155db2e5e9b63e7f01f2bdc6e47e4ba9f960d8b65daa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:da56f28cef444b6c0dd9be915026ed01d52c2f71d454064c40755cb59849e6e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5604e3720f6572491c79e5896ad496284458bb1827071975ccad4bc679994e9e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c46d5dd37de07fe97188ed14e931a6a66ecd37146cbf8c803337727e91c68d4d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.18-openssl": {
            "manifests": [
                {
                    "digest": "sha256:5fc8bf97f080f2904b142a064b057dd1240f4e2c471a53503c4e110895e43ce0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:e5863d018888f8c0e294d4076bfeeb4bb857d434f9c944e920ffd6924ca818c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:c2bb882bdab23093fa0223fc1becbf4dfe8da072307930813180e097b6e50b9b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3f8052715c7f4bee355d003e7fadbd62fbea47cc25392896403ee0107eb41303",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ce1cc15bbbc9c73024503723a90227b75d9bc5ea6052b4c96a0774916cfe7b39",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:086cd80efea906f8d8360173ba2133217e3492fa41ab1be83207143a32bb5c8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.3": {
            "manifests": [
                {
                    "digest": "sha256:1923e5512ac87b675a9c80634234243ee7a284cd8030b18e3195baf232583da4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5c75852f92344341798650dfc7792d7fc6d1915dde5f137a8c1e4327ed9c7e85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:b0d0450c37b114e77e66333b48ba1363e348cb80ea75be329e9b1d8cc28261e4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:068f5dbe5a0b94dc1ca0cc5576e3f0f28aa661444ce1d409dcf3e6abc4706239",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:369e805c5b6cf80bc41175e509b997969fb6c220fd89db422842039e71d45e24",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c2d4e9e61d374ab59d9e4801662f4e636fd61aa0e3c09f8d98832bc1fe0d2116",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.3-openssl": {
            "manifests": [
                {
                    "digest": "sha256:b62e22f862e992681c5e2e9738ef2f3d1fa9457c901148667800aacd03f731cb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:6ae03a6fca17a7159ae4bdc0657f35c96601245950936665696ba536c6057e05",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:37f67d97418be88088acb24b532791832f2d71078a82b889b9881aa24783f5db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:212fe0eb5870af1ddec5ded9aa852e390508593202166aac9cbf0fa04fc3f329",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:9a34730f036e5fa9317b24df356d389d749b565565c99c6ad45267b2396d2885",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0ff09083689b256a533f86238c98fe7017db6eeff42567db9b41d7dbbf555f48",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.4": {
            "manifests": [
                {
                    "digest": "sha256:1a65a453bea5b066db0fd3cbac0ca16740af179a0d25857c77e5eec2690207d1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:6e2471851ff14ff9efea73d979d5aee341baa6d946abcc9839a16bdd713e5e8f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:4df444bcbf425d6dd880064e24d40a583e8f88fe70af5b700c2eb216303c4869",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:62bf6fecc6659ff22673a4664610396687bd556b78915e206f19ea45864705bd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:cbfcca011bd04bdcf80c4706daf76873021070bd3dcad1942cdf1c328b2b35cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:e5fc04a9bc1731d880668c3a0559554fa2e0cf51ae40b17fd25d53ec22fb6279",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.4-openssl": {
            "manifests": [
                {
                    "digest": "sha256:0c7ac3d400fa3d965e374818c59cd9c544b1a56d8463a7bd922c3c1dec4fb4fc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:cf416d15834b785c9d1a1b149965e74dd9e70d51c462331fc20d5f229328b492",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:36f650a3298e4fe9b2459bc8812218b1838061e1b6e5448b20bd89702bfeb2ad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:5cde5cb461d1e8ac9b9e64f302a6ca7a6d49cc6468142ff4ed78ac649e47863a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ad728e04112f940d604524738b4f9f00364ed58b1c75fef62d7af29be5f34b51",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:04d05ca2d92c10d376ca978733f26a4342950f40b2668fbf4d630a5f923bd1c8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.5": {
            "manifests": [
                {
                    "digest": "sha256:b3a03f6790578dc22e0fe79767793df30a81de5d504a2bb73e28257201f68590",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:1201a7fa6e675fc66699c26a8d0459d05a81724327ed3c2f733efaf47d87411a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:591196b50364c01a801c20e3e0d1d871a451c822e242ae63bbd51b1b65764f03",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:00b5a5d463b8ff845f648d849f335c0e90fcea4b58e8cbde3d2611bdd19eaa72",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9f056f4105636b47371212a09d717f729f01cee989eb263c1327fe06df19aa00",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:adf44f4ce4a5b65dcf1b8f9966eb0e3f913ea2edfeae5893cee524c5681e6a74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.5-openssl": {
            "manifests": [
                {
                    "digest": "sha256:5f8ed419a8b70de1fa5804bf10d7fb6671fcda56e3a4c48d7312236871c5eb7c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:2e19eb4355408eabb1c4b0e5f1e44457b3f6e2db0e0deca4d798ae4f76dbf5ac",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:aaaae9271d617777104d7d0be5c6bd2eb4d8b63353803a4da8f3edb74206a52b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0f2ec33fc901aeca2969aa525864a751461d8bfba219e6551caf68ae5cd860f2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:599bb66ba015d96c188d7b0918327f74c241d87c2987cf9b54f8143f485aac32",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:e920dcd046580f909dbb43d282e5399f66c13d95ef74514d5a765fe2a26129ad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.6": {
            "manifests": [
                {
                    "digest": "sha256:272c594c24d2d61ff2995154cc58f4061adf19f5e1b911f2e98ef6464ab5cf69",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:f3b39c04ec9a4d3992ce70c3a1242a04f42fc2be9f19b50b3dc0ae43242e2c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:b30e67420ea877f919fcdaa5dc552c622825f616a81d966f03dd9cbdba86c16b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:604f3c0bd15a82237db877e3c7de206fe10f1a3afaf825dbd9179a4a611d0eda",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:4255db785b3bf1dcdcff3d5a50304014b0f6b80632ee9d30c7e55ec9954295e4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d7d4bea4ec943f2d6e303d8ee32fe4f1d9289ec181e9b8678480c38b56290e79",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.6-openssl": {
            "manifests": [
                {
                    "digest": "sha256:8568a6d188c7af1ae443bb6c1284a463e9df041a61d8099258f222fde008ecc3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:89e37c257a41c30b8bdb477330e461b5c57154bbca105602ff85358739d3b6eb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:848f62adb1a9312ad048f42279e9f6ad022113c8376fcf0329460321bbaa5abf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:7d6367cc5d430ab45500d90dce37af15e4bb0b8286bdbe0c83e0517228756e3d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:1ab9614943dc0dca0030821cf493c7a9d92b37074c8859de7636a7fa2e8e2f83",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ba3111d2a05831fe6524a4d97650e68bc38e963fb9aac1a3771987db2db252ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.7": {
            "manifests": [
                {
                    "digest": "sha256:8699521f26d9e8278151250e1fb163aaa62534e098e85865e5673e7a0c1b4824",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:64cc9ec4b7d03efe5384b3336310c54335da8ef2b015369c5ff656b95e244908",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:f257ae4524ef1c6aa0726567e88e5fdf256ed325b26496d18c18e5178eb5c8db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:ddd90bad02b7a53a983e8aab73ead05c30bdc49e575eb97decad64a69ac708b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:afe7373f114c8d0eca0f6c61451419790f08e6f8bf26bb02be7354fad9f9c605",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:0de945f7ade4eb4c1b976e8a91f512778c9b4d713295194463558297b11dc0ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.7-openssl": {
            "manifests": [
                {
                    "digest": "sha256:3049713be43bca6290141407fb6bc728d51987ebcb6595bd0c26afac8c31f5b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:61614162ba7b07a45a150e7c99993f420a7bce56f05c14e4c669576e20efc1b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:445f0a2cf2fd9b71791ec6fa8d906547c6bb9a80fa277e5af5ff28fb27d442cc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:edb18998fc6a8182dfe763f276167bb7e359ec1cb472360f30aff4f40dd7d8a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:fd61e09235398f2d080f5d6e88f6d81fd4adcb7480af70ec1b43dac2c8f1bb64",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0aa16d37a2cf3c6e00f511a5a45778c9b3e22690cacbedaf000c7055b6afccf3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.8": {
            "manifests": [
                {
                    "digest": "sha256:6c1ee39d4add470461dfba995acd20f6f4c5279ac2397ce7a5b0e1400852c2ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:89e3883d8f7d153be2226610c955fa81249ccc14b95288908cfb0bd9b0133f12",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:624d71e1aa8934be40057a6fa01c3178422c013f9ebc76e477d8e8919cf781ad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:ddab25b56e600c8e9c466189e53756f38c54a362b94a0d5685ccd8cae4a42c5b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:3b271c6bd4311368b0f1df67dfac364dcb557d197793788b2c5c2571299fbe15",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:d7b3f4bd0c1a8cd7ab6e33f97f3b9b19b953adaf2604b2f8ed4e67708cd53455",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.8-openssl": {
            "manifests": [
                {
                    "digest": "sha256:8914972c633414b36d3e16d17db6e757c52fa3b0b15f4500f18236ebc1d8b6ce",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:f4cb6108f6b982f3d00132122a5678bd66ca94782db792cf4d7b06a3e597c358",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:487c950c27fcd0019e87374fe46a669f1ca2288ec706a045ea52b6d08d54bd06",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b3e64d75ca809dba222af0d706ef9bccd4a394f675d21fcded0d0aa5423b5c37",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:b421e3d46f9a7458b830d26b323ed0ad01178af658330d9b9d02542061560be2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:802bb9134a09fe28a15ce8da385f79db46dd6cdb8575b95d6b947aa4c34772c2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.9": {
            "manifests": [
                {
                    "digest": "sha256:2d3ba0811629704da1742fad8da4c13cac3b7bd74f08c758303885b330a1f3f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:ef67c6d59b4eaa788c447913e378378b81eb4e381676a245125a5f83bcbae958",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:1d1270560f07626fde3d8c203181a9e9e64a9cdde3967b0466526d0ff36dede1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c5ca5654632534c0d9fec32ebd01e47e13978ed65086347503bcbee2b168ece0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:9dc19efc79cd530da4938c1f1664379a372940133dee83918dbb93718bba10df",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:e07aacb9dc7b30e50691fbe2217103c4c870038538f50f130febfca684048fc8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "2.0.9-openssl": {
            "manifests": [
                {
                    "digest": "sha256:7df745351f7f92af9e5223c4c2944375298c0fbd44676d831d94c7684f9c4bb8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:38739a33d7bc75cb524f565c5ada52646b5b6f1d4f9e9dbaa48e1fffa7e3c929",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:60a095173fec4242b7408655a56cfdd18bbac1d34981f4e709b7a1bd11aecb72",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:13f429343e5dd3d4bc54d953f31816e9bbedc2aeadf5858166a075b4d78b56d1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:174beb69e0d7c3a9f42612791534c099662354c65b5b1f85cdb0289cb8148c70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:0b7604bc5da0012d07bd308f8a382d6125d352a569abffc01672f72ecaad044c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "latest": {
            "manifests": [
                {
                    "digest": "sha256:761147236a85bd0c33208ac55bb8e1026f7d74b6eeec7f95b25aebae49e01555",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:257ef746b13917426a8d155db2e5e9b63e7f01f2bdc6e47e4ba9f960d8b65daa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:da56f28cef444b6c0dd9be915026ed01d52c2f71d454064c40755cb59849e6e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:5604e3720f6572491c79e5896ad496284458bb1827071975ccad4bc679994e9e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c46d5dd37de07fe97188ed14e931a6a66ecd37146cbf8c803337727e91c68d4d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 946
                },
                {
                    "digest": "sha256:c9d69d4239a88fbb008f05b29c098a66a7ff3331746cf2b5c4ca7dbe8431da11",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 946
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "openssl": {
            "manifests": [
                {
                    "digest": "sha256:5fc8bf97f080f2904b142a064b057dd1240f4e2c471a53503c4e110895e43ce0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:e5863d018888f8c0e294d4076bfeeb4bb857d434f9c944e920ffd6924ca818c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:c2bb882bdab23093fa0223fc1becbf4dfe8da072307930813180e097b6e50b9b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:3f8052715c7f4bee355d003e7fadbd62fbea47cc25392896403ee0107eb41303",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:ce1cc15bbbc9c73024503723a90227b75d9bc5ea6052b4c96a0774916cfe7b39",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 945
                },
                {
                    "digest": "sha256:086cd80efea906f8d8360173ba2133217e3492fa41ab1be83207143a32bb5c8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 945
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        }
    },
    "tags": [
        "1.4.10",
        "1.4.12",
        "1.4.4",
        "1.4.8",
        "1.5",
        "1.5.10",
        "1.5.11",
        "1.5.3",
        "1.5.4",
        "1.5.5",
        "1.5.6",
        "1.5.8",
        "1.5.9",
        "1.6",
        "1.6-openssl",
        "1.6.1",
        "1.6.10",
        "1.6.11",
        "1.6.11-openssl",
        "1.6.12",
        "1.6.12-openssl",
        "1.6.13",
        "1.6.13-openssl",
        "1.6.14",
        "1.6.14-openssl",
        "1.6.15",
        "1.6.15-openssl",
        "1.6.2",
        "1.6.3",
        "1.6.4",
        "1.6.5",
        "1.6.6",
        "1.6.7",
        "1.6.8",
        "1.6.9",
        "2",
        "2-openssl",
        "2.0",
        "2.0-openssl",
        "2.0.0",
        "2.0.0-openssl",
        "2.0.1",
        "2.0.1-openssl",
        "2.0.10",
        "2.0.10-openssl",
        "2.0.11",
        "2.0.11-openssl",
        "2.0.12",
        "2.0.12-openssl",
        "2.0.13",
        "2.0.13-openssl",
        "2.0.14",
        "2.0.14-openssl",
        "2.0.15",
        "2.0.15-openssl",
        "2.0.16",
        "2.0.16-openssl",
        "2.0.17",
        "2.0.17-openssl",
        "2.0.18",
        "2.0.18-openssl",
        "2.0.3",
        "2.0.3-openssl",
        "2.0.4",
        "2.0.4-openssl",
        "2.0.5",
        "2.0.5-openssl",
        "2.0.6",
        "2.0.6-openssl",
        "2.0.7",
        "2.0.7-openssl",
        "2.0.8",
        "2.0.8-openssl",
        "2.0.9",
        "2.0.9-openssl",
        "latest",
        "openssl"
    ],
    "configs": {
        "1.4.10": {
            "architecture": "amd64",
            "author": "David Audet <david.audet@ca.com>",
            "config": {
                "Hostname": "d95f8fb74a96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44b1c0f79fedd4eb549337cab02374c058bcb5898bbba430af336d80ef4e16f2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "container": "8de048a9ed6ce978c67a531f51947872ed7cddf6c850034ae9c5c612bb1b4a69",
            "container_config": {
                "Hostname": "d95f8fb74a96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44b1c0f79fedd4eb549337cab02374c058bcb5898bbba430af336d80ef4e16f2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "created": "2017-05-30T17:12:54.204016386Z",
            "docker_version": "17.03.1-ce",
            "history": [
                {
                    "created": "2017-05-25T23:32:38.234405916Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:df15515197b183747a0b7ccefd75973edc87fc7a5bce30fa10ae94e75928d25c in / "
                },
                {
                    "created": "2017-05-25T23:32:38.935485633Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:11:33.722452774Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Audet <david.audet@ca.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:12:00.147992493Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:12:27.718109622Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c apk --no-cache add mosquitto=1.4.10-r2 &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     cp /etc/mosquitto/mosquitto.conf /mosquitto/config &&     chown -R mosquitto:mosquitto /mosquitto"
                },
                {
                    "created": "2017-05-30T17:12:51.287461784Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:837d39cfa86d29b54b50c161745633f730844caea976da0ece1641e4e4b122aa in / "
                },
                {
                    "created": "2017-05-30T17:12:52.554668289Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:12:54.204016386Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ff143e5bce0a1cb61df9bc93a77241f48592b26d7ae71229dc55bb87eba09531",
                    "sha256:410f314ca528a3ee2b2334087d5265de1a3e1a244db2bb0f4953f1f7a84d8fb7",
                    "sha256:2485d826231a31f82abed9c78a9d7a9f3a5bd8344fbcdd85398cf4bea29e3dcc"
                ]
            }
        },
        "1.4.12": {
            "architecture": "amd64",
            "author": "David Audet <david.audet@ca.com>",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:944211b74ee14e986181d732b3e41c9ba16cebaa6e09115788c5dbd0a034edc7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "container": "acce848e85a28f419b5de80893a77f7254b052ef84de74682f4471ac4f16656c",
            "container_config": {
                "Hostname": "acce848e85a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:944211b74ee14e986181d732b3e41c9ba16cebaa6e09115788c5dbd0a034edc7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "created": "2018-01-09T21:34:32.238741378Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:38.317079775Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6edc55fb54ec9fc3658c8f5176a70e792103a516154442f94fed8e0290e4960e in / "
                },
                {
                    "created": "2018-01-09T21:10:38.538173323Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T21:34:27.650380467Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Audet <david.audet@ca.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T21:34:27.931198196Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T21:34:31.354748149Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c apk --no-cache add mosquitto=1.4.12-r0 &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     cp /etc/mosquitto/mosquitto.conf /mosquitto/config &&     chown -R mosquitto:mosquitto /mosquitto"
                },
                {
                    "created": "2018-01-09T21:34:31.748037197Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:837d39cfa86d29b54b50c161745633f730844caea976da0ece1641e4e4b122aa in / "
                },
                {
                    "created": "2018-01-09T21:34:31.97220924Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T21:34:32.238741378Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9dfa40a0da3b1a8a7c34abc596d81ede2dba4ecd5c0a7211086d6685da1ce6ef",
                    "sha256:b885118f03bceff0ef02968f671138ca0d9678d4fbf1e4bc16801723e652e0d1",
                    "sha256:44edde9c3c69e57ae00893759710e600996e0b860ff5ff67567f6581ad79559d"
                ]
            }
        },
        "1.4.4": {
            "architecture": "amd64",
            "author": "David Audet <david.audet@ca.com>",
            "config": {
                "Hostname": "13f326a28ce0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9bb4cccf90c2add33a60f58b2c4386db5c9d21752eb51f2b834e898f96189596",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "container": "c1a4d8f5864fa223d52fa686d6e2b87c253b4a9fd68eba361f7a85f3464aae34",
            "container_config": {
                "Hostname": "13f326a28ce0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9bb4cccf90c2add33a60f58b2c4386db5c9d21752eb51f2b834e898f96189596",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "created": "2017-05-30T17:14:46.02250437Z",
            "docker_version": "17.03.1-ce",
            "history": [
                {
                    "created": "2017-05-25T23:31:11.318546818Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:be8974deb8e723cdd5acb55230bbde1f213656a007517f327e42a0603805b68b in / "
                },
                {
                    "created": "2017-05-25T23:31:12.114862305Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:13:58.012312812Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Audet <david.audet@ca.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:13:59.658510769Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:14:04.570423037Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c apk --no-cache add mosquitto=1.4.4-r0 &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     cp /etc/mosquitto/mosquitto.conf /mosquitto/config &&     chown -R mosquitto:mosquitto /mosquitto"
                },
                {
                    "created": "2017-05-30T17:14:22.743811486Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:837d39cfa86d29b54b50c161745633f730844caea976da0ece1641e4e4b122aa in / "
                },
                {
                    "created": "2017-05-30T17:14:44.331722085Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:14:46.02250437Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:833cb44939c4e056247200c1161a4440220279f256c49fbfd745b74604590e47",
                    "sha256:83ee8f4a4fff904f2bb26a5bb78a52651ba63d26db06ce3d43cdd0e9572e9b0d",
                    "sha256:4f2c31f1bf8f3031b31b56972eec05d574304d85559462b7dcbd31d0e2fd62bb"
                ]
            }
        },
        "1.4.8": {
            "architecture": "amd64",
            "author": "David Audet <david.audet@ca.com>",
            "config": {
                "Hostname": "1cfe05e2c4e7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ee0ac6d94c7d0808f93f92c4759f9723c586597c8e427ba1142063e6dbca08d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "container": "c34ea2cd164d3c055cafb162a4ae592865aa7ff7466309779f97221f6b642e50",
            "container_config": {
                "Hostname": "1cfe05e2c4e7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ee0ac6d94c7d0808f93f92c4759f9723c586597c8e427ba1142063e6dbca08d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "Description": "Eclipse Mosquitto MQTT Broker"
                }
            },
            "created": "2017-05-30T17:15:52.611977248Z",
            "docker_version": "17.03.1-ce",
            "history": [
                {
                    "created": "2017-05-25T23:31:54.65245299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c34582524a7c4fa2ccb67d48efaa6edacff8bc8115a26a511b2385a03f56aa8e in / "
                },
                {
                    "created": "2017-05-25T23:31:55.42510787Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:15:12.964575415Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Audet <david.audet@ca.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:15:14.647978913Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  LABEL Description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:15:19.973966703Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c apk --no-cache add mosquitto=1.4.8-r2 &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     cp /etc/mosquitto/mosquitto.conf /mosquitto/config &&     chown -R mosquitto:mosquitto /mosquitto"
                },
                {
                    "created": "2017-05-30T17:15:50.397726543Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:837d39cfa86d29b54b50c161745633f730844caea976da0ece1641e4e4b122aa in / "
                },
                {
                    "created": "2017-05-30T17:15:51.511330924Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-30T17:15:52.611977248Z",
                    "author": "David Audet <david.audet@ca.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8539d1fe4fab528abb5f7094dd8892f8b0b1ed94f0dde79aa292b456df7b6995",
                    "sha256:4bc6868131bb3d213508d110afe7010cb3c81688cd3c1b07f835f33371eb6aa9",
                    "sha256:b15d46305b00e010bfce9e52709b22d79a746d9b9c12b0e7504d6ab01680d4b1"
                ]
            }
        },
        "1.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.11",
                    "DOWNLOAD_SHA256=4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:b65281ea6836588409793f635941b2b6994583b1f7728fce0cddab66cfb0aff4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "8d68553c702d3cf180e4425a4d0f647ea9d27c599dd51b1f901933af257e49e4",
            "container_config": {
                "Hostname": "8d68553c702d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.11",
                    "DOWNLOAD_SHA256=4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:b65281ea6836588409793f635941b2b6994583b1f7728fce0cddab66cfb0aff4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-03-29T19:45:30.513712351Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:09.597802365Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:11.592070012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.11 DOWNLOAD_SHA256=4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.051189352Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl         libuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-03-29T19:45:30.169172484Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.263374904Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2023-03-29T19:45:30.341756875Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.428417468Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.513712351Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:1f3a4a41b8a47c2bd35458ab4c32a5ccb56a72cd9130e407394932c331e11f80",
                    "sha256:16bef29d8138083fbce9a0249b62f6882d2f080eafbb4c0fbc001efb82605d7c"
                ]
            }
        },
        "1.5.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.10",
                    "DOWNLOAD_SHA256=00d9688dffef0e2c26f3fb1486931ed5d89042d81f6d4c1dd455d63080149c20",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:5310c596168c1b09c4e963630548d37703d1521ece2f9b8877e32dd65821755a",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "b1fc1527e5298c47fe98d0016c461e0cf07d143eb6018d11949c02c4bb34ccaf",
            "container_config": {
                "Hostname": "b1fc1527e529",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.10",
                    "DOWNLOAD_SHA256=00d9688dffef0e2c26f3fb1486931ed5d89042d81f6d4c1dd455d63080149c20",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:5310c596168c1b09c4e963630548d37703d1521ece2f9b8877e32dd65821755a",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-02-24T21:48:59.585578334Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:31.144811726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.10 DOWNLOAD_SHA256=00d9688dffef0e2c26f3fb1486931ed5d89042d81f6d4c1dd455d63080149c20 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:57.872467805Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes \t\tWITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates \t\tlibressl \t\tlibuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-02-24T21:48:58.077443573Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:58.611133267Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-02-24T21:48:58.93264892Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:59.296376391Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:59.585578334Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:b25179071116c26793449522ff4b2eaf02e39af8dc1bf9b0d31165bbcad70569",
                    "sha256:2ae52052830096b1b5d995d833228ad034ad6df76219997d35099479060cf497"
                ]
            }
        },
        "1.5.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.11",
                    "DOWNLOAD_SHA256=4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:b65281ea6836588409793f635941b2b6994583b1f7728fce0cddab66cfb0aff4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "8d68553c702d3cf180e4425a4d0f647ea9d27c599dd51b1f901933af257e49e4",
            "container_config": {
                "Hostname": "8d68553c702d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.11",
                    "DOWNLOAD_SHA256=4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:b65281ea6836588409793f635941b2b6994583b1f7728fce0cddab66cfb0aff4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-03-29T19:45:30.513712351Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:09.597802365Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:11.592070012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.11 DOWNLOAD_SHA256=4a3b8a8f5505d27a7a966dd68bfd76f1e69feb51796d1b46b7271d1bb5a1a299 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.051189352Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl         libuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-03-29T19:45:30.169172484Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.263374904Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2023-03-29T19:45:30.341756875Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.428417468Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:45:30.513712351Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:1f3a4a41b8a47c2bd35458ab4c32a5ccb56a72cd9130e407394932c331e11f80",
                    "sha256:16bef29d8138083fbce9a0249b62f6882d2f080eafbb4c0fbc001efb82605d7c"
                ]
            }
        },
        "1.5.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.3",
                    "DOWNLOAD_SHA256=3081a998d303a883b1cd064009beabc88aa9159e26f5258a4ae6007160491d10",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bb0e71a018ea47e5e62990e751b26db05577d6b8cdbc70eb776b78b9757069fa",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "8d2d935b6fdab344a04f14e389d1bc10d4137b387e4bf642e9657b8b826b8525",
            "container_config": {
                "Hostname": "8d2d935b6fda",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.3",
                    "DOWNLOAD_SHA256=3081a998d303a883b1cd064009beabc88aa9159e26f5258a4ae6007160491d10",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bb0e71a018ea47e5e62990e751b26db05577d6b8cdbc70eb776b78b9757069fa",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2018-11-06T00:20:04.402267187Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-29T20:21:34.483666583Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-29T20:21:34.699484655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.3 DOWNLOAD_SHA256=3081a998d303a883b1cd064009beabc88aa9159e26f5258a4ae6007160491d10 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T00:20:03.308775166Z",
                    "created_by": "/bin/sh -c set -x && \t apk --no-cache add --virtual build-deps       build-base \t  gnupg       libressl-dev       libwebsockets-dev       util-linux-dev &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz && \techo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc && \texport GNUPGHOME=\"$(mktemp -d)\" && \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz && \tgpgconf --kill all && \trm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc && \tmkdir -p /build && \ttar --strip=1 -xf /tmp/mosq.tar.gz -C /build && \trm /tmp/mosq.tar.gz &&     make -C /build -j \"$(nproc)\"       WITH_ADNS=no \t  WITH_DOCS=no       WITH_MEMORY_TRACKING=no \t  WITH_SHARED_LIBRARIES=no       WITH_SRV=no \t  WITH_STRIP=yes       WITH_TLS_PSK=no       WITH_WEBSOCKETS=yes       prefix=/usr       binary && \taddgroup -S mosquitto 2>/dev/null &&     adduser -S -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log && \tinstall -d /usr/sbin/ && \tinstall -s -m755 /build/src/mosquitto /usr/sbin/mosquitto && \tinstall -s -m755 /build/src/mosquitto_passwd /usr/bin/mosquitto_passwd && \tinstall -m644 /build/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto && \tapk --no-cache add       libuuid       libwebsockets && \tapk del build-deps && \trm -rf /build"
                },
                {
                    "created": "2018-11-06T00:20:03.557037785Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T00:20:03.92991071Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:539724540604f93d38fd4c30485a000e2aca8adc782ac6d761c0f752d6a3608c in / "
                },
                {
                    "created": "2018-11-06T00:20:04.164727327Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T00:20:04.402267187Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:720b16e509f3803ab5069aa893d921f388e1e6f5c8b59d25108144dfc4394f04",
                    "sha256:8f28c318b10b620c732dc98ee0aff2e4c677db3d211c6d9fa42432273d6c1905"
                ]
            }
        },
        "1.5.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.4",
                    "DOWNLOAD_SHA256=5fd7f3454fd6d286645d032bc07f44a1c8583cec02ef2422c9eb32e0a89a9b2f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aad295949995999c1f197d13e9cb34cd3318a8ef9e99b6a0bcf007d833252c46",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "a51775c4b575562f76b73273ea8d3b64d43481017bd6e14d8aa4aa9ca5d4d676",
            "container_config": {
                "Hostname": "a51775c4b575",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.4",
                    "DOWNLOAD_SHA256=5fd7f3454fd6d286645d032bc07f44a1c8583cec02ef2422c9eb32e0a89a9b2f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aad295949995999c1f197d13e9cb34cd3318a8ef9e99b6a0bcf007d833252c46",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2018-11-08T23:20:15.467576415Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-29T20:21:34.483666583Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T23:19:44.398293082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.4 DOWNLOAD_SHA256=5fd7f3454fd6d286645d032bc07f44a1c8583cec02ef2422c9eb32e0a89a9b2f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T23:20:06.068778905Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=no         WITH_SHARED_LIBRARIES=no         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S mosquitto 2>/dev/null &&     adduser -S -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         libuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2018-11-08T23:20:14.662774196Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T23:20:15.020452938Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:539724540604f93d38fd4c30485a000e2aca8adc782ac6d761c0f752d6a3608c in / "
                },
                {
                    "created": "2018-11-08T23:20:15.239632095Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T23:20:15.467576415Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:5bea06a6e0eb5a373ce60d7110d3debdd97f4948ffab7eb1175877ba4db60e66",
                    "sha256:062c1ac5ef71ab3b05881272798f7c75faa668c0d76d25012b33e861078bfbe3"
                ]
            }
        },
        "1.5.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.5",
                    "DOWNLOAD_SHA256=fcdb47e340864c545146681af7253399cc292e41775afd76400fda5b0d23d668",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:788d3904f34af19ffdddc1a0499e36be7679052bf8674a06da6858cdc1a0d3ae",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "4fdc10fdc11a1c462770c366b5276e350e6e4b028936ed3fb442efc07970452c",
            "container_config": {
                "Hostname": "4fdc10fdc11a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.5",
                    "DOWNLOAD_SHA256=fcdb47e340864c545146681af7253399cc292e41775afd76400fda5b0d23d668",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:788d3904f34af19ffdddc1a0499e36be7679052bf8674a06da6858cdc1a0d3ae",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-01-31T00:16:35.426524181Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T00:16:12.794821152Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T00:16:12.962982188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.5 DOWNLOAD_SHA256=fcdb47e340864c545146681af7253399cc292e41775afd76400fda5b0d23d668 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T00:16:34.764009248Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=no         WITH_SHARED_LIBRARIES=no         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         libuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-01-31T00:16:34.918565782Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T00:16:35.095087015Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-01-31T00:16:35.250813285Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T00:16:35.426524181Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:c094c3a46e99c07dbe0216551d38128157fee85aa9e64974a332d522ab1dcc43",
                    "sha256:c05f6b11ad732067609628edd2f5a8693b813b33304eaab41c0f526ed0855299"
                ]
            }
        },
        "1.5.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.6",
                    "DOWNLOAD_SHA256=d5bdc13cc668350026376d57fc14de10aaee029f6840707677637d15e0751a40",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47a2b04dbaaa4b250ae6d347bf89fd24bf4f3486ecd4d78733a3dbe498f89d49",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "ac6f9081fc8affcd850489828486042d8d866e365fe519f41f1a5d7840bd100a",
            "container_config": {
                "Hostname": "ac6f9081fc8a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.6",
                    "DOWNLOAD_SHA256=d5bdc13cc668350026376d57fc14de10aaee029f6840707677637d15e0751a40",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47a2b04dbaaa4b250ae6d347bf89fd24bf4f3486ecd4d78733a3dbe498f89d49",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-02-08T16:19:56.589552097Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T00:16:12.794821152Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:19:35.651310737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.6 DOWNLOAD_SHA256=d5bdc13cc668350026376d57fc14de10aaee029f6840707677637d15e0751a40 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:19:55.891721166Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=no         WITH_SHARED_LIBRARIES=no         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         libuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-02-08T16:19:56.083141462Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:19:56.259139226Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-02-08T16:19:56.406777981Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:19:56.589552097Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:abe4a70a11f235e8e6f9ac5b0594c40ff501de256890850e5265e8bdb6d34926",
                    "sha256:42ca61a2ce28a42f7aa613d367fc3cc75c8077bced757f0db54fa2938e99bbb9"
                ]
            }
        },
        "1.5.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.8",
                    "DOWNLOAD_SHA256=78d7e70c3794dc3a1d484b4f2f8d3addebe9c2da3f5a1cebe557f7d13beb0da4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:159632929d7aac338a994a4e03d5dcd6c9e55d15a459434e76d1c0f7ab30d259",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "e30d3a8aee7aa3078b6e1b045e59f6a586ccf49172a267f53d427dd12ecdd472",
            "container_config": {
                "Hostname": "e30d3a8aee7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.8",
                    "DOWNLOAD_SHA256=78d7e70c3794dc3a1d484b4f2f8d3addebe9c2da3f5a1cebe557f7d13beb0da4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:159632929d7aac338a994a4e03d5dcd6c9e55d15a459434e76d1c0f7ab30d259",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-09-13T06:19:59.55755734Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.582273799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.8 DOWNLOAD_SHA256=78d7e70c3794dc3a1d484b4f2f8d3addebe9c2da3f5a1cebe557f7d13beb0da4 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:58.738690614Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=no         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         libuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-09-13T06:19:58.909994115Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:59.098282116Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-09-13T06:19:59.245997146Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:59.397654864Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:59.55755734Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:01a448a60980b7a4b53ba37177d0dda3ed62ede3b198f963f92531910bbc9c3e",
                    "sha256:4338e527aca070ee7ef7fe1b1ca545aa7ffbb025128c892fa6c590aeeb9f4d0e"
                ]
            }
        },
        "1.5.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.9",
                    "DOWNLOAD_SHA256=d7b62aa0ca680b0d869d6883373903362f98326a6465fc6cd01a0b9e0e8f0333",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d1b3ea3fa7b1d1847e1b554202f505e959c53eeddb973629160c028ca72021b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "a8733247b5e27227589a7a25b08c8c8ea6bcf899efb9509eae60a582ea09c185",
            "container_config": {
                "Hostname": "a8733247b5e2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.5.9",
                    "DOWNLOAD_SHA256=d7b62aa0ca680b0d869d6883373903362f98326a6465fc6cd01a0b9e0e8f0333",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d1b3ea3fa7b1d1847e1b554202f505e959c53eeddb973629160c028ca72021b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-08-13T21:19:38.362300703Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:19:46.192045972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / "
                },
                {
                    "created": "2020-05-29T21:19:46.363518345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:15.124352055Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:44.218742847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.5.9 DOWNLOAD_SHA256=d7b62aa0ca680b0d869d6883373903362f98326a6465fc6cd01a0b9e0e8f0333 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-12T22:20:23.801808239Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -flto\"         LDFLAGS=\"-L/build/lws/lib -flto\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes \t\tWITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates \t\tlibressl \t\tlibuuid &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-08-12T22:20:23.986698975Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:37.846472175Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-08-13T21:19:38.010688347Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:38.190381764Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:38.362300703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a",
                    "sha256:17200f0eb61755039e7bdf32a2dd9c212f95e7d3b84d41a94df6066c531edfb6",
                    "sha256:ea286b1b1675c3c4be9f6c79c9f3d3fd9fda8d74d2d948a5d57e5e129138453b"
                ]
            }
        },
        "1.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:1df4c93306793356241d4c8166d9e950191915e672a7c39cc7062810b1dd18ad",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "e6ecb8934ce1c8e955efdb5882a74b0e81e586ab90996548e5e0fcd82921155f",
            "container_config": {
                "Hostname": "e6ecb8934ce1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:1df4c93306793356241d4c8166d9e950191915e672a7c39cc7062810b1dd18ad",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-03-29T19:44:34.619891596Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:09.597802365Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:09.678496728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.15 DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.14806942Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v10 /usr/share/licenses/mosquitto/epl-v10 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-03-29T19:44:34.257807741Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.349989796Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2023-03-29T19:44:34.43166067Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.532789831Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.619891596Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:10c384d6e3d1f43d664f7c168db6b5221b623b13bf1566199e0a1f316bab9aa3",
                    "sha256:bf05e19817c381d97d50567e1601aa2d71fdb34a310f6056c5611fa444a3bb21"
                ]
            }
        },
        "1.6-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:f670e8de04d4a3a69a152dddfbb41352f63ba1226ad0dc64ae5e557887c3e3d1",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "ad65a78c0eb521e2439c61a5dc03c9212dee4c184421351553e6c1496ca30452",
            "container_config": {
                "Hostname": "ad65a78c0eb5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:f670e8de04d4a3a69a152dddfbb41352f63ba1226ad0dc64ae5e557887c3e3d1",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:53:22.077725048Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:56.074989499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.15 DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:21.630596693Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v10 /usr/share/licenses/mosquitto/epl-v10 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:53:21.733593826Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:21.822700547Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2024-03-16T07:53:21.903202029Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:21.988923515Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:22.077725048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:863560d645182b6322f6fc24cb081fca4be9974bc8faee097f5b39e48a70650c",
                    "sha256:3f81fb4260507ec0b6d615135c14714862f8ea2fbb892b3a789c1f08515c394a"
                ]
            }
        },
        "1.6.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.1",
                    "DOWNLOAD_SHA256=078d0a1570d9218fe2060f2b7a5b67660ab1e720cff96da8eb485e1d639f3f70",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ad66d2255d5b9990a3977ca6b7f9805197abaadf3ef918170a3b529e5fc75d4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "fc380d91ed1390370650cb858564be3a5aff059703bc33b92b810d64a30ff775",
            "container_config": {
                "Hostname": "fc380d91ed13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.1",
                    "DOWNLOAD_SHA256=078d0a1570d9218fe2060f2b7a5b67660ab1e720cff96da8eb485e1d639f3f70",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ad66d2255d5b9990a3977ca6b7f9805197abaadf3ef918170a3b529e5fc75d4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-04-27T00:24:47.707465975Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-27T00:24:24.102375377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.1 DOWNLOAD_SHA256=078d0a1570d9218fe2060f2b7a5b67660ab1e720cff96da8eb485e1d639f3f70 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-27T00:24:47.024512841Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=yes         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-04-27T00:24:47.190152763Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-27T00:24:47.363602741Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-04-27T00:24:47.527648648Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-27T00:24:47.707465975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:7176e66e964f2879fb57408e148801a3e688236899fa4646d1efd14fe4cf7e0d",
                    "sha256:13dbfb14e15452fcaeb269ff443a37f82c1e4e720a99d57ff1b7671d0aed12b4"
                ]
            }
        },
        "1.6.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.10",
                    "DOWNLOAD_SHA256=92d1807717f0f6d57d1ac1207ffdb952e8377e916c7b0bb4718f745239774232",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:83440c47c2bc317f6e243f054669b3fbc369aebe28e53a0dc5f60c8575f1871d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5e4b3432ccae753d1d7c9c9c02bfbdfbee7f7bd653a68fcb359bf34a9ce80d3d",
            "container_config": {
                "Hostname": "5e4b3432ccae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.10",
                    "DOWNLOAD_SHA256=92d1807717f0f6d57d1ac1207ffdb952e8377e916c7b0bb4718f745239774232",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:83440c47c2bc317f6e243f054669b3fbc369aebe28e53a0dc5f60c8575f1871d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-06-02T21:21:37.982970525Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:19:46.192045972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / "
                },
                {
                    "created": "2020-05-29T21:19:46.363518345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:15.124352055Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:15.294421526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.10 DOWNLOAD_SHA256=92d1807717f0f6d57d1ac1207ffdb952e8377e916c7b0bb4718f745239774232 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:37.026725039Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-06-02T21:21:37.194742313Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:37.432018754Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2020-06-02T21:21:37.61113795Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:37.804934685Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:37.982970525Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a",
                    "sha256:f815120b618459ec58f5177ee9ef169b843a6c91d5d1d4af1f104be75d6ca7be",
                    "sha256:a36ec58ee93ed94f1d3637db77473f0cf02cbecb03539a0282c637ebc4f75ba2"
                ]
            }
        },
        "1.6.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.11",
                    "DOWNLOAD_SHA256=b02d8f1368c40d5779ee125c37daf9003608eb47d7fbb04c5b938c76c1230a1f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f7b4b4b653502c49c7301bd8fdb7554f5ad27d7aebf266d686dfe53416083af",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "590866fb10a0dd91bd7bf9eddffd18c7b47be4b7a26cc4a4d2ed2dc30c18a510",
            "container_config": {
                "Hostname": "590866fb10a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.11",
                    "DOWNLOAD_SHA256=b02d8f1368c40d5779ee125c37daf9003608eb47d7fbb04c5b938c76c1230a1f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f7b4b4b653502c49c7301bd8fdb7554f5ad27d7aebf266d686dfe53416083af",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-08-13T21:19:29.602536069Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:19:46.192045972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / "
                },
                {
                    "created": "2020-05-29T21:19:46.363518345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:15.124352055Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-12T18:19:39.026650607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.11 DOWNLOAD_SHA256=b02d8f1368c40d5779ee125c37daf9003608eb47d7fbb04c5b938c76c1230a1f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-12T22:19:53.478592846Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-08-12T22:19:53.654678568Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:29.069943035Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-08-13T21:19:29.234932481Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:29.422406613Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:29.602536069Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a",
                    "sha256:ffe1829f07bf954461acc294b4bf0106867bdbe085fc72c09193a4fb30ccc25b",
                    "sha256:ce2eaba94e14e8e109b7ef0838927ed5b3092fad5e831e82be0d0662b57c467c"
                ]
            }
        },
        "1.6.11-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.11",
                    "DOWNLOAD_SHA256=b02d8f1368c40d5779ee125c37daf9003608eb47d7fbb04c5b938c76c1230a1f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b18c547eb78375207dfb35de47695df6d042046722f5c292eb1634e0327d9777",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "8dc8221faf51145167dd1374bf2480b33cf7ef09256bae473302f773d91fdd07",
            "container_config": {
                "Hostname": "8dc8221faf51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.11",
                    "DOWNLOAD_SHA256=b02d8f1368c40d5779ee125c37daf9003608eb47d7fbb04c5b938c76c1230a1f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b18c547eb78375207dfb35de47695df6d042046722f5c292eb1634e0327d9777",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-08-13T21:19:33.894786996Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:19:46.192045972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / "
                },
                {
                    "created": "2020-05-29T21:19:46.363518345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T21:21:15.124352055Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-12T18:19:39.026650607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.11 DOWNLOAD_SHA256=b02d8f1368c40d5779ee125c37daf9003608eb47d7fbb04c5b938c76c1230a1f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-12T18:20:30.449584209Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-08-12T18:20:30.647866489Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:33.338815239Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-08-13T21:19:33.53122596Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:33.714880895Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-13T21:19:33.894786996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a",
                    "sha256:89cc77b24e1d04586270cc1cb5842d21491684be755997352e6e6ecbd492ba26",
                    "sha256:760d764f288886cc752b2df46f5c373e696d48f458bde4d09e2744cb064919c0"
                ]
            }
        },
        "1.6.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.12",
                    "DOWNLOAD_SHA256=548d73d19fb787dd0530334e398fd256ef3a581181678488a741a995c4f007fb",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:95c546ddec177bdb8cf61591ab0f0aa6702272c74038b14a9756ee7833886c1a",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "16a8e07ede0e19012564cbb2a238b93e80e1299bc8ed9a2dfe6086dc528b4780",
            "container_config": {
                "Hostname": "16a8e07ede0e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.12",
                    "DOWNLOAD_SHA256=548d73d19fb787dd0530334e398fd256ef3a581181678488a741a995c4f007fb",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:95c546ddec177bdb8cf61591ab0f0aa6702272c74038b14a9756ee7833886c1a",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-17T13:54:23.808188025Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:58.855750365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.12 DOWNLOAD_SHA256=548d73d19fb787dd0530334e398fd256ef3a581181678488a741a995c4f007fb GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:22.803313742Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-17T13:54:23.004031501Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:23.232818903Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-17T13:54:23.423745303Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:23.619209818Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:23.808188025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:01c2d3f21aff8c5d3f4a1f583bddc55696eadcef1fe62737562b60d81e6fc06b",
                    "sha256:d96b25a2dacea1048ca4556b0095814670d760d2ce24779e51fc358fee07bb42"
                ]
            }
        },
        "1.6.12-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.12",
                    "DOWNLOAD_SHA256=548d73d19fb787dd0530334e398fd256ef3a581181678488a741a995c4f007fb",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:454a880adea8a9469475b6418b4c08eb2d97956f8c8a9496214ba39e96a39b05",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "b6267f3bdd94d8251fdf55ad600d3f6e0b56c8ea64eb80f0dab42be6e54c9ca5",
            "container_config": {
                "Hostname": "b6267f3bdd94",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.12",
                    "DOWNLOAD_SHA256=548d73d19fb787dd0530334e398fd256ef3a581181678488a741a995c4f007fb",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:454a880adea8a9469475b6418b4c08eb2d97956f8c8a9496214ba39e96a39b05",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-17T13:54:54.099637115Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:58.855750365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.12 DOWNLOAD_SHA256=548d73d19fb787dd0530334e398fd256ef3a581181678488a741a995c4f007fb GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:53.064277523Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-17T13:54:53.282950867Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:53.510819047Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-17T13:54:53.694759392Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:53.888161208Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:54:54.099637115Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:42975b188c5dbc6406d165e8f6c153cb321e9e7899ff67dc9f8a0369c8ad8f8d",
                    "sha256:fdca9b235a9dbb7f6a3cf9762b52b450d7efcc0d1a46877e219a5a8250858a58"
                ]
            }
        },
        "1.6.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.13",
                    "DOWNLOAD_SHA256=ce205248dd323e4e562ff83e9e84d0f9a16f4bda87183c367c66a7163c0fc287",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:70154cb0a3b45db6a5a06ab32fdbd793ae007f6ea50e08e9abb1c42b4cececf5",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "a198cab2b171053cd10bac86926d5dd885ea9cd517a546be2a1bd2191d4bb8b4",
            "container_config": {
                "Hostname": "a198cab2b171",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.13",
                    "DOWNLOAD_SHA256=ce205248dd323e4e562ff83e9e84d0f9a16f4bda87183c367c66a7163c0fc287",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:70154cb0a3b45db6a5a06ab32fdbd793ae007f6ea50e08e9abb1c42b4cececf5",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-02-24T21:47:38.516761125Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:13.766608347Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.13 DOWNLOAD_SHA256=ce205248dd323e4e562ff83e9e84d0f9a16f4bda87183c367c66a7163c0fc287 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:37.412807909Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-02-24T21:47:37.623286471Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:37.876774458Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-02-24T21:47:38.075870853Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:38.308877277Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:38.516761125Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:056a5cbe70c75e21bbd353f8db7a03a39db293e993926e39e423b2f79e4b215d",
                    "sha256:0cf71af619cf230ca169b3c514d0da9317b37f773db1d73028d7f8fd3673c620"
                ]
            }
        },
        "1.6.13-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.13",
                    "DOWNLOAD_SHA256=ce205248dd323e4e562ff83e9e84d0f9a16f4bda87183c367c66a7163c0fc287",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:680b71ee0d2a4726ab38414722e73d9669439db7f364281acbfdf232e58a910b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "745fa41da537e9b7739ddf38cf6ec1477097615575d9433d27b22035ef43e5a4",
            "container_config": {
                "Hostname": "745fa41da537",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.13",
                    "DOWNLOAD_SHA256=ce205248dd323e4e562ff83e9e84d0f9a16f4bda87183c367c66a7163c0fc287",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:680b71ee0d2a4726ab38414722e73d9669439db7f364281acbfdf232e58a910b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-02-24T21:48:21.06795716Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:13.766608347Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.13 DOWNLOAD_SHA256=ce205248dd323e4e562ff83e9e84d0f9a16f4bda87183c367c66a7163c0fc287 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:19.124408238Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-02-24T21:48:19.477153326Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:19.932080244Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-02-24T21:48:20.248065062Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:20.580881281Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:48:21.06795716Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:19195cd9b1a300fd3115b7411d2cdf70387927778ad58bada1107e50025885e8",
                    "sha256:5ca063e069ced04f89853310d0bde46b30296e1d8478a99a80999bba55438c9b"
                ]
            }
        },
        "1.6.14": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.14",
                    "DOWNLOAD_SHA256=5ea7e342bfbd212a0addb915036be168040dea945e5de5fe739c43c5ff3823e4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:cbaf8efff2702dc3be7f15ce1757880d0b4207316d59d848ade6b20614f8d54b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "1c7aa53de8e407d13061fa1c27ef02367bdb7cfad2e693ffd1a6dd08a38d477b",
            "container_config": {
                "Hostname": "1c7aa53de8e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.14",
                    "DOWNLOAD_SHA256=5ea7e342bfbd212a0addb915036be168040dea945e5de5fe739c43c5ff3823e4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:cbaf8efff2702dc3be7f15ce1757880d0b4207316d59d848ade6b20614f8d54b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-04-14T20:23:32.827246187Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:49.135571382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f526aa99067d82b341f7ca538f7826b7c23a628f1b615eea2883a2d434c1b90 in / "
                },
                {
                    "created": "2021-04-14T19:19:49.594730611Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:21:46.242077002Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:11.333559799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.14 DOWNLOAD_SHA256=5ea7e342bfbd212a0addb915036be168040dea945e5de5fe739c43c5ff3823e4 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:31.707494389Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-04-14T20:23:31.990835601Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:32.200083362Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-04-14T20:23:32.405851392Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:32.622482238Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:32.827246187Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32f366d666a541852cad754ee1cdb53a736110b550f0c2d5a46bc5ba519896b6",
                    "sha256:abcaaf05ba588aaec7c70f16c8867e56fa2ed3d33b2e6bfde030b236ed65599d",
                    "sha256:01144751823bf94211dc2e05ef952e03b0ff1f2cc6f2612c97485b94e188dca1"
                ]
            }
        },
        "1.6.14-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.14",
                    "DOWNLOAD_SHA256=5ea7e342bfbd212a0addb915036be168040dea945e5de5fe739c43c5ff3823e4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:ecf680bf60a4dc6e419039277a619ba712420f459f90dd13ddf1484470ea0dbe",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "d629ee88070fb63739a0b27861c6732e8318fc561a0b0aafd0dd5615b8d7b5ba",
            "container_config": {
                "Hostname": "d629ee88070f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.14",
                    "DOWNLOAD_SHA256=5ea7e342bfbd212a0addb915036be168040dea945e5de5fe739c43c5ff3823e4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:ecf680bf60a4dc6e419039277a619ba712420f459f90dd13ddf1484470ea0dbe",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-04-14T20:24:04.062634613Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:49.135571382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f526aa99067d82b341f7ca538f7826b7c23a628f1b615eea2883a2d434c1b90 in / "
                },
                {
                    "created": "2021-04-14T19:19:49.594730611Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:21:46.242077002Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:11.333559799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.14 DOWNLOAD_SHA256=5ea7e342bfbd212a0addb915036be168040dea945e5de5fe739c43c5ff3823e4 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:24:02.043043339Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-04-14T20:24:02.428284064Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:24:02.975651488Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-04-14T20:24:03.367705434Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:24:03.746612538Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:24:04.062634613Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32f366d666a541852cad754ee1cdb53a736110b550f0c2d5a46bc5ba519896b6",
                    "sha256:ef9e18090caf0325654508ba2ca899a310178c477a802af7ac5c5db05c7942eb",
                    "sha256:7c7f5b7c01aa44055e0c972cb4b7570ac1c853794b188871b04c9c838cf8f66c"
                ]
            }
        },
        "1.6.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:1df4c93306793356241d4c8166d9e950191915e672a7c39cc7062810b1dd18ad",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "e6ecb8934ce1c8e955efdb5882a74b0e81e586ab90996548e5e0fcd82921155f",
            "container_config": {
                "Hostname": "e6ecb8934ce1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:1df4c93306793356241d4c8166d9e950191915e672a7c39cc7062810b1dd18ad",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-03-29T19:44:34.619891596Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:09.597802365Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:09.678496728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.15 DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.14806942Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v10 /usr/share/licenses/mosquitto/epl-v10 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-03-29T19:44:34.257807741Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.349989796Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2023-03-29T19:44:34.43166067Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.532789831Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T19:44:34.619891596Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:10c384d6e3d1f43d664f7c168db6b5221b623b13bf1566199e0a1f316bab9aa3",
                    "sha256:bf05e19817c381d97d50567e1601aa2d71fdb34a310f6056c5611fa444a3bb21"
                ]
            }
        },
        "1.6.15-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:f670e8de04d4a3a69a152dddfbb41352f63ba1226ad0dc64ae5e557887c3e3d1",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "ad65a78c0eb521e2439c61a5dc03c9212dee4c184421351553e6c1496ca30452",
            "container_config": {
                "Hostname": "ad65a78c0eb5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.15",
                    "DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:f670e8de04d4a3a69a152dddfbb41352f63ba1226ad0dc64ae5e557887c3e3d1",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:53:22.077725048Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:56.074989499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.15 DOWNLOAD_SHA256=5ff2271512f745bf1a451072cd3768a5daed71e90c5179fae12b049d6c02aa0f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:21.630596693Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v10 /usr/share/licenses/mosquitto/epl-v10 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:53:21.733593826Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:21.822700547Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2024-03-16T07:53:21.903202029Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:21.988923515Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:53:22.077725048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:863560d645182b6322f6fc24cb081fca4be9974bc8faee097f5b39e48a70650c",
                    "sha256:3f81fb4260507ec0b6d615135c14714862f8ea2fbb892b3a789c1f08515c394a"
                ]
            }
        },
        "1.6.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.2",
                    "DOWNLOAD_SHA256=33499e78dfa0ca1cb488fd196fde940a66305bdfd44ba763ce2001db2569a08b",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f0b797c37a1bd49843a7727eba3fc8025da35c6ce3ac7aa7ac79fe80bca16561",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "df6ba79925f7d466cdbb48364ab0b1fd71d626836614b4a426a8ccc83933e96a",
            "container_config": {
                "Hostname": "df6ba79925f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.2",
                    "DOWNLOAD_SHA256=33499e78dfa0ca1cb488fd196fde940a66305bdfd44ba763ce2001db2569a08b",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f0b797c37a1bd49843a7727eba3fc8025da35c6ce3ac7aa7ac79fe80bca16561",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-05-01T05:33:36.987808585Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-01T05:33:00.291899066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.2 DOWNLOAD_SHA256=33499e78dfa0ca1cb488fd196fde940a66305bdfd44ba763ce2001db2569a08b GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-01T05:33:36.198513354Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=yes         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-05-01T05:33:36.399652531Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-01T05:33:36.599308802Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-05-01T05:33:36.798148415Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-01T05:33:36.987808585Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e384360e4c9fabaa4d9a4256c01add0d2f1b5f1a0d1cbeed41ad63e9ebef936c",
                    "sha256:de3ca49fd535ccbd21b987bd1f90e0c17a302a9626522dfe5f8cd6df6ab9dfa6"
                ]
            }
        },
        "1.6.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.3",
                    "DOWNLOAD_SHA256=9ef5cc75f4fe31d7bf50654ddf4728ad9e1ae2e5609a4b42ecbbcb4a209ed17e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a60ed9abff7b11b71c2b9725b0262298ad4cdd356ad7d5b23bd24bf422e9a92b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "626fc140867861192182d63c4dc496e87ce4219c71b654bc44258c2a16e28daa",
            "container_config": {
                "Hostname": "626fc1408678",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.3",
                    "DOWNLOAD_SHA256=9ef5cc75f4fe31d7bf50654ddf4728ad9e1ae2e5609a4b42ecbbcb4a209ed17e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a60ed9abff7b11b71c2b9725b0262298ad4cdd356ad7d5b23bd24bf422e9a92b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-06-19T20:23:23.219224459Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:22:56.510226324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.3 DOWNLOAD_SHA256=9ef5cc75f4fe31d7bf50654ddf4728ad9e1ae2e5609a4b42ecbbcb4a209ed17e GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:23:22.178314515Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=yes         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-06-19T20:23:22.378724051Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:23:22.668020304Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-06-19T20:23:22.966660914Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T20:23:23.219224459Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:abef44498c4fdf4f23df52b0e8c98755ec13951bb920e831c85288ccc1581321",
                    "sha256:93e90d4dc969e5d0d248d0b4d913abb3e0206a84dd2c3874c4b7b65cbb68f25b"
                ]
            }
        },
        "1.6.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.4",
                    "DOWNLOAD_SHA256=a3d5822c249f6a6e13311b1b09eff6807ea01608a5a77934e1769842e9d146ef",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4fb936565714680a800e09e53ec34bea51118f42612cc35aac1fa883a6fa0a00",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "2b1e96661a80088dd2f0054dac32d9e076a54a0b7e837124cda18400e8b27301",
            "container_config": {
                "Hostname": "2b1e96661a80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.4",
                    "DOWNLOAD_SHA256=a3d5822c249f6a6e13311b1b09eff6807ea01608a5a77934e1769842e9d146ef",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4fb936565714680a800e09e53ec34bea51118f42612cc35aac1fa883a6fa0a00",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-08-02T03:44:07.074625308Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-02T03:43:45.349872267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.4 DOWNLOAD_SHA256=a3d5822c249f6a6e13311b1b09eff6807ea01608a5a77934e1769842e9d146ef GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-02T03:44:06.387225173Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_MEMORY_TRACKING=yes         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-08-02T03:44:06.550214598Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-02T03:44:06.731984724Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-08-02T03:44:06.902150026Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-02T03:44:07.074625308Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:cea9481e5ce4661081004432911685d79de9e2041150e9d863681cb48e5efbc6",
                    "sha256:0a3144d1b0366fb58e7501c313e34ef9d7c99ebf4a5f246e464ef1fa4683cdd4"
                ]
            }
        },
        "1.6.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.5",
                    "DOWNLOAD_SHA256=bc71b38b5a26fc7cc772853e5607c657868db9f9a6d2b15e2b677649a0f85d20",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b18c55908a7fdadf58ac15fccb5d7ec75304928ac0a698019ef5db2d406f6d0",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "f83eaf506c7be837a87a99a71e1b4a16e05e3fec711c7b9f5ff7e76edaa6b117",
            "container_config": {
                "Hostname": "f83eaf506c7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.5",
                    "DOWNLOAD_SHA256=bc71b38b5a26fc7cc772853e5607c657868db9f9a6d2b15e2b677649a0f85d20",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b18c55908a7fdadf58ac15fccb5d7ec75304928ac0a698019ef5db2d406f6d0",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-09-13T06:19:32.562308732Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:10.645708958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.5 DOWNLOAD_SHA256=bc71b38b5a26fc7cc772853e5607c657868db9f9a6d2b15e2b677649a0f85d20 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:31.583594043Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-09-13T06:19:31.755012691Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:31.938201299Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-09-13T06:19:32.246486309Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:32.410243912Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-13T06:19:32.562308732Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:acaa02af21170398ea1741e710c898daae2f9395cc387dc6f8d4ec5838f18376",
                    "sha256:835202e14ee8e828d7187a9f6c445dd9893e98f040c2eeb959dfa4a3f4f26889"
                ]
            }
        },
        "1.6.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.6",
                    "DOWNLOAD_SHA256=82676bf4201ff102be1511b56b041a9450fbbfeda40b21aa28be0fee56e8de17",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:480ca0168a09279e5ab57b3e77351d8a50598966669099f856b7d0633629d1ec",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "c84b6edf2712840180674157bfcafa79cbcc6af4b6d360dd712c35a887b477c9",
            "container_config": {
                "Hostname": "c84b6edf2712",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.6",
                    "DOWNLOAD_SHA256=82676bf4201ff102be1511b56b041a9450fbbfeda40b21aa28be0fee56e8de17",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:480ca0168a09279e5ab57b3e77351d8a50598966669099f856b7d0633629d1ec",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-09-18T20:21:55.45507977Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-18T20:21:33.83091275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.6 DOWNLOAD_SHA256=82676bf4201ff102be1511b56b041a9450fbbfeda40b21aa28be0fee56e8de17 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-18T20:21:54.551393436Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-09-18T20:21:54.710241132Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-18T20:21:54.899490316Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-09-18T20:21:55.074492153Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-18T20:21:55.250439547Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-18T20:21:55.45507977Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:9b7d97d282fbab713caff01b8cfbd24817233d146443875a9a3348f2088de1d8",
                    "sha256:886c3ac29129dbd391364cf51f03182b865266f09edcd1bfe53f4089edaf2116"
                ]
            }
        },
        "1.6.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.7",
                    "DOWNLOAD_SHA256=bcd31a8fbbd053fee328986fadd8666d3058357ded56b9782f7d4f19931d178e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc76d2db2d26a0cc9316a0f5c6304c1b85a6733889f16559ac4b615f91a29510",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "6682fae86ada691931fae082bbfec5aecca1a2a1ab1a14a9ed940854ef2a2e41",
            "container_config": {
                "Hostname": "6682fae86ada",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.7",
                    "DOWNLOAD_SHA256=bcd31a8fbbd053fee328986fadd8666d3058357ded56b9782f7d4f19931d178e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc76d2db2d26a0cc9316a0f5c6304c1b85a6733889f16559ac4b615f91a29510",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2019-11-07T01:19:58.506138496Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T22:54:03.407627661Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T21:23:10.798480735Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.7 DOWNLOAD_SHA256=bcd31a8fbbd053fee328986fadd8666d3058357ded56b9782f7d4f19931d178e GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-07T01:19:57.647543662Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2019-11-07T01:19:57.810731857Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-07T01:19:57.982331341Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2019-11-07T01:19:58.162180362Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-07T01:19:58.340202569Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-07T01:19:58.506138496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e9abce5a698b14e51e59b2b5da2055a35f7ee9a9fc64a89b5bfc85f6f36d6ecf",
                    "sha256:e0a0f88a522bfc5b792eab45f082428728b2844625f3d524679e829e7d6434f7"
                ]
            }
        },
        "1.6.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.8",
                    "DOWNLOAD_SHA256=7df23c81ca37f0e070574fe74414403cf25183016433d07add6134366fb45df6",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cae6cb85afcfb5f843bc40581f67c522ef0cf8a081aedad46d2c1d9afaed1831",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "3a063bda7a4d9ad3445949248f4c4853871438762d08e25482f07a0e76884dfa",
            "container_config": {
                "Hostname": "3a063bda7a4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.8",
                    "DOWNLOAD_SHA256=7df23c81ca37f0e070574fe74414403cf25183016433d07add6134366fb45df6",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cae6cb85afcfb5f843bc40581f67c522ef0cf8a081aedad46d2c1d9afaed1831",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-01-23T17:24:17.666967275Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:53:27.237863831Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e38375b009a2e2c9be7c62364fa76d52edf2a80e42d2f52cf80dfb13d578e967 in / "
                },
                {
                    "created": "2020-01-23T16:53:27.390704289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:23:42.962994019Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:23:43.21096193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.8 DOWNLOAD_SHA256=7df23c81ca37f0e070574fe74414403cf25183016433d07add6134366fb45df6 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:24:16.235298865Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-01-23T17:24:16.522893134Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:24:16.846814446Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2020-01-23T17:24:17.086828919Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:24:17.346626633Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:24:17.666967275Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7444ea29e45e927abea1f923bf24cac20deaddea603c4bb1c7f2f5819773d453",
                    "sha256:49239aa144fb390a751607dd4d9ce504cc4b32e033b7a3bf8e7ddf0edf8d3dac",
                    "sha256:f16b7627bed51c1d4c0243049e2291ecf44cc31f9a5a30772a54a90212f37224"
                ]
            }
        },
        "1.6.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.9",
                    "DOWNLOAD_SHA256=412979b2db0a0020bd02fa64f0a0de9e7000b84462586e32b67f29bb1f6c1685",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:92e43a43895fdef4c7e3f61d40f3093925d2f663cd0493b9119a5e6dde1ff172",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "e971cd80f311124804afaaafeb4b2dff174f99198e0e9220fe6c57c862b0cdf1",
            "container_config": {
                "Hostname": "e971cd80f311",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=1.6.9",
                    "DOWNLOAD_SHA256=412979b2db0a0020bd02fa64f0a0de9e7000b84462586e32b67f29bb1f6c1685",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:92e43a43895fdef4c7e3f61d40f3093925d2f663cd0493b9119a5e6dde1ff172",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-03-03T23:19:47.379119758Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:27.237863831Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e38375b009a2e2c9be7c62364fa76d52edf2a80e42d2f52cf80dfb13d578e967 in / "
                },
                {
                    "created": "2020-01-23T16:53:27.390704289Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:23:42.962994019Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-03T23:19:26.622369459Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=1.6.9 DOWNLOAD_SHA256=412979b2db0a0020bd02fa64f0a0de9e7000b84462586e32b67f29bb1f6c1685 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-03T23:19:46.4153364Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/src/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-03-03T23:19:46.598101442Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-03T23:19:46.812996839Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7ce5e85cbe8725ccd0a5a74da9cb9b94adabdb9e6509fec9ab0c58fe3a546307 in / "
                },
                {
                    "created": "2020-03-03T23:19:47.000663617Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-03T23:19:47.206900365Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-03T23:19:47.379119758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7444ea29e45e927abea1f923bf24cac20deaddea603c4bb1c7f2f5819773d453",
                    "sha256:db2fed6d054f7001aadfb11f4d1b602744c50b19f15a4b6f6a4c8aff423d4220",
                    "sha256:a53b0c6d389bd131d9ef5860e331755c0273cc24fb8bb9dbdd8ea626e152a05d"
                ]
            }
        },
        "2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5495cfa5c0f40ac53dc68355e46c97cd4cd2f7f5fd83176f425cacbdc57d568e",
            "container_config": {
                "Hostname": "5495cfa5c0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:14.937761934Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.439623063Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:14.551820394Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.677758972Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:14.758037066Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.848204628Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.937761934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:0b21ba0b17f57e573932fc2e787815e1de8bed320bfc27ff10586d8a205fb819",
                    "sha256:49a91b3f9b96ca34661b7ae31791a8c1dfc7fe3f61053bc34c5732f07103d59b"
                ]
            }
        },
        "2-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "29abb45bce35e33df3c6343362a2063217abd4192ec9a53ffde5ab2125a8d3f8",
            "container_config": {
                "Hostname": "29abb45bce35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:50.951483058Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.487022763Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:50.589353987Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.707388345Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:50.784593416Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.869222248Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.951483058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:48f608d0f52cf90767970676ac0501b53a245ef70df1e4cfcea65b0ca5e0d07d",
                    "sha256:a41031e59e92c976c0a1161c6cc077a34f64f04860772b05734ef74c6feabdb6"
                ]
            }
        },
        "2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5495cfa5c0f40ac53dc68355e46c97cd4cd2f7f5fd83176f425cacbdc57d568e",
            "container_config": {
                "Hostname": "5495cfa5c0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:14.937761934Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.439623063Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:14.551820394Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.677758972Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:14.758037066Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.848204628Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.937761934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:0b21ba0b17f57e573932fc2e787815e1de8bed320bfc27ff10586d8a205fb819",
                    "sha256:49a91b3f9b96ca34661b7ae31791a8c1dfc7fe3f61053bc34c5732f07103d59b"
                ]
            }
        },
        "2.0-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "29abb45bce35e33df3c6343362a2063217abd4192ec9a53ffde5ab2125a8d3f8",
            "container_config": {
                "Hostname": "29abb45bce35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:50.951483058Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.487022763Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:50.589353987Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.707388345Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:50.784593416Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.869222248Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.951483058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:48f608d0f52cf90767970676ac0501b53a245ef70df1e4cfcea65b0ca5e0d07d",
                    "sha256:a41031e59e92c976c0a1161c6cc077a34f64f04860772b05734ef74c6feabdb6"
                ]
            }
        },
        "2.0.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.0",
                    "DOWNLOAD_SHA256=ca8c21d1b04037df27639de9ea8f82fa73e1cbd24e83e6394ed67b537c4b6d86",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:c82d5aed6c5a5d6ca153c44941ebf0570ef9ac4160d0fd3b7afe5816c992d224",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "41fec8f4b5c9d8639e414874a13ea6e67cc1ede0f4f1ca22c5a5a6c1aef3f200",
            "container_config": {
                "Hostname": "41fec8f4b5c9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.0",
                    "DOWNLOAD_SHA256=ca8c21d1b04037df27639de9ea8f82fa73e1cbd24e83e6394ed67b537c4b6d86",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:c82d5aed6c5a5d6ca153c44941ebf0570ef9ac4160d0fd3b7afe5816c992d224",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-03T22:23:31.507173459Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:19:24.33416307Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f17f65714f703db9012f00e5ec98d0b2541ff6147c2633f7ab9ba659d0c507f4 in / "
                },
                {
                    "created": "2020-10-22T02:19:24.499382102Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:39:31.955231226Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:22:56.987285413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.0 DOWNLOAD_SHA256=ca8c21d1b04037df27639de9ea8f82fa73e1cbd24e83e6394ed67b537c4b6d86 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:23:30.500463852Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build/cjson\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-03T22:23:30.730942872Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:23:30.947875926Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-03T22:23:31.119515693Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:23:31.319031843Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:23:31.507173459Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ace0eda3e3be35a979cec764a3321b4c7d0b9e4bb3094d20d3ff6782961a8d54",
                    "sha256:721653e45156ec36aab7ea0cd92c4dbbccfc324167275bc1b26ff3f41b487b97",
                    "sha256:d50cccaaffe4e2f05b3438150d5df547eaf6b64ff0ed6e7ceada440ddabab4f5"
                ]
            }
        },
        "2.0.0-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.0",
                    "DOWNLOAD_SHA256=ca8c21d1b04037df27639de9ea8f82fa73e1cbd24e83e6394ed67b537c4b6d86",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:220a5ace7e68f2e56a8cfc80bb5fdad48bd879d1c18b3dfb3d62b4a4be8daa8e",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "35ef83c3c07576ef4499ab2dcafbf3e35ddf04c55363d1bf754b408ed878a8f0",
            "container_config": {
                "Hostname": "35ef83c3c075",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.0",
                    "DOWNLOAD_SHA256=ca8c21d1b04037df27639de9ea8f82fa73e1cbd24e83e6394ed67b537c4b6d86",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:220a5ace7e68f2e56a8cfc80bb5fdad48bd879d1c18b3dfb3d62b4a4be8daa8e",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-03T22:24:12.304542357Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T02:19:24.33416307Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f17f65714f703db9012f00e5ec98d0b2541ff6147c2633f7ab9ba659d0c507f4 in / "
                },
                {
                    "created": "2020-10-22T02:19:24.499382102Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:39:31.955231226Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:22:56.987285413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.0 DOWNLOAD_SHA256=ca8c21d1b04037df27639de9ea8f82fa73e1cbd24e83e6394ed67b537c4b6d86 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:24:11.271407369Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build/cjson\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-03T22:24:11.474765818Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:24:11.714933573Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-03T22:24:11.890961228Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:24:12.095176806Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-03T22:24:12.304542357Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ace0eda3e3be35a979cec764a3321b4c7d0b9e4bb3094d20d3ff6782961a8d54",
                    "sha256:4792ff6e8c669a6d679fb754901460b69a3d96d38168e15745d4928600bb096d",
                    "sha256:1d61b83fd4321aaeb140e9a3d72981ce0f0f843dfc5769fe810427a428923b5d"
                ]
            }
        },
        "2.0.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.1",
                    "DOWNLOAD_SHA256=84fa7646b35176259e990f25608e9f8223a5ef42543cd5c192baaa5e648359b5",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:a7234225a85649703c082328570261c2369e4b85a95b847b50da23b689a3411d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5e46bd495c98f66682cbc708c38585e34beb2655603835ee14d6d776c41bcf23",
            "container_config": {
                "Hostname": "5e46bd495c98",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.1",
                    "DOWNLOAD_SHA256=84fa7646b35176259e990f25608e9f8223a5ef42543cd5c192baaa5e648359b5",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:a7234225a85649703c082328570261c2369e4b85a95b847b50da23b689a3411d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-17T13:53:06.311205991Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.652161494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.1 DOWNLOAD_SHA256=84fa7646b35176259e990f25608e9f8223a5ef42543cd5c192baaa5e648359b5 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:05.263463031Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-17T13:53:05.475014145Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:05.704139539Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-17T13:53:05.9030506Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:06.124314057Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:06.311205991Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:a4b4014677599c6fe322156493cbcce16c642c81d092479b919be49a53b4c513",
                    "sha256:b065ad20eeb05d528b355538e5b51ec9c214b1dd441251fbf2cec59057ca6468"
                ]
            }
        },
        "2.0.1-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.1",
                    "DOWNLOAD_SHA256=84fa7646b35176259e990f25608e9f8223a5ef42543cd5c192baaa5e648359b5",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:12f8e817d4cea202193312fd05329bfda202c8dc5f1badd21b536c2eb19370f7",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "352aa82367b39e89224614ae2197c26da24e60e307fd88c6939ca0c5d7b99993",
            "container_config": {
                "Hostname": "352aa82367b3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.1",
                    "DOWNLOAD_SHA256=84fa7646b35176259e990f25608e9f8223a5ef42543cd5c192baaa5e648359b5",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:12f8e817d4cea202193312fd05329bfda202c8dc5f1badd21b536c2eb19370f7",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-17T13:53:54.890135351Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.652161494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.1 DOWNLOAD_SHA256=84fa7646b35176259e990f25608e9f8223a5ef42543cd5c192baaa5e648359b5 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:53.896636211Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-17T13:53:54.095018909Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:54.327520127Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-17T13:53:54.510822507Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:54.703162054Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:53:54.890135351Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:95475b785445944bcb676ce9deb1d2d9991dce3c6c2ae8325228774c3449fd3a",
                    "sha256:f52545ae1a10280b53fb3e5fb38ef15380b19e4435a1896b6a9acacc9c51c8dd"
                ]
            }
        },
        "2.0.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.10",
                    "DOWNLOAD_SHA256=0188f7b21b91d6d80e992b8d6116ba851468b3bd154030e8a003ed28fb6f4a44",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:ceb20c1fd08936a2da38f2914abeeb19fb6cc090145dbba2ce85aff8b62be22f",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "c88e254207a2684f884a8f80b47fcc8a63a201c09394ec4aa50ca2df19a9f589",
            "container_config": {
                "Hostname": "c88e254207a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.10",
                    "DOWNLOAD_SHA256=0188f7b21b91d6d80e992b8d6116ba851468b3bd154030e8a003ed28fb6f4a44",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:ceb20c1fd08936a2da38f2914abeeb19fb6cc090145dbba2ce85aff8b62be22f",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-04-14T20:22:23.131528799Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:49.135571382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f526aa99067d82b341f7ca538f7826b7c23a628f1b615eea2883a2d434c1b90 in / "
                },
                {
                    "created": "2021-04-14T19:19:49.594730611Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:21:46.242077002Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:21:46.433691011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.10 DOWNLOAD_SHA256=0188f7b21b91d6d80e992b8d6116ba851468b3bd154030e8a003ed28fb6f4a44 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:22:21.959894429Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-04-14T20:22:22.195213567Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:22:22.510908766Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-04-14T20:22:22.715332681Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:22:22.910224342Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:22:23.131528799Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32f366d666a541852cad754ee1cdb53a736110b550f0c2d5a46bc5ba519896b6",
                    "sha256:ec8e0c7af5819c3731ae879aabb1d33f45661c9b5ef9e7c7f8516d9a4e4f5a49",
                    "sha256:0cb04d470e214b32f6f44c894e6f99626304b9f1cdcc9b1c04491f5967d75d4f"
                ]
            }
        },
        "2.0.10-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.10",
                    "DOWNLOAD_SHA256=0188f7b21b91d6d80e992b8d6116ba851468b3bd154030e8a003ed28fb6f4a44",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:941ef1462eac871178065c9e63df13c71c395ee65e119c4520ebb39ae4a83149",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "2631bdd339a9f8301559a599f5cc86f7cea507f49dc6fc6098c80f7857e2b07c",
            "container_config": {
                "Hostname": "2631bdd339a9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.10",
                    "DOWNLOAD_SHA256=0188f7b21b91d6d80e992b8d6116ba851468b3bd154030e8a003ed28fb6f4a44",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:941ef1462eac871178065c9e63df13c71c395ee65e119c4520ebb39ae4a83149",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-04-14T20:23:02.995303731Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:49.135571382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f526aa99067d82b341f7ca538f7826b7c23a628f1b615eea2883a2d434c1b90 in / "
                },
                {
                    "created": "2021-04-14T19:19:49.594730611Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:21:46.242077002Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:21:46.433691011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.10 DOWNLOAD_SHA256=0188f7b21b91d6d80e992b8d6116ba851468b3bd154030e8a003ed28fb6f4a44 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:01.856278162Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-04-14T20:23:02.086732116Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:02.382635742Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-04-14T20:23:02.560339281Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:02.774745697Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:23:02.995303731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32f366d666a541852cad754ee1cdb53a736110b550f0c2d5a46bc5ba519896b6",
                    "sha256:83f966bd469afca584633dd061b9ce3e38a6caf97a7c57e8e48d73587c7100dc",
                    "sha256:9168dfdcff260e3510b03178fcf742dad12a5841d248f630010b7704c9d5075a"
                ]
            }
        },
        "2.0.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.11",
                    "DOWNLOAD_SHA256=7b36a7198bce85cf31b132f5c6ee36dcf5dadf86fb768501eb1e11ce95d4f78a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.0",
                    "LWS_SHA256=a57e9a4765dbcd4d880feba8089b43ed69995eaf10d5d61a07981d9ddd975f40",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:a851cc51159960a7861870ce749b633c54a5fa7a5602488cc952c215591a8fe4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "f920689bef788abd651c9eb70a0944e731b0079c28622a0f9882cbd03cbf3cf3",
            "container_config": {
                "Hostname": "f920689bef78",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.11",
                    "DOWNLOAD_SHA256=7b36a7198bce85cf31b132f5c6ee36dcf5dadf86fb768501eb1e11ce95d4f78a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.0",
                    "LWS_SHA256=a57e9a4765dbcd4d880feba8089b43ed69995eaf10d5d61a07981d9ddd975f40",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:a851cc51159960a7861870ce749b633c54a5fa7a5602488cc952c215591a8fe4",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-09-01T00:35:06.900380744Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-31T23:18:23.962406965Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3d2013df9d58cd9255c749dbd62e7b1b1bdf1c2ee644c17bb93e67d859f0815 in / "
                },
                {
                    "created": "2021-08-31T23:18:24.182447603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:34:18.109926104Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:34:18.402518749Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.11 DOWNLOAD_SHA256=7b36a7198bce85cf31b132f5c6ee36dcf5dadf86fb768501eb1e11ce95d4f78a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.0 LWS_SHA256=a57e9a4765dbcd4d880feba8089b43ed69995eaf10d5d61a07981d9ddd975f40 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:35:05.588422526Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/cjson/LICENSE /usr/share/licenses/cJSON/LICENSE &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-09-01T00:35:05.841449822Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:35:06.196882886Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-09-01T00:35:06.435806678Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:35:06.667502974Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:35:06.900380744Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e6688e911f15729983816cb784a4ae88c7405593c30bc88f6216e24c3363bf26",
                    "sha256:0e698042c35428a47a2ed879abf1a187f02d83c2ac9345da806303430ca944c2",
                    "sha256:13f5e6a129f845e57315219f6bc77e729cabbc54b2278ca4ba7fa925a508d5bc"
                ]
            }
        },
        "2.0.11-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.11",
                    "DOWNLOAD_SHA256=7b36a7198bce85cf31b132f5c6ee36dcf5dadf86fb768501eb1e11ce95d4f78a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.0",
                    "LWS_SHA256=a57e9a4765dbcd4d880feba8089b43ed69995eaf10d5d61a07981d9ddd975f40",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:1f42627d7f25204ebc321a2368a41b367d1c9360c087bfcaae6ab2d0fc6f19aa",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "13537a21d06eae61f45b9ef3301ad2c469fb9c150bc200e02e524cead64f6d88",
            "container_config": {
                "Hostname": "13537a21d06e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.11",
                    "DOWNLOAD_SHA256=7b36a7198bce85cf31b132f5c6ee36dcf5dadf86fb768501eb1e11ce95d4f78a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.0",
                    "LWS_SHA256=a57e9a4765dbcd4d880feba8089b43ed69995eaf10d5d61a07981d9ddd975f40",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:1f42627d7f25204ebc321a2368a41b367d1c9360c087bfcaae6ab2d0fc6f19aa",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-09-01T00:36:42.599443308Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-31T23:18:23.962406965Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3d2013df9d58cd9255c749dbd62e7b1b1bdf1c2ee644c17bb93e67d859f0815 in / "
                },
                {
                    "created": "2021-08-31T23:18:24.182447603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:34:18.109926104Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:34:18.402518749Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.11 DOWNLOAD_SHA256=7b36a7198bce85cf31b132f5c6ee36dcf5dadf86fb768501eb1e11ce95d4f78a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.0 LWS_SHA256=a57e9a4765dbcd4d880feba8089b43ed69995eaf10d5d61a07981d9ddd975f40 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:36:40.247980661Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/cjson/LICENSE /usr/share/licenses/cJSON/LICENSE &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-09-01T00:36:40.604514832Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:36:41.478942607Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-09-01T00:36:41.839567065Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:36:42.31125971Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-01T00:36:42.599443308Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e6688e911f15729983816cb784a4ae88c7405593c30bc88f6216e24c3363bf26",
                    "sha256:6f375e4c8a92d3ca6f018534a6438447631d4b480fb1290a0298f6e352f4bc57",
                    "sha256:a4668d4c8c79b7059d652fa7a5e364b38eaa23b6d3ad73cc3d09e91e273d4974"
                ]
            }
        },
        "2.0.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.12",
                    "DOWNLOAD_SHA256=31cf0065cb431d6f4e57a5f4d56663e839c9d177362eff89582d7cfde191c933",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:47a89c4f9fa1b48fba7c6270d33a62c39e46a1fe2079ebcd552a17bb26185333",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "459e49b7a1e19487f832523a072cb960fd8c2272e0e99d2aa45e7aee89fe78e3",
            "container_config": {
                "Hostname": "459e49b7a1e1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.12",
                    "DOWNLOAD_SHA256=31cf0065cb431d6f4e57a5f4d56663e839c9d177362eff89582d7cfde191c933",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:47a89c4f9fa1b48fba7c6270d33a62c39e46a1fe2079ebcd552a17bb26185333",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-09-02T17:24:00.831621833Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:23:18.430396246Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:23:18.634885534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.12 DOWNLOAD_SHA256=31cf0065cb431d6f4e57a5f4d56663e839c9d177362eff89582d7cfde191c933 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:23:59.664015875Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-09-02T17:23:59.911310493Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:00.239650993Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-09-02T17:24:00.439873645Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:00.616807967Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:00.831621833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:626ea3ad92b3ac5c575dbb04dd74935f3704608e9c4964019470daa4db87efe2",
                    "sha256:265e8540d244aa2617156909ea74135199499630768f66e4cb8a31ceb74c0fef"
                ]
            }
        },
        "2.0.12-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.12",
                    "DOWNLOAD_SHA256=31cf0065cb431d6f4e57a5f4d56663e839c9d177362eff89582d7cfde191c933",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:465c6411dd6e4a86dfba023f94e8ab4971222dbd05a17f20b5ceadbf5b83e90b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "218e7c353f502a0ef5365084543d13bbc7b72a718b7bfda8b7cc0f2e2ac30c58",
            "container_config": {
                "Hostname": "218e7c353f50",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.12",
                    "DOWNLOAD_SHA256=31cf0065cb431d6f4e57a5f4d56663e839c9d177362eff89582d7cfde191c933",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:465c6411dd6e4a86dfba023f94e8ab4971222dbd05a17f20b5ceadbf5b83e90b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-09-02T17:24:55.278205913Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:23:18.430396246Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:23:18.634885534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.12 DOWNLOAD_SHA256=31cf0065cb431d6f4e57a5f4d56663e839c9d177362eff89582d7cfde191c933 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:54.107059882Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-09-02T17:24:54.339257344Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:54.663995128Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-09-02T17:24:54.879876508Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:55.078974232Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-02T17:24:55.278205913Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:ccd1bc24e4d48d372169ee4657ec2fcfcd6b217e7f39784d22b2a0e003189182",
                    "sha256:f535f90ccdbbc417fcc947820f3f2744ad3b0b7a8abc04abda3ca03315be4696"
                ]
            }
        },
        "2.0.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.13",
                    "DOWNLOAD_SHA256=9cf83a558f1588e8798edd8647b1632af88e88ef2cd45054e903c517df5bd2cd",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:92ce06049e5924ab58eeafc6d9a40d700f58ea3e32c794f44cd0dc8c32ec6552",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "ff5ff3dfec44fcacb4f14a9e8e9cf5f892be4fbc95141d0fd1682e01c0c5dd66",
            "container_config": {
                "Hostname": "ff5ff3dfec44",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.13",
                    "DOWNLOAD_SHA256=9cf83a558f1588e8798edd8647b1632af88e88ef2cd45054e903c517df5bd2cd",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:92ce06049e5924ab58eeafc6d9a40d700f58ea3e32c794f44cd0dc8c32ec6552",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-11-12T22:05:07.071144506Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:04:17.703165441Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:04:17.928444573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.13 DOWNLOAD_SHA256=9cf83a558f1588e8798edd8647b1632af88e88ef2cd45054e903c517df5bd2cd GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:05:05.775890538Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-11-12T22:05:06.060327545Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:05:06.443885235Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-11-12T22:05:06.646785684Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:05:06.854992439Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:05:07.071144506Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:68c2202ffbf6af8643c2f6585deb2b4f255f92aacefa9fce527116a743781f0d",
                    "sha256:ef442b0d2057e9797e02dc4ecd738e736c5257aae1b35bca595d30ba159f8bc8"
                ]
            }
        },
        "2.0.13-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.13",
                    "DOWNLOAD_SHA256=9cf83a558f1588e8798edd8647b1632af88e88ef2cd45054e903c517df5bd2cd",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:ffffcb101b4af5c71bfd993b0949962e84bf4a7547cea72882593001371f0426",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "ec05d0fd653763ea636298eea1491c0c2d187f0ebf646113563b8d235dff451e",
            "container_config": {
                "Hostname": "ec05d0fd6537",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.13",
                    "DOWNLOAD_SHA256=9cf83a558f1588e8798edd8647b1632af88e88ef2cd45054e903c517df5bd2cd",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:ffffcb101b4af5c71bfd993b0949962e84bf4a7547cea72882593001371f0426",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-11-12T22:06:08.467424086Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:04:17.703165441Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:04:17.928444573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.13 DOWNLOAD_SHA256=9cf83a558f1588e8798edd8647b1632af88e88ef2cd45054e903c517df5bd2cd GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:06:07.195550747Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-11-12T22:06:07.426206831Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:06:07.795172359Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-11-12T22:06:08.027563422Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:06:08.270446697Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:06:08.467424086Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:6ca92aa5fd9b02d984d7e2808bf5a0ced55ebf9236fad4d0a30512c949f23bf6",
                    "sha256:cdc2b5b65f399c028797098020c4e5ba8f95a0b255811f0d2588d78d76028d22"
                ]
            }
        },
        "2.0.14": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.14",
                    "DOWNLOAD_SHA256=d0dde8fdb12caf6e2426b4f28081919a2fce3448773bdb8af0d3cd5fe5776925",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:dfc0641f4e104facf2840b38d17ad862414686cf7473b52c0c80f05f4afa6ef8",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "23817efbfb772055d5a1e4c6b956ecd7243a5b562e89fe5dd792fb7a574bbdae",
            "container_config": {
                "Hostname": "23817efbfb77",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.14",
                    "DOWNLOAD_SHA256=d0dde8fdb12caf6e2426b4f28081919a2fce3448773bdb8af0d3cd5fe5776925",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:dfc0641f4e104facf2840b38d17ad862414686cf7473b52c0c80f05f4afa6ef8",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2022-08-09T18:26:24.30435658Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:25:54.678969496Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:25:54.788762391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.14 DOWNLOAD_SHA256=d0dde8fdb12caf6e2426b4f28081919a2fce3448773bdb8af0d3cd5fe5776925 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:23.65197213Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2022-08-09T18:26:23.80313381Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:23.97050149Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2022-08-09T18:26:24.078316006Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:24.197263455Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:24.30435658Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:1e28ca8d1d5a79a8aaab3fbb865961e6a1d1d55249794742fa0d0510df92facb",
                    "sha256:f55a865589882863fe2eee4fbcbfca821866c7ff6650a30f040acd2ead7e5746"
                ]
            }
        },
        "2.0.14-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.14",
                    "DOWNLOAD_SHA256=d0dde8fdb12caf6e2426b4f28081919a2fce3448773bdb8af0d3cd5fe5776925",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:d401dc05e5d5534bcc0c3257a23b21be19a01804add3715c48f969a6fe0e1ba9",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "b30fea58c4133cf56e19b007623a4455db78423c568132af9d29fb85c8b9c421",
            "container_config": {
                "Hostname": "b30fea58c413",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.14",
                    "DOWNLOAD_SHA256=d0dde8fdb12caf6e2426b4f28081919a2fce3448773bdb8af0d3cd5fe5776925",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:d401dc05e5d5534bcc0c3257a23b21be19a01804add3715c48f969a6fe0e1ba9",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2022-08-09T18:26:59.241022559Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:25:54.678969496Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:25:54.788762391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.14 DOWNLOAD_SHA256=d0dde8fdb12caf6e2426b4f28081919a2fce3448773bdb8af0d3cd5fe5776925 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:58.628433102Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2022-08-09T18:26:58.76326277Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:58.925697889Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2022-08-09T18:26:59.024293814Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:59.128927525Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-09T18:26:59.241022559Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:e114e8877594fb5970176741724542551f6b52f8462c98087437d302d2e8ffed",
                    "sha256:a389971920efd1faa2922ddb432d7ee97f69686656514d0bdc81ecece51faa90"
                ]
            }
        },
        "2.0.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.15",
                    "DOWNLOAD_SHA256=4735b1d32e3f91c7a8896741d88a3022e89730a1ee897946decfa0df27039ac6",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:997844038db74f6fed0d7ed54f8f9bf56b8e97c6590a2e7d122c5e086a343b7c",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "4a3e730e5b29c0089eef56e81c8566218ea0dc202e0c0e4fa06194829b1b1d94",
            "container_config": {
                "Hostname": "4a3e730e5b29",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.15",
                    "DOWNLOAD_SHA256=4735b1d32e3f91c7a8896741d88a3022e89730a1ee897946decfa0df27039ac6",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:997844038db74f6fed0d7ed54f8f9bf56b8e97c6590a2e7d122c5e086a343b7c",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-08-08T23:35:06.507840172Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.888532498Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.968139773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.15 DOWNLOAD_SHA256=4735b1d32e3f91c7a8896741d88a3022e89730a1ee897946decfa0df27039ac6 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:06.015828137Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-08-08T23:35:06.131575299Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:06.25370442Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2023-08-08T23:35:06.332826393Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:06.418988415Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:06.507840172Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:aad618d301c03488f63e0dedd04f2265225eacb0db2817122ddedaee682e8e2c",
                    "sha256:974cf6dd56b981e1a724979d45da58439483e0c1646f0c374bfeabaf09087dbd"
                ]
            }
        },
        "2.0.15-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.15",
                    "DOWNLOAD_SHA256=4735b1d32e3f91c7a8896741d88a3022e89730a1ee897946decfa0df27039ac6",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:d0dd9e23d928d84b111a995c38f490676c27de443f982c45681ad411de81eb15",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "1f170faddcc9e4758e63146df8c34164db57e587b15a407139d4dbc7462eca50",
            "container_config": {
                "Hostname": "1f170faddcc9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.15",
                    "DOWNLOAD_SHA256=4735b1d32e3f91c7a8896741d88a3022e89730a1ee897946decfa0df27039ac6",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:d0dd9e23d928d84b111a995c38f490676c27de443f982c45681ad411de81eb15",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-08-08T23:35:42.514154893Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.888532498Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.968139773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.15 DOWNLOAD_SHA256=4735b1d32e3f91c7a8896741d88a3022e89730a1ee897946decfa0df27039ac6 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:42.033072915Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-08-08T23:35:42.133946931Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:42.253693549Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2023-08-08T23:35:42.336449265Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:42.423469661Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:35:42.514154893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:dd194e6f495dca61baad1a4e465fdb0514b1a535e41ff39fe5df58d6cfe1d04a",
                    "sha256:4d2e96c43da2c5dbad0da81047688d8796f9d692cc39237c5763476f0bdd7f16"
                ]
            }
        },
        "2.0.16": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.16",
                    "DOWNLOAD_SHA256=638db9e43e89d243ea98d10d66e76ff376131217780decd01abaffacc66d8035",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:c5ae4dc68d6d97dfa921701716c6d44adb15867321a00ff49850fcd6486639bd",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "65ad01a9d782f7eb06823812e4b7aa2f1ac225833b076f21bf337f11888ee530",
            "container_config": {
                "Hostname": "65ad01a9d782",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.16",
                    "DOWNLOAD_SHA256=638db9e43e89d243ea98d10d66e76ff376131217780decd01abaffacc66d8035",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:c5ae4dc68d6d97dfa921701716c6d44adb15867321a00ff49850fcd6486639bd",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-08-17T09:46:14.267543742Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.888532498Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:45:45.704548432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.16 DOWNLOAD_SHA256=638db9e43e89d243ea98d10d66e76ff376131217780decd01abaffacc66d8035 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:13.772587234Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-08-17T09:46:13.890768361Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:14.01798215Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2023-08-17T09:46:14.098981046Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:14.184599976Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:14.267543742Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:bd4f9ee1592ac32458d4d74f564e7252622f74db7e40646b199b8001e251c6f6",
                    "sha256:a8966ffb6c0b0d1b273458629af6d9f97047d35bd9ee586fdde58e4f728d5def"
                ]
            }
        },
        "2.0.16-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.16",
                    "DOWNLOAD_SHA256=638db9e43e89d243ea98d10d66e76ff376131217780decd01abaffacc66d8035",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:eab12525609b44650f7fda2c56ebfa18000c9958fab8c880c252fd5f65b10846",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "820a0efe0755d1921edbb47142e3b39af488ce18452363b71aa29dd38406593f",
            "container_config": {
                "Hostname": "820a0efe0755",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.16",
                    "DOWNLOAD_SHA256=638db9e43e89d243ea98d10d66e76ff376131217780decd01abaffacc66d8035",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:eab12525609b44650f7fda2c56ebfa18000c9958fab8c880c252fd5f65b10846",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-08-17T09:46:49.953368199Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.888532498Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:45:45.704548432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.16 DOWNLOAD_SHA256=638db9e43e89d243ea98d10d66e76ff376131217780decd01abaffacc66d8035 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:49.470309136Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-08-17T09:46:49.580933048Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:49.702785589Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2023-08-17T09:46:49.78140276Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:49.867355359Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-17T09:46:49.953368199Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:1b4328d7f14bfb487828a8eb391cdcdacf43e09a03f7edd8e2acf60ac58d0a2f",
                    "sha256:f99781d91a2e92a9e8ef049a2775a36e87977c7550fce8f44e4bbbb84d6f0057"
                ]
            }
        },
        "2.0.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.17",
                    "DOWNLOAD_SHA256=3be7a911236567c1a9fbe25baf3e3167004ba4a0c151a448ef1f7fc077dba52f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:b392eda79fc41ec255ef990d5fd03cef28451a6869e69899bd5ac7b1a9d98601",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "24f0e0db6ede497a4563c91dc2d3cd53f1f3f4a5e071da4953dc63e949ad34fd",
            "container_config": {
                "Hostname": "24f0e0db6ede",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.17",
                    "DOWNLOAD_SHA256=3be7a911236567c1a9fbe25baf3e3167004ba4a0c151a448ef1f7fc077dba52f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:b392eda79fc41ec255ef990d5fd03cef28451a6869e69899bd5ac7b1a9d98601",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-08-22T19:20:04.77079622Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.888532498Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:19:36.256966867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.17 DOWNLOAD_SHA256=3be7a911236567c1a9fbe25baf3e3167004ba4a0c151a448ef1f7fc077dba52f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:04.256295335Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-08-22T19:20:04.370201798Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:04.494131294Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2023-08-22T19:20:04.581700416Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:04.673770494Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:04.77079622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:6ca44f3667367afc44a0468e23bb4db03f31c20f0748a8a12991de2cf5d824da",
                    "sha256:8b03e3beff515bf54d83ca897f4dab60d5c215835e1344d11f36088dc76c4671"
                ]
            }
        },
        "2.0.17-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.17",
                    "DOWNLOAD_SHA256=3be7a911236567c1a9fbe25baf3e3167004ba4a0c151a448ef1f7fc077dba52f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:5d013b1fc4d5c976b49c8b9e004364937c56ba61497c2c688177d05e2d27e281",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "8f77bfad08dcd3048afee33c62fce18577adc9a6a8b20a0477671d068be5ca15",
            "container_config": {
                "Hostname": "8f77bfad08dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.17",
                    "DOWNLOAD_SHA256=3be7a911236567c1a9fbe25baf3e3167004ba4a0c151a448ef1f7fc077dba52f",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:5d013b1fc4d5c976b49c8b9e004364937c56ba61497c2c688177d05e2d27e281",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2023-08-22T19:20:39.77395991Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-07T19:20:20.71894984Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ff5e7a78b890996ee4681cc0a26185d3e9acdb4eb1e2aaccb2411f922fed6b in / "
                },
                {
                    "created": "2023-08-07T19:20:20.894140623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-08T23:34:38.888532498Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:19:36.256966867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.17 DOWNLOAD_SHA256=3be7a911236567c1a9fbe25baf3e3167004ba4a0c151a448ef1f7fc077dba52f GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:39.24313982Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2023-08-22T19:20:39.352746223Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:39.482183702Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2023-08-22T19:20:39.572884721Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:39.675680761Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-22T19:20:39.77395991Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4693057ce2364720d39e57e85a5b8e0bd9ac3573716237736d6470ec5b7b7230",
                    "sha256:a1a45f706c2c4463faf8c36822ba2f245f95fcb2e3c3558af9521ecc8ccf03eb",
                    "sha256:ef5c27201ec504140de61d11fe0936d63447bdce2194110b12b5aa47d32f2d3f"
                ]
            }
        },
        "2.0.18": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5495cfa5c0f40ac53dc68355e46c97cd4cd2f7f5fd83176f425cacbdc57d568e",
            "container_config": {
                "Hostname": "5495cfa5c0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:14.937761934Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.439623063Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:14.551820394Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.677758972Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:14.758037066Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.848204628Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.937761934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:0b21ba0b17f57e573932fc2e787815e1de8bed320bfc27ff10586d8a205fb819",
                    "sha256:49a91b3f9b96ca34661b7ae31791a8c1dfc7fe3f61053bc34c5732f07103d59b"
                ]
            }
        },
        "2.0.18-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "29abb45bce35e33df3c6343362a2063217abd4192ec9a53ffde5ab2125a8d3f8",
            "container_config": {
                "Hostname": "29abb45bce35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:50.951483058Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.487022763Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:50.589353987Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.707388345Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:50.784593416Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.869222248Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.951483058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:48f608d0f52cf90767970676ac0501b53a245ef70df1e4cfcea65b0ca5e0d07d",
                    "sha256:a41031e59e92c976c0a1161c6cc077a34f64f04860772b05734ef74c6feabdb6"
                ]
            }
        },
        "2.0.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.3",
                    "DOWNLOAD_SHA256=6232ff97f8f19697f734f3a51cdfb62be5d28c662385e130a265b7a1165ec66e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:619ecf5a20070fd16062f763b6ad2dde0b80c38bc06af934f23124c91bb468cc",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "7ea10ec2f5fab8e36528a01819ae1aa5fd05cafeb68265a451b50cf06484fa6a",
            "container_config": {
                "Hostname": "7ea10ec2f5fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.3",
                    "DOWNLOAD_SHA256=6232ff97f8f19697f734f3a51cdfb62be5d28c662385e130a265b7a1165ec66e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:619ecf5a20070fd16062f763b6ad2dde0b80c38bc06af934f23124c91bb468cc",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-18T07:08:19.01887634Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:07:43.41118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.3 DOWNLOAD_SHA256=6232ff97f8f19697f734f3a51cdfb62be5d28c662385e130a265b7a1165ec66e GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:18.019912161Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-18T07:08:18.224178553Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:18.43557992Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-18T07:08:18.614716419Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:18.823235947Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:19.01887634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:b371c73d072ca5c7b41b3bca8d1ba95764a7326601365060a8d19e4b0621c859",
                    "sha256:f6912958f4f844aa6f3a9ad947b4dd7e13d07a60ec686c188e9c5b0076b59299"
                ]
            }
        },
        "2.0.3-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.3",
                    "DOWNLOAD_SHA256=6232ff97f8f19697f734f3a51cdfb62be5d28c662385e130a265b7a1165ec66e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:44d713337cb1f2c220b649fe73e54dfa48155675dadb8ca5aa8ae9996105bc25",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "655b1d87c59d99d964b04064456a8cf07a63fa242ce6d5b4b855c7ac4d57f3cd",
            "container_config": {
                "Hostname": "655b1d87c59d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.3",
                    "DOWNLOAD_SHA256=6232ff97f8f19697f734f3a51cdfb62be5d28c662385e130a265b7a1165ec66e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:44d713337cb1f2c220b649fe73e54dfa48155675dadb8ca5aa8ae9996105bc25",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-18T07:08:59.079588976Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:07:43.41118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.3 DOWNLOAD_SHA256=6232ff97f8f19697f734f3a51cdfb62be5d28c662385e130a265b7a1165ec66e GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:58.007243729Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-18T07:08:58.231267818Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:58.487737139Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-18T07:08:58.679376705Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:58.887399565Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:08:59.079588976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:26b5c59a547f59add15c3b00eeb8cc0fb756bd9b3da98fc5175c03c268ecb837",
                    "sha256:42e3851608af76e92e7163d5cb1017da6b240608b5b6b0527377ea229aed7c45"
                ]
            }
        },
        "2.0.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.4",
                    "DOWNLOAD_SHA256=ba3126d82533fe40a18cf1a989e61eaea887e81829cd93518149e73553d20f10",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:37de11d8615e9007ded9279ea2c241fb916cae85b2db4066de912b29623a7cb5",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "496bf7e6e39345d9e41fecd16eb06109b443da0d45e544b995320cdb6e590d09",
            "container_config": {
                "Hostname": "496bf7e6e393",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.4",
                    "DOWNLOAD_SHA256=ba3126d82533fe40a18cf1a989e61eaea887e81829cd93518149e73553d20f10",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:37de11d8615e9007ded9279ea2c241fb916cae85b2db4066de912b29623a7cb5",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-23T02:20:15.191168008Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:19:39.418668566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.4 DOWNLOAD_SHA256=ba3126d82533fe40a18cf1a989e61eaea887e81829cd93518149e73553d20f10 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:14.174937104Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-23T02:20:14.402825116Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:14.624441505Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-23T02:20:14.814907032Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:14.999608166Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:15.191168008Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:556541b144db218fd83d029fd1750c428fc8ff91b380de8c98e8cce8c614b0d7",
                    "sha256:3e26c49f9681bd277988d36dc4f9d00a55001d508fcc959dfd7fc4f508aa7e8e"
                ]
            }
        },
        "2.0.4-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.4",
                    "DOWNLOAD_SHA256=ba3126d82533fe40a18cf1a989e61eaea887e81829cd93518149e73553d20f10",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:7ce115c516e94bd91a4afb54ed8501d674bb8ee6c636754d2ba02baf1e4bf955",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5e777643f6380a6c2f47b37f2ba85e425f3b997cc026e87fa806fdb65f16425e",
            "container_config": {
                "Hostname": "5e777643f638",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.4",
                    "DOWNLOAD_SHA256=ba3126d82533fe40a18cf1a989e61eaea887e81829cd93518149e73553d20f10",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:7ce115c516e94bd91a4afb54ed8501d674bb8ee6c636754d2ba02baf1e4bf955",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2020-12-23T02:20:55.016038117Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:19:39.418668566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.4 DOWNLOAD_SHA256=ba3126d82533fe40a18cf1a989e61eaea887e81829cd93518149e73553d20f10 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:54.051360746Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2020-12-23T02:20:54.247342983Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:54.467954664Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2020-12-23T02:20:54.647509699Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:54.82359497Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-23T02:20:55.016038117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:e0f8c2e3ca405df3c4ffc3d3ed938da92302ddb75591183086e919342344f97a",
                    "sha256:d9ec97a5dbc469847e06ba474b3aaf7afc1991cb8e358a22272a2b731224fa45"
                ]
            }
        },
        "2.0.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.5",
                    "DOWNLOAD_SHA256=67eaeb4160e5793715c017f53c4f42808d76129b7ad131d765a6a23792e58d5d",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:badf06bf85227b7d1feccd7be5c9c063a4e145d981edc2ece19130cd167c045f",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "4be9270f7ab6f6f11eab7277f4bef242242fc3bdca328e5bb385d0f1e8759639",
            "container_config": {
                "Hostname": "4be9270f7ab6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.5",
                    "DOWNLOAD_SHA256=67eaeb4160e5793715c017f53c4f42808d76129b7ad131d765a6a23792e58d5d",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:badf06bf85227b7d1feccd7be5c9c063a4e145d981edc2ece19130cd167c045f",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-01-12T00:45:57.560605989Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:45:17.481447203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.5 DOWNLOAD_SHA256=67eaeb4160e5793715c017f53c4f42808d76129b7ad131d765a6a23792e58d5d GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:45:56.479237253Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-01-12T00:45:56.730672268Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:45:56.976092479Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-01-12T00:45:57.172799772Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:45:57.364040745Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:45:57.560605989Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:a451c38a8bb7ff21afb93ff6a070d91daea97d134e7bffc499f12a043b7d9e11",
                    "sha256:49471ea90e6422884f3c9609f0ba19917efe5acf013bfae470d02c7bcaaa79cf"
                ]
            }
        },
        "2.0.5-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.5",
                    "DOWNLOAD_SHA256=67eaeb4160e5793715c017f53c4f42808d76129b7ad131d765a6a23792e58d5d",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:2e7e072e5120725f2a6879e011816df4d963b7f3eee4b3e3891ebb015cf16133",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "92455f28625bca3122b6a5ab30eadc94548dd1750c83009c5326eb40768226b4",
            "container_config": {
                "Hostname": "92455f28625b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.5",
                    "DOWNLOAD_SHA256=67eaeb4160e5793715c017f53c4f42808d76129b7ad131d765a6a23792e58d5d",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:2e7e072e5120725f2a6879e011816df4d963b7f3eee4b3e3891ebb015cf16133",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-01-12T00:46:42.423653286Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:45:17.481447203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.5 DOWNLOAD_SHA256=67eaeb4160e5793715c017f53c4f42808d76129b7ad131d765a6a23792e58d5d GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:46:41.416453247Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-01-12T00:46:41.611741622Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:46:41.844725192Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-01-12T00:46:42.024569898Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:46:42.229461724Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T00:46:42.423653286Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:cdef219d00a6f951f37cd64f381cd6d30dc15f144c09774164655ec84c2541fa",
                    "sha256:f553dbbc28d62a41a320aede156f9770eebf62adc3d37cd292f308338780f6d0"
                ]
            }
        },
        "2.0.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.6",
                    "DOWNLOAD_SHA256=0b69a105bafd8524d11f0731fcdb2fbe1c94ad3ddd8f40ccfd97067c59ddd176",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:17e07db6e5fa3359762002738777f57ed01be3c48bfb3abfc1f89fe7eea85b74",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "638aa7a0e121a0eb985e73d558133dc151722c4ef16ad2fab1b41a7bb5bb4cf6",
            "container_config": {
                "Hostname": "638aa7a0e121",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.6",
                    "DOWNLOAD_SHA256=0b69a105bafd8524d11f0731fcdb2fbe1c94ad3ddd8f40ccfd97067c59ddd176",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:17e07db6e5fa3359762002738777f57ed01be3c48bfb3abfc1f89fe7eea85b74",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-01-28T22:20:10.788221243Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:19:34.367619115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.6 DOWNLOAD_SHA256=0b69a105bafd8524d11f0731fcdb2fbe1c94ad3ddd8f40ccfd97067c59ddd176 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:09.787413731Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-01-28T22:20:09.979581779Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:10.188736942Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-01-28T22:20:10.380564821Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:10.595201942Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:10.788221243Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:91370bb494c3fcb1650498ca62b684369ba2d7289c22bb758bfe28d184524998",
                    "sha256:99ef8aadfbd5a6765f181bb36e87219c75e7a7e58e33ad5a1bacff7e56cf3bde"
                ]
            }
        },
        "2.0.6-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.6",
                    "DOWNLOAD_SHA256=0b69a105bafd8524d11f0731fcdb2fbe1c94ad3ddd8f40ccfd97067c59ddd176",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:89f730c6ebaba4d99199f13c375935f1e08672375c9661fc29adcbcf766e092d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "186f45367872f6d31e959f37a2067d6e08aba183b9fe0bd07753bbb9aa999ea4",
            "container_config": {
                "Hostname": "186f45367872",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.6",
                    "DOWNLOAD_SHA256=0b69a105bafd8524d11f0731fcdb2fbe1c94ad3ddd8f40ccfd97067c59ddd176",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:89f730c6ebaba4d99199f13c375935f1e08672375c9661fc29adcbcf766e092d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-01-28T22:20:58.856710287Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-17T00:19:41.960367136Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec475c2abb2d46435286b5ae5efacf5b50b1a9e3b6293b69db3c0172b5b9658b in / "
                },
                {
                    "created": "2020-12-17T00:19:42.11518025Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T13:52:25.467210041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:19:34.367619115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.6 DOWNLOAD_SHA256=0b69a105bafd8524d11f0731fcdb2fbe1c94ad3ddd8f40ccfd97067c59ddd176 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:57.853409138Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-01-28T22:20:58.056352653Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:58.288491689Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-01-28T22:20:58.459861136Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:58.66408904Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-28T22:20:58.856710287Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:777b2c648970480f50f5b4d0af8f9a8ea798eea43dbcf40ce4a8c7118736bdcf",
                    "sha256:edf745fbdffe6793b73d5eef39a52907352566c910489de2563190192de2a99e",
                    "sha256:322dd52961f2b837b068911fe06d45a8c0578355877b32296c89e96fe7ebcf91"
                ]
            }
        },
        "2.0.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.7",
                    "DOWNLOAD_SHA256=a98054f0b8161588975ef24e1d467550d3935f4c16ccee63ecb623248a28356e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:af303998ee86e6449a0b69584a4da79142584ea1ef99de30e99d098f2b1f200d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "524cb2d85dc57f20a91a31885c16456da5b16a380d54c97a0fb29bb9a1c4354e",
            "container_config": {
                "Hostname": "524cb2d85dc5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.7",
                    "DOWNLOAD_SHA256=a98054f0b8161588975ef24e1d467550d3935f4c16ccee63ecb623248a28356e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:af303998ee86e6449a0b69584a4da79142584ea1ef99de30e99d098f2b1f200d",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-02-24T21:46:08.149853516Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.62667732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.7 DOWNLOAD_SHA256=a98054f0b8161588975ef24e1d467550d3935f4c16ccee63ecb623248a28356e GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:46:07.15671354Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-02-24T21:46:07.349368929Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:46:07.571935194Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-02-24T21:46:07.753654339Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:46:07.940237433Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:46:08.149853516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:86890f5c15167e447643a424ca7f3baf1ca9262d71d6cfdb1ba6d3ce7f93ab87",
                    "sha256:12774bb4b4f4786019a75975bd98f327e326e7c4a4948b385f4aee9c70b17157"
                ]
            }
        },
        "2.0.7-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.7",
                    "DOWNLOAD_SHA256=a98054f0b8161588975ef24e1d467550d3935f4c16ccee63ecb623248a28356e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:bec019381765f458b8fdbc7d106c4f081d5df1e6bae005720f5ab342927a1127",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "d7eb27bd2b6c5f343468016e44e85048976383b031d2421b3719acd26fcbe6f2",
            "container_config": {
                "Hostname": "d7eb27bd2b6c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.7",
                    "DOWNLOAD_SHA256=a98054f0b8161588975ef24e1d467550d3935f4c16ccee63ecb623248a28356e",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:bec019381765f458b8fdbc7d106c4f081d5df1e6bae005720f5ab342927a1127",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-02-24T21:47:05.219367411Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.62667732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.7 DOWNLOAD_SHA256=a98054f0b8161588975ef24e1d467550d3935f4c16ccee63ecb623248a28356e GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:03.80750448Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-02-24T21:47:04.092666245Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:04.350038147Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:232de3a06de79606b9743327f59defda56818d50c1027dd2f0f1c5fb7917db2e in / "
                },
                {
                    "created": "2021-02-24T21:47:04.590449537Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:04.941137577Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:47:05.219367411Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:8ab4016bdf13df72cb5d078f1c6faad405348eaa726c18236b9c253f044729c5",
                    "sha256:2a2e69af33fbb826d831497ffcb07051f38ed646ed2a627771b731d1e3c8a84d"
                ]
            }
        },
        "2.0.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.8",
                    "DOWNLOAD_SHA256=b15da8fc4edcb91d554e1259e220ea0173ef639ceaa4b465e06feb7e125b84bf",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:751ce168981df846a21d914b85be8d278f2414068e7efc6a1ff01312602bce4c",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "32cba3f5f46241816b426a98268efea18e570b34720c331eb16bbb5e4ede1c9f",
            "container_config": {
                "Hostname": "32cba3f5f462",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.8",
                    "DOWNLOAD_SHA256=b15da8fc4edcb91d554e1259e220ea0173ef639ceaa4b465e06feb7e125b84bf",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:751ce168981df846a21d914b85be8d278f2414068e7efc6a1ff01312602bce4c",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-03-03T19:07:49.21691518Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:06:59.179962979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.8 DOWNLOAD_SHA256=b15da8fc4edcb91d554e1259e220ea0173ef639ceaa4b465e06feb7e125b84bf GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:07:47.435036751Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-03-03T19:07:47.789329969Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:07:48.309538424Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-03-03T19:07:48.612769564Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:07:48.919469758Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:07:49.21691518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:ece7c85096dc78f197846f3c0e0bf28eb01b23697913ef82cee0a0405c85f00c",
                    "sha256:f2cdf9b7498bd029de077b13e9ff042dc92da9af54b2517dce6291114b760e13"
                ]
            }
        },
        "2.0.8-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.8",
                    "DOWNLOAD_SHA256=b15da8fc4edcb91d554e1259e220ea0173ef639ceaa4b465e06feb7e125b84bf",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:93ce4184e904874db6b4cf799126ead156ea5d62c90a4be0c15ae30b95c9097b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "ef6f22ff9dc0006946a461de3e7efedfa6299b842053489e9c5388fe85f3b0a8",
            "container_config": {
                "Hostname": "ef6f22ff9dc0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.8",
                    "DOWNLOAD_SHA256=b15da8fc4edcb91d554e1259e220ea0173ef639ceaa4b465e06feb7e125b84bf",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:93ce4184e904874db6b4cf799126ead156ea5d62c90a4be0c15ae30b95c9097b",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-03-03T19:08:52.523884645Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:03.472860777Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0dbb1cd66f708f54f7e6663eabf24095fcd53747bfb09912a118a77e737d9617 in / "
                },
                {
                    "created": "2021-02-24T20:20:03.645833664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-24T21:45:30.42825904Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:06:59.179962979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.8 DOWNLOAD_SHA256=b15da8fc4edcb91d554e1259e220ea0173ef639ceaa4b465e06feb7e125b84bf GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:08:50.600818657Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-03-03T19:08:50.948427344Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:08:51.581115926Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-03-03T19:08:51.895472502Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:08:52.2125627Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-03T19:08:52.523884645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33e8713114f88c8cb3f60c8a0a4aefe2500823b2fbbae05488b0185ba226caae",
                    "sha256:4144d5e86620f200c817ee757e7148b6325cc3cb116d8cf33addf40b43c884ce",
                    "sha256:ae95703b06e7f71dcdc82124093ff740d3fca2d0a985911960eac666eb208578"
                ]
            }
        },
        "2.0.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.9",
                    "DOWNLOAD_SHA256=1b8553ef64a1cf5e4f4cfbe098330ae612adccd3d37f35b2db6f6fab501b01d4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:e5235639f6bcc8af0e8e4a57375c214472ed3bbee4231964963354f1ebd55155",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "887e676988beabd90ea769421e74d271b4fba5ff8665478abba4c00facc27fd0",
            "container_config": {
                "Hostname": "887e676988be",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.9",
                    "DOWNLOAD_SHA256=1b8553ef64a1cf5e4f4cfbe098330ae612adccd3d37f35b2db6f6fab501b01d4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:e5235639f6bcc8af0e8e4a57375c214472ed3bbee4231964963354f1ebd55155",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-04-01T14:05:40.734625078Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-31T20:10:13.225846045Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f77db8e5b937d8ebb7e254eccd4d311798ea9f4dd5081ea2a7e2b1d3790300c2 in / "
                },
                {
                    "created": "2021-03-31T20:10:13.402995184Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:04:55.021087429Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:04:55.204647629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.9 DOWNLOAD_SHA256=1b8553ef64a1cf5e4f4cfbe098330ae612adccd3d37f35b2db6f6fab501b01d4 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:05:39.668922439Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         libressl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-04-01T14:05:39.878282626Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:05:40.182516298Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-04-01T14:05:40.357561309Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:05:40.549362006Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:05:40.734625078Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0b9881431d721cee6e2a7f3465c2769e71a182699a519387460bca497262e69",
                    "sha256:c0d01ce02f70599ba0fa3d21ff23275022269746ddef247a10830708a7f9dbb6",
                    "sha256:d8abbc4b8ced694a294faeef9498907f8e5812eaf2a398b4ee54ef0764f781fa"
                ]
            }
        },
        "2.0.9-openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.9",
                    "DOWNLOAD_SHA256=1b8553ef64a1cf5e4f4cfbe098330ae612adccd3d37f35b2db6f6fab501b01d4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:ca1cd3bde6ed0d8ef2f06ed0defc307ca81048b281f9cdb3a1d86cb0b95dfb15",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "c027ebecd13ffa7917d9080d28ce6d24fa6777190cce9fa678b647ae4966ac11",
            "container_config": {
                "Hostname": "c027ebecd13f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.9",
                    "DOWNLOAD_SHA256=1b8553ef64a1cf5e4f4cfbe098330ae612adccd3d37f35b2db6f6fab501b01d4",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=2.4.2",
                    "LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6",
                    "CJSON_VERSION=1.7.14",
                    "CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:ca1cd3bde6ed0d8ef2f06ed0defc307ca81048b281f9cdb3a1d86cb0b95dfb15",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2021-04-01T14:06:16.699401387Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-31T20:10:13.225846045Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f77db8e5b937d8ebb7e254eccd4d311798ea9f4dd5081ea2a7e2b1d3790300c2 in / "
                },
                {
                    "created": "2021-03-31T20:10:13.402995184Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:04:55.021087429Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:04:55.204647629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.9 DOWNLOAD_SHA256=1b8553ef64a1cf5e4f4cfbe098330ae612adccd3d37f35b2db6f6fab501b01d4 GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=2.4.2 LWS_SHA256=73012d7fcf428dedccc816e83a63a01462e27819d5537b8e0d0c7264bfacfad6 CJSON_VERSION=1.7.14 CJSON_SHA256=fb50a663eefdc76bafa80c82bc045af13b1363e8f45cec8b442007aef6a41343",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:06:15.623503638Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         gnupg         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://github.com/DaveGamble/cJSON/archive/v${CJSON_VERSION}.tar.gz -O /tmp/cjson.tar.gz &&     echo \"$CJSON_SHA256  /tmp/cjson.tar.gz\" | sha256sum -c - &&     mkdir -p /build/cjson &&     tar --strip=1 -xf /tmp/cjson.tar.gz -C /build/cjson &&     rm /tmp/cjson.tar.gz &&     cd /build/cjson &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DBUILD_SHARED_AND_STATIC_LIBS=OFF         -DBUILD_SHARED_LIBS=OFF         -DCJSON_BUILD_SHARED_LIBS=OFF         -DCJSON_OVERRIDE_BUILD_SHARED_LIBS=OFF         -DCMAKE_INSTALL_PREFIX=/usr &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib -L/build/cjson\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2021-04-01T14:06:15.82218328Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:06:16.102599459Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2021-04-01T14:06:16.305753904Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:06:16.485360323Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T14:06:16.699401387Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0b9881431d721cee6e2a7f3465c2769e71a182699a519387460bca497262e69",
                    "sha256:ad8ce774440c194cdeb660cb980aa20a39ec3cdcb1ce506d464698fef065eec6",
                    "sha256:aba00d59a42c1c75874cef2ddf4b026d2846be02df47d97cca61fbee778115db"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "5495cfa5c0f40ac53dc68355e46c97cd4cd2f7f5fd83176f425cacbdc57d568e",
            "container_config": {
                "Hostname": "5495cfa5c0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:797c2c00691ecde534849b07f318f5869a8faa53f7d9d31a437d847d8f020616",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:14.937761934Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.439623063Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         libressl-dev         linux-headers         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_TLS_PSK=no         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson         libressl &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:14.551820394Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.677758972Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:14.758037066Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.848204628Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:14.937761934Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:0b21ba0b17f57e573932fc2e787815e1de8bed320bfc27ff10586d8a205fb819",
                    "sha256:49a91b3f9b96ca34661b7ae31791a8c1dfc7fe3f61053bc34c5732f07103d59b"
                ]
            }
        },
        "openssl": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/usr/sbin/mosquitto",
                    "-c",
                    "/mosquitto/config/mosquitto.conf"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "container": "29abb45bce35e33df3c6343362a2063217abd4192ec9a53ffde5ab2125a8d3f8",
            "container_config": {
                "Hostname": "29abb45bce35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "1883/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VERSION=2.0.18",
                    "DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a",
                    "GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7",
                    "LWS_VERSION=4.2.1",
                    "LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]"
                ],
                "Image": "sha256:3014f544903c094aac44e671cf19f6b2d108b2aa43e47cb607dd480c32efc813",
                "Volumes": {
                    "/mosquitto/data": {},
                    "/mosquitto/log": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "description": "Eclipse Mosquitto MQTT Broker",
                    "maintainer": "Roger Light <roger@atchoo.org>"
                }
            },
            "created": "2024-03-16T07:52:50.951483058Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.195581841Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Roger Light <roger@atchoo.org> description=Eclipse Mosquitto MQTT Broker",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:51:47.274341023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VERSION=2.0.18 DOWNLOAD_SHA256=d665fe7d0032881b1371a47f34169ee4edab67903b2cd2b4c083822823f4448a GPG_KEYS=A0D6EEA1DCAE49A635A3B2F0779B22DFB3E717B7 LWS_VERSION=4.2.1 LWS_SHA256=842da21f73ccba2be59e680de10a8cce7928313048750eb6ad73b6fa50763c51",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.487022763Z",
                    "created_by": "/bin/sh -c set -x &&     apk --no-cache add --virtual build-deps         build-base         cmake         cjson-dev         gnupg         linux-headers         openssl-dev         util-linux-dev &&     wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz &&     echo \"$LWS_SHA256  /tmp/lws.tar.gz\" | sha256sum -c - &&     mkdir -p /build/lws &&     tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws &&     rm /tmp/lws.tar.gz &&     cd /build/lws &&     cmake .         -DCMAKE_BUILD_TYPE=MinSizeRel         -DCMAKE_INSTALL_PREFIX=/usr         -DDISABLE_WERROR=ON         -DLWS_IPV6=ON         -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON         -DLWS_WITHOUT_CLIENT=ON         -DLWS_WITHOUT_EXTENSIONS=ON         -DLWS_WITHOUT_TESTAPPS=ON         -DLWS_WITH_EXTERNAL_POLL=ON         -DLWS_WITH_HTTP2=OFF         -DLWS_WITH_SHARED=OFF         -DLWS_WITH_ZIP_FOPS=OFF         -DLWS_WITH_ZLIB=OFF &&     make -j \"$(nproc)\" &&     rm -rf /root/.cmake &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz -O /tmp/mosq.tar.gz &&     echo \"$DOWNLOAD_SHA256  /tmp/mosq.tar.gz\" | sha256sum -c - &&     wget https://mosquitto.org/files/source/mosquitto-${VERSION}.tar.gz.asc -O /tmp/mosq.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     found='';     for server in         hkps://keys.openpgp.org         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $GPG_KEYS from $server\";         gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit 1;     gpg --batch --verify /tmp/mosq.tar.gz.asc /tmp/mosq.tar.gz &&     gpgconf --kill all &&     rm -rf \"$GNUPGHOME\" /tmp/mosq.tar.gz.asc &&     mkdir -p /build/mosq &&     tar --strip=1 -xf /tmp/mosq.tar.gz -C /build/mosq &&     rm /tmp/mosq.tar.gz &&     make -C /build/mosq -j \"$(nproc)\"         CFLAGS=\"-Wall -O2 -I/build/lws/include -I/build\"         LDFLAGS=\"-L/build/lws/lib\"         WITH_ADNS=no         WITH_DOCS=no         WITH_SHARED_LIBRARIES=yes         WITH_SRV=no         WITH_STRIP=yes         WITH_WEBSOCKETS=yes         prefix=/usr         binary &&     addgroup -S -g 1883 mosquitto 2>/dev/null &&     adduser -S -u 1883 -D -H -h /var/empty -s /sbin/nologin -G mosquitto -g mosquitto mosquitto 2>/dev/null &&     mkdir -p /mosquitto/config /mosquitto/data /mosquitto/log &&     install -d /usr/sbin/ &&     install -s -m755 /build/mosq/client/mosquitto_pub /usr/bin/mosquitto_pub &&     install -s -m755 /build/mosq/client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 /build/mosq/client/mosquitto_sub /usr/bin/mosquitto_sub &&     install -s -m644 /build/mosq/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1 &&     install -s -m755 /build/mosq/src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 /build/mosq/apps/mosquitto_ctrl/mosquitto_ctrl /usr/bin/mosquitto_ctrl &&     install -s -m755 /build/mosq/apps/mosquitto_passwd/mosquitto_passwd /usr/bin/mosquitto_passwd &&     install -s -m755 /build/mosq/plugins/dynamic-security/mosquitto_dynamic_security.so /usr/lib/mosquitto_dynamic_security.so &&     install -m644 /build/mosq/mosquitto.conf /mosquitto/config/mosquitto.conf &&     install -Dm644 /build/lws/LICENSE /usr/share/licenses/libwebsockets/LICENSE &&     install -Dm644 /build/mosq/epl-v20 /usr/share/licenses/mosquitto/epl-v20 &&     install -Dm644 /build/mosq/edl-v10 /usr/share/licenses/mosquitto/edl-v10 &&     chown -R mosquitto:mosquitto /mosquitto &&     apk --no-cache add         ca-certificates         cjson &&     apk del build-deps &&     rm -rf /build"
                },
                {
                    "created": "2024-03-16T07:52:50.589353987Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/mosquitto/data /mosquitto/log]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.707388345Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:f828fb0704e6f46a450b717895e8dada966524fb8a3bd947f3ac0bd7ae28f571 in / "
                },
                {
                    "created": "2024-03-16T07:52:50.784593416Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 1883",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.869222248Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T07:52:50.951483058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/usr/sbin/mosquitto\" \"-c\" \"/mosquitto/config/mosquitto.conf\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:48f608d0f52cf90767970676ac0501b53a245ef70df1e4cfcea65b0ca5e0d07d",
                    "sha256:a41031e59e92c976c0a1161c6cc077a34f64f04860772b05734ef74c6feabdb6"
                ]
            }
        }
    }
}