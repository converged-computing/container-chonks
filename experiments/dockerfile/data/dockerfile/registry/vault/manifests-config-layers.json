{
    "manifests": {
        "0.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:2b8fcff0340e927bf621a518fa268093365c3e7e0f7c2f3c9895c75f1c3bc233",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:c2c63a3e0cc5f9d5e162ab55ce8938d639fd8bd62dac6769def1df7f70b8f275",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:590b5d3093f4b3b7400e817e06c495c445f2bdc5acdab3a2bcbff4bfcc5554ca",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:d59bde4ef4e2049f1a99dff2496d32f61b857d0e7e6ed45174650fd0b6a00ab7",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.10.0-beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:fa85c5a654ced54c427be37565b919037aaa1fecbf482a468e048a73cfbac035",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:e15f368962093e16e0f7d5e6ef15487b9b6c34d989825f2ba18299fc1ceb935a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:76d0940981b5a547dfab5bac0f4aa231cf462141176d9498dcb927340e78cfc8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:3ac81ebc69c351468acbc4b2e22ecfe5a1bb937d585d152ff40e1a95f0464484",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.10.0-rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:dbf75823185a38a6513b8e05e318771bf7d302f6419d8c01bec073e1860f6039",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:6efdeb392d1f758ebe801c0c161b55bdc31b9a738fec57f42e414bab8b097fef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:6ddb1d62c7faa14f1bf197c4ac81cda9481a6bd0d415379507a0e06eca8e6c8b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                }
            ]
        },
        "0.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:ba77730553ab0754305430a4f8f2d4ebbac5d0324577148160667c1bd54c76c2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:2d94a025d4e6eeab42f37680a86e2c6b706ca35ddbc772dab493530dfb7739b3",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:21e97023231e2c7d72ca82385e4ad24e1f3587bb1272de34c651a61bfdc62459",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:90f3cd472451973b37687d3cc120c47bfab5ffb2b599f20201c7e49d2fdf5624",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:61f267f6dad8f94adb9a26605064b747673a4d3a72e8019641ac22d6683f8eaa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:ff46d9c57f4b5ca73678864b9220b5b81467cdcfeb0d0438fff414b00fe9a2cc",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:629d299f42f4528cd66ae0e4336d82c480615d07db5f5fb6336ec187e80f705f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:ce0ebdfcad6b530610f47135c6729c6fdc6919457704e28cc1605bcf8fac1b0c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.10.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:eac70b28f9218180a9b6627035d452e4042c8acc85be4eb4846c5a665dce5495",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:8b43e7cb7d76fb27a3f6761b61d7fa7ac36e255d37e7e7c1c96eac20f41dbd63",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:c5a65273f538f4e52bccbeb5e76e9f80df6dbc756bd5486047776afc038743b4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:7d209f419f299ee0dd059c08d20e9ef8d43e40ffa409c47e96be2ec9f08e0e9c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.10.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:2758bd46e3d083846b6000420e741aebd2a43ac62ad6c51e4ffbbd1cda032c9d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:4f5a210ad1ef1af2a659c222a23e1fa9cd50fb7abcc1022463a08ab020b78c75",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:f1767df87380971bbdf127307601e5770e159f6de6990a8b4948d984c69bad63",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:92b7bc89d6f9864cf04ba612ab855448fc465a8a0664f45a9076262b5ce23df1",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:b5234c04f30bbbee32b68b0d95a0d1bb60969850b1d7fd4a9bdca77aeaea728a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:829d38dca5d3a510255f9456d2e4f964f702916a6ec03991986bf84fac95ff17",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:91b44161f868c246e986c5b81204f5eb2c8de6901b1cca320ea460e5a109d706",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:5a7631783ff90bd280ca1c9617abdd7c2a5205e5751aa721ce91874beac6e000",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.0-beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:bafc8269ec02b6e3f894c2658436de9a22cd8a6053a5adecc2fe6e89a3d235cc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:7c4ec67fead5972bcec79eef6dfd9f2f08edbc0df455441831f9ce409426657b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:c65457306fabe95b01332048d78f9e2713545707b00dca2729f11e4a18620a62",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:7f2608518d58c4053ddf9a67f5a583bf7623736252b03de79ecf662ee5052bfe",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:a61268fce2f08363e52b58eab56e3e8902cefd296b60e4162c078ed84d7cbbc6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:e04d13e1eba04fc363c079a49abd41e15e179b8c76f0b3e98d441f3fc69e0702",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:c63ba33c6d396b934b560011084ac32fb09bfec1b04e0fadf4d78f2722919d1c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:ac34e0b2421b47e6e5ac1f464fa437ba1ce51711aaba27fc3497be7cbe2239ba",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:ed4201818d5e678792a2488244f4d09813e72fb9e17994d82f0e54ce4fc4a601",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:0e3f712701449723387f406c63f24170c0d9918e255a6ae95a389c949af99ebe",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:6f1842a611ca6c95451f9b51097e7afd3b173bfc436ffa166b00e2b03ec55eda",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:dec88d33f1342762b81a447f3763bf79f6041c2d603f3bb3f08a148a3333cdba",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:de92ad538a5636e6c3a26f174235f6641d89e6f6fce5f43ff463e7a5021788e3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:dec50883918c102a934db8ef68d1290045b76a68c683a39476434f189aeaf85b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:fba62ffeaac6d17d3809c8a2ad4f06972a6c1115f75031f72d1191e6c4459e79",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:2ed6cfdf6b7eb40d8d1705310c249ab3c6c531bde12d4ee53036748378017ba9",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:863fa07f035d04dbfbc924482bd54135219e0ed1862bfa77128cff1418fead5c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:d301b8315fb1b87d7a0cb22c8d03bad086f32fe63b69b7c71c8708603deffefe",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:6ae3e143c83e2992d8110f04b14ff430bbc30738be67110daa70347b6e18b3ba",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:60f7c7db45aeb85261d92db591ad617b7bff95cadbc0e2c41cf8c595cc9851f9",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:55b098a828787a87fcdecf833116680259633bc80e316e269710667cdfc87686",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:98f48cc624eb6b274a8b48ce16adaefc8c8e850c04ff821a39fe1d702745e865",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:f5924f28ebf75824622d3906adac1a1ed3861e4ec94b088a77f082da13f095a3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:4824bbf6a2933b2df7e47fe3f3e8a0235cb17005cf1e5b29bf13d279f2ef8818",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.11.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:b44354314deb0f78927a9fad010c9e0be189de8845cc33fb8c11044c16ac81aa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:def900455294f991d73c7f9fa539ad327288ecb39eb5decf9c99e7ad305428e2",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:1a79f38295d2c653df70109ddb0b6275b4cbcee51832fd1cff2fd2c5b228286c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:26a0019c073466f0f4491f405caa6b195d3582cfba11385e1c43cb336c88db6e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6243,
                "digest": "sha256:59bf6d4a6a62562bc659a057a2587ac1940218080a2fbce94ad952fa1f63e990"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2313384,
                    "digest": "sha256:7095154754192bfc2306f3b2b841ef82771b7ad39526537234adb1e74ae81a93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1268,
                    "digest": "sha256:892c730be4b8d1b0280bd4bd74b00d861b18159a3316f678f4e6e77fdffff961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 14676444,
                    "digest": "sha256:bef5d465a63bb2af48e35c06f7fc1e3aa8b8a105f5e29ce96825fde1c25ceefb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:44ea3a699db2f82ee4ad753d256242f2e33a8968c72340318a25bcb2d7e2f1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1753,
                    "digest": "sha256:d3bb69a55b7a725aac8a36ca854367b72478a1ca21c8279d670cdcf8e557731e"
                }
            ]
        },
        "0.6.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5919,
                "digest": "sha256:d477483d5ce57ac76b65326d54b6033d35b3150bb6addd7292ba0274b61b30e1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2313090,
                    "digest": "sha256:b7f33cc0b48ea4fb2f0745def58c25483a5f6b7aed5b41ce8f1cb6e17f5723cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11946701,
                    "digest": "sha256:b5786273e234579ec4e216225dce095f813a286d766f828e1263341a4ffa72e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:6dd88ede018971d21a9f44e676be85e834371f39280769f32af3a1118ee394d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1329,
                    "digest": "sha256:cda17f6b9c6671d119af1d6ecb11144af966ae58db73c990921b3406e294bae3"
                }
            ]
        },
        "0.6.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5920,
                "digest": "sha256:af5c5bb43b01b1d0d29475cd5cc3b501fcb4d50bb958f59a43af0c2e96fec079"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2313090,
                    "digest": "sha256:b7f33cc0b48ea4fb2f0745def58c25483a5f6b7aed5b41ce8f1cb6e17f5723cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12312489,
                    "digest": "sha256:cdef59e573d4e7afb7d30409cce48b5f964add5a3e795c935a683455838b78f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:ccd8f06cb57550a4ead17a372297d780bcf913332df9b991a9b6d91afabbee23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1196,
                    "digest": "sha256:40ca8646536431db01333aa7bb3b0f0a3045fb4227ca19d0a4761b7cf895c9fb"
                }
            ]
        },
        "0.6.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6150,
                "digest": "sha256:1991245c6f1f47b453b91bed0186a7be1b5c177a297a3dc59f68f56c6c5f769e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2313384,
                    "digest": "sha256:7095154754192bfc2306f3b2b841ef82771b7ad39526537234adb1e74ae81a93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12671242,
                    "digest": "sha256:378a5c99c796a15055e2f86f4330aed804a4f3ae8fa0b0b3319899838e064711"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149,
                    "digest": "sha256:977f8a5cd2df13d2260b724e934413598edcc76cf3f06c67a3aedb4043296786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 952,
                    "digest": "sha256:bc581e612ae27f63091303224b92ac87bf30005ae73c9908ba505b2376ed91db"
                }
            ]
        },
        "0.6.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6242,
                "digest": "sha256:a981722443a34927719ecf3da440bbd8b6fae457c999a9d90017c4e74bd567c6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2313384,
                    "digest": "sha256:7095154754192bfc2306f3b2b841ef82771b7ad39526537234adb1e74ae81a93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1268,
                    "digest": "sha256:89a88fd765aa3d8fb95358ffb9bb36f9014f30cc9bc3ef8684577e890cefb2ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 13663906,
                    "digest": "sha256:1cd014cb7b555e5ed4814127d84d7054cbc7d3d0f0c3e72b2e2d68a8cb2ab7c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1ffc3e0f5c250c3c8bf39b308525870ff8db6419487af6761b1f392f84808090"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1714,
                    "digest": "sha256:f176e4f2f7ed7e421021541f7d3619482d5df7b4ac422d957b1760631ecb1dfa"
                }
            ]
        },
        "0.6.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:8c559892287428a812ead86b7397bb8ba2c07c3c56dd24cd72b832dca3c77faa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.6.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:b3c7db96efe78d1ce5bd88e921c885b7d23a9859487d4376d46e2d07864aeddc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.7.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:35df055d37e3995b2e415faaeba8bec2092fe41a0d89a9480aa53643d4711365",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.7.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:bbaa0be20ffd966788c4251d28e96328c83913e4cdbfb4f9d6e994820763eb5d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.7.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:4e5eb6c4b8aa24824c0e3c98927211bba183def55ffa165dda1656215b18fd8a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.8.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:2231188dc56685b961f228ca4b64669016d207f2ca2058978b074c971816e328",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.8.0-beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6402,
                "digest": "sha256:04f531f77e6aa0df22831d44f6afc67f8271d26f3721f3689b8d97f702b48ec2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1990402,
                    "digest": "sha256:88286f41530e93dffd4b964e1db22ce4939fffa4a4c665dab8591fbab03d4926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1253,
                    "digest": "sha256:b17c0900628426554e62f38a9fb4ad16bc6f8b307f7074fdd8cccbf9ca880dff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16382571,
                    "digest": "sha256:c2c7961bb80045331d46d17564ac8f74ea596d5a42d81150e4f44080a34f6ed0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:1d0ec76047cb544dfb2d3a0c6e5961983244b6ca6fd264f64202ffb801536953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1762,
                    "digest": "sha256:d7f4f5f76d41c83f2822b2f8be0137edb740ba06bdc0be2327b82003f0caec89"
                }
            ]
        },
        "0.8.0-rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6394,
                "digest": "sha256:3c71c77ecec2ea496f41e461dccbdc591dbe53488191b9fc69a847564d5bbe58"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1990402,
                    "digest": "sha256:88286f41530e93dffd4b964e1db22ce4939fffa4a4c665dab8591fbab03d4926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1251,
                    "digest": "sha256:17874f89da02d0264e9ae4a26fabd22c5a95d988facb57495c7d098945969f5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16541723,
                    "digest": "sha256:c480a7ca73a028ffbac6d9571ea82a1f07bc618e5b56ef08c2324f3391a75c9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a647ce56e91c7c6654b0aa77a54b8b5566c317e86fa01b76baa1a1a49c7174c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1761,
                    "digest": "sha256:1e9d0f5186c265299e5d23fe077e3b219b62eb0b54bd51ee9ac2d7cd2c134504"
                }
            ]
        },
        "0.8.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:09c131ce5335d0ec89ab7729cb60bcd285df73bd104cf30e07e16449854db602",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.8.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:f03030ec5ede5f176b5af31e70e1801ebc9cd0c0cb9735157f4671314153565c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.8.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:085f94cf6336e7980a800ba68c05f11a7a3a18ed1e7c5f9bd9c9224393515c40",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:4c3712e3ab4f66333250ad9997cfa2527bf3ea79316f8619e670cb411ddba547",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:766d75fb78db320d6f5249cf0a19404d182e513a0072d1a8b502991db0f2adf0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:8376914ed79a32cb248ca83f82540548f029a57ae0ba77b2fa5178651ccd918a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:27a564c725f4f6fa72a618add6b0c3294431ed6b5e912ee042822b35b91064c3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:6a713d59bd8b5af3fa20eab0855277927dc0eca88d6e67191c6ea2b8dfd626b4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:57719c55a71dca8940835de13e067c95147b1c656db5f34014cacb75bd516965",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:35d6cd28ab0b0ab6edca53729c923cb7b3f2c960294813872e77c216eeeeb6ea",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:90d2358d4747185bf0d3e067e74fba4209a945c8c3e246e75e2bed98b6780cec",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:d3e7f8d5b6518db47c9db88cf093038c5a9a6fa09f08bb39b9e2bf1c7d1dd28f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:5e263478f8da33936c591332820d910efb73034092d385975f801cdbfb46e0e6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:5ea9073aeca7b117510e7e4786fe5b397b1c7a608abc49073c3db41117653886",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "0.9.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:9ee0518036323fad67911d31ef123748ee8c0ba43ed0daa1f4c4bcf2c7f3de6e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:8845c0c6de99a7ad89a50d7d139a90342b54c4332169a918542759862472098c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:81e1abc82766ee6748a3bca1db7376bd9e16116f3c9e72b2774cad83d6ab5555",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:4383a987a4a47c366756a5a4689a4217f24a74f11908e5a4865589a243012792",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.0.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:837e9d006a6902cdaad385be4d9f8501856eca49da7c646dd5569646fe2e0891",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:3e08e8108ee122751e3e31d47dd2fbdfe8fac710f4659efb755dc36b2e1e6409",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:a7dd41c721eff5dc738654617f46eb10ca408ac5369c3edd20adf932ea5e03d4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:0e54071be1f88e9fb4947195fa602860bc23f5eeb9be5e35305e75bb61607f63",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.0.0-beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:1879dd8190c3d17d43ca08bbd81b2b097c2342bc570f4f1faf17f74327e69cf8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:1931eca468c66e8069c18de941e8071b500b50b56d96be7133ffb52c317bb352",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:598edca8137599272fcbc586c78f3557f766f7709b2720b0c5b7a4a38967d997",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:32b52ae93c73240f741f9a68801001f70cb5ace85aa7cc70d54f827d6e49904e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.0.0-beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:ab6878a2bb5938f92e8598232b8c920af954c8be991db45ebd898603c014ac07",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:db90d7fc029f42f830e97c6303599a35b3612e5cee03a2368a0f5380ccc4577e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:56ac44f1920278ef519cc25d67c179d5628e8ccb74266cf00273388533f151fa",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:fe66580027d02bcba42588da66bbca129586ab7b4257b181b20b2f41018d358d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.0.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:a80e01caaa439c25d7e0b04fca6d5ec1cc8b93ed8217fc6084a5489f3efcb118",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:d6561087ebee772942534d69e533b2d3d0a8b210c7073f53a5638ebda837fd1e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:147598ed1f6176393504a95a3d3908de3e71636d2590245c0a6bee8cc6e6dc0b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:b81c62576af9ff7859ea23505ce7a3f1d70b130fdb79cb3dc51e2b48cc40b73e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.0.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:3bd65c9feef94f207fcdfd37c91b9252984e40f38591249f3df71fdc982984d6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:044656bfb7966b8f0817c56148c3bedc3f3e25d95e5519caa4977a950d7ed03a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:5cc50852ec46db8f555388a6510b18027e77122a4560f2df67a3d4e2968bd035",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1570,
                    "digest": "sha256:281182a16a4eb1954b028edce875e029af10761cd17df0a42c2b352884fb0990",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.0.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:88c944609af7a85c8c2a822a5fc50702570d126f9883c0831f5122849f5cebf4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:fbad6b2f5356b70a815883e34278dd5b8e7e6513d8d98b6fa8b3c38c2d0558e5",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:4969a46c6cfb6e4b8ebb870e82ea3c8035aa8a1a659181a7a391d953c72033ee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:8be14aa466795c70916d0fa0eddcd67dbe6b85dccb05490def8a677741559de1",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:087819d0a9ef43fb312581b1fc2e115babfa2272a18cc7d309c13151b6c658dd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:5a5843d228dbf59ec3ad53813b855b99afacb23d48db9307ffb4aafefde106f8",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:b018fe841c8ef97cf7ff054672974e14dd9a01502531bf29bcf48992ddb04ef2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:02f87bbd94b1b1b0c08f9a92b9e0001f0c17fbeba8ad0bfa3ff31636b0bc50f8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.1.0-beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:3fa7634d9adec5606ca6594375354e1d394d894262ad5b4378c65d9e2c0eba5b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:7f7e9debb230806c54831f70694b6fa4ddc9d79fa2bd1e5429ce821ed1cff79d",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:a539765b5a6bdc4adcc5df3d49f7565ce46f5a4a36d0eafbe6505572ffe10c9f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:7581845226fdd83e011f2eafdd05834b5ff5f04864c089f68272785fe7019b39",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.1.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:8208737ccbf2cdbda59a32a6bc4f542ce9c3c493f56b45a6dcbb4492b1991d1f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:4bfd61803ec76fec2218dea2da3a6ed5715aaf59df123360628f66d2d7eecadc",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:e672d0dd716120e7fa32afe01315f50428917838f2e81999c72407273f737888",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1363,
                    "digest": "sha256:b1e17c71c8295013ebc60f26366d1181ef0b3a99770ebe063c6b9a5affc88025",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.1.2": {
            "manifests": [
                {
                    "digest": "sha256:f1072e625af59b4382d112d05c7627f6b9b51a8eedd746621e77a4f867a627b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9058512944f37029cdea4a92d9ca930e08f65f32ebdbc5003603df0487d1b92a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:03aa761242408606073a0095a2e52fa84496769e00fc29bdab47bc3743c3e736",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5e683e10a208948bc3cc02a04c1f00552f84eaa9d3c7736a6bab9f21eb15c1fc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.1.3": {
            "manifests": [
                {
                    "digest": "sha256:da2b6492ab103a47b351a0fe4c7e233d2da1fdf444a331ac58e174ed51b8d32b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9f3a2da37bae7da7aa3eab8d1e11c2fd9b940786357fedd380147bd28652ccf1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:64ce83d0c0e4a8dd18b852babde3c484f42d35d7458a14a74dd66c2421cbf179",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b97e5ccc984990e89d6274518ca0c4da285cc233bb9578885c5d020be3be35a6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.1.5": {
            "manifests": [
                {
                    "digest": "sha256:febe68ec5ef6a746bfaa096446769ce6511399a5fb1bbb065026fc0988cf91d6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c18694426f9a974929bde4f756a2d31e21410609c8b8a193347f0f163196caaa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:71333ae2af1d6831eb27fe426b8bd95a17b777c5dcf3a6fc24fcbbd7e0368a46",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7dde59cc8333920c51cece527037f68ce27ddafdb329252109699a2eae71d5f1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.0": {
            "manifests": [
                {
                    "digest": "sha256:3bb67d3fff584733849ebc9321370f836ac972e22740511f96ce00ffdc3479b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:fa8d1e5b6c9384234be16bad4a2920ac61a9026f8122aaecfd249c355e903116",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7b9447db071cf3f6e131521ff43f55b8fa3e531bd40e8e3c783e04a9ca55dfab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:df5b619c28f9fe0f6a60e73d0a4516585ce067caf23ab26202be268a45a2ac61",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:09a6d4438f1f78adf2a94a47859f50dfec959fe7b76c2f096893ac6e9ead07b9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:75fe7a6452c0fdab2a3c8aafa6dd093b42b6699354eb31c21559524ba29e865d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:81001a6e089071a8cf0c96596eb710eb3206c3d7e9eb4af591579f6605722083",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f1f6da73b16524868eb3498b69f5d5343e41fb46ea02b53bd97980656aacefe9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.1": {
            "manifests": [
                {
                    "digest": "sha256:ee71a97a3ce6fa28d8c139307011bd31f43fb142a53d0f917ceda80a05264fcc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:09772f3de475cd27896ff7e91acc55fb640d12d7371ce223c12a3305fbf88d88",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:25bca854d3cfe04cf599b098cf5441371ec85493dfbed9d8cdb928b6ba3e96ab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:55f48f3af9e6b3945a6cb26a170481b63d345da95eec634d159e5867c401886b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.10": {
            "manifests": [
                {
                    "digest": "sha256:9fb60c017105167fff213fb5613b37e25d1570263d2aad100d5d0771915d6c4b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a86b1c207f43e5c9f1e2967bf69a73f26be9f857e8f682dfb28c1a5893fee741",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6de262b9f7145d647d5c734567f90a9840510c13490e314d6df44368d4cacc8e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1a28c8bf8cf4b0dd75415491e56b29fdc23630db42af13cb524fb3f0b7b32409",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.11": {
            "manifests": [
                {
                    "digest": "sha256:75d3f21a85bf56090b6618f69b5f5f26e28ba53a4143600304d7a45d801505db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:906dcbae9aaba8ccf17dc95d9f677ed4c5f24067c41301065fb1b8d1a6bb4e66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:640bab2894464de6520fc3fd7eff6b27a0afa35aa64ffaa31454d3d525312667",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5e4beab006468875f48feed52015fd23cd6fb5b6861a478ef8f5223177210af3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.2": {
            "manifests": [
                {
                    "digest": "sha256:388839be1ce1f3ab664b7b17f5a50c88729d0da2d06bb568f0b216078ae214af",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f938af61373f27bab0e764921fbe65ff7aa9546affc19b097b0e73affedbcf1e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d786f95a70d2a3dc02a0d5412c31a2623157204bcfb9d4a54f28f5fe7e65ae43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e24d7cab95feba6097f0ff8fd33a1c8ba60d0ba47a28bd7d81ecde051bef25ac",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.3": {
            "manifests": [
                {
                    "digest": "sha256:74a6f9588b4d1c548ea4bd8731fdd04d0356f3d607f2e1bc9408f6c75e78d85c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:23df24b80f21870426116792777f0788cf09434a6cfee84910b6987221309a7e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2cdd50e3c6ffcf6cb93e618446933c2516939c347d0692e79ea3a35d33dd5b46",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:bc510f5ecc6bf31d243e391ca2c6b44a42bc0ee516069dab87cbba5f8571f86f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.4": {
            "manifests": [
                {
                    "digest": "sha256:8151c48c182a8da1f27c419fe637ac2e037414a2ccbe8f78bfccb90991ddc681",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:db48bd5edcfa2bab1ed5d462997c14207b6023ea52411cb54176233e49a87b21",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1439bb2335a5a20741b863b07411d732ef7ef31a15ad8dcc1c156555f0785cc7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2bccee85e590f72bf6f2e1927fc1dbeab86dd74fc54d9c7ff27ada913e087839",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.5": {
            "manifests": [
                {
                    "digest": "sha256:248e4c3289f8a283ba667946ff4fcc4136fccefc69795e0dd93551db4fd2c80f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:88e1b9b4251c4c1ec6263acebca9eb6ca19c06fb8389906bc7333e8b22de973e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f15c75f5ed2dc41cfaca5a39ff6940b81fa487ea0c006e44a7f7f1262f9cbd2c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e8852c2e06945042c9b6c36c907e5eb9f86823fc4283cbf38ba00cb42ca10089",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.6": {
            "manifests": [
                {
                    "digest": "sha256:8d9de4db20deb53e4a603e6eb624c64eeba5fd847b180212e87739f2df4674ad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:66276b6b00a13a10e69141715bc66327313c4ae099a93884f3e7962de40cbc03",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:85857d6cfde0c35cc11e59ea720122b38a31dc64258b999210421c62b59bce7c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b35675ff90c9b1f4a4b23d5a523c06d7087f02cbf563f2b378a62dc71e3272a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.7": {
            "manifests": [
                {
                    "digest": "sha256:348daaf719ea6c5db8671161c0c845aa694913191b1948c453f10382207c69ae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:bbda7aad0d85f59bac9c1efd3efbc262c596c5540d49e4ecafacd5aa57072e43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e5330029099ee9ec9f9c2108ff957be99e8525e657f189f6ac0942735dc6f053",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6fb32f7ac5658bb60ee3fbeac069a9fa4839f359a904b488aaf0d63d371a6ce6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.8": {
            "manifests": [
                {
                    "digest": "sha256:f88502a5c9ea3d261430c0c9226c5d357794fea2734032705f37e2a5d8fc496d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5a736fcb3671c887830954d55c80d37501b2d108a3970e3ce29aab3b05925d7b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2fd4684d20b207a8b5a3dabe18a172f30d7a620393d8f335104f7c5d6ba96e97",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c9db525960c29df802f4130976700f610dfbe461a6ab597018ffba9ffdd1be52",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10.9": {
            "manifests": [
                {
                    "digest": "sha256:06c3973788c15f079851221db7608cf2ce92b26a75db4af832383d7f7b273c29",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7dc0b38c3dc8cb6e81de326b069249b20f5f549f0309779a1a4f0ccf67a96783",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8871cd3c4344210a635c5eabc25a4f1ff0c242b761fcdcf0f651660906bd87b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f1b9b87f675da69f14f1b9cd70e37b371d5b94b31072f1c1063b46ab553349db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.0": {
            "manifests": [
                {
                    "digest": "sha256:3a02bc2790896cc2cc71a378921e352d632e85224264ef65702c658bafe68acb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:47efed330dcd56afe239a99633a80a7032ca90963e50c85c76a2bb6b00a15578",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6c6d9547729261a3fc0dfd2e0706345d076b00db788851f3b7f200ba18bc56f4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4c806a4d4ec9f4768d915f62492145f6f74a995f4095aaf3312efb230c037f69",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:4b62d1ac27c763ac76194dd35fa0d450983ed13cff0118aedc2df43ecbed4477",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c39b30b5f8ef30d29cb5a738918d1a8d851d9f08260a7b5bb24d1648e4fdbbfb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:665b944f64d01dfe0a987000c8eb4eb13ae890be045cd7a308f5614e93b5e99f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:73c8a91e2308632a317437844ca772006eac169998a0baf73ae80dfce95619f2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.1": {
            "manifests": [
                {
                    "digest": "sha256:3431c4abf0626b6dcdc5e089b50f45f42b02e70c0e8e052dbfa7b286112b783c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:98c9126b162b9e1b4a76d528d5e23e8008d4efd24471b2a24e19f3235303c489",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:23e64f3c8dcbac95cb2f712863d210c13989f17ada80d9695061a13485154f70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8938d395ad12f3ffcfb9ea20c5464080a4e37117bbf2a392dfbed80d71a1962c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10": {
            "manifests": [
                {
                    "digest": "sha256:f59b37b2390b17938d228b8b8d6350e9e9fe163fd2853c6865c52dcbaf090c0c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:504605d80b5e069efb61b2103c0ae85c576d0bee63cc58442e87ca9f4b4cd64a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9ac91de368bb8c0827c0f705d50c2798c25456ff1bd09bb349deaec18603de1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:bba8ca22d67ba769816c6ca03bcfc11570c5b53596f7f1c78c4af34825152a9a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11": {
            "manifests": [
                {
                    "digest": "sha256:0d559c3ae909bced736ad79283326ad35c40e95757ffc61d27f19e604b5a3397",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:201114bde0b07eb61117b65f844e663194e049885873ecdfae416aedc648d3a8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6196305b71d1f624311a6662dfe04cced18c22fa0efa5cbcd8066f17b59cfc76",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:37e550351eac37a407577f63bafa5003340ebec52cf874ae1f5b0671b169c221",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.2": {
            "manifests": [
                {
                    "digest": "sha256:7a238778738551ab26e07ef2c4ac9d9d9e8d393ec9e766301c9b3bb0fa5f2b55",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9ce1ce2a1aba504a1a02cd1f917a1d97411882dddcfd340a1385e94192dbd220",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:80151a9dbdd243c62774b8a1113224c6f519194e6d4571634718d111de4ce50e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:556137692bc84155dc5886a12ae852d4ce1d5bb058e207d43a07f5ce716f0808",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.3": {
            "manifests": [
                {
                    "digest": "sha256:e0c328735ebffece80997b81e68c55352b3ae5dbd792b01808a5b11dada01a73",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f30429e9665d0b870af7613514b22d09eb8e3312c3a769b994c02e0f5ba71470",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:210bf8100df78f23888b29a066eb635268503206bc571d3b947aeeed51bf5a95",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1b34b6fda393d8a334c4eedc0b175131fc942884cdcca602dd43aaf5837fb797",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.4": {
            "manifests": [
                {
                    "digest": "sha256:0b125263d78dcc543f6708edda719a4d0514bec591efc2c15fcdb1b08664c9f3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:60f852efc40379f033b927ecd291263f6a49c9383586291b3966c35e8c1c680f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9503d4a622fc683cd4f330a4f56e7aa42ee350f052a12dc7c43088ef07c80d8d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ce2c6944818e349a0124d99eb193005f4164dcbff53419f08afbb5d5fca8176f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.5": {
            "manifests": [
                {
                    "digest": "sha256:c3528293f638f42310efed4d989a7c329f24787419c79a8a9a0bab2139c3dcae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:34329eaf1cb2e47adbc29757bd390f37d48efddadf7aaacc99b39deba04f03d6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:06b3ea104fdae032bcd9597a1ddd640e6b8519ab6413400b20b2b278b7c0afd5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:026bb4b69c2385acce3228b5625c61c83241be02f77e9be2aa506a991e16d301",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.6": {
            "manifests": [
                {
                    "digest": "sha256:05a16e59199ee06e0ac4672effe0ad6387478ef719762b20d43fa3cbf6360114",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5a10f6c7f4273a8e8ecdbafb4fb56d4048d9ac97750ed7d8c2bfdefb1fa1b7ef",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b579698623dda4952309a33d4e15a630cb1faa60b889b727943d0265f689ee48",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a7e411d5da9d0a44054fea218d5b13e95435eea85f8290d2dd47a85b88a69081",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.7": {
            "manifests": [
                {
                    "digest": "sha256:3a8c08b80dd33f06e39a1ca6053d596b973b9bdb0783a2ee53618b3055d6a94d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9a3b0f1e33cbae19128ab9361d5e9c21c3e735296f351d5338a9d88a3419d07f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2f30512a958296b617d73efd1dfec0e7287c0478ab7882d486b9ee7d38376d13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5631136b4260a5d30940d18b21f8af3f72e2773b6fcef0a65ad87bf8754be313",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.8": {
            "manifests": [
                {
                    "digest": "sha256:98efc61800e497aa77b6e370980b0caecbb27b9ec77b52656b150fabfd704a0a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a71db87ac37c333bc7597fdccfe9ce02eda1a933599c5b322fdb424a93bf950d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:07a10c335927ffce68debcdaf0fe6469358d667b031827d0104c1486f8ea2c78",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6d1f8666bc04ad3011179308bf0abe931530b4bc5773699c52e3c3ffd2771837",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.9": {
            "manifests": [
                {
                    "digest": "sha256:c3a3d85d33636472c10ed0b6b647b1cf4b6c8d2a6559720c16a8e7f98cc65316",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ab7e54ab7c165334579f5ce4005fb6c3ba5988eba9453b004c8efbfb4648243a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:43c41d54013b01d52c84da66df2ee3c47f9ee36f82a922151f8e4c569c3ebdb0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a0f1d754404a44b0d427845beb87a8d9a186f0233abde96c221feae6921102c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.0": {
            "manifests": [
                {
                    "digest": "sha256:d9fdd0e93cdd325b144aed2c68d53999875c907c5a37b2d1a9456c8a45886158",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:390ea9c76edd57c4e028e5ba3d9cd113b03008c807cdb08042fc5301674b57aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:06ecbafa161e2845dc9dc4b5c3338fbb3d4851cc68ff6019f4ac177a175aa531",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f70184753a4438dbb46faa250bf1f0ae345cabe770b244b0e41318f555fd9e62",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:8ede97214dd0059c4984bc70b9c4ed9d682886ebc13dca6b73221dd3c61e0030",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:42b48a2336c67e124bd8a9c0ce75615ab5654be8d1d6165580b4320d92898203",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7ae3fc3ca4957999cf89361e3af8dcd3bb7dafd4be06298393569afa0b9578e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5c878cd09e5b9383190a16b7fdbb565dc97b4907a3152a9359d7f98ccc401ade",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.1": {
            "manifests": [
                {
                    "digest": "sha256:3d755c241fe485806ce593a3d356ef34f9035378d5e48b1aed271f416c98c6f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8990c559f0f45254ff56b13f8d64b0efb9978c4b177c259344dc6d88b53bed3d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b31a883b1426bdde31621469744a4f6e2e6ea307c4bf315ce62592ec4000356a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a08ca258057fa435c4dbabd37731d2b05134e6f7499c62c96abb4ec1c47c8d4f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.2": {
            "manifests": [
                {
                    "digest": "sha256:d07c440e2c72619029303b934ba944cbc93d240db1ae0541435fffc040d7a0d2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:207fc0ee6952deb21f19c1aff2f5a5d92e8fd9ba83f8d0785a815bf6f0991abc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:14525dc124826eb71d7ea389cf4a8718d8d7c8bf0625984ac02177a6ddaa7390",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c80b86214fce87748627593f4617cc8a53072d31d78e3b1a950664346ce0f6a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.3": {
            "manifests": [
                {
                    "digest": "sha256:948f477f6b527845ccfe037df99aaf4f2c7188044aa161009fadc5caadb938c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1e94f96b0f75676aefb39c2007c9186d58ed6a8dcc9bca58853adc2d110d09ec",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:792fe16e9303fd48382de3c0b537c317140f1fe652c7c4f5072dbbd9d8c2ce5a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e455ff516a8e67750f6f43c52118b8fbc7370c4e2c4485943ac28d7a1af1cd2c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.4": {
            "manifests": [
                {
                    "digest": "sha256:50a73a14cba68bae71ad567c1e8a4ac6022ebda29b6e524e602d02822b5c6a8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9623d63ee1ddf8d4801a0c12bfec03565688251d70d8644898ab62a3338872e3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ba66459f401b1630a299dbf76c797ac09dc2264041291f29cb29d22c5f9b7bf8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9e382d2e94f0aa52618e297e5a30062af3b17ab0fc448dbc20a78a743a5f0901",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.5": {
            "manifests": [
                {
                    "digest": "sha256:e7d7b1d0cbe8a5f32913bd797ba18fb318dc33e40c9386983a9aaff68d4c2227",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:84d2b62351312a0dea460c91ab5ccdb7a45d9e1f63bae21bf0b63963f98ae852",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:791032b7172f07916946c1897569c54c21746751789e57f00eca82e551516f37",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8e33d0b3d44f204dd56edb6fb9c723e2177fb7d40953c26ae6d3d0978fdabc08",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.6": {
            "manifests": [
                {
                    "digest": "sha256:595c183652dfa6b6f12fd3b0caee6b499e84fccbc9de64eea6e89d8fe387ba71",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:be5687cd7b6b605231c51f6e66cac24dbd4359bd07b9d68f2a6d1e4f6d1b159e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:dbfbd2238e4ed32f929f73612c5bcbd0ae523e30fb334ee0c78983a36fec5454",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:054aedb45f9032938e8d14396d452c99f7aef73895ed97e2eab7905867061ebc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.7": {
            "manifests": [
                {
                    "digest": "sha256:e2681a1f595436b74f06f430cfa2686817ef70a80f130a2b5383e611a49da167",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f2779336182a1a8de31e25fccfd858fa82ad78e66df0406c9a403c306f563e9a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8259754ca0f49888e454e19b38d99e91631f691c45be508111243534c190de13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1464fbfa0025699613326d8faaecc33de9c57213c9eb3507dffc0afe7ffbf8d9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.13.0": {
            "manifests": [
                {
                    "digest": "sha256:cd50d80dfe2b6cc0089a54833fa6de847b72cf7b0e618043869d76c1f3111280",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:28fd98af546be1665a4678c88260774c694e454fd015257449bf75330cec027c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ef570da3c167348703293df67ef76cfc02be61ef9fe39c040d87d9417ad8538c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:04ac00c319306d5b6db56d759651e609c6dedb9f3fbb7fb6530a063a23e18c52",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.13.1": {
            "manifests": [
                {
                    "digest": "sha256:17e6bd0e4c861200f982f2620b209215d997d427a14649466da3702a1a7e7151",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a6f1243fcebc284e7a4555cb11d3fd873944e3bd1b5ce11082c0c8b529d00b23",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:faa29e5e61998e8250a04afa0ca347555050984612f01c834317642af56374f5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:70352e31bdd8876eaed69c7d445d04d8d1d3df58c360f07261d92070e2f28b10",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.13.2": {
            "manifests": [
                {
                    "digest": "sha256:472e3f23f87d3b342e192040032a5b180c71b5a79ef74fc3597ab9d6f7af19b8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ad2d30d1ab890817b09020d72cbbcfff38d9443c073750a1aca2799c1a45a30f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:533b8cc77262ea254a098628dfd9d1d8ca970e2ef07ba79646a5cb4eeb725c28",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d8658d8297c41e1735d881821308824a611aed85a9d3ceaab26b4f9c728d5f2a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.13.3": {
            "manifests": [
                {
                    "digest": "sha256:7a8d80307bc22e393ec944a777fab38d8b1a1d2423262d2b0130f792d3e6167f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2e881a47821757e59ac4acc992d466e842b504ca8a1d7059fcf0f42d04e29aee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d14303dcbaef3f0f54676f94ca64d8fa7712bd1a0eb3647d57d8a20957c7544d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:bd75bcc64a7426be6b3ffd0dc272da683a037c3281d43875f1b2fed74d53f9ef",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.0": {
            "manifests": [
                {
                    "digest": "sha256:052cedc5d567f0f5cd8feefde113b0e593b26ffb71e326743aa8723fbef8c1e3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e048f267a3176802c135d2fe93772af8180d61c311c3dbea44f278293d2baf46",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d44fb11c6e7aafc2c55ea821b36eb94319605c0b9ef6b02d6050beae9646fa14",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8ae106f83f27b62797b5fc929662a4662ee7328cee0a8c47ad464c0f95eb66ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.0-beta1": {
            "manifests": [
                {
                    "digest": "sha256:4bf84551efc9b783d222c4246b2bd9e251dbd360b8967f5a921f594e30a5c987",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7c90c4f4f5b37eca21f8a046e3b33cd6f4316824914790c757baf901527cde0a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:44ef5e8a0eec717ab02144de40cc77df675a2c99ebfd67edfbfdd6865e594749",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5c87c676d6254073945aa35da35f30f5b3afe700e487ef252f3b955b0dddadfc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.0-beta2": {
            "manifests": [
                {
                    "digest": "sha256:1c09690ee28a851ecde5138439f97b2f49b9affddb4926b87ab563e445c4342a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f6f287d0f748b9ab91a6a7687c79351ff267d71bd4b860eb9378bb7bdaf2fe3c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:60d69b9d046793f7cba1f34a2b5af20f0201787f96135fb4715172ccc4d51fe8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:99bb513477d6ceb9a11df44f4e9688cac90400f886ce420899d7bc563efa38dd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.1": {
            "manifests": [
                {
                    "digest": "sha256:b4b7ede3cc1a7cc6f557cd08cb0f3a131b0d0fe5cd44387ca8042ac1fcce9b08",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:91bd525c89c8ccfd025988dcb64695a6743f7e12aa40bd00f17cdddd360a95a3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d208601bae5e298f8a94edea4e236f84d0332fbfcdbc575751438da9ea240d0d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f958f2fb5eff6468d5da4c0427c5e8425cda52232c342a4b3b55ecf9775c78c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.2": {
            "manifests": [
                {
                    "digest": "sha256:9374d3c45d7989b587983cd5d09d0db45bfe23b11b58ed30457495f39a10504f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8edbbd29e7d3a5255e71d72c1aaa87f20da37f00178b596d58db09cfd11c3bcf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:73768aef69fd23e1604a856f9aa7c6522d8c80ade5d75fd745da93ce464f5a73",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a466896d37713eb0135b89dd8c1539a933a1847c111735fa90d504696ab44a0c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.3": {
            "manifests": [
                {
                    "digest": "sha256:71336543db9792ecccd3baa1ce32490e54f7145097cc53a951140279931a9d2c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:127d54a0f4c4a7908932b73aca12a3b223004ded89abc154a3223086e1c6b650",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:226a269b83c4b28ff8a512e76f1e7b707eccea012e4c3ab4c7af7fff1777ca2d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b5ce8c9eccdecd9a211aadfceb6b923bc04014795f2df5bb8badee2b0f53e28e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.4": {
            "manifests": [
                {
                    "digest": "sha256:cb5b682ca5e2e60525bdf1eef2c92a53f32f8fa6bfae584146429808e6b809cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d2099c13052ed494c99e9bebd9ba8754051d066194feeafb967f63400d3fd444",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:da68ba7c77fbedd28d62581ac13e1ae92a20259e2817bcc1b07ea107c3a774dd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7edb843b2322f915c20659e8214b0a7678aab9eb06e388b918902b0172c0c03b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.6": {
            "manifests": [
                {
                    "digest": "sha256:304ebd8fcc99defacc4590df9f0156dc5e930f52d428d252f9e2ea1376e5a339",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a27c9d23f4684cae4a96fa8ccefd14a9ef359e18d40a66e7e92ac69649e5f3a5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ea3150181fc5c5209d28fbfa002e93af2b8386659fc9c1e3e5251d4b479cb764",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c2a9be600f64a8548c1005465b64d7becf668ca4c8d3118a00966b69383979af",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.2.7": {
            "manifests": [
                {
                    "digest": "sha256:e29ea9ccb329275d4dcfa369d367bd9dd7a71359162b6e1e9063c01ccdc0cbfa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:15206204d0c56fe550d044f662c25392250b1de3d336eda4c36bd2ca0241854d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:3bf2af64d4a696228a77473f038f4a7b5c07b7173ccccd00d88b85c2e0e538ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6c4449ec08fafacec68c70560fb9e937bf66e079736af60915cad6e6ebbe4375",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.0": {
            "manifests": [
                {
                    "digest": "sha256:0d67bf30e7b1df4a74c7a89e5e3e80f6956417c4962bbda0a8e5472d3766b671",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:776181b9b6f2393268478824876e48ad5708b6a6bab69a3e75bf2d17c4ca5696",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ab4c3eaa5e6a79276c24b62d9fd4f427829b06788fa8ec1963c1298756b21618",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b49738b8b78ff8046de6b41ae70ee41b29f0cf95485a554b2d949f0eccf77706",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.0-beta1": {
            "manifests": [
                {
                    "digest": "sha256:f5bee56d165c737d4fb83cb445acc7642e26ca63685db6535306f0bcb4c0c486",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a88292ef520c95982e29013806730b751c6a8f4716403361ed889a29b3e98cd2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2c426c94599e2457c0c7a721560046c6eeeb5420e74fa44459357b4ccb7cc687",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:605b1a70f8a15f71bab35b2ae08170167f0e636ca1cb88c081f20bc88480dc1b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.1": {
            "manifests": [
                {
                    "digest": "sha256:7f3430debbc28273a73dc0e48e0ea23005fb1b0c5bc39279cc1f8348f09fc7d5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f322481c3a2a84dfa0d041ef0f8b01ba6cb7988626bde5af566d4cb39de73365",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0c11028703dd8707ef2513cccf2886cd1191b7a03dc1b3ab793725938f94a0bb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2780465a536e5190a336a4bd6943ee1851a4bd9116793fe0a62df2dca59dbeeb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.10": {
            "manifests": [
                {
                    "digest": "sha256:9d0ded16939c280c64178490cdadbdfaa55f267ccf2560338732b9d688eb8637",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:14ffcaff915361a898847034df18e5186e382445cb861d2fceb6188170bd1e9d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5bdfcd9077bbf2f29e1bbf050c09fb48f18de63e247ae7f1fafb00fb8e4dc9be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:82e5312ed4247b021e771a9d41cfd0baa1e2b64671bec0339cc2ff2324b6cc05",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.2": {
            "manifests": [
                {
                    "digest": "sha256:e6ed7d173e84765278879501b31ea7b475047f82a3b12e88aaf5640e8660f650",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ace471023cfc4737f5a82c2680bce7ec2983e027ec2c27db7b764120fa2453b7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:fb59ef841f6a2a6c17249c6c6022b7ae112a9304751e9b2993cb7de5709a0146",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:74e950bb4541160d4d7cb9200f004a50d91a578277583414b670db49f6b717d3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.3": {
            "manifests": [
                {
                    "digest": "sha256:1b203c1d370e495d4379b3e755c2324410b6676b53c759aae22ca567af13db35",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1b9997d4c553acbe418a13a4b73c762d7b49015d8b4c5b0e86f0f048596875f8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:08da0299cf2660db43448fb5ee35c0756cbcdfa1fcf150864acefc5f76484d3e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:3cd22b722daff9917f9a08bde757562a2371dd05572cedf5aea35c59b951462d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.4": {
            "manifests": [
                {
                    "digest": "sha256:765b4b615cbbc6cf4103c18ae359d65a98ef2e40a7c58feb7285885606a247cf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6aae627b40baa86d99f1d062a1409ce350dc15744046d117bee8846c80f2b594",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7fa8c11454f3d921f5326b33bae85d50f58e13698ff01895d36bbbc7fa82659b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5508339488538befe018ed433452e0c501329b228c5cc5714d099df1e7a0f807",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.5": {
            "manifests": [
                {
                    "digest": "sha256:3b20593bdfaf860e9f43eeac1bd1e5128e5f2cd12b41884ebda0da3a964c64e3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:29d33613f1e0aea3d3daee9fc4ede6f36a66f39b2beac8395b69203d5dfc93ab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1015bd810b2e679460655badf7384bfa2124d8fac50ca58455cc77699138ef07",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f14406083da62be6d8e620a97e2333bdd1965e9022fc254e58d3e17d038cf87c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.6": {
            "manifests": [
                {
                    "digest": "sha256:4f2e234843ae24dc972f1ad4068a03a5256844cf72b1556bffb7437729364579",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0c91c1b5a831e16e6b4eac325efb5bda2f369fe9051099d14e8a39a7dbd2cd27",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1880316125e76964a5c22dc5e22a980bf6a9f7ab8aababa8776c8768d4963042",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6fb7d1f0880ef0fe7176b49d2b8a66553cb32505752b10fd88669af327604af8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.7": {
            "manifests": [
                {
                    "digest": "sha256:acc05b25bfeb68766274d9ad7ed77efb33dbcb4dabe839dc5fd1e95736317a2b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f7a2b4263c950478f59d45b099085372f0fc907590fdef06aeb0cd163cf797aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b07918d383f98e8ecea2692fc77fb59587258520596c845f20e34921c6863019",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ba95a340c6a926aa63c6579f3266ba76cdebc4304261d5d0b4265f8b3fef1b1a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.3.9": {
            "manifests": [
                {
                    "digest": "sha256:d22d8d06913aaa661fd59d39e63e789234f0a454c9c4f312a764e873974790de",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e5ace478652e361d2515eca96c5fc36019b975fa1a308496ae3cdf1a526d3a6e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6c26f66fd25daefc176e0ea26444e7312c58351a08d7b7526ee3f7cf4dd63d1e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:caa8bbde26071be507fb529273617540ba64b61eeb81290931c6b9c5949a8cc7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.0": {
            "manifests": [
                {
                    "digest": "sha256:429bd3ad2fac882cbed0684aa9d3cc52ef3ba102d8cbcb28045ef8b3fcc47776",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1684c860ff0aa5efba5723f1f0dadc709aa3a1732118d84f37450103d846eca1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7d3c0003fa1a2603e619302571d4310a67f32cab68f8129e45e4e29464db2100",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b642b0e2705ae7f6f6fe389fb41689800c8b37cd52f2bb1999260af9ece653a7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.0-beta1": {
            "manifests": [
                {
                    "digest": "sha256:f205e369306f6ec204c79f7ba69853eafaa1813e80302135c43184287de0cc3f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:18f6a12d2e98dd72116d6657708f04b6de0197bff85a1628bd7d55a70587199d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a4f140b27b07bea97db23755bf721d1e8852b8912006a815ff695a4e5ba5c396",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7b4d860b673ff4ba22ceff5e20fd702160b06bf2eb947f1f71918d4571fc768d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:0a6907e1aa2d46c9ba93493ce24d9329339d7b66ed471a878846d017c1be0ea0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:21c251dace9bdc924be089c3b629c0fcd86611199cbaef1edd0b9b9bdf45a7b9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2a0547cc8c0406fb233c7207e6a8a69678b9112cddf59c31ba3443863848bc1b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f0e17defa5ae03d68ab846cf73ef34ed83f74cbb147836165781a840a40aeac3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.1": {
            "manifests": [
                {
                    "digest": "sha256:a26845ac976fa471f1a373eba30d2e7b42ddd344c9aef094fddfad091bbd9941",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7f34f85c6fd6e784e709b647aaf047f8d77b7124c8eb8d2838744035bbf77aa4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:42a379f308523389d74c688689eb1d3fe583f2a23e443646abc16e0ff244d02f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4161adbd9733623c089bbac60cbac66c55326284baf7fb72f5781d9a56184088",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.2": {
            "manifests": [
                {
                    "digest": "sha256:c89130e9e494c96f0945235597372b271a991eb7c694f7b42be8d9a23081c1a0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:24e64f583d58872fcc2d55ade673ca13a1a5928ccebe6b7ec88f036927644669",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:51c2813c74997a005fe9c64715a934b93287ba6b2126220cbf8a7f475bde34be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7a20b7ebc39ed5c5e4d288973706ff3825ec6dd47423fc95c6e9dc411e30f06e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.3": {
            "manifests": [
                {
                    "digest": "sha256:71beaeca153c4cfb27fde00f778468ad5d8d3b6729aca29af5a6f530ac03b7ac",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a7197dee0d6ed411a66def9f0721bbea9c6853084f89a1fa9e59b9f9983205e0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:3bbcc754e3bab5b60e1b779958d3d1a27aec7b94fb234f2d974724e2379f7bae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7caf492b22bc8582fd6d1dba77b22f1785c89ed81f942cbb63279f38d8ed8ada",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.5": {
            "manifests": [
                {
                    "digest": "sha256:1da3c2159dfb3d867542fe514d673c043ae5517c9d58f135ee19b60f3210fb92",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1ea20650a103ad8c9008f01ac0d48d5ba94fc6add3371e91c9765fd323d13f87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:957d6e942313e760d3004fdd82ab48967808e72cf2ef23d671e15f4cf41a9dcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:829e38fc1ee23e1b83fd025110fbf9d4440b019b08a6539c84d510d3e1d2d08b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.6": {
            "manifests": [
                {
                    "digest": "sha256:8f2e9e25aa4e3047ea72df174cb30c75dba0a1c124ff09349f2bb29028c921a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:09927f9a9b4887a75582ab3dfe851e9c705cb4a8a78b0ee58b8401f78982cbb0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5f95066fb5314a067ece5d9067e5783f9ca874b99df3db7511de44113d2cdd23",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8b839c378192a844e3de5f853a7e7248ffde8c219e6e5b6e32d47490ef8528ca",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.4.7": {
            "manifests": [
                {
                    "digest": "sha256:a78fd3a6f639f7e878ffe3f97b84bad492427fce2b1fd871839ab14ee9994342",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:dc8b9937315bfdd099ae34aa110ed82211dd1ebf6e1a1fd2b98b660c7b2593cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:03924ddd9b600984723275603ffe2243cd661cd841ce211e804a710d4f746838",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:345f80ab9b9909051f148fd2f7d548f34a2e1ee37d18aaee83975cb73e0988d3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.0": {
            "manifests": [
                {
                    "digest": "sha256:93bffce899095d5b085273155515741311bb2dcdd52fb56fbe0f188f71c910fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c98e36d40935b8feed1ac85517759106583949c35cd5a813d4c3376c31ef2134",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ff596cf9df78a300904af5808996eba930c8af17e2877536e88e723bfdbdc78c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:73e6d355c750f7ea852533734fead354d69c2526639e5978ac55e25e1f02a6d2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.0-rc": {
            "manifests": [
                {
                    "digest": "sha256:51d506806af324761859ae232b43d29169a4aea3154886ab4dca87ac46ed3041",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ba56c384a1afaf957263cab0551aac0e877a4978c4939beefa3adb8a6789b35a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:adf2bc3729bf296ce012465e484d4420867a2bdc870d762d7038f7bfab2f7f24",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:23d8bf29a336a073dc5e741bc0af9c03d5fc120e30312d7370f961b9098e145a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.2": {
            "manifests": [
                {
                    "digest": "sha256:d8e230e3995e6a58349d90c40393c5e6c33a35d419dca31e5b2f11e5f26c210c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7509003ece487d0ac4df08d5bd7875f4fe97234ec819f91c288056f084c62fa7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4e072c7e7622579e0e463f668563b23d046afaf28950cf3475221a91e76ac618",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d8049ee89afcdb7d18cd2a98d496e8d2698c34da4ba2129c5e85ea55f37b83af",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.3": {
            "manifests": [
                {
                    "digest": "sha256:46d286d2ecfa1e60c463b253966e7184691ceff0ee21fbc0d4b1f204dc1c54bf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8cd885e887c8f3486b4d70e373a2254ae3b4a5e7dbab2b3421a2369f1e1209d8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4b23938a347afe18aff84bd92fd34ef36f31b228d5ffd40aa3d94d12d42b213f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b14be49027965193d7823ea0dedbcb883315dfdc6b8859b5429289ee22280d82",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.4": {
            "manifests": [
                {
                    "digest": "sha256:ed619fda5042c884ded7434e22dacda725e7a698a4f8b342909d140d135b65c7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:df7e2902745abbab698d62b1f19f9ac3012a6cd5e371b2ab0de11cd1bc236bc8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:af4bf2afd8a4b28e9a27a38785d250d22b313f1f18cdbbb57a7af7859f192256",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:450061898a5e947ecbf2b32d582e111b237b09152ad95274f17ce82fe9696de0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.5": {
            "manifests": [
                {
                    "digest": "sha256:a5b242b5e16bda3a0584017fae2c589d344333074464013d9d3a19053c3843a6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7f6ba72d76f404bc72fca967703e2e3f78f366ba9e84e69b1082927b94ef131a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:957fae6fc189f0021f760c8e1a5884b1f281a53767f90dd918ec6cbafee81985",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:de323dceeb2a37699470c8560310eebbde81e9f42a3d70fa9bd511f29ad5a2c6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.6": {
            "manifests": [
                {
                    "digest": "sha256:2b4dce53d1cdc30b53d8ecb72085a216d789f3c7bdce80266eba69412612d6c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:759a1042a8b741ebe93181c7850fd7a3bb2c3b7c30f9f3a2d2883d1edf6d86a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:27cdf561bde8ce51d339858060627b58498a5dac108e153dd0cb3a3ff952cdf3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b502bd81426c45e7069df64cb9774e6288bbe24e9ca8fafceeb76e7166a173c9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.7": {
            "manifests": [
                {
                    "digest": "sha256:b9bc496121878fbcb763304ee48e684258ff8e86831065cf403d726aceba8797",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:563b1c4784ab153049a49f4e29b830572ae878ce669f6a8de56ceba9c041b1d4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:fe0ac5f501e58276b7e2073878426992b3b0860b535103254e383c66466c7f62",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1384c1cd1bf9b9b3c4e4d789013dba6402414de907d4cf95553c382922c9d623",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.8": {
            "manifests": [
                {
                    "digest": "sha256:cda92163485b23394603ff9e9686bb15825fab55423cec56d08c9854f36408bb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f18350c9d5aad665027b2d384765fe98d0bb4c0d42c91a7f50bd0a12b4a397f0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f2b3f2ccd9436a536e861197dec2922bcbab5dd067b9d2f368cc0b9763af0dc8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6a78b6b67829aa22e4e07324488e9418908413ceeba14468f5feff284c1653c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.5.9": {
            "manifests": [
                {
                    "digest": "sha256:5be209ea338fd62bb8435a2f8bede73f0887745ddc4d69346237e1d4af491c2b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f26689b99aa3c5db2f1305d4d26c6d616044fcd96c9b3e84dbc8337afdc41b19",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4a9663bc9ceae0033808db773126c1e61c7e928f046a2903f2ee13d21b2fb98f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8cd25a0a42e35180334d03bb685047b1c4f98d344b011d81478e11678864f250",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.0": {
            "manifests": [
                {
                    "digest": "sha256:b04266db3e7ece92690df720fcf98ecf138a92ed3d1edc14dc86fe814c33ab9b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f5e6af78549d376a2cb1ccedab8f16e0ce72ea40454ab45f488ce9bc280ecce2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:109ed1ae1ad667579a9206b45b71e1223482ebfa1ec3ba5ee8c0e971001eeb8e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:824bb5040883039b2e90b2aa3afef9d059b391950e488216bb3c55cfe6b2ea28",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.0-rc": {
            "manifests": [
                {
                    "digest": "sha256:3b08dc775025853bb51004998a053f45e5bbb882192891c61d262cf76e2e3dcc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:42ed313616d63528e2a73c8c37ae6d8adf3cd51c9c3ff434390df0fac8e8194c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a164d799249af46e6e5c7ef517f77eba68875a26524a56c4e1da4d9770ffd523",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0596d7d0541902e1298c5c464652e9a26c3d63215a45f54aad9bbcf3ca87a9fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.1": {
            "manifests": [
                {
                    "digest": "sha256:e2fedbd8dadb71d909c7f989c8182b82052107aeb09f62ec18e5fb24fc622c53",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:545cabdf54d23483a831465550e07a61729c2e355d456fa186072f88b4e8d1f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0917d1ea32765692b67dd26bddd3b7a7e587dc827eb7af2cc72b727f8fe4bce6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d473db1696cb8247f264ce7a8808f2fb47d237d027bbee657eaaf3367d89246c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.2": {
            "manifests": [
                {
                    "digest": "sha256:84873d993f3802e1da546aa048bd7d5478377b1d4da3a2c9b53fadc09c5dadcf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:365d4f2b2c9c071f5d281a140339088c0bcea0564721c2ce1d883e78212faeb8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0ff43c2c4fa7e3c7a583ee17b3b387202ba7a8ad5adbdd1e77e5fb8ba1ded119",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f65d8e13320cd4b57dad4f027b1ca7ad8189c7e5506361119b74e477ca789b92",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.3": {
            "manifests": [
                {
                    "digest": "sha256:55183a92e2f97188d4f4372c765213977c1d80137fe8775f641cddf540860a40",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a4b03d4495e3dcb7d91610b75a546983277e6236ea651ca450b78483ca41144b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b8b06d92a5d58891d83f3ff9540a6054a9400ab10e35c1a530038a20c1f2d42a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2d4b381c4cb3960caea1fe60e7745e7595bc115f86ccaeb7dcee57e92fd42e8e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.4": {
            "manifests": [
                {
                    "digest": "sha256:be084d88fdfea32ec0298ab70d19466a855e807d95b4a8833b66b9e7abd12081",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b21e618598195a599cff3941b474270052894a29bea9cbd809297c2c1c873c8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4fff170d65e7d3dbb09c2bf98176ec2651d382c794c4d878b9d3690c25a6e93f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:07e701574aeaed0362c33ca1de42e05c0cd749f35b684abfb275449a243c62f2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.5": {
            "manifests": [
                {
                    "digest": "sha256:9276f2126078769b3934416941c4741e46be56e45973cb85ec84853d14767303",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:88660113f593e3f6ebfb0e41d6021c14112f9ac2cc96547db426df1d69e0ad01",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:09a9799f52424cbcb1c6061830c5c1b412e689f95213831ec21f22f9bee5303a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8857732acfb260ead53f4d868720e7d391197ac85d7f378a89ffe324ad386fa0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.6": {
            "manifests": [
                {
                    "digest": "sha256:2ab4a840f90828511f987b0686dc86120bd4a53a80f555478d73f3aaac3d04bc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b043e9759f11a68fc190b74a3c0da4d869e105c63ce2ba08e86b68ffe2c4d5f5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ebe6730f7387b0cf7dd86d82a7cb266809581c0571b6f9984b2d3a8680900872",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ab6c39fe0a662c97e16aab234c8053c5cd6072915440a5a83f76ba3dd5baa724",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.6.7": {
            "manifests": [
                {
                    "digest": "sha256:769e4cdeeb80e60b64be43783670b59eca416e42c9c5cb184e9d1b505c70dd8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:524d99d3f73246fb85d3956ffdaf38c9ac8849dc4fa0ba874738d16dedc33183",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8840b7d40be013e9cdab9d2d3fd7be773c393b7fc54d9397b31685079acb82f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:967f16406d097d62460fbc18b68cb72d2a722ae1a772b97ee851af7970662ba7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.0": {
            "manifests": [
                {
                    "digest": "sha256:e218aa2a8d80fc25c1ddae492c561e74d08e2c928a88d4f96e1ccc25a37e4b22",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d594fb96e6019d607484d57f3780ddc5f7e546049211a84542068a15f845d8be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7f55715a780f7283749747b5ed569bce4cf1c9bd63dde0ea532bbf54c00eec9d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:274dbae42b3e591c7a5ff5e40aed6776b4cdcd71c5348a4998a7ef45277d0a4f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:de502a810737693895a760248d25d7deba78de44e399975cc9df54da48e3a01b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ca64f5ae6da53bf4705f5c75681ee31d3ec1958f9a5c7cc40c8b25466d521e66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:50f89f8f72adc87c6b7e1801e8bb73cc32f9a878f9ed539851c76b5256ff2c43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4a99f32fed840a88ceba1a5b37f9485ed30f0f37fce8bcf286d0ed6b7ce8bd3e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.0-rc2": {
            "manifests": [
                {
                    "digest": "sha256:dc1e8fb0de08e01b6c8d1e397583a27696aafc0c07dd3882bb0e889c936218fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c1a2c8d5ca758676e374f88fe1700bbc07402325a6d12ab6a7c79ff7e5217fda",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1be19b0315cb039d8b655cdada9e1801854aff05bd6826044696c34705655b68",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:177412860887401c5375c88ed32b7780149ba79671604f09db9d52ba19bd4a75",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.1": {
            "manifests": [
                {
                    "digest": "sha256:7d07d64480897215cca86ce51750c888fae4d703529708517ecdd5fabba6cbb3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:75739463a8000a8bc3709b952e4dbc1e4577cd7d8f0a0ed2933f8a98f9104fb3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:22bd3bd288973afbe2fe51004c64ad04f5803f51250c18def7b96b462e97b38d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:661c3c426525f8a7b246dcde3de08a1a06f1c80daddf963aaadcc60a8432dab1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.10": {
            "manifests": [
                {
                    "digest": "sha256:ffeb7bbbc2d22da24d175eec729649773a0695a4f0d0b987e0bd4771eda884db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:3fe18882577482f437a7a7e6f79a9654b07d99c742c6f70e3cf1fa082082bdcf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2728770995310f6cfc403f4d1c339676e07f359a2377477f37ba91d98fd0bd70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2cda113b07eedd5b5ea5ab85e76e9f75c0dc7c206ed2f1a35fc25ad646a57974",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.2": {
            "manifests": [
                {
                    "digest": "sha256:99d83f5179516576801b9a9411105a6b12c6195b7a1725da9fea47916df7305e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f015470d7074ca9fbc2929a4e30fdcfcabfff5acc8dcbd0213ba8686f89d9437",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7bd52f406e9c052aeb977754f625b3a86accd8ac954795839e594e01bc1bb0aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0145ed416054b88f6e64fbcfe82dfe23ac1840b1d1347195167048373b077cee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.3": {
            "manifests": [
                {
                    "digest": "sha256:53e509aaa6f72c54418b2f65f23fdd8a5ddd22bf6521c4b5bf82a8ae4edd0e53",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e946f8b65ad2be8c4c71a365c60ce270a23423273154250617d2c27504b5d758",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e6fa25ca5c11786f4546cc092eeb5b38d1d20e079105afac21234b3f4466a4ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:3ce2bf600b86a63a2ae838ed1efb47df5a9369bd288ece1a713a8c3b377eca2f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.4": {
            "manifests": [
                {
                    "digest": "sha256:2f866f4e188c5818020bf7f105335f1742dfe740fc901808569da4c7ca5e8f3e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ce2634555f6fd630a4d8839e2eaa5c0b5694601d8117e6ba480f10b7a2e9201a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:aa2df32eb5458d2edd6d8a22fe2b23d97bf41d54f47aec0e5d0a234ab608bf99",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:db88d6ebcd7a587fa17dfed73a756de2a7b9a4ec21bf019e6c03a11f8688f1bd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.5": {
            "manifests": [
                {
                    "digest": "sha256:bff1a692def49176d3cca4f343c3fd5397cf2a4fc6a13a68aece01056fc872ff",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:eeea98f9652e0f0128f41ff10871bb2e2b3f07e9121e7b633c74ba84cf0203a3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ec0f662a71fc70d4c29f023fcac292c4831383bfe7716c3263e028fe4cc838cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0fd52a64f482451a2f757602eab157c1df8eccb5b3e6d4fa8cd85517149261a0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.6": {
            "manifests": [
                {
                    "digest": "sha256:65dece7ed65209d28dc2a8498577c4fb16e6c54e4a198932a73e1a5fd65eb91d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:93d9966ee10863116ab55a25e5f6af3ae685318c28d3099883c9ab6693a5b52c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:25b183e58a318000721fcfb4495c60c6b50879e10db43c7312e3e0e8a3c3237d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9f1dfb6db4f6b4a7de0cfc4da352907266cca689c754e7e2fc401a6d7bcb7344",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.7": {
            "manifests": [
                {
                    "digest": "sha256:a1f7f191f2cff62c8fce7c9f7f95ba7eab4b6f5339293bfd2e90b7440c36e450",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f1083a4daa3ee259f20d63238da43cd64e4874ec4c396ba91f123b11147c4885",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:65d7faa8f595b9adf4b163753928c04de607282cf364f90d236f036cf9b80fe5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:511c521ef39bf904339ea3edae29f55a53ccfca7a008292ddf8e8eb4579cd182",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.8": {
            "manifests": [
                {
                    "digest": "sha256:16c6be4921e109f5270374572c8f088cff8ddd57cb32654cdbdd1a55bcb406db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:69a3805cbf808c9aa2b8d60b6417a93173a2a5157b487e48421d2c44f7a762a9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ab7f4f7bc837ecb423358335b606e5a2fa720d264fa6d8e04ef6322b34ce5745",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b798dd92041207eabc5752880f42719895e9feb7ce7b407061ffd6ceffc14f7f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.7.9": {
            "manifests": [
                {
                    "digest": "sha256:7a965882a4fbf33cc7db85c3d1ceaf907974b55d966ffcb09a2fe3d712ebe8e4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a3fc0aa4853c37de3e3e4f94c2fe64cf21fbc336d8619c428336d8dcf8a9f0e9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e30e3514860adee579976bba8bab2f91ae337f3576c94c7d3a220a736f425039",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:95ba4e3dcb4dc27859e5d7bd024afb9f82b9eb0141eebd1af00bc3540495f4d6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.0": {
            "manifests": [
                {
                    "digest": "sha256:d35855569d87911f396bf951104ff6603ca1858ef2283719a935f8bcf9167e64",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:341b0798757dc763a28d922ec1473829ae7a986425452571f48cb89b5382cb23",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:55a623072bf1180634467be4590f127c59e64aee1c7848395be4db92d79dd2f5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:8c06871a7af53c1a2d04569f8a4578a5355b0c5d24a8370ee440e8b4d1aea51e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:88dba1aedfba8809c0b03d7f96d897f22789d4034596cd18769d1df1acc81d13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:cda99d60f5aa4e7b3daa2dfde1a792bca8fb27a5ce0bfbc13ab4787f8683efa3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:82b6283d4bae138db8ffbcb23c1de6e4771b6ca030f9f06f8a3d3492a5956777",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:573e622cdb0482dd03d4fc0839010f25e86e7146efebb6f8969a88323e4a67f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.0-rc2": {
            "manifests": [
                {
                    "digest": "sha256:5f3641df9ea0a4275124b6bef7321b583c91ef33ef21920ff3fc249936aa73b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4a667d0ba9826e59420f96710bb2a95dee6f5d3c45c59dd9a67408a9fa8ce825",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0f2a69fdb67d4ad522c405e53f602548f2784ed16367f12718375dfb5c5dcd45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b6f6086380de094e918cc82ad872bf24e24a597fac2187dd4283767b7780778d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.1": {
            "manifests": [
                {
                    "digest": "sha256:20600e76f92c6500ba0aeb99e645a08eb3cf299c8e0749d98be19944c73dfd43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7b55492806389fbc288ca428113261e15552e6853c5d876f02954447d00b5e30",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a061795cb48fd626de868369b888660aeeecbea3a20f602cfbb52818f1c18569",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:52912ca28994c0969521074b5c175a1e4ce9cf88a27d3e3e6d8c3ca78685cbe7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.10": {
            "manifests": [
                {
                    "digest": "sha256:1468ea9f32af65e10163ebef24256971862fab86253562de419eb07ffc422174",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4f36c3b18b50e36a8828628ebf0839d5b3ee2638da2a2a634f6297276a3815c7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0e851bd008eafdf1828b950788362931b82af69f137c61e83a36871e56c43a3c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7eebb6be84d0f4ccaac8f3d09ceefd01b2857d5e580fd97a7d6f2720624cf437",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.11": {
            "manifests": [
                {
                    "digest": "sha256:b985614529a868d187df1f162aad83e86498b1d0032ab202019c0e9eb2db369d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:600b1a49d76e7aed018b39bb514e3a32ff91983fb9c08ecc81ac8d8e9d3ec616",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:c3a179d33f1df35d77458aca1d534518982d8fd51732d2e90048d02215103922",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:b778a9e5c1cc4aa2e9c66455f35ab307430aa0b139f40764754ca7773b131604",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.12": {
            "manifests": [
                {
                    "digest": "sha256:93c497e4e559599e8a098e1aa0a6db4c939a69c3ec5e2678cc3e5d80e3ae8cf8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:df35696f78627af5c87335be699c09c3aaba3b57e88405a60339ff72ee87391b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:82828b807fd7e7d1520761f7d8f70d7b68811d1ffe4763fb89661afe63d76593",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:166b6f4c5c7d7c7e5947c9b763e9346b472cdf7d866180c50ca8ad9381600390",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.2": {
            "manifests": [
                {
                    "digest": "sha256:79c1850dfcd98a496792e87908ce5d56f9293e27fb2d0b734aede341dadd69aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6aebcc5b1f9eedbe7e5e72589cc09f06489cf0d8d01e9014ac01b98c0f11e7e3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2c4312cd7ac19ad8d3f646fab632c3f216787b270a6a18d1f7e30087403fdffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6173b34f55ee6a088350d09dbd9a27b27d773dbf1423fa85c7f22f642ee610fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.3": {
            "manifests": [
                {
                    "digest": "sha256:fca36d77ae84b68bf426004459478ff828354b6c43c0157edb18b0bd7b8e8c68",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a2db54f32d527dffd5439fe1bfa55d650a834cb9b56f8dc6e42f11a16d8fec9d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:336bad8ab6b2c37a06327ade3bb58f92114dff91860ae1728d95457b06fc2eea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:acdfcb2c598dde0c9ee1a9d568e4864f22db36d824cecc596f92fbfa690a27da",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.4": {
            "manifests": [
                {
                    "digest": "sha256:b98869b86956112ea98ee1ae4dfa5574841e9972b952fd14164b3cf2b654c311",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:989065ca9f6334c558e67ff6a3366536efdc9176018ba9bb27e5a7d33f111712",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:393f19c5bf721b16ac8ce6af0069ed43b5390b25e7e66edcefbaf750bc5e862d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7aabaea7c095411d0175c419ae2b02192969fddf64dd921a46562e8f678ccb2f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.5": {
            "manifests": [
                {
                    "digest": "sha256:895c58cd8301616b7c1cc1f6a249c6981443c82bfd237fec2981aa025198d409",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:3b589bc2531c73f8441568e4921f38b4eb2866d479b4fd7cf935f88a6731cc31",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0e95fc43a67e977e066a13a001e4a2c0e995ff2657de330a28cca0164d372cac",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f5d4dce800fd5d4cd54fc88d07ce521dcf074ccb43f48dff68b170447d728703",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.6": {
            "manifests": [
                {
                    "digest": "sha256:ef740655abec5d29ee02c2c4999fb5d668520f8a10d9a684aa3e57b6026de743",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d629fedb18b240891f3090a341cb29d336fc3b9ba01b13fb3ff5218aa6e22b8f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:40e671eca91aea64ba95389b1e363461213e9f78127f3d5f1ca52978483a3c2b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6fa281e00a67d92edad720f93aae84c8efb942340ce9f1f0358e365b60a21c6a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.7": {
            "manifests": [
                {
                    "digest": "sha256:94574a967ad25c754067df94f7cd237057d3ef6ab1be4c0a5aff91b5180ec5b7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d06188ed1cc33531d8e87b260c6e807522920673b8742474f440a8ab25d06d6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e49f25c7c472bb4eada7643322306e58a11385babf1923785dd521d2e445b7c6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:045b142d694f14097491689ebe9fc9d4d8ae5424a8e629c409180a5dd8551ac3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.8": {
            "manifests": [
                {
                    "digest": "sha256:745b6916bda7d47ea37534bdf425a2cd01218964c7011df80e0b4b34ab41ba6a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a60f548f8d74dde6956258e3bf28e76259ddc313948f8006dd80b5f2d88e61fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4b37121cc912acbcefb5aa29e8a54c15a4d6905285c3572d1ab6f1d18cf0dac2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:77fec35ad1c0f3d015e08a545e218026900826b72e38d71c61af14dc394c3bb8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.8.9": {
            "manifests": [
                {
                    "digest": "sha256:8473195fe00dd9411944d28189962bf4713b2b55099aecac361f2be01d5b8738",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:e7db0c62fcabbeb2948a85357acc0d57b0a68e398634a78a1111604a72ece3d5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:84a80edbdda1ca4141224bd52be07b1d84eaf4dbddcbcb92773c52192f9f25c5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ee24e8cc5657823b7c92f5c9fd4454417223bcb63112bca4eae8480127fa1e10",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.0": {
            "manifests": [
                {
                    "digest": "sha256:247ad9b10c2135150607d4ae9d262bb3ac26040ed7c9e67d218a1b1f867636ba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5e008d74a1e127738ae1bfa4bc9b08bb4a775c3925d9b7166dcc139132aea5e6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2a93f74a9365058685daace252938dc8d6ddcce40f4e3456170e54a76530cee6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:5afca84d461998bfa9143942a14f36ae575862a6f566e8650dc171646c97dd81",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.0-rc1": {
            "manifests": [
                {
                    "digest": "sha256:313e017942d6a053764a9d9715210d20736b33dac90ccf91a958879aa06f3688",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a1712f48a57458677e66021b21164cfd8fc5ffc675a0b1d34ed47089a1b4c129",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:30be4d4d6122706cf93a4e930a31176bb4691f58f46276fbfd743fdcf408dd70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:192ce3ec409f0b34db76e1f5fa4de9c9f13bd6e2ea90579897ca75ecd1f47de1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.1": {
            "manifests": [
                {
                    "digest": "sha256:b7ef561ec7465fb621972b53a0066ccc047b3795d65288b128d5d171d69241c9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:14620283d9137942eaf314d577bb891ac6825a4e0b1c01bf81cee8532afb6713",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:037de4d08a744892ed0fa746782de38c145b24ef71c82dcba0d51142f55f6c8f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0bf5f661b65e4cc7a00576bcd597d39983255b24b72ba2b567d2068e825b1063",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.10": {
            "manifests": [
                {
                    "digest": "sha256:55b29d23a3a2dcf26ff4939c73f01b461703cc16d4c3ac67ef2cdbad32daf0c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0b55b3a6d51ff3bcaeada0f5ee7764bf2a86202c8c0a42981037905fb26c68bf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0a7e3d0e9756a48fb2dffa366dfbed5f991955bdd9e9550667a0f45465e41e19",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:0796e2d2be6a6d401d66020b71832cc08b95079e8b182a6f6dc5fe95eb0c9a67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.2": {
            "manifests": [
                {
                    "digest": "sha256:120f43bbc0ee041245631b78e6287e93861ae73674c034e4882bdc30290cf638",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:76b197761a6bf77dfb6940f47db781306b0e4a99bfe395ca4669ff664bbb5291",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a0a2220c6a23c21de8f2d0e5f77dc9ebc13275b5701c63e29c8e2a5489d993c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4d487e3d65910ec32f0dde45c570113467c73ba52feb45f6a2d2040bf17a6a2a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.3": {
            "manifests": [
                {
                    "digest": "sha256:69a51aa7d8136d2102ee928259613cfb6183ae232c405602d2ed05f4cf738fd7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:2babf0270263c3200f55f9bc64497dcc29ec3dfd097e0cab21831f7ffb00f8f3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d780768ef44e719a2790d977315e1af6e972a82a0f70a3a15d05cf921400aa87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:6ae47bdb7067322ca8848667bd7b122c52d7bdd8211f5510620c19a9557db82f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.4": {
            "manifests": [
                {
                    "digest": "sha256:21400edf331679320b58b38aaa9536d559607a488e3abd9c466c9e4d34b4d347",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:733b0849e10fe88802a6ff64c0e558134691db0f71474ba862b8cd2538fb5a69",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:ca441594a0c6388528f095115ec90a5f891a7d1dd7df969db3bfd12afa66f48a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:4ba33cf862c08e525d964a325f53081bd33ed2915faf3c41ed447e834398f32e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.5": {
            "manifests": [
                {
                    "digest": "sha256:e4783d42b4b98b1f4d04429e1f765c8dffe813c2a4c73613bc9d699427827df0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:fbc7c4f4a3557d2f27c4d740978de7f08257209c8981863b6564b01c0bcc95b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:26fa1f4a59dc081838871340cb4dabe4f5b937a80cb5449fb6f8196c7019c22c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:fda63e5ab761d3d41b36fa11ca8fb2c07c66bfb2894e5db8a204dfcaf0a7e71a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.6": {
            "manifests": [
                {
                    "digest": "sha256:51b0b968175393268217f325108ed77e34f66c4b0a5016a6b2604985ac3aba26",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:530498cd923cdb3492a12e49b3e0755aa11f24c5541ddedfe8585888ed2cbf4c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:12fe2841ae026c744f51a8f8614196c1c02cd666dba3197230613e0dea844c4a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:a999ef4f726431bc5e886acfeead156292e2df0c8368b93e01865b416d4d0dc5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.7": {
            "manifests": [
                {
                    "digest": "sha256:ca3dda86cf38ffa638cce17f5a3875d2eddf632fa5d4abf505eb9bf07619c07c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f1b3919c7187ec2063add9cdf8252c30994e45a3252648101d2c3b077063feae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:9a5449c7b8373e9a9656af28d6846cdbfd7eb2e20ae830176473066f143edfea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:1e86193cb54f60ef25482ff70ef088620d448393549504659bc61f69f95b23cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.8": {
            "manifests": [
                {
                    "digest": "sha256:77968904603ab968c31d94f1c359499d0dccb85fb98d813283b7c94cfba9d5b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:541846e245515970192190c83cab00532d3d5c87d250712f40edc2b841d1c4fe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:f897b010d5ea4a9ad1ad83d81dd13b7730d5f2e37fb7a9e722cc3d04ae91c5c9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:7f2acda7bad43485ce169bf567b86e9328a5fc3e2bc23a802a92c0bc02daf698",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.9.9": {
            "manifests": [
                {
                    "digest": "sha256:4825a6933b9d5da70cbdbde1e901d59bff3b15812242bedf30f9fc67ea7e2cc7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d3746ead42e7b12f20badd216f76cc05dc8c87015f7bcbfcb2f9a00a539ec924",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:eee918a22505d99fef81f489c63442f4f3a49671a2b361ad6df6d1d40361dfef",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1363
                },
                {
                    "digest": "sha256:d8544a043531b375a88dabf6dbd6ab2b9669b43127869278620800b204d6fb82",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1363
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "v0.6.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 5915,
                "digest": "sha256:1f127f53f8b5bb7ea9c174c396ec9991f66ed11d84e079a0cc870d6043c50a51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2310286,
                    "digest": "sha256:e110a4a1794126ef308a49f2d65785af2f25538f06700721aad8283b81fdfa58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11946705,
                    "digest": "sha256:b535b9a3c0aa8962d61302b28cb507ddb70a8794867e11f1c7270e123e44d8c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 148,
                    "digest": "sha256:be2a222963bdd95dbdf534c45150db702dfd6bce63ec29201a8558c8bfc2773e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1071,
                    "digest": "sha256:79fcacb436bda52a58f4df4ccf130fc203a9c2ca2bfd64732b54d944a376b3d0"
                }
            ]
        }
    },
    "tags": [
        "0.10.0",
        "0.10.0-beta1",
        "0.10.0-rc1",
        "0.10.1",
        "0.10.2",
        "0.10.3",
        "0.10.4",
        "0.11.0",
        "0.11.0-beta1",
        "0.11.1",
        "0.11.2",
        "0.11.3",
        "0.11.4",
        "0.11.5",
        "0.11.6",
        "0.6",
        "0.6.0",
        "0.6.1",
        "0.6.2",
        "0.6.3",
        "0.6.4",
        "0.6.5",
        "0.7.0",
        "0.7.2",
        "0.7.3",
        "0.8.0",
        "0.8.0-beta1",
        "0.8.0-rc1",
        "0.8.1",
        "0.8.2",
        "0.8.3",
        "0.9.0",
        "0.9.1",
        "0.9.2",
        "0.9.3",
        "0.9.4",
        "0.9.5",
        "0.9.6",
        "1.0.0",
        "1.0.0-beta1",
        "1.0.0-beta2",
        "1.0.1",
        "1.0.2",
        "1.0.3",
        "1.1.0",
        "1.1.0-beta2",
        "1.1.1",
        "1.1.2",
        "1.1.3",
        "1.1.5",
        "1.10.0",
        "1.10.0-rc1",
        "1.10.1",
        "1.10.10",
        "1.10.11",
        "1.10.2",
        "1.10.3",
        "1.10.4",
        "1.10.5",
        "1.10.6",
        "1.10.7",
        "1.10.8",
        "1.10.9",
        "1.11.0",
        "1.11.0-rc1",
        "1.11.1",
        "1.11.10",
        "1.11.11",
        "1.11.2",
        "1.11.3",
        "1.11.4",
        "1.11.5",
        "1.11.6",
        "1.11.7",
        "1.11.8",
        "1.11.9",
        "1.12.0",
        "1.12.0-rc1",
        "1.12.1",
        "1.12.2",
        "1.12.3",
        "1.12.4",
        "1.12.5",
        "1.12.6",
        "1.12.7",
        "1.13.0",
        "1.13.1",
        "1.13.2",
        "1.13.3",
        "1.2.0",
        "1.2.0-beta1",
        "1.2.0-beta2",
        "1.2.1",
        "1.2.2",
        "1.2.3",
        "1.2.4",
        "1.2.6",
        "1.2.7",
        "1.3.0",
        "1.3.0-beta1",
        "1.3.1",
        "1.3.10",
        "1.3.2",
        "1.3.3",
        "1.3.4",
        "1.3.5",
        "1.3.6",
        "1.3.7",
        "1.3.9",
        "1.4.0",
        "1.4.0-beta1",
        "1.4.0-rc1",
        "1.4.1",
        "1.4.2",
        "1.4.3",
        "1.4.5",
        "1.4.6",
        "1.4.7",
        "1.5.0",
        "1.5.0-rc",
        "1.5.2",
        "1.5.3",
        "1.5.4",
        "1.5.5",
        "1.5.6",
        "1.5.7",
        "1.5.8",
        "1.5.9",
        "1.6.0",
        "1.6.0-rc",
        "1.6.1",
        "1.6.2",
        "1.6.3",
        "1.6.4",
        "1.6.5",
        "1.6.6",
        "1.6.7",
        "1.7.0",
        "1.7.0-rc1",
        "1.7.0-rc2",
        "1.7.1",
        "1.7.10",
        "1.7.2",
        "1.7.3",
        "1.7.4",
        "1.7.5",
        "1.7.6",
        "1.7.7",
        "1.7.8",
        "1.7.9",
        "1.8.0",
        "1.8.0-rc1",
        "1.8.0-rc2",
        "1.8.1",
        "1.8.10",
        "1.8.11",
        "1.8.12",
        "1.8.2",
        "1.8.3",
        "1.8.4",
        "1.8.5",
        "1.8.6",
        "1.8.7",
        "1.8.8",
        "1.8.9",
        "1.9.0",
        "1.9.0-rc1",
        "1.9.1",
        "1.9.10",
        "1.9.2",
        "1.9.3",
        "1.9.4",
        "1.9.5",
        "1.9.6",
        "1.9.7",
        "1.9.8",
        "1.9.9",
        "v0.6.0"
    ],
    "configs": {
        "0.10.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.0"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2dcd5db41991923523903046a09f3d4b6de11951505255203c8bfad4794b8a24",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "bed42134133b0111fda1b898afda39286ac992dcfbddec15b1466c4bf62fd510",
            "container_config": {
                "Hostname": "bed42134133b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2dcd5db41991923523903046a09f3d4b6de11951505255203c8bfad4794b8a24",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-10T19:20:37.976576477Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T18:59:38.824299592Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T18:59:39.806848582Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-04-10T19:20:35.186930834Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-04-10T19:20:36.057802691Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-04-10T19:20:36.328418419Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T19:20:36.625743869Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T19:20:36.908342607Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T19:20:37.385915914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-04-10T19:20:37.68738291Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-10T19:20:37.976576477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:9ad5f0bc5fdf2d275068b660d0e4d525c888c565419c8b097c3dc18f6069dfa0",
                    "sha256:997ab7445cc4a3722d70c3ad741ba2a2a145e8660af38d55f147733e13a8e73d",
                    "sha256:c0a316c4221caf4bbde3c78be0eb780eae80ec7c2c4f78a17a190cb346e59097",
                    "sha256:429f5a5009953e221b5db2252bc0de262be30f97857d59a54ec5e081b3dcf495"
                ]
            }
        },
        "0.10.0-beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.0-beta1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c0c809de8063e156dcd91be18999537fce18d6ad25b50a3c9de737028d823ea",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "d33ce83beefcfd106fa233f8df48073e075512238ec1e24c795a7b36848b1a17",
            "container_config": {
                "Hostname": "d33ce83beefc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.0-beta1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c0c809de8063e156dcd91be18999537fce18d6ad25b50a3c9de737028d823ea",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-26T20:15:16.055965675Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-26T20:15:03.819526139Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-26T20:15:04.792083337Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-03-26T20:15:13.096567758Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-03-26T20:15:14.06876904Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-03-26T20:15:14.343312389Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-26T20:15:14.613324403Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-26T20:15:14.918665082Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-26T20:15:15.445110212Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-03-26T20:15:15.749803022Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-26T20:15:16.055965675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:832f80a7369a68c672cd97bc668a195f2b583e62339e868cd66b83fc47ed2801",
                    "sha256:690c744603a9ac23bff8fea3c1e85315d31f0020a19d12261ddecf90285417ab",
                    "sha256:4bbbc5b1ac3516b7eeec7c9407700a294796a7a15fda9196fdc32f2a648326cc",
                    "sha256:f8dab52a22fa97adf15109e7308340e229d507d7fd51490ec2c39c0d295e85f8"
                ]
            }
        },
        "0.10.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.0-rc1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:31ae2a6fff2d1d5e0c3990cc63a8dcda0f9925779b0335815c7abca534c85c15",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "7b40cbe3f2db4b53893bd547a745a32d6598ec54d136ad08f72fb6372a1cdb34",
            "container_config": {
                "Hostname": "7b40cbe3f2db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.0-rc1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:31ae2a6fff2d1d5e0c3990cc63a8dcda0f9925779b0335815c7abca534c85c15",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-06T21:00:18.572502256Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-06T20:58:21.660016156Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-06T20:58:22.58455314Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-04-06T21:00:15.828251239Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-04-06T21:00:16.671057941Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-04-06T21:00:16.983803277Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-06T21:00:17.26453726Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-06T21:00:17.53934385Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-06T21:00:18.007647023Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-04-06T21:00:18.300623145Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-06T21:00:18.572502256Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:943168ba0269ce94f6da04f16c2a96ea55f989ea717b3bef91f7c654940b6881",
                    "sha256:5094cdc8f030d8abfc18fb978c0e223f0e83115a39953ad26e62279450884114",
                    "sha256:1c652bc1ef5452a7f553d82289438b17ffcc8ab6fcb4d89f10f239a1d8696515",
                    "sha256:3219a9db9c5d834eaddc1d1f760f99afcc3ce579899ce59b34b75a860507484c"
                ]
            }
        },
        "0.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91959f43566f3cf5b179c10083a2cd07cba57b0d6d0e2262b366398f6e2b9dac",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "348046d7b0e569525c857cbf6c80b46476f3939300311505c3e21b84baf9b418",
            "container_config": {
                "Hostname": "348046d7b0e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91959f43566f3cf5b179c10083a2cd07cba57b0d6d0e2262b366398f6e2b9dac",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-27T22:36:22.319324044Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-27T22:36:08.621483002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-27T22:36:09.610792869Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-04-27T22:36:19.41597798Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-04-27T22:36:20.285569436Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-04-27T22:36:20.577029882Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-27T22:36:20.871862498Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-27T22:36:21.179277179Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-27T22:36:21.699355953Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-04-27T22:36:22.0079092Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-27T22:36:22.319324044Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:45309322c373cfa7aa25565c0b0e6c28797c55cf98a4c768dfebed84eb7100c9",
                    "sha256:e754830471d0d7d8fb16ea4a3d0a5db294f4239c5468dc32212f8aff82215e91",
                    "sha256:22d21a0ece0a60887b86599ad2398dc3aeae74eefd596736642728b1def039a3",
                    "sha256:641b22fe6ecb719a94ab2e240295a6b217fbf843910165cf081adb77a956ffca"
                ]
            }
        },
        "0.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.2"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88a239872aa22278e3f675a1ab3c22a59c7d947c0f4b95cdcf29025c189b4bc0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "1afb52966305cd63b75fa4039b099366c2d99e2de0a418340c2d3c171c0b5e01",
            "container_config": {
                "Hostname": "1afb52966305",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88a239872aa22278e3f675a1ab3c22a59c7d947c0f4b95cdcf29025c189b4bc0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-07T20:20:37.209492197Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-07T20:20:20.725748173Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-07T20:20:21.370359193Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-06-07T20:20:35.46310682Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-06-07T20:20:36.162476229Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-06-07T20:20:36.314300564Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-07T20:20:36.465964495Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-07T20:20:36.625953339Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-07T20:20:36.878669483Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-06-07T20:20:37.037791983Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-07T20:20:37.209492197Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:512797a1130304b84042a3c7efb8e86a094ef0a9ccd92577e6d1d18955ef7ec2",
                    "sha256:a7774d5d9a75943fb9b0269a59df62567ff31b59d7857e6003772f237984a411",
                    "sha256:c0f740c2619c5abda9bdb7302a48070d51b0cf8d44b8bb59636b0c4d68e4f471",
                    "sha256:25253dbe03def25f7819b3bcda911f13f0966c738b2f12ca1cfc1e7d54f14b57"
                ]
            }
        },
        "0.10.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.3"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fe871206dae96b98cd82c703494baaffd62751acffd1ee51ac189cf2e50a777e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "fbb05e0eb25a66392911517acdb47779318bf1fc69b6f57d64ac106132b0da79",
            "container_config": {
                "Hostname": "fbb05e0eb25a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fe871206dae96b98cd82c703494baaffd62751acffd1ee51ac189cf2e50a777e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-06T14:43:12.715865225Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:43:01.163978525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:43:01.88286819Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-07-06T14:43:09.987715916Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-07-06T14:43:11.012785954Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-07-06T14:43:11.24176503Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:43:11.500061281Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:43:11.753136316Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:43:12.201383798Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-07-06T14:43:12.431969819Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:43:12.715865225Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:747fa9c5081e8080e371069ce6bdbcffe858b4b1009a82f7958e3d4bfaa65cd5",
                    "sha256:f5b04d9ac389a475a7803d02b9ccf35a1e4290b344db42725b1efc64f58760b3",
                    "sha256:0a7a12949944355ab36ef67cc32a3a84d39c83d242545dd9db2111242db021b5",
                    "sha256:9f6ebd2c25f452d6bdcee01eff8739796e585ec6fc7ecbae4df4b6a41dfca1b7"
                ]
            }
        },
        "0.10.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:16b78280fb1cd66f241e4306bf12357d467b7dcddedb14253d5f2e1fc26feb97",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "df0502965cd9d0640feaa389403cb52281f68375f27f0942f350bb5e5f3d3d17",
            "container_config": {
                "Hostname": "df0502965cd9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.10.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:16b78280fb1cd66f241e4306bf12357d467b7dcddedb14253d5f2e1fc26feb97",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-25T18:10:01.679666092Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-25T18:09:39.637439908Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-25T18:09:40.553591217Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-07-25T18:09:49.531147991Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-07-25T18:09:59.854378917Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-07-25T18:10:00.169142641Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-25T18:10:00.431673115Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-25T18:10:00.700136177Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-25T18:10:01.154042655Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-07-25T18:10:01.416874648Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-25T18:10:01.679666092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:45bdfdc60f71ac8b58f5b17d2e88a52d6712d851b4172bac12013478bcc256d0",
                    "sha256:3b8063a23654e385d022bd7ef108f4de6880bb06573519c83df1867824398923",
                    "sha256:a58c770a708b4efa1481bac63199ffdf90376a8f55cbf4f77e4b5921cdacc72e",
                    "sha256:7de7cddb3981b79dd21b0d10982f4043e6666953c94b9dd78f68178a33e5879b"
                ]
            }
        },
        "0.11.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.0"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8df11e74e8f869523f696204a0c817a39cd8a75235d51358b981eabd8d8e46ee",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "b00fda6ad3ad0c600a10406d79365a4f2952a964cab9496df3f1cd75782d9747",
            "container_config": {
                "Hostname": "b00fda6ad3ad",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8df11e74e8f869523f696204a0c817a39cd8a75235d51358b981eabd8d8e46ee",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-29T15:41:46.206913674Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-29T15:41:28.666936134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-29T15:41:29.943941352Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-08-29T15:41:42.30692908Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-08-29T15:41:43.834947818Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-08-29T15:41:44.189281689Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-29T15:41:44.545678409Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-29T15:41:44.852792555Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-29T15:41:45.389783317Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-08-29T15:41:45.878923795Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-29T15:41:46.206913674Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:cbd926c8220bfdecffdfd257c8be54eb08279b0bdb07d1262b8fa2996d5bd81f",
                    "sha256:33be86203ed3e20d834899f2edf62fa7e8c73243c4438d051621370095eaa2af",
                    "sha256:29c52a8b5b4d3876ec20997f8ac9b3dfdf412066ab26f2bdeb01517125ce3c6c",
                    "sha256:d9118f081d7bf88c960ae743dec4345e8a70936b2235b90b488b1fc822337046"
                ]
            }
        },
        "0.11.0-beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.0-beta1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6369a561da13525cdcc2aa0364501dffd9a28e113e381ec65b42fea092e93ec5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "415159177a0084143613f96fd5a9b522962056ee3f5cbd759cb7ba50b9104c39",
            "container_config": {
                "Hostname": "415159177a00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.0-beta1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6369a561da13525cdcc2aa0364501dffd9a28e113e381ec65b42fea092e93ec5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-17T18:21:44.625449235Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-17T18:21:31.807438402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-17T18:21:32.961312844Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-08-17T18:21:42.420083521Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-08-17T18:21:43.182731847Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-08-17T18:21:43.391425694Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-17T18:21:43.602002342Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-17T18:21:43.817568807Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-17T18:21:44.178556356Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-08-17T18:21:44.403508355Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-17T18:21:44.625449235Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:7c6a3516f7bed5c81dcbc2ac7ab105df9d67f808cf47ae3b3ef4ba45713bba99",
                    "sha256:38885cff2ff9a9717022fd46aa6d683210b5a9da30b5e44f22cbb76b14b85f19",
                    "sha256:0bc43f890fabc2ef4b18b30cadaca8184ec42ed25cbed49fedf3a14d9032abdc",
                    "sha256:b9309b856c6bc9734d5fe4f24740d75b31c3ef46351418047b4c8f17c7b39f4a"
                ]
            }
        },
        "0.11.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:750c91e2b90122ed5105044c984a2f4d874418b383b380d74088d61a90bbdbe1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "7d6eaca5de76d153a371fdd28141894cc5f30e28e0ac515c8234a89832a4de15",
            "container_config": {
                "Hostname": "7d6eaca5de76",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:750c91e2b90122ed5105044c984a2f4d874418b383b380d74088d61a90bbdbe1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T22:57:33.32712128Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:57:24.963307272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:57:25.586730165Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-09-11T22:57:31.315180314Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-09-11T22:57:32.120059982Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-09-11T22:57:32.306736995Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:57:32.494966727Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:57:32.678712414Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:57:32.983402801Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-09-11T22:57:33.154739682Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:57:33.32712128Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:f600a1f3f0b3e82d0ecc322eb6cdd0c752c941ac79dd00b83947b13a47b2c535",
                    "sha256:af79ea03a408b882eed6e83f59f0fb12dfbdc59e7ebaff3b7c4f454d2fe63192",
                    "sha256:90ac416806792e41caf5903b9f51338c4aa7fefc8db158ec14fdb2c169d18077",
                    "sha256:95f3d546ef98f4a03d64adc9b2d3fefc04aa1c8e49be9049d3a678fd57588948"
                ]
            }
        },
        "0.11.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.2"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8738031c07536a24f88c0941ea1f96be2aa9b34d789647ff409df257dc835d3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "fdc809cc4494fc79521b2b2257287871703159d4ce97945a1abf893ee261572b",
            "container_config": {
                "Hostname": "fdc809cc4494",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8738031c07536a24f88c0941ea1f96be2aa9b34d789647ff409df257dc835d3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T17:20:16.522789785Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T17:20:04.808037785Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T17:20:05.540418202Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-10-03T17:20:12.257408226Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-10-03T17:20:15.155250731Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-10-03T17:20:15.364594107Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T17:20:15.550763308Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T17:20:15.746089073Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T17:20:16.083947937Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-10-03T17:20:16.329274311Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T17:20:16.522789785Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:dc83a54d9c053efdda0dc5a3f7f41161283aa13c998e2e9df23f4bb93aeb86f9",
                    "sha256:1902ca7460168527838840a6abb5714967d585ad00e8fc31145ffdcc777d9837",
                    "sha256:f4f384cda0fa15424ac0a9ac52e304743583c449e599b9b5539221a6ae68d14a",
                    "sha256:dfc47186350922ab7963db4b435d19e682ce4e835f10a361720b3824cd112306"
                ]
            }
        },
        "0.11.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.3"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8d43678d9c95f0777f0938ff3e930207c2cb0fdea2fc26cd7f8fcea036bce313",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "680e11a0e2f1fa0b1ef3dfdbcf23cc7e2f9c6535dcee2d64e34cb6949a2dc17a",
            "container_config": {
                "Hostname": "680e11a0e2f1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8d43678d9c95f0777f0938ff3e930207c2cb0fdea2fc26cd7f8fcea036bce313",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-08T23:32:49.347178614Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:32:39.731146992Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:32:40.411983928Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-10-08T23:32:47.295417088Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-10-08T23:32:48.012068522Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-10-08T23:32:48.204030701Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:32:48.391100845Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:32:48.619364105Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:32:48.946747902Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-10-08T23:32:49.143065446Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:32:49.347178614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:0c7278e156c642a5de7e46cb80af73fbd23d869b27af7803123f131cf8e10230",
                    "sha256:155d7b724627307186f37bc0def0a5c61590bd5427b295d3038ff6bbb875758e",
                    "sha256:793003a701202c7d61f22140c48c06a7b98c4dcaa0b4433134e1ea549441812a",
                    "sha256:262bc8a17150b7e5e53431f0bda64c5aa14584b74fef9324d9839b8bb4018f5f"
                ]
            }
        },
        "0.11.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c39fc3b0a7f4b23fd5a4698de9904296cafadc629de886c494eb7f6e89bb832b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "4c6f3ce21440771b083b42176941fc15e621371323bc0555cba2a2245d5b185e",
            "container_config": {
                "Hostname": "4c6f3ce21440",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c39fc3b0a7f4b23fd5a4698de9904296cafadc629de886c494eb7f6e89bb832b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-23T22:20:03.471282061Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:19:46.54935973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:19:47.366643162Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-10-23T22:19:54.227794835Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-10-23T22:20:01.834911431Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-10-23T22:20:02.070663606Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:02.335012667Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:02.595060731Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:02.963077285Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-10-23T22:20:03.230806695Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:03.471282061Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:ace9e70906beb4e59891e371cd7969e5241a88be14219f0dc3944d759fbe5003",
                    "sha256:426c35def245fc689425395ddeb2759142d07a1760b5eb4a36dd8bf300e23617",
                    "sha256:ffafeb1fdc0df9b50e942caecfcd3af08a4e9a48d465cb0976ffae5b3577caaf",
                    "sha256:1cf8c81f14de53e2215e17459d7b6d69d3549c41b5accdef4e14816bf158746c"
                ]
            }
        },
        "0.11.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.5"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e873299209a6808c6f7331e7aed3f05fc9487aac0dec126e470b86dbc6cd49c0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "50f75ba54a78e23ee56a0fadeb6c72596f69a0b0b4c12e6d3ae2066e8df51063",
            "container_config": {
                "Hostname": "50f75ba54a78",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.5"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e873299209a6808c6f7331e7aed3f05fc9487aac0dec126e470b86dbc6cd49c0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-14T23:20:33.715632202Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:24.843970564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:25.539317951Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-11-14T23:20:31.64032937Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-11-14T23:20:32.327836295Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-11-14T23:20:32.527334483Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:32.747676491Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:32.983166592Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:33.319771026Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-11-14T23:20:33.519299267Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:33.715632202Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:0be9bfb813dfc3bdd48cda05ce628d2d25a7c25785a348f50aad504adee90ad4",
                    "sha256:62d6dd8ebe930b37b338d352e79e2098a0c39171995b5e713b742d24990a121a",
                    "sha256:01bed6d696db8e7d1a42e5b1951a61f786e8335f327902ad9ac1afd89f07111d",
                    "sha256:f645705607e4e37d246ae654c48ea1ffb03dd254b71380f4ebe6f30db5edcbfa"
                ]
            }
        },
        "0.11.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.6"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2eaa753d6d8911736272e94347c7776ff3f1a3d0e2a829b60d55c8065095b31b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "375c036213bb8e9949a9621e6ca410b77d7e1eb88b8be7350bd4f4743a05502c",
            "container_config": {
                "Hostname": "375c036213bb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.11.6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2eaa753d6d8911736272e94347c7776ff3f1a3d0e2a829b60d55c8065095b31b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-31T02:17:19.962506296Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:10.209400848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:10.943598375Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-01-31T02:17:18.208953361Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-01-31T02:17:18.97040399Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-01-31T02:17:19.147339459Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:19.3108591Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:19.458799532Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:19.64793634Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-01-31T02:17:19.80341939Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:19.962506296Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:b79536af93c3b4bc7a7545b9ed11973761a4bfd86ecf5b09e163afe5b97f6bb3",
                    "sha256:4de7e88b7fee34be08e4d6736ffac841df46b2ebc3eac7c7a423e4df0ff1f2d5",
                    "sha256:03b51215a8edf6583fae442d893aa6b879985e9bd487b0725de443d242b92e5e",
                    "sha256:c1f2869c1a0402c34db4b839cef70df00949a44e3395c0fc98ed34d9fd4f100b"
                ]
            }
        },
        "0.6": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.5",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2187906ab4284d0241b1df2ede6c64e4987a9c10717cc65a565409e10e9e9fd0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "30eab29adb099e0cd5be3a6d8db50d1f7aa21df5846603376da61db918b41651",
            "container_config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.5",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2187906ab4284d0241b1df2ede6c64e4987a9c10717cc65a565409e10e9e9fd0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-03-03T23:49:11.087722891Z",
            "docker_version": "1.12.6",
            "history": [
                {
                    "created": "2017-03-03T20:32:21.010554522Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3df55c321c1c8d73f22bc69240c0764290d6cb293da46ba8f94ed25473fb5853 in / "
                },
                {
                    "created": "2017-03-03T23:48:52.343771679Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:48:52.65177413Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:48:52.919767731Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:48:53.824060374Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-03-03T23:49:08.238759451Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-03-03T23:49:09.065683636Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-03-03T23:49:09.323701801Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:09.671746793Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:10.022255152Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:10.455928399Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:ba639bce844e294b4d0251427ff66d5b257eca29d400982328a19a258fb09db9 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-03-03T23:49:10.767769587Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:11.087722891Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f8566ee5135862dd980160c27bd7721448a6f7f385bbb81f7f001f1b78a5fbf",
                    "sha256:865abb619930d701dc727ecfd30332ae577c711764a97d1d2bc0e75681a26bde",
                    "sha256:a32c78b7314ced4ce850cf9651979c52682362a3368a88f7dc90bd30a08ef251",
                    "sha256:bb06828db6670bf14e3cacb341d07c69af09dc49542e4feb0317ba04588ae043",
                    "sha256:51d8825b9198c7dec6c94e7bca698bafbea4b4f8f24d559119d67a536f8f033b"
                ]
            }
        },
        "0.6.0": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "26ba10d264c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ec85bf3d37c8abcc9255643a7a4273585700dd84842eac7504e06c785ceb26",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "2d1322c7510da276d7debff3f1245e45b0b523f54d39f4644f85e7940315511f",
            "container_config": {
                "Hostname": "26ba10d264c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1ec85bf3d37c8abcc9255643a7a4273585700dd84842eac7504e06c785ceb26",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-12-27T22:09:17.619763344Z",
            "docker_version": "1.12.3",
            "history": [
                {
                    "created": "2016-12-27T18:17:13.762716133Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eeed5f514a35d18fcd9cbfe6c40c582211020bffdd53e4799018d33826fe5067 in / "
                },
                {
                    "created": "2016-12-27T22:08:25.639758826Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:08:51.291803134Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:08:51.75577702Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:02.856671174Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2016-12-27T22:09:14.767831672Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config"
                },
                {
                    "created": "2016-12-27T22:09:15.169149911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:15.580491639Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:15.992578063Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:16.70374436Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:651481a06174882fc610f4b03e849ff25f9f05925a51ec8697af5ac4383b0316 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2016-12-27T22:09:17.207827875Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:17.619763344Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cbcbac42c44c6c38559e5df3a494f44987333c8023a40fec48df2fce1fc146b",
                    "sha256:7a10ef94eaf9f4d95368d6418b8c92750aab642e4b3d567d5db818947e9141f0",
                    "sha256:0281abacf681922de68d003b30af78a92dc2de266edc5b091a9942e5f7c901a5",
                    "sha256:1392e8b09194bb3bb95592be589966a9535ce26e598a4a127e02075c568cd184"
                ]
            }
        },
        "0.6.1": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "26ba10d264c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a86a34bb19ce5bcd1971a527994c0f38cc60c4bc04b7cca6a6a614546621d214",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "7cbabcc851ae687c6b439a939b7a050a759e264bbb8fb8163230853941140640",
            "container_config": {
                "Hostname": "26ba10d264c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a86a34bb19ce5bcd1971a527994c0f38cc60c4bc04b7cca6a6a614546621d214",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-12-27T22:09:34.461412105Z",
            "docker_version": "1.12.3",
            "history": [
                {
                    "created": "2016-12-27T18:17:13.762716133Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eeed5f514a35d18fcd9cbfe6c40c582211020bffdd53e4799018d33826fe5067 in / "
                },
                {
                    "created": "2016-12-27T22:08:25.639758826Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:18.288903901Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:18.735718117Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:30.251060726Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2016-12-27T22:09:31.473527728Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config"
                },
                {
                    "created": "2016-12-27T22:09:31.95174705Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:32.427754746Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:32.875776521Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:33.575920346Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:1b8586efe10a9ee6b52a1964d0aaf4c6e6b35174b129ee610e801e26dfabedd3 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2016-12-27T22:09:34.007837312Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2016-12-27T22:09:34.461412105Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cbcbac42c44c6c38559e5df3a494f44987333c8023a40fec48df2fce1fc146b",
                    "sha256:6837cdafec5fab4a8a3b4a760912a643831fc085727ebb840fa40d12750ddb7d",
                    "sha256:2d9f8d0bda02f232fbd62dc2bf9a090e12d4dbd29f5ad993070182b1c53708fd",
                    "sha256:908c3e46aec00c2859cedfbf719c6730ccf6b732197fe9eed4e400a07e88f32b"
                ]
            }
        },
        "0.6.2": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.2",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:677f0e64dbcc497499b9468dce20423cb30cd766cbdf198661b9a2804d622d80",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {},
                "StopSignal": "SIGINT"
            },
            "container": "952eae1bfdb2f921696f417b5f335d39207635587756e921b02e79835c19bc0b",
            "container_config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.2",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:677f0e64dbcc497499b9468dce20423cb30cd766cbdf198661b9a2804d622d80",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {},
                "StopSignal": "SIGINT"
            },
            "created": "2017-03-03T23:49:27.271948849Z",
            "docker_version": "1.12.6",
            "history": [
                {
                    "created": "2017-03-03T20:32:21.010554522Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3df55c321c1c8d73f22bc69240c0764290d6cb293da46ba8f94ed25473fb5853 in / "
                },
                {
                    "created": "2017-03-03T23:48:52.343771679Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:11.743747336Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:12.023805955Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:23.915769558Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-03-03T23:49:24.907127751Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config"
                },
                {
                    "created": "2017-03-03T23:49:25.215752533Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:25.519990624Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:25.85207852Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:26.319928928Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:2f69367854bb5af19802f74d01f80a5dc6e478c88dccda444e9e9fb5409297f8 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-03-03T23:49:26.632881553Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:26.959996099Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [SIGINT]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:27.271948849Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f8566ee5135862dd980160c27bd7721448a6f7f385bbb81f7f001f1b78a5fbf",
                    "sha256:804b793d30f7da290db26f2a2c6d5ff45cd74762e5095777f5e72601225d1b59",
                    "sha256:f6846c9fa609a1bc2941e97a890f95111d1e626200d353acb3f673955a618ffe",
                    "sha256:569d965c5fbd1264531dcde888f4a49a8bffeeb747173e41e151eced2cebc667"
                ]
            }
        },
        "0.6.3": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.3",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7034b4afcbc1efd2c548110d8285cdf9cf78a4d82684c222f2db2a6cc636045",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "954c446e04c2a578803a72dfc921dc614afb38a4a7c65a5e624e4d17cc8f535c",
            "container_config": {
                "Hostname": "837a64dcc771",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.3",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7034b4afcbc1efd2c548110d8285cdf9cf78a4d82684c222f2db2a6cc636045",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-03-03T23:49:43.451721967Z",
            "docker_version": "1.12.6",
            "history": [
                {
                    "created": "2017-03-03T20:32:21.010554522Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3df55c321c1c8d73f22bc69240c0764290d6cb293da46ba8f94ed25473fb5853 in / "
                },
                {
                    "created": "2017-03-03T23:48:52.343771679Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:27.791998606Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:28.103787877Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:29.09546073Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-03-03T23:49:40.324589687Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-03-03T23:49:41.327983349Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-03-03T23:49:41.64398761Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:41.975715153Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:42.331851919Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:42.799938237Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:8ac8f2aeeca79c343b62d66a3abb91f92c6d266c79f567957f472abbf75b2bb6 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-03-03T23:49:43.151785541Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-03-03T23:49:43.451721967Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f8566ee5135862dd980160c27bd7721448a6f7f385bbb81f7f001f1b78a5fbf",
                    "sha256:d32ccb2f6d11398ce157f0f1942179c125b8be1f8b83710830fe57edfd1c3f00",
                    "sha256:0498c76410b51b3135dbc805f0d96a523eb932bdc8096e9c7350611cfa675cc7",
                    "sha256:c7a8f2f69c9b64ef9a6f6a23df1f3c55096bda7183870c73d3f35b822c495688",
                    "sha256:504351879b246aae9990f5d661b254df959ea829b63a3909e667398dade1bae8"
                ]
            }
        },
        "0.6.4": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.4",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:beecd0c398f8fea42840643fc2b54c1d71d1f3ae530d9b0ecb0750a3ae6daeb5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "4b6c2cef5a55be0b2856b1006287972117a82f1353c53447c2acf2d28e50bd19",
            "container_config": {
                "Hostname": "4b6c2cef5a55",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.4",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:beecd0c398f8fea42840643fc2b54c1d71d1f3ae530d9b0ecb0750a3ae6daeb5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:31:44.099626872Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:15.392542275Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 in / "
                },
                {
                    "created": "2017-09-13T14:32:15.684058011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:19.207291861Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:19.359892184Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:19.495209107Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:20.171110495Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:31:42.471782375Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:31:43.079387994Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:31:43.23927287Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:43.391012006Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:43.546914091Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:43.787664231Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:ba639bce844e294b4d0251427ff66d5b257eca29d400982328a19a258fb09db9 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:31:43.931007516Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:44.099626872Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2b0fb280b60dad0c3e2f6b207ef0d8f6a04f09638d245d3a2fdf0d6933e734d6",
                    "sha256:373c0572addd11694f3cf620709ef91a45dfa965fee237ba57b7af69c84ce69b",
                    "sha256:008505509ae4c40935e676c00a21154a4aecf219079fdfd1a15a58605969d56a",
                    "sha256:0dca9497abc70100948fbd22d6192f11c384bb83d54980f403f9ed44b9c05541",
                    "sha256:b60081bc60cfee46f4d60d4011301fc76b1ad7abf1b03ca81351d10c2a2fff8c"
                ]
            }
        },
        "0.6.5": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.5",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:34a0115cf5240dfcd9811043447ef8b6a721000c68dff0c7fddf9ff2370b3260",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "e345ab2b4e00b26bc9982bf1ccd6b64f84eeba359addc470534d62a780798750",
            "container_config": {
                "Hostname": "e345ab2b4e00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.5",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:34a0115cf5240dfcd9811043447ef8b6a721000c68dff0c7fddf9ff2370b3260",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:32:12.923779064Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:15.392542275Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 in / "
                },
                {
                    "created": "2017-09-13T14:32:15.684058011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:19.207291861Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:45.387179321Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:45.560147649Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:31:46.171536795Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:32:11.239541927Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:32:11.843373745Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:32:11.991356251Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:12.1515261Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:12.323759631Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:12.583554157Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:ba639bce844e294b4d0251427ff66d5b257eca29d400982328a19a258fb09db9 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:32:12.775456228Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:12.923779064Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2b0fb280b60dad0c3e2f6b207ef0d8f6a04f09638d245d3a2fdf0d6933e734d6",
                    "sha256:c3f27cee68d4b54bd4f33149acbef72feaae842d43e939fe7b9cd006c91e3af0",
                    "sha256:0d82d6de51294cceb94b6b6fb07748eb37d1f0f5f41055b55b6194fb1f06cb54",
                    "sha256:d1b6b39ef048896f7d6a31c7716567cbefc74aa5cc46d2a1a8a4743c0e5dba3c",
                    "sha256:cbf07840d8ab976b32c242f2a1ce7b19421b1266e75e03b2087154747d7a6fe6"
                ]
            }
        },
        "0.7.0": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.7.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:86396eacce24b475fc9c396d5f3f57c68cc8bbb46d9dc450ae57e0e6d43dafe3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "a7eaa73e16bf166fea1ef703ac6dfd426e2304fecfa50770c1b17ed40b823514",
            "container_config": {
                "Hostname": "a7eaa73e16bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.7.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:86396eacce24b475fc9c396d5f3f57c68cc8bbb46d9dc450ae57e0e6d43dafe3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:32:25.080306547Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:25.788552283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-09-13T14:32:26.049525424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.26326911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.427378979Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.591558279Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:15.307401063Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:32:23.419609104Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:32:24.011101168Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:32:24.183251997Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:24.347625796Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:24.499218058Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:24.750945916Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:32:24.911604979Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:25.080306547Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:861b8ff26b95be8abc9a878e5eddae9e3ea4a99e35972f0e9a64357ca29c04f5",
                    "sha256:2493db7ca083661e454f8ec75828608ee8edcef0448de8b47f0adccd496c3413",
                    "sha256:450aae964480a40b6f9adb9d52463fea28952cc03daaef8c67f40c0388c18a7f",
                    "sha256:73a1a51226c21471584d6aaf1f4d189a0288effc6cbd0658ad3e728808664d7f"
                ]
            }
        },
        "0.7.2": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.7.2",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54e5359a4da205dcb0d0c65e811240f35404c3744d7fc30853e6ccde1eee4d78",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "c73125b552343b7c70b7317757957da1dd38a6db44444209ab2ccee6ec276144",
            "container_config": {
                "Hostname": "c73125b55234",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.7.2",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54e5359a4da205dcb0d0c65e811240f35404c3744d7fc30853e6ccde1eee4d78",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:32:36.986617892Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:25.788552283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-09-13T14:32:26.049525424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.26326911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:26.411314353Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:26.575512857Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:27.143293508Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:32:35.374696691Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:32:35.967437377Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:32:36.127076003Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:36.287097364Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:36.44299813Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:36.68771377Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:32:36.838941069Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:36.986617892Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:976b43c2e304d71cacc9b6f419f4d003f6d95a717b38bfc2609e656d413de184",
                    "sha256:6317a96cd1ca62aababbfaf379d798d662869cab5074c7c97238538351fc013f",
                    "sha256:29707ab1b53adff31000a67f834cbe96718d08cae5611cb227cfc208bbdd3c7e",
                    "sha256:dd44438f4867ba5ccf9851e48e49fdb46c59031459de2e75e7a31afa28b4dcc6"
                ]
            }
        },
        "0.7.3": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.7.3",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fb07c60d50ba88e2a1248dedda92c34eb60910d4053631634a91d78663885a29",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "1c8bb5b3b98efe46ef29de0261323b69410295356a5f701401972b3fbfd74b36",
            "container_config": {
                "Hostname": "1c8bb5b3b98e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.7.3",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fb07c60d50ba88e2a1248dedda92c34eb60910d4053631634a91d78663885a29",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:32:48.967047614Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:25.788552283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-09-13T14:32:26.049525424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.26326911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:38.339120233Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:38.499452035Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:39.139560484Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:32:47.315459797Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:32:47.927808052Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:32:48.087300589Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:48.255383422Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:48.402992004Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:48.659449498Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:32:48.803046324Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:48.967047614Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:4213de7edf955d4df88f6b9a560be6ab46c757a1d00b1c4567a9ae9709769cf8",
                    "sha256:4cef81b0cfe496829bddb9d8e8f0f839a4e5237f2c655add83e3aaa9fa8abd44",
                    "sha256:7a37972b9e1eb34cd4d7a53d18ebd2a850eacbe6c4ffc905217e11641cfa144e",
                    "sha256:0abe908e88eccdbee952a3001568fd99168f379effbb25aa9edb1c8b238c5929"
                ]
            }
        },
        "0.8.0": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91e9cb12a654812d755faa35515643ea5d030e8a4db0ed343a3415a470094e59",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "b3e45a5763f30f08defcf3ae0308504510aa2b2c64e2087b5e8185ade4765346",
            "container_config": {
                "Hostname": "b3e45a5763f3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91e9cb12a654812d755faa35515643ea5d030e8a4db0ed343a3415a470094e59",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:33:09.443396539Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:25.788552283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-09-13T14:32:26.049525424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.26326911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:50.26331277Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.8.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:50.411152687Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:50.979556634Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:33:07.742934825Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:33:08.378874673Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:33:08.555474352Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:08.730898137Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:08.907441004Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:09.135279087Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:33:09.299171573Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:09.443396539Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:b2a5558b9f00359affb317828e9677881ecb075e8083df796fd3583aef2f599c",
                    "sha256:4d2b7612d60b21ea67990a75b51406389497da559478979178d5cf9e9db6001d",
                    "sha256:52b2fc9e79caaccad86553467cff5e39b4de278bcfa5b60bad4717fc84ae2f3f",
                    "sha256:7c5350dcf8c4e1067266656e980f1d02761222eee34e05a1d77c8f5a092a55d2"
                ]
            }
        },
        "0.8.0-beta1": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "e1ede117fb1e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.0-beta1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a80aa4709f5d80218836ac5e4421c3737a5f5222019f4085fc277e32e976a691",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "805ce82b9449ea1f24556fc17ec0e703fab912fbd5c5f33f0822ae663634f003",
            "container_config": {
                "Hostname": "e1ede117fb1e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.0-beta1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a80aa4709f5d80218836ac5e4421c3737a5f5222019f4085fc277e32e976a691",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-07-26T05:28:42.731906068Z",
            "docker_version": "17.03.2-ce",
            "history": [
                {
                    "created": "2017-06-27T18:41:51.5382773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-06-27T18:42:16.849872208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T00:37:25.03496837Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:29.486079453Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.8.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:29.716195301Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:30.969441161Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-07-26T05:28:39.50670909Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-07-26T05:28:40.912374683Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-07-26T05:28:41.141915209Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:41.343393664Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:41.590505929Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:42.095684628Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-07-26T05:28:42.314940493Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:28:42.731906068Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:ce15f77fc806cd05ecdec2274e8b5f40db70c6648c59b9871f8e333a8c93f6cc",
                    "sha256:4f4717fe19cf654d08cfc43676c73c7d3762405331dab3a3c5d75ba3c91a004d",
                    "sha256:b731878ae877b18c0c4ec295648fdc077df6af43dd31a0674bacb81681fbd437",
                    "sha256:f7973d166bea93db6bcd4de19359907d9385144e523857eba115cccaecfebcb2"
                ]
            }
        },
        "0.8.0-rc1": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "e1ede117fb1e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.0-rc1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba5307520b276f757664394e58307835d82ebff0c94fb57fb78e3900aa0ddfda",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "e5adab13f4efe222f83fcb454460682051de2da186da043cb9fbbf473137ba7b",
            "container_config": {
                "Hostname": "e1ede117fb1e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.0-rc1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba5307520b276f757664394e58307835d82ebff0c94fb57fb78e3900aa0ddfda",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-08-03T21:04:47.891566069Z",
            "docker_version": "17.03.2-ce",
            "history": [
                {
                    "created": "2017-06-27T18:41:51.5382773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-06-27T18:42:16.849872208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-29T00:37:25.03496837Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:35.56357858Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.8.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:35.770942856Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:36.534331626Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-08-03T21:04:45.639036126Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-08-03T21:04:46.352935953Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-08-03T21:04:46.57918856Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:46.80753934Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:47.059288905Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:47.383216188Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-08-03T21:04:47.623693195Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-03T21:04:47.891566069Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:1605ea239acdf97473129a6521a0172165b4ff99f220b12b2574e7203302ebfc",
                    "sha256:38650a1bc7e2e7bef0dd7cee99e9eca9a24c690db4e4d8989c7c67dfa575d545",
                    "sha256:aee14c2a22e428d8f8ecb999adab7ab9ab64468677d1b7ab87069dfa0a0f38b8",
                    "sha256:c0f815930be50e5eabfcd541e959fdeb57deae3c8bcd6ef6f7d08afd5d2ba127"
                ]
            }
        },
        "0.8.1": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fed25db082406db55f6057d108331a641bb916cfcf5befffe37e0d5943a7df06",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "8e0bb8497bf2fa39160a7e8a4264bf69a98b442cd415fc29408eb2a6df417d10",
            "container_config": {
                "Hostname": "8e0bb8497bf2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.1",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fed25db082406db55f6057d108331a641bb916cfcf5befffe37e0d5943a7df06",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:33:23.074932764Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:25.788552283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-09-13T14:32:26.049525424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.26326911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:10.774938616Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:10.931446027Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:11.547215533Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:33:19.495649428Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:33:20.680190277Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:33:20.983789821Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:21.371300038Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:21.767717781Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:22.487907701Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:33:22.751292583Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:23.074932764Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:3f7cd9746fbc195ef20b5e9305dc5cc64fbdff13a6b820766a1a0ee7bd265d0e",
                    "sha256:27b14b2ab1202fe416017f3b8dd632ea3bd586e78f0320374d1e067c0b5d46b7",
                    "sha256:e97ca1aaa1593194d1c4d2e0951a7943195a6607fa06f28a1ea601e86a675721",
                    "sha256:f15a11c29c12e4e9b54b6f201c1e608d86b57a523eff8ab76a16ae6c7af1dc35"
                ]
            }
        },
        "0.8.2": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.2",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7687c24c24809c925966d384275459c184051832348a2a9ff7a8bec841887120",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "93fa97f81d1a0442af9d07fb7036cc35527847f038d7947fb05c8fea48263e0d",
            "container_config": {
                "Hostname": "93fa97f81d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.2",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7687c24c24809c925966d384275459c184051832348a2a9ff7a8bec841887120",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T16:33:36.011206769Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-13T14:32:25.788552283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 in / "
                },
                {
                    "created": "2017-09-13T14:32:26.049525424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:32:14.26326911Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:24.547274526Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:24.699299219Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:25.6473512Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-09-13T16:33:34.251059158Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-09-13T16:33:34.831550468Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-09-13T16:33:34.991071733Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:35.151459737Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:35.311229706Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:35.563514733Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-09-13T16:33:35.727774572Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T16:33:36.011206769Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0",
                    "sha256:0ed7baf766fcfc51babc3f4b3d09fe32d04944106e09e329015294c6d2a8c25c",
                    "sha256:fd4b496ad01d520ce23d297658bfc807ce391361c0753512b08d77fc741633dc",
                    "sha256:7bca959d3ad9def466cdc4bc8b1a42130365b7fcced19f00dbbe84b87d2063ab",
                    "sha256:9e842ee70ad5ed8c8170bcbcedbe64d89bf643b6765683492dcf0c5a58486b61"
                ]
            }
        },
        "0.8.3": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.3",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08d78e705997bcce9345f4e9c23900226c8ccbcd0e62bd029f6e4381c000a3cc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "d65e0cd23038e342886e803540cd491a578b18e113029c376da7a4f2c772634e",
            "container_config": {
                "Hostname": "d65e0cd23038",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.8.3",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08d78e705997bcce9345f4e9c23900226c8ccbcd0e62bd029f6e4381c000a3cc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-11-04T01:33:40.185355832Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-11-03T22:10:18.456471742Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1e87ff33d1b6765b793888cd50e01b2bd0dfe152b7dbb4048008bfc2658faea7 in / "
                },
                {
                    "created": "2017-11-03T22:10:18.605674287Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:23.249190659Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:23.396851724Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:23.58513675Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:24.183436237Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-11-04T01:33:38.174090657Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-11-04T01:33:39.086384035Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-11-04T01:33:39.237224611Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:39.422197233Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:39.59357421Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:39.849822871Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-11-04T01:33:40.018857133Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-11-04T01:33:40.185355832Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2aebd096e0e237b447781353379722157e6c2d434b9ec5a0d63f2a6f07cf90c2",
                    "sha256:0d4866a98f3723c740717395e42ca0fdc7622c43560252d6e04bc930a7df6396",
                    "sha256:9c018fed7d8cf9cb517ca2d9d5767e9026f062855f7a5b50d61201f8eee684a6",
                    "sha256:f2430b3a30f27f7461e1019d514dba18a4125beaad1aa7698465ae2a1e7fe5c0",
                    "sha256:ce975ce791af78371befa6a089d87620ea9cbf3964fae623c3e555492103609a"
                ]
            }
        },
        "0.9.0": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:43cc17b490cf11aab60193d7333dc0df9fc542f64f0c6f88387f142ecb3a4ba1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "f5cd0c26191b3a7a92cca4484077b46301b6d67daf4e1d0731683cdfee1cfd49",
            "container_config": {
                "Hostname": "f5cd0c26191b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:43cc17b490cf11aab60193d7333dc0df9fc542f64f0c6f88387f142ecb3a4ba1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-01T22:32:57.73351162Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:46:26.49860539Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb381165dec3689cf77e902c07ea78ca4da6bce4f5ac1909eebd40dba3273bfe in / "
                },
                {
                    "created": "2017-12-01T18:46:26.693546129Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:30:08.246718782Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:30:08.439138512Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:30:08.643071631Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:30:09.333308404Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2017-12-01T22:32:55.82964107Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2017-12-01T22:32:56.486625009Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2017-12-01T22:32:56.685524144Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:32:56.864515733Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:32:57.049509269Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:32:57.354936632Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:98bcd0ef55bd9ba781f5f486eef8d94bca7953eea74d785ef2b77818ebda7972 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2017-12-01T22:32:57.541280815Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-01T22:32:57.73351162Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6dfaec39e726d242fcd42e9fffac82c3079a1aa20fc39420b662507b163ee4da",
                    "sha256:92f6bfd97be8ea02058d18cd215f37800a588217ff99511290d13457d89f85f1",
                    "sha256:3c7c2b2a08ec13dc2754bea16aee28dc8d423caf396f60e75287a7b2acb276b8",
                    "sha256:e1d4d2c26f3dd25ff471e5ce4c6de97c411b184a40cb5d29441ab7c52fb451fa",
                    "sha256:dbe5830767aa07d154a13cde820f1d8857cba232a380adcde378c0f02eda158b"
                ]
            }
        },
        "0.9.1": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:82d31345b622109c5c4b420ec232405e806d2f1fe143571998f3d7298b652b3f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "f982e5c7e430f01dcb702a85e265fa2540d582b2af7e215f3e818a645f88c823",
            "container_config": {
                "Hostname": "f982e5c7e430",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:82d31345b622109c5c4b420ec232405e806d2f1fe143571998f3d7298b652b3f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-10T02:17:53.523838073Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:38.317079775Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6edc55fb54ec9fc3658c8f5176a70e792103a516154442f94fed8e0290e4960e in / "
                },
                {
                    "created": "2018-01-09T21:10:38.538173323Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:35.792067659Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:36.126929409Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:37.224919312Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-01-10T02:17:49.717797114Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-01-10T02:17:50.93222941Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-01-10T02:17:51.289395609Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:51.696581537Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:52.058909009Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:52.763475913Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-01-10T02:17:53.160034235Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-10T02:17:53.523838073Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9dfa40a0da3b1a8a7c34abc596d81ede2dba4ecd5c0a7211086d6685da1ce6ef",
                    "sha256:64f5b7ef930fb74a070532fd3df2ff3a1eee1d1b0efa7ab8c2ffc6a66b70fb59",
                    "sha256:f170aea877d8afc76c2f091e9b23ed78fc13c68f1196a04f0dcacd96bfcb52ad",
                    "sha256:7727c185d338dc478cdc15c66e4979291032b26d04ddca6d0762b1a579e52c24",
                    "sha256:2db0d6ccce257aad0dd6e60586facb2e7bd221758cd0e59743d991262fd71452"
                ]
            }
        },
        "0.9.2": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.2"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f608e1458ed3d23febb2ed780270fdb106fee8fd1ddf254da194061472558e4",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "5e912136958f86551827921a66fa410d1b5030a468f6a67d7c060da6a2052626",
            "container_config": {
                "Hostname": "5e912136958f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f608e1458ed3d23febb2ed780270fdb106fee8fd1ddf254da194061472558e4",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T22:57:49.238739003Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:12.520353078Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:12.778255918Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:13.617122759Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-01-26T22:57:32.879952435Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-01-26T22:57:36.7140558Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-01-26T22:57:36.975696488Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:48.04185355Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:48.284008759Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:48.736885244Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-01-26T22:57:48.982242341Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:49.238739003Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:b9792249075bc550e412b3aa59fa047739c325792a501f7cc5f148fac45f40a3",
                    "sha256:83a41a37e9703274ed78157768410d81285a60609385740ad7de904dea8ec52d",
                    "sha256:aabf88a2f99e0d4b0c6395c40a5d5f6dad0b0ab64916935e37b4ce8a29afed85",
                    "sha256:fe466f326568fed81facaa17cb4071a7ce58ed07902379a3742a3242a4d6cf46"
                ]
            }
        },
        "0.9.3": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.3"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d00360c8c170b833e927173f9983e54684f8569586c3f38303722e2fc9af427b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "f5d64fc88b8bd3241d5568580e6ef510a3698a0e0a0bd335174f5ce888610953",
            "container_config": {
                "Hostname": "f5d64fc88b8b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d00360c8c170b833e927173f9983e54684f8569586c3f38303722e2fc9af427b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-29T18:51:07.242818529Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T22:57:12.520353078Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-29T18:47:51.369626144Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-29T18:47:52.598506636Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-01-29T18:50:58.111849306Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-01-29T18:51:05.5494131Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-01-29T18:51:05.794931019Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-29T18:51:06.034987188Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-29T18:51:06.318497654Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-29T18:51:06.72390959Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-01-29T18:51:06.981865399Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-29T18:51:07.242818529Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:e53773506899428520f03e651db6100d03d28b98f16ebbcf66d96f9896dbbe80",
                    "sha256:de4c25c1aa6924812e71277aa8d1254d6027a83c7a74d9871fc62f556506d9cf",
                    "sha256:3d3d4bc930d5789ccd7a7a92aff91ecd0079a43d40654aea19fb44abb6edbe7d",
                    "sha256:1492d0e93e27db9e214822b8df3361dc51e9dd19af18a057ace3cc85f724351c"
                ]
            }
        },
        "0.9.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:385d58ce093d396eb9b3ea917c9ec735a9571471368a3fcac8f3b8455a6ad441",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "529c35909d6eee73fa0e6db8bf00a47551bdc07dd254b626e65983b7f2fdce16",
            "container_config": {
                "Hostname": "529c35909d6e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:385d58ce093d396eb9b3ea917c9ec735a9571471368a3fcac8f3b8455a6ad441",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-20T23:21:29.436087238Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T23:21:16.763366719Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T23:21:17.613543895Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-02-20T23:21:27.081835936Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-02-20T23:21:27.825884518Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-02-20T23:21:28.048496313Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T23:21:28.28903639Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T23:21:28.529442946Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T23:21:28.927809133Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-02-20T23:21:29.169746782Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-20T23:21:29.436087238Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:06d8aa7f18f1eb1c80d3631841ee3169a8f78a39cedb766a667027f31bd8818f",
                    "sha256:5115384d52998b4bfacf1c80c33cb0db83b0cb7dba1989cdb25b24acb1dfeb14",
                    "sha256:be32004051e6172a6d8694abc1f10204560ad8a0021b1ff8887c7345d528448b",
                    "sha256:0f3c5b4f33a903039148f49aff6f689f75a344cf9636ce8c7965440ecc4f9d1d"
                ]
            }
        },
        "0.9.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.5"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ed572ec913df656a5e6a55bb6ad2e24c6959ac25e513049c4765d8f1d7b1141",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "a2fa7c9c21a5e7283a05cf4c6bdb8e1bb269e9777ce5064f10dda27ec9706c39",
            "container_config": {
                "Hostname": "a2fa7c9c21a5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.5"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ed572ec913df656a5e6a55bb6ad2e24c6959ac25e513049c4765d8f1d7b1141",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-27T17:03:31.230456235Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-27T00:18:45.858658097Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-27T00:18:46.731924931Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-02-27T17:03:29.055493016Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-02-27T17:03:29.772422728Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-02-27T17:03:29.976957674Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-27T17:03:30.218965864Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-27T17:03:30.446956288Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-27T17:03:30.796069249Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-02-27T17:03:31.01739985Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-27T17:03:31.230456235Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:abc971349cf5ab86ee325720278c2f7b79298689fb0ae40a32202d18b85f5260",
                    "sha256:b8b8db306e115470cf825852e291549b3271d75d731ab872662bb7065b4db993",
                    "sha256:cf0f43d141785025ced0f955c2d9829d56b4c2efc119a934cbc4a89568c28ad2",
                    "sha256:5459e324162a5fbb2f21fe3f4a1ca2fb2ee4b305157757721ed24d9a61564233"
                ]
            }
        },
        "0.9.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.6"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c30b631783a5a1ffbf4b4127a91dd8d2a34f77b7f630d74f4512c88c1269d17",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "94a2418b47d3646c9988dfa6c7ecb7205d21b81c1e5a5e1ab07c44e0022c9e39",
            "container_config": {
                "Hostname": "94a2418b47d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.9.6"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c30b631783a5a1ffbf4b4127a91dd8d2a34f77b7f630d74f4512c88c1269d17",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-21T19:07:35.59809243Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-21T19:07:23.033313381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=0.9.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-21T19:07:24.048674367Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-03-21T19:07:32.893089759Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     gpg --keyserver pgp.mit.edu --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-03-21T19:07:33.742679755Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-03-21T19:07:34.020154919Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-21T19:07:34.288824821Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-21T19:07:34.538921556Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-21T19:07:35.008487518Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-03-21T19:07:35.299145495Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-21T19:07:35.59809243Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:3d337730b078226252b5900b0dea14167f6400b2331ff6072f2e28d5ced03e09",
                    "sha256:dcf4c8d67b66507612e53d0f1bb5427cc4eb8141ecba9f544f9d2831ec0dc2a5",
                    "sha256:10cd1c4d27686b14d26d1be06d5479bd4fe6dff1dda3c520abd72646fd90f0fb",
                    "sha256:8ea29dc11941b1a4b869d6b7878798ce9123df7fc3b11c8508ed594f25035467"
                ]
            }
        },
        "1.0.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.0"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a3884cacd1d8b36c45cdb2134fa6bd0b980525ec37adcd8ead7bc9447d5b25af",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "e477692dc3d3706159c7e8c1e8d91556076a3df388db5b16dcf289157175ff2f",
            "container_config": {
                "Hostname": "e477692dc3d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a3884cacd1d8b36c45cdb2134fa6bd0b980525ec37adcd8ead7bc9447d5b25af",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-04T23:36:08.543234274Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T23:35:05.827048145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T23:35:06.619596941Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-12-04T23:35:27.662951654Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-12-04T23:35:37.776852109Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-12-04T23:35:52.739115798Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T23:35:52.995222153Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T23:35:53.259374167Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T23:36:08.04289606Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-12-04T23:36:08.286895728Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T23:36:08.543234274Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:ebbcfc835bf5649bb1c729b393b33a8a2eea4fe7f1b3e94ade99b9743c556d2e",
                    "sha256:5d27e250f0f96b867e1788a472486bbad7e26a818275f243dbd0e039f7886f80",
                    "sha256:7d03da1d09939bd9c972488324829e1a35434bd6b1415ae8f074601e582b7b68",
                    "sha256:84a8c0e488ece356e1d27d716c00f84305c91b73217096f122b79532e0827530"
                ]
            }
        },
        "1.0.0-beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.0-beta1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40631bc40c476632f0f0390bba468100b847bd9cd148dfbfb79cac2b3031781d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "787a25fae646256498cae12f8fb2c76222b8aa7f6a06c0692197bb004a1bd36e",
            "container_config": {
                "Hostname": "787a25fae646",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.0-beta1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40631bc40c476632f0f0390bba468100b847bd9cd148dfbfb79cac2b3031781d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-23T22:20:24.806938645Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:15.206611432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.0.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:15.898905084Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-10-23T22:20:22.645640818Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-10-23T22:20:23.374124379Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-10-23T22:20:23.571838989Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:23.786919736Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:23.998543764Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:24.352608366Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-10-23T22:20:24.569092491Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-23T22:20:24.806938645Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:f09d79294f3eaa9cbb7f7b2a5f4219bc6d633c8177e793fba29e8dbcc390e86f",
                    "sha256:845bffcc24903d473b72f2225d1192384bdbc3c657b9d6d6a9647ce4213b6df0",
                    "sha256:a82767baa8fd5e7fb6935ee2861ef7c85122a4f27379a3c8a110be251a1203a1",
                    "sha256:f4616f226e48b450f1e780ddcd5001812730f3b92b9518baa4e5d628ec4f0b9c"
                ]
            }
        },
        "1.0.0-beta2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.0-beta2"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b74845b61b879c34dd1d26999ab96c68f4125d4e9e6949f0274da957046039c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": null
            },
            "container": "b7c1ea1311c6b55c83a085f97e245b440090972dc7dca56661524567c747ca6b",
            "container_config": {
                "Hostname": "b7c1ea1311c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.0-beta2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b74845b61b879c34dd1d26999ab96c68f4125d4e9e6949f0274da957046039c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-14T23:20:58.263313735Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:48.960009739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.0.0-beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:49.675393992Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-11-14T23:20:56.092481488Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-11-14T23:20:56.775418236Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-11-14T23:20:57.023451077Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:57.243450595Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:57.463334495Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:57.835226409Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:71f93573d5097ef42f7373b359230a67d5c04db40151c9f350d7d9c881341c67 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-11-14T23:20:58.044130521Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-14T23:20:58.263313735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:931bc8b63a4bfdca2ee134153f1b57d2bcf90e9baceb53af12e232d494164393",
                    "sha256:f685cfe0473407bd397e7a40b3ffc263860f83e56cc8165f258fd2b255f359eb",
                    "sha256:4cc70b6414af84b95d46ccb868478a35c5afab4a54a10732c47200037afefc13",
                    "sha256:cfc5647c70bb145ca2553a8df21b5d1292850c8f1831e0b791e2faae7dc0e104"
                ]
            }
        },
        "1.0.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d9a8027e2868b89637006f0408dcb243f9cb84ccbd232d02912ede263e36e63",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "3931d0924a5f92b03671dd3c33ddf10d0d3562d49f75a9f11cf42d6dae72a16e",
            "container_config": {
                "Hostname": "3931d0924a5f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d9a8027e2868b89637006f0408dcb243f9cb84ccbd232d02912ede263e36e63",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T00:47:15.997475065Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:29.97055571Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ff00caea4e83dfade726ca47e3c795a1e9acb8ac24e392785c474ecf9a621f2 in / "
                },
                {
                    "created": "2018-12-21T00:21:30.122610396Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T00:47:02.6612962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T00:47:03.396610317Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2018-12-21T00:47:11.838599977Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2018-12-21T00:47:12.968023103Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2018-12-21T00:47:13.203478713Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T00:47:13.44690002Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T00:47:13.692352312Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T00:47:13.945548469Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2cf778f577f27333fdd34a8c9bbb529a6bc3f4b4f6599e38b0af9d428091c36f in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2018-12-21T00:47:14.960826323Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T00:47:15.997475065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7bff100f35cb359a368537bb07829b055fe8e0b1cb01085a3a628ae9c187c7b8",
                    "sha256:1baa5abdf3af02b5b9637b0ab2342be67c72a0377afff774dd22b684cf109910",
                    "sha256:3987953d355709380ad69314f1da0847e9b8894601f24828595592a909918048",
                    "sha256:b1f8ab8bbd82354ec7107a5d368ffd7fa431341ab78e0ea8e5573cfbcca24d25",
                    "sha256:c99df78d34555bc9d55649d60c6747b93905e71c653442b8135521e65e7c3619"
                ]
            }
        },
        "1.0.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.2"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c145938550f0fc26a15a0242907a7994c4b82d13bfc9d88dd54e0201df62ca4f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "136786f16a749c2c175df21245ae8f88c7e79f56d473bba0262142f26475ddf3",
            "container_config": {
                "Hostname": "136786f16a74",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c145938550f0fc26a15a0242907a7994c4b82d13bfc9d88dd54e0201df62ca4f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-31T02:17:06.71893989Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:16:53.786977013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:16:54.904755084Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-01-31T02:17:04.9320959Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-01-31T02:17:05.677403334Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-01-31T02:17:05.851623871Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:06.027584341Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:06.19142966Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:06.383740461Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2cf778f577f27333fdd34a8c9bbb529a6bc3f4b4f6599e38b0af9d428091c36f in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-01-31T02:17:06.547298907Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-31T02:17:06.71893989Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:5b5bd832d380f7107ad2613a634b70a09d972cd6a5a59420800c7724b8aae1c8",
                    "sha256:b8dac48f95fc5d6154d7e1ecbeb76884f61d35485678206ff27f314919663a75",
                    "sha256:c1adc3f9bdd7d3704b4943131da113a819724047be484aff60bb7ae3e8348866",
                    "sha256:e064393cff6fea0df8da9230e6e4901a804b46408c3b168db285a8e0e8999092"
                ]
            }
        },
        "1.0.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.3"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38924c044a96f324ebebf1caa99dd613ca2b41ff005351bd42f00cf9f3e97031",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "2173f8e08111aac0fa874a60427cb8f0c0229753c418b442ab5baedd4829303a",
            "container_config": {
                "Hostname": "2173f8e08111",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.0.3"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38924c044a96f324ebebf1caa99dd613ca2b41ff005351bd42f00cf9f3e97031",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:12:21.475429149Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:12.347931617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.0.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:13.173793696Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-03-07T23:12:19.613024956Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-03-07T23:12:20.363275431Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-03-07T23:12:20.523467612Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:20.68417638Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:20.850844095Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:21.125103947Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-03-07T23:12:21.298872593Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:21.475429149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:57384f477babd4cc412c035284709d21d862027ceac9f2e172a53bbf17d653e3",
                    "sha256:58aa29a45a131617973e21375147ff48beaf030982413fcb76134dc3e0b314f1",
                    "sha256:f25b3ed82c3adae7c6c176de6915e3ebc1d5eefb560c5a964610e720db7afa7b",
                    "sha256:e732008128e84084f54a9d9d0409156e37cdc127da3193efde31211dcc743627"
                ]
            }
        },
        "1.1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.1.0"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2eab8dab42417f669365234493888fec1d6e15249a721987f36e4eac35c98c99",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c8e58ebc649041a288b3a7dad8b6a9bbd30280d90abddbded253075513364a9b",
            "container_config": {
                "Hostname": "c8e58ebc6490",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.1.0"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2eab8dab42417f669365234493888fec1d6e15249a721987f36e4eac35c98c99",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-20T23:00:07.786788765Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T22:59:55.555361685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T22:59:56.623821242Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-03-20T23:00:05.196994629Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-03-20T23:00:06.332625294Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-03-20T23:00:06.546937327Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T23:00:06.78604697Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T23:00:07.050767874Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T23:00:07.343316838Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-03-20T23:00:07.552194154Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T23:00:07.786788765Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:799d51b035925fe5ae7a45dfb7d80aca78a31a0d83afa7bba668e8dc80f0f0b4",
                    "sha256:6e33a97bf07d97d23c2ba54d881ce2422a3d52b10627fc8cdce12c4a52d5d87c",
                    "sha256:6936f6357045af4ed909e4db73b2ad092e95a72b083bc128a1c82245bf25152e",
                    "sha256:e751eca7c20de4eee6f4ad6960b9c52f8368b5a3298ec9835ee19e41f92bae4e"
                ]
            }
        },
        "1.1.0-beta2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.1.0-beta2"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dfd3613cade28f467aeb2a18393811c95e41464f3d5d54c4eb78a14b80faf4d1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "51db5bee6371d5566a7ab764ed6144c73a2de3d36e7a5ed574f4f30210eb88bc",
            "container_config": {
                "Hostname": "51db5bee6371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.1.0-beta2"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dfd3613cade28f467aeb2a18393811c95e41464f3d5d54c4eb78a14b80faf4d1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:12:34.574892262Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:24.747090081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.1.0-beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:25.568395718Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-03-07T23:12:32.717314895Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-03-07T23:12:33.463770003Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-03-07T23:12:33.651267762Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:33.819711297Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:34.00666875Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:34.201647108Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-03-07T23:12:34.376744325Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:12:34.574892262Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:4dc96db63af14afb901cb736cef29e6f7fa3ef9d8cc0025cb419f1f36cea2b8a",
                    "sha256:d9d6201d1c799a3bd80c7b701bb8df3a803bcf6c706977c53fe9b7b036966f7e",
                    "sha256:2d187053c784afda2a764fcfeb35e04e50312a0ef5377e5796617e223a77cf05",
                    "sha256:0766b84da0d1320d9cc2bd038bad33acdc96606bad80a0ff55c77f632ef6e5d8"
                ]
            }
        },
        "1.1.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.1.1"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dffe269ddd88461e9ade18f1e7b3d93abdc266384fcf819c60bd2cc6dab022e5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a74c21d213c8dac34bb6cdbcc79ae781bcdff77bcc3619e61432fdca26eb74d5",
            "container_config": {
                "Hostname": "a74c21d213c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=1.1.1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dffe269ddd88461e9ade18f1e7b3d93abdc266384fcf819c60bd2cc6dab022e5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-12T22:55:09.64716619Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:54:55.523873037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV VAULT_VERSION=1.1.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:54:56.365326174Z",
                    "created_by": "/bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-04-12T22:55:07.637880123Z",
                    "created_by": "/bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-04-12T22:55:08.495619844Z",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-04-12T22:55:08.66265705Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:55:08.859487103Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:55:09.047457474Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:55:09.259643563Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-04-12T22:55:09.475849081Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:55:09.64716619Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:117a01747061ff5f9575421b03b2a429b3e6b2358730f571ad3423b9f015edfb",
                    "sha256:3aed7bb678a8377a3c6758361b0dc4afc70703fb9364f8c423209e95fa54fada",
                    "sha256:acf406b6da7edcfff0aaeb716f49e35975718e35443448b195d4886e4ff3ca71",
                    "sha256:181fa860382298fee06c3fd2486e2e2566ce1e94a5053a5830e0e87ee395171e"
                ]
            }
        },
        "1.1.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:848953963e449d06e5801385581dede53beebc9a6cc711c1bca70d6c20f48fe0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "4a68645ad58f10b6056b05d1c44242ed5763d91d663933f15a7e8ce796496474",
            "container_config": {
                "Hostname": "4a68645ad58f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:848953963e449d06e5801385581dede53beebc9a6cc711c1bca70d6c20f48fe0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-23T21:20:15.335244277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-23T21:20:04.982509464Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.1.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-23T21:20:05.767905384Z",
                    "created_by": "|1 VAULT_VERSION=1.1.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-04-23T21:20:13.519388323Z",
                    "created_by": "|1 VAULT_VERSION=1.1.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-04-23T21:20:14.255889258Z",
                    "created_by": "|1 VAULT_VERSION=1.1.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-04-23T21:20:14.42721235Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-23T21:20:14.611092239Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-23T21:20:14.796014387Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-23T21:20:14.971003304Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-04-23T21:20:15.151037377Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-23T21:20:15.335244277Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:34d9e51dd6e2cb05b4d1727709f6b235685eb843df9731f242fa1d26fcda38dd",
                    "sha256:f96f35c815313881880cc92b8d255a203e2286cbf8432f83575581d8d6a8c789",
                    "sha256:f2b0f6393caa342a93cc7aca079cc8df8bf95e64883f1f7adff55e548234e17f",
                    "sha256:e89c796c0c6dbeb90857c26ab69bca1ea779c841a0f53263d6c973bd2afdd16c"
                ]
            }
        },
        "1.1.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74821dc5d7b078c62e5f5db949c97be18a7b8eb3b92c58a44f848b61bfa47227",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "da61993b092fdf2ad186a8959cf9758f12350791929882f24f5a0e477f88a672",
            "container_config": {
                "Hostname": "da61993b092f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74821dc5d7b078c62e5f5db949c97be18a7b8eb3b92c58a44f848b61bfa47227",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-07T20:20:26.37502136Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-07T20:20:15.698041916Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-07T20:20:16.454719897Z",
                    "created_by": "|1 VAULT_VERSION=1.1.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-06-07T20:20:24.032536578Z",
                    "created_by": "|1 VAULT_VERSION=1.1.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-06-07T20:20:25.257012318Z",
                    "created_by": "|1 VAULT_VERSION=1.1.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-06-07T20:20:25.432049774Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-07T20:20:25.615211055Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-07T20:20:25.799483603Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-07T20:20:26.007952914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:61c9135d08b2112860354f20efc76b80893dff6caf2a00dfe17ea2ca064a50c2 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-06-07T20:20:26.198733261Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-07T20:20:26.37502136Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:182af4bfcbe5429062f0b1ed6980c5c0d3e490a0f39534bfb04df492d57136a2",
                    "sha256:2c17590dad7022c97dfa113dcee439fd8115194080de4994be5b923a1fd13301",
                    "sha256:8c72299f20905281a2fdba334cc41c28ca50b7a8a28f7138ec597cc0b85152ad",
                    "sha256:a49e9efe83d2593dbe93f6c6c99d6d5992adae9c26a5385a91bc633d4e1403f1"
                ]
            }
        },
        "1.1.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2298dafdeac71323f5df181fee2df2d05e6a06f547c4c475d5f5059c0846f46c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "0814d8528c279e0e27662c021aacc24c795c14260b9036bf3763235be21f6d2b",
            "container_config": {
                "Hostname": "0814d8528c27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2298dafdeac71323f5df181fee2df2d05e6a06f547c4c475d5f5059c0846f46c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-30T21:28:15.702359775Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:08.719928669Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.1.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:09.435261494Z",
                    "created_by": "|1 VAULT_VERSION=1.1.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-07-30T21:28:13.98203999Z",
                    "created_by": "|1 VAULT_VERSION=1.1.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-07-30T21:28:14.715360222Z",
                    "created_by": "|1 VAULT_VERSION=1.1.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-07-30T21:28:14.898869932Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:15.054864478Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:15.198712033Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:15.382780086Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-07-30T21:28:15.53487483Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:15.702359775Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:6208792fbb2bcc5acef9b42e680da3ccc2d0a80bab6a8e9e50ab4424af4bbd0f",
                    "sha256:76ee32644c3fa7c6541bb5ac711a0dcf6538780b2c02c65f89855d417030797e",
                    "sha256:2f69d377a8ed36270ab327590538fadb15e809708174ae11d5eaab6621f6e5db",
                    "sha256:f7e3e55d2b5db3cfc140ef9ea50bae73d8da4734f57d38b644f7d67282e84a45"
                ]
            }
        },
        "1.10.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:57ca534117864ef7f2c49963800fd1bd96fbfb85e5b7e56ccc18e94af1845d75",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "9a9bac090d8b4c0ba5e583c6946d2f6942277b9fdfd8100a9b0d867308df60e1",
            "container_config": {
                "Hostname": "9a9bac090d8b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:57ca534117864ef7f2c49963800fd1bd96fbfb85e5b7e56ccc18e94af1845d75",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-05T11:27:27.243657794Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:17.994742743Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:18.528378938Z",
                    "created_by": "|1 VAULT_VERSION=1.10.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-05T11:27:25.76945381Z",
                    "created_by": "|1 VAULT_VERSION=1.10.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-05T11:27:26.637781271Z",
                    "created_by": "|1 VAULT_VERSION=1.10.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-05T11:27:26.731728217Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:26.830474044Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:26.928190508Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:27.039024522Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-05T11:27:27.128816601Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:27.243657794Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:8f05c7fd11ccf678526c6d44c8cc343284e8b07dbaa741b15e70b66ab179e477",
                    "sha256:5b526bd329ba8da471297795a7d2e648cf6641ffcc1044c7a2a48f3283d5e3e4",
                    "sha256:7e780aae8f9e40441dd4681a078e8bb1322ab2edb07de12376851535b2cc2645",
                    "sha256:c335c5f9aaf1c58bdc723eb95fe78c147e35b44e6467f8988519076851eefd6a"
                ]
            }
        },
        "1.10.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:ca18f745b4289d5a7194085d35d5192d6350b9eb44680b0397661717d003773f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "7de56c482b2e0a3e70f367c825036f381d5d812b2750769cc83f73e974ea05ce",
            "container_config": {
                "Hostname": "7de56c482b2e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:ca18f745b4289d5a7194085d35d5192d6350b9eb44680b0397661717d003773f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-18T06:09:18.627458805Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-03-17T15:19:26.289703304Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec3735d4b1b4b070607b94e3bd360117b07dc26e1baf5dd485b49b3413e8fff in / "
                },
                {
                    "created": "2022-03-17T15:19:26.610817197Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T06:09:02.696636987Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T06:09:03.584189118Z",
                    "created_by": "|1 VAULT_VERSION=1.10.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-03-18T06:09:16.311234863Z",
                    "created_by": "|1 VAULT_VERSION=1.10.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-03-18T06:09:17.604308989Z",
                    "created_by": "|1 VAULT_VERSION=1.10.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-03-18T06:09:17.761947017Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T06:09:17.911221823Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T06:09:18.063302519Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T06:09:18.234788846Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-03-18T06:09:18.385853633Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T06:09:18.627458805Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2e38978dfe406188f56968f907e9c3dd2692a5d21671e2307bd5a503fb08f8b0",
                    "sha256:73abdb0d2798a823312d1dd945d3e010016e2bd2afc5e20134c91a9bf5d18d3d",
                    "sha256:80c6e099f5ee64d05916e0c35055d43909d4552e39da856c97b34e4aff86b92b",
                    "sha256:e93d2e02d9ac765e84bb2085459dc70f8bbc42fd41a00e7abe45c3ae7c55b763",
                    "sha256:aa2fc1e155851df19edc64ef46ebde4b1ac472ee691b3b94155f067aa221e838"
                ]
            }
        },
        "1.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:53d9d564f90b050255a5bd37a7407d1923a3f54661415e2d1df5c5544f8488fd",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "20c60777c78de0181b57d509a6df08ffd79efa21c3be6f95f127fb302bf84434",
            "container_config": {
                "Hostname": "20c60777c78d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:53d9d564f90b050255a5bd37a7407d1923a3f54661415e2d1df5c5544f8488fd",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-23T00:27:57.052739459Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:46.481916675Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:47.045439253Z",
                    "created_by": "|1 VAULT_VERSION=1.10.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-23T00:27:55.480758851Z",
                    "created_by": "|1 VAULT_VERSION=1.10.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-23T00:27:56.431936629Z",
                    "created_by": "|1 VAULT_VERSION=1.10.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-23T00:27:56.525786328Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:56.624672374Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:56.72966239Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:56.840847878Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-23T00:27:56.950648952Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:57.052739459Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:f8530e293d27faa933ff68eaa6d826b6813d74d0a368ede7f912280719642116",
                    "sha256:a610b8a37ec234a011ee30ec000c1ef3390766a5bf3cc2df992f98953cfc0066",
                    "sha256:5f11486acc1cfa286289730a2bb2a753041b92aa87c59416311bf869488f8d99",
                    "sha256:f02b8cb9c241b2cfe3374252b02ce03529a00bd4f70978a5af3ee81c9d5cc9d3"
                ]
            }
        },
        "1.10.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:afb2dae62b4046e16a5def0958fc2f4c260ab6c7d2134e30c3d1e64165549896",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "08bb0a5175ab7ec1ce5c63a2b786506c42fb506e1a7488476e17e020b9f106b0",
            "container_config": {
                "Hostname": "08bb0a5175ab",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:afb2dae62b4046e16a5def0958fc2f4c260ab6c7d2134e30c3d1e64165549896",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-11T14:14:23.458925658Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-11T04:46:59.853255849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a41bb436701fd0adf99a3157d19f172b3e54ea033f5c617009e2d1bdeac206d7 in / "
                },
                {
                    "created": "2023-02-11T04:46:59.997430675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:13.453033246Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:14.029725544Z",
                    "created_by": "|1 VAULT_VERSION=1.10.10 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-02-11T14:14:21.77654576Z",
                    "created_by": "|1 VAULT_VERSION=1.10.10 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-02-11T14:14:22.80923941Z",
                    "created_by": "|1 VAULT_VERSION=1.10.10 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-02-11T14:14:22.912800597Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:23.018426836Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:23.12660554Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:23.245449376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-02-11T14:14:23.348326111Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:23.458925658Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:625523cb9cce7a1bcc1d03e3038de4843a27af3b92d859004bcefb0027291933",
                    "sha256:329a5d907f3c25302c2407b5c0f8b4476ef75010b90f4a67c89d10767b356cf9",
                    "sha256:7e2b07c067afe58f74bf90e36c932d1ed864a92b573e3e40867b35df1d8b4a69",
                    "sha256:0c50c6440469ed0a3b5c71e4459efdaa73afd8dcd6ddcce0b75ccb75bbbca262",
                    "sha256:63127bf1c9d4f2c1635d09c80491d5aef8bd4d4159e32e9c6a6f4b7806d09de4"
                ]
            }
        },
        "1.10.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:526929e0e6837196ef53b5f36e772aeea51cbc511d2fcd5d13e9f78290c41ba3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a727b34e9a4d0baa4181af7b9fbe9074c901257e68876c06d5157ef04e0bb539",
            "container_config": {
                "Hostname": "a727b34e9a4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:526929e0e6837196ef53b5f36e772aeea51cbc511d2fcd5d13e9f78290c41ba3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-30T02:09:49.652655791Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:40.081480198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:40.600438314Z",
                    "created_by": "|1 VAULT_VERSION=1.10.11 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-30T02:09:48.312612277Z",
                    "created_by": "|1 VAULT_VERSION=1.10.11 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-30T02:09:49.143589452Z",
                    "created_by": "|1 VAULT_VERSION=1.10.11 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-30T02:09:49.224018546Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:49.309997286Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:49.39523598Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:49.485031532Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-30T02:09:49.564440182Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:49.652655791Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:0d1f381c035ac5af4d0925bb783d42958c7abeb435cc6b2ef2a0592ba9b7c66c",
                    "sha256:b8a9055b5b39cfb90c627671eec3ea10e24d6432b68f6c8159394f7493687a8f",
                    "sha256:7e4fd86310da9db828db736ded008bdc1751dcdef906d7eefbf4049bd16e4ad8",
                    "sha256:71e603645944b6c164affa06ad0a0c9f12a7d03e4ffaae765d6e776f57cd5bb3"
                ]
            }
        },
        "1.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:8c7500c1379186df89677d75e283d9afda5e830de83207e4a231be47a3950d63",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "29a584e07d09bc1f079d82d6a6c83af40a711d7a37cf78a3285a573b6b78f7db",
            "container_config": {
                "Hostname": "29a584e07d09",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:8c7500c1379186df89677d75e283d9afda5e830de83207e4a231be47a3950d63",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-29T22:27:50.284090897Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:38.380871642Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:38.925279477Z",
                    "created_by": "|1 VAULT_VERSION=1.10.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-29T22:27:48.613188624Z",
                    "created_by": "|1 VAULT_VERSION=1.10.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-29T22:27:49.655166484Z",
                    "created_by": "|1 VAULT_VERSION=1.10.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-29T22:27:49.756286915Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:49.859420906Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:49.965471184Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:50.079059446Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-29T22:27:50.176201843Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:50.284090897Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:c0401a1fd6af78f7fb74b8ca2723e86f81e809427652017e87b4b2418bebc058",
                    "sha256:57572ce2ac21cc0eb51826e63583c8334f5219e691c46c2052781ecc07d6ff02",
                    "sha256:68f738350b85b322be26cbc53b4ef545ab1a4072864c5ab9b5fd31ec072e9259",
                    "sha256:799e643423282a54d1aa965010ede854b4b3666d2548c90d1689a2a60c0ecc5a"
                ]
            }
        },
        "1.10.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:a8f00bc63f518e9fd61bffbd3b8d9b6c4b6ab47ed6c220275a2f288851793f97",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c994af1995cbe3b4871a97c2351608ef4da5177e22c543d520d24c09b049c62a",
            "container_config": {
                "Hostname": "c994af1995cb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:a8f00bc63f518e9fd61bffbd3b8d9b6c4b6ab47ed6c220275a2f288851793f97",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-12T04:41:15.215392597Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-12T04:41:05.02847045Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-12T04:41:05.65671232Z",
                    "created_by": "|1 VAULT_VERSION=1.10.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-05-12T04:41:13.741441207Z",
                    "created_by": "|1 VAULT_VERSION=1.10.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-05-12T04:41:14.585264807Z",
                    "created_by": "|1 VAULT_VERSION=1.10.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-05-12T04:41:14.684263347Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-12T04:41:14.788502786Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-12T04:41:14.892256853Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-12T04:41:15.010105915Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-05-12T04:41:15.10939833Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-12T04:41:15.215392597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:5f5726939114a98ca0063c75ac6eb10ff52574b5e8656c669e56bd5ee80ee17b",
                    "sha256:5bf8d04458bcf1ad63eeb00b63656268751fae16dfe8e995a3b11e59d6347a5d",
                    "sha256:a834f8ed957f9a51de40f938d7b1601605cb04be7a07114e73a7962182b31eca",
                    "sha256:84ef07cb2f26c62c802e6980c664bbfe8e2380f0b0bbbceb966ebd24f0d3834a"
                ]
            }
        },
        "1.10.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:4801966f9c96ccffb69b47c91451b2d168afa9dce0d54c5e87e8357934384e52",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c358e3b1c0766d848c802ff4fc493be969f56afaacd548a98682eba629b2f8a9",
            "container_config": {
                "Hostname": "c358e3b1c076",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:4801966f9c96ccffb69b47c91451b2d168afa9dce0d54c5e87e8357934384e52",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-20T02:03:23.729377461Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-19T22:20:18.8583754Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80b46be2fe86b402518b00758ff5d8556d92113dc267a002b6c72a5f9c6742a3 in / "
                },
                {
                    "created": "2022-07-19T22:20:18.974810894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:14.049814021Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:14.673681947Z",
                    "created_by": "|1 VAULT_VERSION=1.10.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-07-20T02:03:22.047463983Z",
                    "created_by": "|1 VAULT_VERSION=1.10.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-07-20T02:03:23.073769579Z",
                    "created_by": "|1 VAULT_VERSION=1.10.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-07-20T02:03:23.174187513Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:23.282945224Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:23.391334195Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:23.512148569Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-07-20T02:03:23.614338429Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:23.729377461Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:713e7675e2c1e8b5b484c7032e21ca148e1fb18dad74f61be1338b8671ed2aef",
                    "sha256:e21052ee5e5cd6c9227473a6a705691c22022eacb6195b2409b805fab170a6e0",
                    "sha256:859e814a83517d7058d9e1eee1ad293b3fa1fa4d653a2d3a53d58f8c24a79c57",
                    "sha256:1c8522babf0fd5fcf447560e4920b005b55593647fb9cca6fd813ef34bf4797e",
                    "sha256:231488f13b8604899c828fd8394d76d5a590a092b082cc35b00fb84bc6638466"
                ]
            }
        },
        "1.10.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:de4173e75271005ec9ac8e43e4fecf49ed6bb9ed0f6183844b5810b70f76c363",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f8484de85ed867f9b377d83fbf93d06ef6acd51c5b6fa2493dbd875233a0f2b0",
            "container_config": {
                "Hostname": "f8484de85ed8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:de4173e75271005ec9ac8e43e4fecf49ed6bb9ed0f6183844b5810b70f76c363",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T01:27:15.931417058Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:05.627992907Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:06.218262208Z",
                    "created_by": "|1 VAULT_VERSION=1.10.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-08-10T01:27:14.322106532Z",
                    "created_by": "|1 VAULT_VERSION=1.10.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-08-10T01:27:15.309516418Z",
                    "created_by": "|1 VAULT_VERSION=1.10.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-08-10T01:27:15.410113702Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:15.514121305Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:15.61432139Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:15.73240063Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-08-10T01:27:15.830825388Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:15.931417058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:27996f3535b23b1ee30374020da27a74acb7d129cb272c49a107725db5bb9b2f",
                    "sha256:1e07d31b293cc0cd3f9f34adcf8a9d7915787395993ab0d32ab089d882b83589",
                    "sha256:6e4107bb18ccacae1553de6416ea29f6fefb79f4f07d6bf44e9f51f9d9233dad",
                    "sha256:8231c29785b165ebb73db75e3e164d84fcd6f1612cda9cb23012bf639c6715c4"
                ]
            }
        },
        "1.10.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:56ea2686e6f7810e341f7da9e2af2830eebbe995abdd5badf258c4142e87750c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d4cef93d126a0d9b1e4ca041f22140db2c7a840cae2a8add2afb613641caebdf",
            "container_config": {
                "Hostname": "d4cef93d126a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:56ea2686e6f7810e341f7da9e2af2830eebbe995abdd5badf258c4142e87750c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T04:27:36.214349371Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:25.901290976Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:26.490862228Z",
                    "created_by": "|1 VAULT_VERSION=1.10.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T04:27:34.406129699Z",
                    "created_by": "|1 VAULT_VERSION=1.10.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T04:27:35.551487773Z",
                    "created_by": "|1 VAULT_VERSION=1.10.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T04:27:35.652557191Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:35.765463534Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:35.88157969Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:36.002511041Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T04:27:36.105110401Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:36.214349371Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:6e4c212c9c765c624067af7a5a60929862be191f64c45861ee1524988651ba93",
                    "sha256:36c41f0f8fc53e296fe7b29f5019ce9fdb9e0fe34c8a6e6966bb34b040672874",
                    "sha256:7fd2d99639a94804bcb7be8dde421f60257a956f6ca6f4b070fda5aa2d65d5f4",
                    "sha256:77352f5d61be784085368a1ea08d5a71de871fc114b20d2b8391ce31136e81f0"
                ]
            }
        },
        "1.10.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:a0b1f9f292a2b03e653a07936fed10cab0941e37ff21bf6b3d8858e12168b05c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "987a34537b2451c5257bbd3c8b7a1990bdf9f7a29bd4a01a83d45377714c3087",
            "container_config": {
                "Hostname": "987a34537b24",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:a0b1f9f292a2b03e653a07936fed10cab0941e37ff21bf6b3d8858e12168b05c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T20:35:16.140774759Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:06.568311933Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:07.132240628Z",
                    "created_by": "|1 VAULT_VERSION=1.10.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T20:35:14.483459735Z",
                    "created_by": "|1 VAULT_VERSION=1.10.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T20:35:15.453572746Z",
                    "created_by": "|1 VAULT_VERSION=1.10.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T20:35:15.553363829Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:15.6690445Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:15.782184122Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:15.901314729Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T20:35:15.998490665Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:16.140774759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:fb916dde03cf56a9c8d68bf8da4185846cd40b863d2b40f5309dd2f43fb340d8",
                    "sha256:9100abbf27e22629e057d32cceb7449985c6974aef0f694f0438ac57a869d174",
                    "sha256:cc53de630df56278fc64dbf3306a977849c19a471cae600d6be523adcabfe29e",
                    "sha256:ed6aaa1218049a7494b006960cab05bd5defc52ee5166e03d2fac2d602e7e4a8"
                ]
            }
        },
        "1.10.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:7692104cb00c7a0b4c75fdae197ee13ed6e2995c18af06a2df849adcc786f0bf",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "3819d2d2a3ab72730dd7b43ffa8707c0a6ce1c2369dd4fe2d2bb0570471bf081",
            "container_config": {
                "Hostname": "3819d2d2a3ab",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:7692104cb00c7a0b4c75fdae197ee13ed6e2995c18af06a2df849adcc786f0bf",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-02T23:17:00.202081688Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:50.799327106Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:51.400622478Z",
                    "created_by": "|1 VAULT_VERSION=1.10.8 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-11-02T23:16:58.602401738Z",
                    "created_by": "|1 VAULT_VERSION=1.10.8 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-11-02T23:16:59.561187017Z",
                    "created_by": "|1 VAULT_VERSION=1.10.8 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-11-02T23:16:59.66609955Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:59.770470846Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:59.878254707Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:59.994186485Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-11-02T23:17:00.097833899Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:17:00.202081688Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:c6186634492af375160aff8c04c2aa38992004632462421482eb372b44d8bdcf",
                    "sha256:5415622bb549f872cd9de6be3c8a7c27c058700451832ddb97fe7d0713981e35",
                    "sha256:8a67b24c41ed7ac87e9c0e351169585b394990090bbbc935c389ad729ba7f0a4",
                    "sha256:8d6789de3d0693c600c2e147c69e5d90d6e768b85427f294c572a470a5a21dfc"
                ]
            }
        },
        "1.10.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:8e8adfd8bdfd0bd37596ec65138c535a1ba1bbf5f4da330715cfc086e38c9832",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "680e0e09ac4d153ab7014c469879549e1c9830a7029ac943a4a31ee4039a15b6",
            "container_config": {
                "Hostname": "680e0e09ac4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:8e8adfd8bdfd0bd37596ec65138c535a1ba1bbf5f4da330715cfc086e38c9832",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-05T21:01:42.451778092Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:31.313243922Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.10.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:31.887276635Z",
                    "created_by": "|1 VAULT_VERSION=1.10.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-12-05T21:01:40.839659781Z",
                    "created_by": "|1 VAULT_VERSION=1.10.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-12-05T21:01:41.794394167Z",
                    "created_by": "|1 VAULT_VERSION=1.10.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-12-05T21:01:41.899179672Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:42.014981791Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:42.12180669Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:42.24505105Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-12-05T21:01:42.344119841Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:42.451778092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:3d677826f70c9d079f5eeb00bdd16971cc923f0dc64211e9850d823b58aec2a3",
                    "sha256:2d169f09e32b261d63d6fe47d2b8171049ef173ebfe0bd3eb6981472683b6df8",
                    "sha256:e3dc86b41111a6e42bfbfb1e56cbae21c919def3d6e1c3647218c5dd72fac35d",
                    "sha256:1fa745ec12194772c01599dc8d8d23791f4d8bc3d301a04cdc4226d2236156e1"
                ]
            }
        },
        "1.11.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:7f2bf1bd1559fbe371f293cd94e1c50af42c4b672430f6cb9c87dedb7f3f4aa7",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "cf63ca180dcf8bc051b63636615b83bc392215b4ad4f72a1b56964053ac59b5e",
            "container_config": {
                "Hostname": "cf63ca180dcf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:7f2bf1bd1559fbe371f293cd94e1c50af42c4b672430f6cb9c87dedb7f3f4aa7",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-20T02:03:11.273711496Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-19T22:20:18.8583754Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80b46be2fe86b402518b00758ff5d8556d92113dc267a002b6c72a5f9c6742a3 in / "
                },
                {
                    "created": "2022-07-19T22:20:18.974810894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:00.262715068Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:00.853314195Z",
                    "created_by": "|1 VAULT_VERSION=1.11.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-07-20T02:03:09.708564028Z",
                    "created_by": "|1 VAULT_VERSION=1.11.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-07-20T02:03:10.665540088Z",
                    "created_by": "|1 VAULT_VERSION=1.11.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-07-20T02:03:10.762568002Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:10.858666567Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:10.964525885Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:11.07758239Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-07-20T02:03:11.173361988Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:11.273711496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:713e7675e2c1e8b5b484c7032e21ca148e1fb18dad74f61be1338b8671ed2aef",
                    "sha256:a9e930076df2e0d7d31a22be2ce401094d5eccbfe46e1cf1302137184b3b657c",
                    "sha256:5434a701485330b554fd974eb833bf46f9c39d8ff75eb3151b23be82a9292d4e",
                    "sha256:163aa9a8bf7f7f02eb8898fb46d961babeb2127191ab8de08e01ed20cde565f1",
                    "sha256:91a082d62dfa7f8c951cfb86ec17ec3e13efb1d9562c17df1ac911453b51459d"
                ]
            }
        },
        "1.11.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:b697252e2df832bd66e832ded48c290bcba1fb04ad7cd6877180614ffd2e0913",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "59935fe9a039597f0ae0f5473b2c257b08d4fc0211f5f335d5c841255fc11523",
            "container_config": {
                "Hostname": "59935fe9a039",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:b697252e2df832bd66e832ded48c290bcba1fb04ad7cd6877180614ffd2e0913",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-13T17:58:00.917682437Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T17:57:41.390493206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T17:57:42.031775079Z",
                    "created_by": "|1 VAULT_VERSION=1.11.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-06-13T17:57:59.037971342Z",
                    "created_by": "|1 VAULT_VERSION=1.11.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-06-13T17:58:00.240694898Z",
                    "created_by": "|1 VAULT_VERSION=1.11.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-06-13T17:58:00.356381786Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T17:58:00.468680573Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T17:58:00.591684255Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T17:58:00.711706755Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-06-13T17:58:00.807915212Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-13T17:58:00.917682437Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:1940310c8e89fd2d0344776544efe91d6906b307d57e928c7d0889ae7b2b9179",
                    "sha256:9a09377f1cc3b954c49b4169974159fb3c4e24c91b282c6f69c64a02c8b7d272",
                    "sha256:a5822c58fa89719c237b6fdf6fb5e125e236f9bf824d73132b478b0b09ee2498",
                    "sha256:58a695cbdc67d776dbdc7a4f514580d53a70e0a1a7148fa5854b88e6c99fd869"
                ]
            }
        },
        "1.11.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:4f98d23ec209488ddfc22dc9c4c7bb1d62a4b7024bb898b698116fc2bd2640bf",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "54ec60d816da95e99edb722e6800be0113087625a0a20bd37d588b4e7c63e66f",
            "container_config": {
                "Hostname": "54ec60d816da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:4f98d23ec209488ddfc22dc9c4c7bb1d62a4b7024bb898b698116fc2bd2640bf",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-25T18:26:27.484495599Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-19T22:20:18.8583754Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80b46be2fe86b402518b00758ff5d8556d92113dc267a002b6c72a5f9c6742a3 in / "
                },
                {
                    "created": "2022-07-19T22:20:18.974810894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-25T18:26:17.513999646Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-25T18:26:18.149730533Z",
                    "created_by": "|1 VAULT_VERSION=1.11.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-07-25T18:26:25.864262636Z",
                    "created_by": "|1 VAULT_VERSION=1.11.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-07-25T18:26:26.831131369Z",
                    "created_by": "|1 VAULT_VERSION=1.11.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-07-25T18:26:26.93432673Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-25T18:26:27.039405338Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-25T18:26:27.145654183Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-25T18:26:27.271815084Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-07-25T18:26:27.375187016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-25T18:26:27.484495599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:713e7675e2c1e8b5b484c7032e21ca148e1fb18dad74f61be1338b8671ed2aef",
                    "sha256:27ec690bcf71b4692a0dd51312eaa9ac626534dfd430e07dfe8b0c22045d8342",
                    "sha256:c76ef7a97afbf09a27ed4e9ba44798aaaa93b2d5a7d7e868a7f6aa22768b07c8",
                    "sha256:c8dca10184f8dfdc3fbeb201d5d154da509937f4fa7f85d9b42aec02db655878",
                    "sha256:50454cab367476b4d6de8d6ac84113b408a509b37c733894b7e44605df82bb59"
                ]
            }
        },
        "1.11.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:83e78471e8784b8487c76dd296888e319156db12ef7a08650fb849992788d133",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d29bf63ec5df3e2d2595fbb89016eae9385c7964313c8e4be4cb20aa400e67d4",
            "container_config": {
                "Hostname": "d29bf63ec5df",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:83e78471e8784b8487c76dd296888e319156db12ef7a08650fb849992788d133",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-27T19:22:50.65841831Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:41.544374022Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:42.073864911Z",
                    "created_by": "|1 VAULT_VERSION=1.11.10 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-04-27T19:22:49.305525454Z",
                    "created_by": "|1 VAULT_VERSION=1.11.10 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-04-27T19:22:50.125219949Z",
                    "created_by": "|1 VAULT_VERSION=1.11.10 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-04-27T19:22:50.209549384Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:50.300350312Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:50.390437647Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:50.48493278Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-04-27T19:22:50.569625084Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:50.65841831Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:c63c9807ca72e935ca216dcdb71c9b294850b675e3c09eb4e76dfeab1391ada7",
                    "sha256:ce95e020ce54c74c278e5ceac6d559b10990dd73fe40587897affb460c395997",
                    "sha256:8b7cf136bb30858db9f6892a581c1bb7e3e5e41e4b0786fdc19cb1797e759759",
                    "sha256:032875918b545636ca761e8648a3a271e530930e69d53fbdaab52c7e512c2150"
                ]
            }
        },
        "1.11.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:ff76f613ef0125335060757dc11c36e39278136d7b00845ff27c5174863e02e6",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e6cf914da0f7c6bc4d6164bc99b5046bc10590c447b57538df649075678ad028",
            "container_config": {
                "Hostname": "e6cf914da0f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:ff76f613ef0125335060757dc11c36e39278136d7b00845ff27c5174863e02e6",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-03-16T09:05:21.272581081Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:12.044324805Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:12.573195023Z",
                    "created_by": "|1 VAULT_VERSION=1.11.11 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2024-03-16T09:05:19.852197602Z",
                    "created_by": "|1 VAULT_VERSION=1.11.11 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2024-03-16T09:05:20.768716947Z",
                    "created_by": "|1 VAULT_VERSION=1.11.11 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2024-03-16T09:05:20.851225696Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:20.934737305Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:21.019333203Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:21.107587708Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2024-03-16T09:05:21.184599438Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:21.272581081Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:8a8c335e10d03df13527e4ae6c7766caecfd7228343e5cda574b7d1ded1ebd5b",
                    "sha256:d80c953c5a50c95e529283c264501e3dab1f21555b39b41e4e77e1830e4e87d5",
                    "sha256:7db3df6dab7a1fec2ff8aa46a33a0219956a8e4d357523c3a5f4b2daefc9cd04",
                    "sha256:4b25538315baa6d424d2ef638e2ca94830e3bd05fc4d6597e16bdb37e3eed39e"
                ]
            }
        },
        "1.11.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:65cebdf1c860cfe12dcd0f202bfd70c63d8e5a6a20bbba51df6e64640cb2fbf5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c9f06227409d8b77ed7d97fa93385452c8f83cb381da76c4e8837f982b46896",
            "container_config": {
                "Hostname": "0c9f06227409",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:65cebdf1c860cfe12dcd0f202bfd70c63d8e5a6a20bbba51df6e64640cb2fbf5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T01:27:01.981573219Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:26:51.854260635Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:26:52.429290189Z",
                    "created_by": "|1 VAULT_VERSION=1.11.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-08-10T01:27:00.360152635Z",
                    "created_by": "|1 VAULT_VERSION=1.11.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-08-10T01:27:01.347511733Z",
                    "created_by": "|1 VAULT_VERSION=1.11.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-08-10T01:27:01.443219495Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:01.546862905Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:01.653159769Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:01.776444372Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-08-10T01:27:01.871964389Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:01.981573219Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:c010906fa3f02af1f279ac892eea3e21901b3b80dcc43e2efb8243be44cbb9b8",
                    "sha256:d24c3c1ab832356b60507936ba5c59d5ee865f819cf26b50ea11ae297c0e4ad4",
                    "sha256:19125fce65ac0d44cdb95d2ce3754925cd2b7d447c8840b3aed1d7f2471d6ad5",
                    "sha256:2e6faafe6deafc20548a2d8a78ff5a417fed6ebfb45baec38c124615dcc243e9"
                ]
            }
        },
        "1.11.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:fdb343663aec2d1fae53eb628c5c8b9814ae7db86ebb59f8a8cac95f7274bf08",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "4f4c1d324edd521bbd7ff6ee7a4bf288baab4f0e5afe2e711d7431c7f5ab7d10",
            "container_config": {
                "Hostname": "4f4c1d324edd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:fdb343663aec2d1fae53eb628c5c8b9814ae7db86ebb59f8a8cac95f7274bf08",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T04:27:22.510881276Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:12.086629768Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:12.676628389Z",
                    "created_by": "|1 VAULT_VERSION=1.11.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T04:27:20.902741091Z",
                    "created_by": "|1 VAULT_VERSION=1.11.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T04:27:21.871702124Z",
                    "created_by": "|1 VAULT_VERSION=1.11.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T04:27:21.971714305Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:22.077243122Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:22.184512761Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:22.308360638Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T04:27:22.406263381Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:22.510881276Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:86d9c6b01375951835c0490a8594c2a0a3073734c444507c636660d19b46ff51",
                    "sha256:03896c78ced425dfd9538006acce0ba41d93b5547b7f6db31ba0408bdf7bdf86",
                    "sha256:d34adfa1419d093013775a9a2332d8c2ee1e4c31d6e541fcf22b7d890ddf9e25",
                    "sha256:dece82ed2a1aba87bb076e89f75ccab9db6eb507d13545388fe808cd133f4898"
                ]
            }
        },
        "1.11.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:056028ce5861585284ef3e3c86059f3b5bcac70c58ba89b5bba109df63a2ad4b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f963685a8199330b7691212829d7a6327f36665abde5d6028136d5b2d38d097",
            "container_config": {
                "Hostname": "2f963685a819",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:056028ce5861585284ef3e3c86059f3b5bcac70c58ba89b5bba109df63a2ad4b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T20:35:02.937250649Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:52.702760658Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:53.268418861Z",
                    "created_by": "|1 VAULT_VERSION=1.11.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T20:35:01.245344082Z",
                    "created_by": "|1 VAULT_VERSION=1.11.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T20:35:02.281314949Z",
                    "created_by": "|1 VAULT_VERSION=1.11.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T20:35:02.383100188Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:02.493502275Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:02.607404282Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:02.730903241Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T20:35:02.826610072Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:35:02.937250649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:4f660427db00c853ae840577e6f23e0ddc8ce70a40f278522834dc16a03c2336",
                    "sha256:12c91e89b2189d2678c1defa660b71013cd75bbed2e56d88dd807afec1e7d504",
                    "sha256:4611e50f0552b6292cdf156016787c174e8b60b37fae56212675212036a78daa",
                    "sha256:236fba42148fb72f2bf9f7cb2b1fdeee37c07fb324a27cdfe721a9b1bb4b5c88"
                ]
            }
        },
        "1.11.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:9a8dde32d57212383b8593881dc2f06a1a978c3473f0761af7ade496d5103797",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "9c4b15f261f826bf22b668069c2dcfd39a9a4494ad8a7a184fe26930eaf36163",
            "container_config": {
                "Hostname": "9c4b15f261f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:9a8dde32d57212383b8593881dc2f06a1a978c3473f0761af7ade496d5103797",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-02T23:16:48.695784844Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:38.90066601Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:39.523910168Z",
                    "created_by": "|1 VAULT_VERSION=1.11.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-11-02T23:16:47.066811076Z",
                    "created_by": "|1 VAULT_VERSION=1.11.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-11-02T23:16:48.030061631Z",
                    "created_by": "|1 VAULT_VERSION=1.11.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-11-02T23:16:48.142244673Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:48.255499049Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:48.361862858Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:48.480639496Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-11-02T23:16:48.580137378Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:48.695784844Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:f443feefe3f420fc45ca759ae54b58f9de3d80f2a066927c9b80df56bb2e7754",
                    "sha256:2226dd15d977ce7b36ad5aeb84731642a5ed7158d98076ddfaad385c7f849f42",
                    "sha256:2e8f2aa2c8f4383723de0195d87692bd2dab5a488a5e2636c3f7a01e7f7f918d",
                    "sha256:8d8a5cdd6ca5cbe6798d9a191ff16c6b8936dc75a3859480a52bf904f7c7a5ac"
                ]
            }
        },
        "1.11.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:5cc76633355af39aa5340cc961ea5441d6c0fd192df31c07cf219c2cd950bbdc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "3bd837cdac927269622b032fac1187674e25ca95eefd2cdbb53c5767e8ef72d2",
            "container_config": {
                "Hostname": "3bd837cdac92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:5cc76633355af39aa5340cc961ea5441d6c0fd192df31c07cf219c2cd950bbdc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-05T21:01:27.398858637Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:17.292623083Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:17.882127387Z",
                    "created_by": "|1 VAULT_VERSION=1.11.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-12-05T21:01:25.788864003Z",
                    "created_by": "|1 VAULT_VERSION=1.11.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-12-05T21:01:26.755535954Z",
                    "created_by": "|1 VAULT_VERSION=1.11.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-12-05T21:01:26.858564424Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:26.963317123Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:27.071727766Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:27.194097549Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-12-05T21:01:27.29213404Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:27.398858637Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:6787c61687de8a43f1422843976beb1813800aa56cc35d127baffac6d7235ff8",
                    "sha256:59079dc890817fdf92c12c2034e7edd8836381544362ca97ef9498de2fc0752f",
                    "sha256:deec7323ad600f5d63c8e8202673548dc409551389e1c73c9bd2dc37bb0c20ac",
                    "sha256:23264c559f20b54c684b077e61e472c2d94933fe4e724685e2877b74e9beb332"
                ]
            }
        },
        "1.11.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:a7aab21bf0af0546065c13bd4c33294caf9a8510e9f68b42e6af568e70821327",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e4c4e3c7e7d8896f461f4b79439dd88862015bb7e1550f69ab7746f8094fb1b4",
            "container_config": {
                "Hostname": "e4c4e3c7e7d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:a7aab21bf0af0546065c13bd4c33294caf9a8510e9f68b42e6af568e70821327",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-11T14:14:09.622942936Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-11T04:46:59.853255849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a41bb436701fd0adf99a3157d19f172b3e54ea033f5c617009e2d1bdeac206d7 in / "
                },
                {
                    "created": "2023-02-11T04:46:59.997430675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:59.366219028Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:59.938419814Z",
                    "created_by": "|1 VAULT_VERSION=1.11.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-02-11T14:14:07.930780127Z",
                    "created_by": "|1 VAULT_VERSION=1.11.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-02-11T14:14:08.883475241Z",
                    "created_by": "|1 VAULT_VERSION=1.11.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-02-11T14:14:09.017720926Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:09.146991756Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:09.273294712Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:09.399730766Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-02-11T14:14:09.508145601Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:09.622942936Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:625523cb9cce7a1bcc1d03e3038de4843a27af3b92d859004bcefb0027291933",
                    "sha256:c09234b53a1f8ce9bea0f329b8ae25f4944bf954dbea44e664976358cf9a3ddd",
                    "sha256:daf9059ffaebcdb5e9f1d1eb14e8bca7d076a874ac9af64103262076ec4185d4",
                    "sha256:8ea23a8befe46cd80505fecc04ddef846b69cc13715dac5aeaee69ea62385b71",
                    "sha256:f9fdb830471d5eb6634e6bd20f8a3e2c2b371e5643fadd38f44c9463d398fcd4"
                ]
            }
        },
        "1.11.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:6fb9590ccc9adf2ab71ed276cb3d294bbd53416e44bf34653a4e9cced31e4142",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a2b5f9f76972faabe246320d7ef281095ed09357423c138c76fbc4c1313fb87f",
            "container_config": {
                "Hostname": "a2b5f9f76972",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:6fb9590ccc9adf2ab71ed276cb3d294bbd53416e44bf34653a4e9cced31e4142",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-30T02:09:37.739476351Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:28.550541686Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:29.110397308Z",
                    "created_by": "|1 VAULT_VERSION=1.11.8 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-30T02:09:36.43573566Z",
                    "created_by": "|1 VAULT_VERSION=1.11.8 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-30T02:09:37.220750805Z",
                    "created_by": "|1 VAULT_VERSION=1.11.8 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-30T02:09:37.30423932Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:37.398679074Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:37.484532265Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:37.57484914Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-30T02:09:37.652316295Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:37.739476351Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:a39f92694d56946094900b8fbe97f5a2b72da308daab3f16bd9ade49ded5c4b9",
                    "sha256:8e414d01bb599e10e2b3daae294e80b867cfe7e4dfe44528895cd9d900ace52d",
                    "sha256:e7ed888514ef326210348521b470c25577aa16d00896168b1a32ca26c3e7df6a",
                    "sha256:642364d8b7d51cda4b2022d9cd3b9c778a4f09d20be4a5287aa62361febc2ad5"
                ]
            }
        },
        "1.11.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:4c05e02cae4645db43f5c26bc7240e17426a2f376b7c4a31e585201f2f681d57",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "91c37d965644a2c08e558f753dcc5a2f819bd3c350df9431f9801feaee83806e",
            "container_config": {
                "Hostname": "91c37d965644",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:4c05e02cae4645db43f5c26bc7240e17426a2f376b7c4a31e585201f2f681d57",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-31T00:26:36.033677333Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:26.55187512Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:27.130015593Z",
                    "created_by": "|1 VAULT_VERSION=1.11.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-31T00:26:34.660996359Z",
                    "created_by": "|1 VAULT_VERSION=1.11.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-31T00:26:35.481331504Z",
                    "created_by": "|1 VAULT_VERSION=1.11.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-31T00:26:35.574707239Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:35.667663268Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:35.758683521Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:35.857259074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-31T00:26:35.942162377Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:36.033677333Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:a56614be7d19329dc34e797a359681cbf0c1def90e945fd92550c7aebb56e0cd",
                    "sha256:9d792d40d4d816a7ba490dd5d990db0d35f60dc6f978ec35df4eeb224fc05665",
                    "sha256:9fce0f0fcba6ce3a7d88e9c4dca452d8930ff6d0e0154c4ea758dc03adbf6b48",
                    "sha256:f561a8f64e9a6494345935cfe5f01a9712c5c758fa816b2e73ce90930d936123"
                ]
            }
        },
        "1.12.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:e575e539ee4f925707eeda4e22ad35cf1467c742d42ab42c2c002209f7603b1c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9918d1bee88bc8772b87e91e01daf4520b93b7b0d0f1f6d6f4471b097e11f85",
            "container_config": {
                "Hostname": "f9918d1bee88",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:e575e539ee4f925707eeda4e22ad35cf1467c742d42ab42c2c002209f7603b1c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-12T23:25:45.329400167Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-12T23:25:33.339791105Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-12T23:25:33.96572315Z",
                    "created_by": "|1 VAULT_VERSION=1.12.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-12T23:25:43.641881764Z",
                    "created_by": "|1 VAULT_VERSION=1.12.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-12T23:25:44.664398007Z",
                    "created_by": "|1 VAULT_VERSION=1.12.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-12T23:25:44.769493275Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-12T23:25:44.883913822Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-12T23:25:44.994335564Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-12T23:25:45.116396432Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-12T23:25:45.218047448Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-12T23:25:45.329400167Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:5d1faf72c23696b16a62ba4328a400a93f1f845070e532d2f92b1967373aa9d8",
                    "sha256:10a36195e4fcbcdacd4d277cb461be451dedf911855c89b777f90c1708fac050",
                    "sha256:2f89dd06c73d679f9e265de76fc75b4a70149158a801cde31f8a2e183962046e",
                    "sha256:54b67165715d5fc9fd53ccefd75dbad5d95dc724d96fb7dece4d73ee67cecc4a"
                ]
            }
        },
        "1.12.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:66989c6f56967403d6fb6aaa69cacb06ead3c509630b5aeb07fd668e0302e3da",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "918cfdaffe646bb7fe08d709d27fb3a5dbec7575b4c6c18dcd92b14d1c937f34",
            "container_config": {
                "Hostname": "918cfdaffe64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:66989c6f56967403d6fb6aaa69cacb06ead3c509630b5aeb07fd668e0302e3da",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T20:34:49.149527105Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:38.890358324Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:39.507266221Z",
                    "created_by": "|1 VAULT_VERSION=1.12.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T20:34:47.566846101Z",
                    "created_by": "|1 VAULT_VERSION=1.12.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T20:34:48.530877517Z",
                    "created_by": "|1 VAULT_VERSION=1.12.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T20:34:48.631469092Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:48.732447497Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:48.836659313Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:48.954493698Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T20:34:49.045535984Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T20:34:49.149527105Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:ff601db1c3a419473dd34a35edbab4fa0ab71c12e22112bf193778314e61ccad",
                    "sha256:3ce8573e20cedc42f25e45e8710435702d3fa558f4aa97f8225bcfcbe25049f1",
                    "sha256:796f7e984b597b1508d1382ae8dd616fa0f96dcc7d9c41c00f4b916ff09f7f8e",
                    "sha256:665fd559cafaf95b4aefb116456354678173d95973fdd2e6eaa1491506a86b14"
                ]
            }
        },
        "1.12.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:1ce92c8463913aedba0987f3168332ace9da8a912a32239224b4f8ffad5aa606",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "11627614fcc2c0a974319b469a2c4d3be14d56889bd2a6593910a291b91cc4aa",
            "container_config": {
                "Hostname": "11627614fcc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:1ce92c8463913aedba0987f3168332ace9da8a912a32239224b4f8ffad5aa606",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-02T23:16:35.803041478Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:25.035432749Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:25.732538417Z",
                    "created_by": "|1 VAULT_VERSION=1.12.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-11-02T23:16:34.11581846Z",
                    "created_by": "|1 VAULT_VERSION=1.12.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-11-02T23:16:35.144534723Z",
                    "created_by": "|1 VAULT_VERSION=1.12.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-11-02T23:16:35.250651416Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:35.359619065Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:35.470120312Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:35.591477719Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-11-02T23:16:35.694144168Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T23:16:35.803041478Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:7dc0ed998d22910b7d17f34fbdab2f8bb48b9d3f7cc3718a8dd5dc0e463b8356",
                    "sha256:e2aa2118054c5e6fcdf6026bc37c80c7acd9db9d1e5762c93dad7124bc1bfd4a",
                    "sha256:9c68857bef5ecb9b13ad0a61640252795ec5f464761d908aef4ec35838fd9704",
                    "sha256:81cb3c0d7c72bc5414cd3e34bc3a3f54b94ff33e2524726bb7579bc40751e3cf"
                ]
            }
        },
        "1.12.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:977154caa8388e5dba5295586761585ac4e567dc9a1ccd3eac6ca5b582eb2ae9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "81ae2ecb1ba9b7cd549e3fa61e88109959edff81e85c8e5cb7165a0843235521",
            "container_config": {
                "Hostname": "81ae2ecb1ba9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:977154caa8388e5dba5295586761585ac4e567dc9a1ccd3eac6ca5b582eb2ae9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-05T21:01:13.627160485Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:03.289476842Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:03.900666332Z",
                    "created_by": "|1 VAULT_VERSION=1.12.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-12-05T21:01:12.031763433Z",
                    "created_by": "|1 VAULT_VERSION=1.12.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-12-05T21:01:12.997426532Z",
                    "created_by": "|1 VAULT_VERSION=1.12.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-12-05T21:01:13.097954432Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:13.20045821Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:13.302836752Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:13.421936018Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-12-05T21:01:13.520725562Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-05T21:01:13.627160485Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:b909318f0aa016e374de2f03fd69932ff8505e7994e90dd096e4a49cbd0be84c",
                    "sha256:67480093aa51c891311f6241c2590d3185e943810efef102b5e781abf56b8045",
                    "sha256:a85b8fcbbd2daebcace3dcb26e91e4b389bb3922547f134f4df183f5c35c667b",
                    "sha256:349fb127cbfc6e3baf7cb56dc728f160a8b69a9d6a7d9caa3bba740a7947fe67"
                ]
            }
        },
        "1.12.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:47152e0ab5bd67c0fdd0c3be9bb10303271b158ac9f5ec95d3dd43824498c9e1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c798c263b7277ddeb12773467765a2f07cd03d0db8c998cc3d7ecb383c3a140",
            "container_config": {
                "Hostname": "2c798c263b72",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:47152e0ab5bd67c0fdd0c3be9bb10303271b158ac9f5ec95d3dd43824498c9e1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-11T14:13:55.956092463Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-11T04:46:59.853255849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a41bb436701fd0adf99a3157d19f172b3e54ea033f5c617009e2d1bdeac206d7 in / "
                },
                {
                    "created": "2023-02-11T04:46:59.997430675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:45.270431779Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:45.854236215Z",
                    "created_by": "|1 VAULT_VERSION=1.12.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-02-11T14:13:54.36528558Z",
                    "created_by": "|1 VAULT_VERSION=1.12.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-02-11T14:13:55.289545514Z",
                    "created_by": "|1 VAULT_VERSION=1.12.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-02-11T14:13:55.393014502Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:55.50097459Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:55.614357252Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:55.735078901Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-02-11T14:13:55.835516939Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:13:55.956092463Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:625523cb9cce7a1bcc1d03e3038de4843a27af3b92d859004bcefb0027291933",
                    "sha256:54675bbbf6264c469452ad56b632288c510e25f38294b92ecd9b4f5c02641ed8",
                    "sha256:85fb2c51bf3195f3235d735b880b24872639ff323a6f17be4ebf41fd8eb5cf57",
                    "sha256:3c933eec94fe425327b0e604953c4f37494a387154143b84d008ae6a622c25a3",
                    "sha256:4b492042bb4f9a392875d557674b058228b8730a7bc60a5c760ab308585619f8"
                ]
            }
        },
        "1.12.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:c83e1a7b3bcaea22a572504ccd03b0c7f7c0b2c49d82f176ab2de9fe5ffcb435",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "bbfd8254da30f80609384352dd170742ae8a39313711053685a3a979d4ac9156",
            "container_config": {
                "Hostname": "bbfd8254da30",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:c83e1a7b3bcaea22a572504ccd03b0c7f7c0b2c49d82f176ab2de9fe5ffcb435",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-30T02:09:26.733947532Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:16.986558014Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:17.51544527Z",
                    "created_by": "|1 VAULT_VERSION=1.12.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-30T02:09:25.423138592Z",
                    "created_by": "|1 VAULT_VERSION=1.12.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-30T02:09:26.230825051Z",
                    "created_by": "|1 VAULT_VERSION=1.12.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-30T02:09:26.313210008Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:26.400967366Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:26.487210363Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:26.575327289Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-30T02:09:26.652303723Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:26.733947532Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:5d84a417e25adef68a7fec66cd08165ec659da227cbdaf67e4d181c19aef6e54",
                    "sha256:068f54b89cfb9b4b46f89667948ec7156e46c6140757ff6c8cdb538e7b6149fa",
                    "sha256:02223a4366e207dcc01a423bbb2819a4c1523b7cd0bedbdd46d484f42cb79196",
                    "sha256:f56e3eb5adc2ac35551fcf41bcbc3c51fea46ede9f19130714993013c456e18c"
                ]
            }
        },
        "1.12.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:8ec7bd211b2d463cce4170ca021ac45bdb216e111079eb618de099d8788740e0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d10bdeb28c7e2db45a5f66d098820713d1eceeb004c0377662f70fb2120a1177",
            "container_config": {
                "Hostname": "d10bdeb28c7e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:8ec7bd211b2d463cce4170ca021ac45bdb216e111079eb618de099d8788740e0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-31T00:26:24.342414015Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:14.772318081Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:15.304393463Z",
                    "created_by": "|1 VAULT_VERSION=1.12.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-31T00:26:22.907739452Z",
                    "created_by": "|1 VAULT_VERSION=1.12.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-31T00:26:23.77193714Z",
                    "created_by": "|1 VAULT_VERSION=1.12.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-31T00:26:23.863582885Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:23.961109308Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:24.057382921Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:24.158332858Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-31T00:26:24.247918928Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:24.342414015Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:53fb9ba749f1f132da333f4464315852c7c8e664a863d516e68b46f2174dfff7",
                    "sha256:40fdd595974baf1703b3640cfb0310d0105e5ddef98274e7e9ea61ba644b7705",
                    "sha256:73b1bbc1995583314867e8a9131db846044ae780dffa9b2189e068fc8c7618c7",
                    "sha256:a7e9215596cc5e09ec68755197086efad98d392b23491bce712eff3915ee069d"
                ]
            }
        },
        "1.12.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:acd3613377b105d1b6646ffb53ea97eab9d027fac73fbb369c512c39e5c033ed",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "162c6d27bea85b4c61da78e33c9a49977f1dce21e508d4571da6520163ff2d14",
            "container_config": {
                "Hostname": "162c6d27bea8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:acd3613377b105d1b6646ffb53ea97eab9d027fac73fbb369c512c39e5c033ed",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-27T19:22:37.785609901Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:27.771149142Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:28.282078257Z",
                    "created_by": "|1 VAULT_VERSION=1.12.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-04-27T19:22:36.396122238Z",
                    "created_by": "|1 VAULT_VERSION=1.12.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-04-27T19:22:37.260776373Z",
                    "created_by": "|1 VAULT_VERSION=1.12.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-04-27T19:22:37.348127458Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:37.435101799Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:37.521817104Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:37.615301731Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-04-27T19:22:37.695389094Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:37.785609901Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:1255765d038d51f2a5cd7f56e5859ec73fb7c6afd7e258419e9cd983f2aa8d1f",
                    "sha256:522d53ff84e331cf79aec3a57883c908d43a18195797105ed798bc03d1273a19",
                    "sha256:a0b7a06e8df0d3e0f03df09dbc2e428f42b94a55b093bc94ae432c948010480d",
                    "sha256:e30aa3a23266ccfa3bca86e86cbf736ea9cd30ee523f10c9497611ed9903072b"
                ]
            }
        },
        "1.12.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:d4f197c58230893571a47ae11e19e94c83eaf4ea1da81a9c7c847ca345f949bd",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c878939f3137c911f33a902b707935353f79a2979ee3dba84c4a1f53f42d40f5",
            "container_config": {
                "Hostname": "c878939f3137",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:d4f197c58230893571a47ae11e19e94c83eaf4ea1da81a9c7c847ca345f949bd",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-03-16T09:05:08.3528974Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:57.526729025Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:58.072866018Z",
                    "created_by": "|1 VAULT_VERSION=1.12.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2024-03-16T09:05:06.976638636Z",
                    "created_by": "|1 VAULT_VERSION=1.12.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2024-03-16T09:05:07.85106794Z",
                    "created_by": "|1 VAULT_VERSION=1.12.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2024-03-16T09:05:07.930783883Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:08.015300302Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:08.100590393Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:08.187906406Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2024-03-16T09:05:08.265315726Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:05:08.3528974Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:f44769bf158ee60666a46a068b5539b546d000700523c7471001cbdd6848f6b1",
                    "sha256:b7fa1e05d39d8a2347be3188e77835270b84c14592b97c13f7c4542b94cd3e99",
                    "sha256:f1c492d589db1d222041cd61e51a3d01bbfab9e7dd98a879122b55d1f5e15c5f",
                    "sha256:c5a75bd1f952f526c3225489bad2f1c82136cac1fb280978f5b50a859845f2bb"
                ]
            }
        },
        "1.13.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:3165b0d41d3b506a5807aec056207494be79aa40677a0739b861a6307b56cf47",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "20cacc9cddc6c2997d3f56754a7e00a0c2d1ee692adc7c1da4eb2d48dfd04ae6",
            "container_config": {
                "Hostname": "20cacc9cddc6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:3165b0d41d3b506a5807aec056207494be79aa40677a0739b861a6307b56cf47",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-30T02:09:14.965582343Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:05.444890781Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.13.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:06.002324718Z",
                    "created_by": "|1 VAULT_VERSION=1.13.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-30T02:09:13.745056356Z",
                    "created_by": "|1 VAULT_VERSION=1.13.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-30T02:09:14.471496686Z",
                    "created_by": "|1 VAULT_VERSION=1.13.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-30T02:09:14.54550021Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:14.630044232Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:14.713240222Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:14.800848091Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-30T02:09:14.883067473Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T02:09:14.965582343Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:ce6db9d427dfa9708efcb4bb11d31ce091b6f8dccb0f90d5b8c584e2c91e82d5",
                    "sha256:e7d87b6c30b986086b4b82836f34af53512531bdfd787b61c85609bc6b914e65",
                    "sha256:a05debc3140208c3b71446046b02c431fd34aea29a16e487c3feba8fb63b770c",
                    "sha256:1de55472aaadf60f269928e9b2e2ed62940d17784ac3b382408d8e3a8aae8b43"
                ]
            }
        },
        "1.13.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:523515fa07c543d97b13125a93eb1e4fa98802a60faff90d45031a718c196049",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a02a11c92b68043cda30c73e8eb02626a69b678995eff055483091d386094ce4",
            "container_config": {
                "Hostname": "a02a11c92b68",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:523515fa07c543d97b13125a93eb1e4fa98802a60faff90d45031a718c196049",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-31T00:26:11.429294455Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:01.033275664Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:01.675217704Z",
                    "created_by": "|1 VAULT_VERSION=1.13.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-03-31T00:26:10.121555101Z",
                    "created_by": "|1 VAULT_VERSION=1.13.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-03-31T00:26:10.881595272Z",
                    "created_by": "|1 VAULT_VERSION=1.13.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-03-31T00:26:10.968158017Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:11.060006551Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:11.156855934Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:11.255825433Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-03-31T00:26:11.339624704Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-31T00:26:11.429294455Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:aedb986c93abe27055ef38f6a35dc5d854a580529947b936ba22e1e98094e7ad",
                    "sha256:29b77ecfbb1de41c8d79add6b87cf4684514135af34c3e5f5ffdddd61f22fcc4",
                    "sha256:011296d320ab0e8124e2e29fc034a5fc39139d121fa213ffc1c433cecf9e6c63",
                    "sha256:8d1c17377d8a68ddf8b65b4bfdf4a3e3235eea92d8c4dbce2d16017976ea3e41"
                ]
            }
        },
        "1.13.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:3da286f7b0d32cf887f6559d3ce3cd6709af4bdfba5b365054c4a2ad425caf85",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "0a54f3abc05103cb6c8e99d6d91cbb4c2b1e9bf7a646d9ff5c1d9fd23581ffd7",
            "container_config": {
                "Hostname": "0a54f3abc051",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:3da286f7b0d32cf887f6559d3ce3cd6709af4bdfba5b365054c4a2ad425caf85",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-27T19:22:24.789200584Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:37.625607335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9663235f252e072c52b0f9e25845841e4321cce2caa7467a0d736c6003b05c00 in / "
                },
                {
                    "created": "2023-03-29T18:19:37.727267748Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:16.283586264Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:16.818516219Z",
                    "created_by": "|1 VAULT_VERSION=1.13.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-04-27T19:22:23.481213358Z",
                    "created_by": "|1 VAULT_VERSION=1.13.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-04-27T19:22:24.268157868Z",
                    "created_by": "|1 VAULT_VERSION=1.13.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-04-27T19:22:24.352835172Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:24.441209115Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:24.527734855Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:24.620539962Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-04-27T19:22:24.704448882Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-27T19:22:24.789200584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9733ccc395133a067f01ee6e380003d80fe9f443673e0f992ae6a4a7860a872c",
                    "sha256:b64ecd415c80fbb963b63848f2a48b43d0ccd26d80e2b1badfae5c7c16216f50",
                    "sha256:c4d6a26cf2eaec32ff30aa8befe219314b88b72a7260cc103369a5591b5fe42e",
                    "sha256:9739a1f863b2ef93e31d211b94e0fe8f095ea3bc5ec5281f7aab53636b211708",
                    "sha256:6a1b14d6fb9dc01d6c25839304acb2daaa5a3aa8d02be9203584b30df7265b5d"
                ]
            }
        },
        "1.13.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:4df866771f428ce29a194856299c66a11e6b9cf46a03ee7f5237131389ca84c2",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "77a5376310586ed048d2c97f038b7ffb5daceffe67a878eeeb1726c432548609",
            "container_config": {
                "Hostname": "77a537631058",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:4df866771f428ce29a194856299c66a11e6b9cf46a03ee7f5237131389ca84c2",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-03-16T09:04:53.153502813Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:42.875057689Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:43.389292022Z",
                    "created_by": "|1 VAULT_VERSION=1.13.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2024-03-16T09:04:51.720859386Z",
                    "created_by": "|1 VAULT_VERSION=1.13.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2024-03-16T09:04:52.641762743Z",
                    "created_by": "|1 VAULT_VERSION=1.13.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2024-03-16T09:04:52.720006345Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:52.804263597Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:52.889564736Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:52.980976094Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2024-03-16T09:04:53.061467125Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-16T09:04:53.153502813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:cb6cd579f4188312fd1bead62fa7763e0ed2f8f2b6dd2c375f2c43504b2adf8c",
                    "sha256:c86a6e66da1ce45cc6406d08fcedb85d8485403145bdb1dc64d374b74bd4361b",
                    "sha256:bd90f5fead883e9f7e3c7bf9545dae2e6a75049c9eafee9b71a090aece431be8",
                    "sha256:91c2a9658a7d9ee33f107777921f5643683ccf9b7f2f01886471dde0ce2652e9"
                ]
            }
        },
        "1.2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:31dcabcd7c2ba2dca288f730aac9b4999f11fd04ba8991a60a79d8075133e16c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "be239b36d9639dad8256e765b3d2dba8bb701ad05b50b746322a62f2235821bb",
            "container_config": {
                "Hostname": "be239b36d963",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:31dcabcd7c2ba2dca288f730aac9b4999f11fd04ba8991a60a79d8075133e16c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-30T21:28:05.790665767Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:27:58.294500463Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:27:58.994741255Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-07-30T21:28:04.040166729Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-07-30T21:28:04.770803293Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-07-30T21:28:04.934376361Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:05.107629761Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:05.28276378Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:05.454871992Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-07-30T21:28:05.62280683Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T21:28:05.790665767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:4b934f8eac4c0db8b6687d6c1a0a51dbc24b3548238de9194fbce43b42de0934",
                    "sha256:b24f50dd867dd2aa47c93644312ac1b2dabfdae0dd9a75ad519624fece4a20f4",
                    "sha256:8e6c9c1aebd591baaa4d3ff7c88587952e8059b460933e5fcc218e4ff9e0800b",
                    "sha256:1e651af389f0468349afb34f69645332eb1032061fc915c919caf7e16b9f9dba"
                ]
            }
        },
        "1.2.0-beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:885f28c0f0629998c04c9a86a8b5b8a4014b14e2670368ebf22bf7ff17a11790",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3408162c1af8fc39eec2e7366040328fcc9af39a38b25914892fe1645b95c2d",
            "container_config": {
                "Hostname": "e3408162c1af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:885f28c0f0629998c04c9a86a8b5b8a4014b14e2670368ebf22bf7ff17a11790",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T04:05:37.645592411Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T04:05:29.706991194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T04:05:30.507475467Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0-beta1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-07-10T04:05:35.691543808Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0-beta1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-07-10T04:05:36.49163281Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0-beta1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-07-10T04:05:36.684348661Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T04:05:36.883314758Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T04:05:37.071593811Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T04:05:37.262257785Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-07-10T04:05:37.461227739Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T04:05:37.645592411Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:3d8fab0b2028c779a4cfc2e52a084cd44d0d4fe0ada66b20c70b0c97051f7ff0",
                    "sha256:9e612d978de8008fa712c4e6325f6af48aa87522d329475cdb919ef9fd2ddda0",
                    "sha256:b246b997c1a3f77f0b74bcc00a20e773f80b37a1633c3cdcfbbe0c92c72f6105",
                    "sha256:ef1313f52b87ef79b51031bd0c43c50e8f0418889a770f5f1f460e6e8251d6e5"
                ]
            }
        },
        "1.2.0-beta2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3a73cc80184e0bbbc4d9cad171a258177e0439d01e99616c757f89b0d69f1dbc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "719570b47d4929163a548e8fe7519a9fd453cbe346da2704d574e098232b04a5",
            "container_config": {
                "Hostname": "719570b47d49",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3a73cc80184e0bbbc4d9cad171a258177e0439d01e99616c757f89b0d69f1dbc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-12T00:58:44.10683887Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T00:58:36.511574593Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.0-beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T00:58:37.243874071Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0-beta2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-07-12T00:58:42.311095118Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0-beta2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-07-12T00:58:43.069815357Z",
                    "created_by": "|1 VAULT_VERSION=1.2.0-beta2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-07-12T00:58:43.252497929Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T00:58:43.427393389Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T00:58:43.600524853Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T00:58:43.784011285Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-07-12T00:58:43.939210327Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-12T00:58:44.10683887Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:e6643a0041383a73edd46db7011d0153787ae2b0fc9939b818499d55b009d946",
                    "sha256:27bf601af3be6074e794035f9487118ae08f5d138dff4d496f792f72ef874f76",
                    "sha256:ad11d3188e65e842bdb3572a91d27731a78fdc56f9e14555eca6c3124a96be99",
                    "sha256:3ce275a8b2e12ef41090a14a1480fc98bdc1bf65b1bd048a8e752a5f8fd28de3"
                ]
            }
        },
        "1.2.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9e4647322ef23746aaf1b8e930af23d0cdcaae94a2f3194c5efe22263b5c404",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "114d399dbc4c4c41e0cdbfcdf023c1792590f0c109a7199220fa0ceb37c17855",
            "container_config": {
                "Hostname": "114d399dbc4c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9e4647322ef23746aaf1b8e930af23d0cdcaae94a2f3194c5efe22263b5c404",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-07T15:28:11.65403142Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-07T15:28:03.938332085Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-07T15:28:04.68718224Z",
                    "created_by": "|1 VAULT_VERSION=1.2.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-08-07T15:28:09.921308022Z",
                    "created_by": "|1 VAULT_VERSION=1.2.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-08-07T15:28:10.666974668Z",
                    "created_by": "|1 VAULT_VERSION=1.2.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-08-07T15:28:10.863846186Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-07T15:28:11.035022823Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-07T15:28:11.185916861Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-07T15:28:11.354243138Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-08-07T15:28:11.498406681Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-07T15:28:11.65403142Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:8f6fbc429d31b33e4661620615d79f6b6ebdf1f4b613f2387941bcbdaa855330",
                    "sha256:13ec7ae7682bb78ca3a44fdecd0ecc7a0a0363a800825c7c578a0b48cc7dd4dd",
                    "sha256:8b8a0781502a3fcf5ae2098137be43561c638dd7098aaa55cb9e9f357cc8ab22",
                    "sha256:9c497485b8dc9e90cdb3481cf70b834ede1a202312028fb33f69987f6fe03d2e"
                ]
            }
        },
        "1.2.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c42df90b5a71da60e3c16c845de077d7cd37459ecdd0d2dd0b7966881816cba8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "490761f7ed5f8e07b15928ae81421b532af559253d42533fbf504a4a34f1c255",
            "container_config": {
                "Hostname": "490761f7ed5f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c42df90b5a71da60e3c16c845de077d7cd37459ecdd0d2dd0b7966881816cba8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T01:03:26.128051422Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T01:03:18.32987142Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T01:03:19.05057697Z",
                    "created_by": "|1 VAULT_VERSION=1.2.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-08-21T01:03:24.264540403Z",
                    "created_by": "|1 VAULT_VERSION=1.2.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-08-21T01:03:25.007564722Z",
                    "created_by": "|1 VAULT_VERSION=1.2.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-08-21T01:03:25.190603359Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T01:03:25.364012113Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T01:03:25.546943196Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T01:03:25.763107521Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-08-21T01:03:25.956793151Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T01:03:26.128051422Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:e39f47c90cf1beb95dd715a39839b511124ec073aadce991d7d272affe68bfcf",
                    "sha256:e31aeed513c4b9de32184c04de902bf4039cdb58166c63fab90ebdc88256641d",
                    "sha256:c4bc4fcbedd2645f8de28db4ce83c3e580da80a23c019942beb639160f7a951a",
                    "sha256:531da78748290f8ec4089018b805e96e8319710ba6d7f2dc462b1b17eea7201d"
                ]
            }
        },
        "1.2.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3a340a214f5cec81f0ecf47fd036da370038f5659f81805547fe333fbdca0e19",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "99871f1f46df460cb29fcc8f2be62ccbb0f7127bd79e5c33592a70a0b1a91df0",
            "container_config": {
                "Hostname": "99871f1f46df",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3a340a214f5cec81f0ecf47fd036da370038f5659f81805547fe333fbdca0e19",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T22:25:17.319117956Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T17:21:42.078618181Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 in / "
                },
                {
                    "created": "2019-10-21T17:21:42.387111039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T22:25:09.544177982Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T22:25:10.301196397Z",
                    "created_by": "|1 VAULT_VERSION=1.2.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-10-21T22:25:15.540115041Z",
                    "created_by": "|1 VAULT_VERSION=1.2.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-10-21T22:25:16.294281864Z",
                    "created_by": "|1 VAULT_VERSION=1.2.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-10-21T22:25:16.481856225Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T22:25:16.647244031Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T22:25:16.798574805Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T22:25:16.975030547Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-10-21T22:25:17.130631491Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T22:25:17.319117956Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77cae8ab23bf486355d1b3191259705374f4a11d483b24964d2f729dd8c076a0",
                    "sha256:aacd1341634ffabd69366ddae2f921e1e5cb5ba9d41ddea66c65ef77ba20efa1",
                    "sha256:81e9e47ff97a19df57e88e49a05a076fbf0963eeee164679ea39ec5acf4b36a7",
                    "sha256:9080513d55e7dff601a65ed2d6714abf531af7d723463412fda40fa2d087a1af",
                    "sha256:24f936d4064b537b1f2538b5694d6fcf7992e111e614a8842b7bc47ab1fdf8d2"
                ]
            }
        },
        "1.2.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:825eb8a1d799c7925cf1fc3d75780ba9b4406ac5c76b72dc9943b3c0b31d13bc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "4309584f6d7614ebb16e904a3277a4f6ecf2319937897c03ba80a9dd4027184c",
            "container_config": {
                "Hostname": "4309584f6d76",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:825eb8a1d799c7925cf1fc3d75780ba9b4406ac5c76b72dc9943b3c0b31d13bc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-09T01:34:55.194551175Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T17:21:42.078618181Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 in / "
                },
                {
                    "created": "2019-10-21T17:21:42.387111039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-09T01:34:47.871373637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-09T01:34:48.578508555Z",
                    "created_by": "|1 VAULT_VERSION=1.2.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-11-09T01:34:53.44258001Z",
                    "created_by": "|1 VAULT_VERSION=1.2.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-11-09T01:34:54.205688062Z",
                    "created_by": "|1 VAULT_VERSION=1.2.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-11-09T01:34:54.370538647Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-09T01:34:54.530375563Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-09T01:34:54.678859041Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-09T01:34:54.854600203Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-11-09T01:34:55.00237844Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-09T01:34:55.194551175Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77cae8ab23bf486355d1b3191259705374f4a11d483b24964d2f729dd8c076a0",
                    "sha256:2e8a8d0c2917ad8234c7c495f0a69c546cf2f915b75c0a22dbce6168355452bc",
                    "sha256:41b390abef53e53cf0e9ad8d4e75dab31234943e5590b029e6e5d566b15ec129",
                    "sha256:86524275a92263516020aaa607273f73d086cb2f57de189eb91522231d86281b",
                    "sha256:ee5b48aa5fb2b1c855496f736c5c52481c1a32d5cad1a5992954bced2ae02093"
                ]
            }
        },
        "1.2.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5fe8a0c8757935f7a566bcce9f36c9fb45a6becf3cb315a741dbc258b6e97d89",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "496a7a97d25db883483ab149dac3a79fd6ed4496842dd6ba0be02d5f26978476",
            "container_config": {
                "Hostname": "496a7a97d25d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5fe8a0c8757935f7a566bcce9f36c9fb45a6becf3cb315a741dbc258b6e97d89",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-21T19:19:16.582920366Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:19:04.199622492Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:19:05.616737445Z",
                    "created_by": "|1 VAULT_VERSION=1.2.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-21T19:19:12.999842941Z",
                    "created_by": "|1 VAULT_VERSION=1.2.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-21T19:19:14.552981008Z",
                    "created_by": "|1 VAULT_VERSION=1.2.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-21T19:19:14.83499931Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:19:15.143476179Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:19:15.510921304Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:19:15.999520524Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-21T19:19:16.274254088Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:19:16.582920366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:448668d434300cd114760e7afd61258fd9298074ee554d6d7cd6366889cf31c3",
                    "sha256:4410bad848cebc1ed6e47cabf046fa95f10a1e4ff735c6a6169914bf118a0b17",
                    "sha256:98e55b80c9e54c94ee3dcb190ffdb885eba17558e0de01d3fd86f6f2090378fd",
                    "sha256:f4023df6b590f9f83ddb2bb3f1cfa7964ca6b2a098826b346827e2f56ef5a680"
                ]
            }
        },
        "1.2.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c4c1c4cd562a2aa43d46253c7706d1ebc77a334a1c4dcd738313e379fec38e95",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "da66e6582166897ce18c1a5aa482e6d261d1ed0c69528b0b43df55a1ee2b36b8",
            "container_config": {
                "Hostname": "da66e6582166",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c4c1c4cd562a2aa43d46253c7706d1ebc77a334a1c4dcd738313e379fec38e95",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-28T17:27:43.34246163Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:36.039294565Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.2.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:36.819414566Z",
                    "created_by": "|1 VAULT_VERSION=1.2.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-28T17:27:41.445428973Z",
                    "created_by": "|1 VAULT_VERSION=1.2.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-28T17:27:42.244072271Z",
                    "created_by": "|1 VAULT_VERSION=1.2.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-28T17:27:42.422320761Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:42.586944289Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:42.794735426Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:43.002514532Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-28T17:27:43.166275467Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:43.34246163Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:c62c20bbcbbeeac9d51c71d4e2cd4b0e9c62b5114f4a8795eb5f380aa61a4d04",
                    "sha256:2278b9a4c858a5726aca5dc1769e6b873fd22312d87243360963c0c65e8d1e2b",
                    "sha256:32db918616b0c1184eac6dfd5dcd9f55185903551660db82d16ed2d8293170fc",
                    "sha256:bd9490b61072fa348dae55f66806b2b77ea6be6bd862fe896178deba27567cd8"
                ]
            }
        },
        "1.3.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89ab7c223e3435778d645ab9206c0986065ed601e13c274df6b6c6241207134a",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "de832665f2568857404dfadc3392036b366ce8a3c0c48caae3dae3436a808a08",
            "container_config": {
                "Hostname": "de832665f256",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89ab7c223e3435778d645ab9206c0986065ed601e13c274df6b6c6241207134a",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-14T22:21:31.322966257Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T17:21:42.078618181Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 in / "
                },
                {
                    "created": "2019-10-21T17:21:42.387111039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-14T22:21:23.826964798Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-14T22:21:24.535198704Z",
                    "created_by": "|1 VAULT_VERSION=1.3.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-11-14T22:21:29.541456566Z",
                    "created_by": "|1 VAULT_VERSION=1.3.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-11-14T22:21:30.298514104Z",
                    "created_by": "|1 VAULT_VERSION=1.3.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-11-14T22:21:30.44671507Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-14T22:21:30.634603058Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-14T22:21:30.812778022Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-14T22:21:31.00055797Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-11-14T22:21:31.172903164Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-14T22:21:31.322966257Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77cae8ab23bf486355d1b3191259705374f4a11d483b24964d2f729dd8c076a0",
                    "sha256:c7e80b8f8c0a92c61fe67cb251bf1d1b24ef9bddd115116b4db8d4887fbb443d",
                    "sha256:5995199af7a0396444212419263317925a2c461e805d42386c3569492437ad89",
                    "sha256:6b969a8a287ef6e7b4b14c7bada6e77d5c2ec7ac1731ca76c7554c45907bdc33",
                    "sha256:060f3b39a09923cc3034a002541584b9207477c7022ee37a4c171c7d54a67c47"
                ]
            }
        },
        "1.3.0-beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:acf8081e13532821a1d3e4ef84792d218903e57fd53d0a80079393d6ecabedfa",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b5b3f81838cdd5d7849dfa62b7b8adc7658f322df9ffd80b3a22aca42358dcc",
            "container_config": {
                "Hostname": "6b5b3f81838c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:acf8081e13532821a1d3e4ef84792d218903e57fd53d0a80079393d6ecabedfa",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-31T21:20:23.511361795Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T17:21:42.078618181Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 in / "
                },
                {
                    "created": "2019-10-21T17:21:42.387111039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-31T21:20:14.139608418Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-31T21:20:14.863155779Z",
                    "created_by": "|1 VAULT_VERSION=1.3.0-beta1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-10-31T21:20:21.696201541Z",
                    "created_by": "|1 VAULT_VERSION=1.3.0-beta1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-10-31T21:20:22.491008418Z",
                    "created_by": "|1 VAULT_VERSION=1.3.0-beta1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-10-31T21:20:22.658415741Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-31T21:20:22.810978537Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-31T21:20:22.979246724Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-31T21:20:23.179295668Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-10-31T21:20:23.331011092Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-31T21:20:23.511361795Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77cae8ab23bf486355d1b3191259705374f4a11d483b24964d2f729dd8c076a0",
                    "sha256:117c63f1a822a29573aa8f4bd1aa7e27ab998310fdedbb990139bffec25db295",
                    "sha256:77893fdfe8324029bb2564b6ba8cfac9251f7332a18648282d77f6b2a53092ea",
                    "sha256:50c789f00219c0ade135dac04065a405f03f4cbebafbc3420160fb6cacefefa4",
                    "sha256:e19c88ac44fc43089191cf913ac0c9befdba829fd55d7ad627e3e80ccb4bec73"
                ]
            }
        },
        "1.3.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ee48f8fef86b64be76053c9e4dba96750d0fcc3b0c8d0b5547f24c9850fb598",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d448ea5efd943029ea738a55ee2942887c72d592a76c20cb7c6a2a55e56c59fc",
            "container_config": {
                "Hostname": "d448ea5efd94",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ee48f8fef86b64be76053c9e4dba96750d0fcc3b0c8d0b5547f24c9850fb598",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-19T04:26:33.950643784Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T17:21:42.078618181Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 in / "
                },
                {
                    "created": "2019-10-21T17:21:42.387111039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-19T04:26:25.701098879Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-19T04:26:26.489442341Z",
                    "created_by": "|1 VAULT_VERSION=1.3.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2019-12-19T04:26:32.169501174Z",
                    "created_by": "|1 VAULT_VERSION=1.3.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2019-12-19T04:26:32.935951607Z",
                    "created_by": "|1 VAULT_VERSION=1.3.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2019-12-19T04:26:33.084167064Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-19T04:26:33.230751467Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-19T04:26:33.398627678Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-19T04:26:33.59507255Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2019-12-19T04:26:33.75077088Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-19T04:26:33.950643784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77cae8ab23bf486355d1b3191259705374f4a11d483b24964d2f729dd8c076a0",
                    "sha256:39aaa6a2f1fe19507d5e46fce26f84ab3b19bfbde6a5edf39ba00981c2229d7b",
                    "sha256:76c2a90cb044d48e9e414dcd834ef3cce20c1032e2dc6bb85981114c9671647e",
                    "sha256:0f16657e75f697f496bfe08eb9da0722aaa709c3cdd3dd5dd3bb706a5d6fa8eb",
                    "sha256:6b8df8861bbeae31df7ee78593065b6c853ad6be307eb628b62b2717b3ab2e38"
                ]
            }
        },
        "1.3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e84d6b641e43ec51ddf0adda47efc6e930943622fcf0011f9be62f1cdd540f1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1736a98111e620223897e037a683bdc1469ac5fdb2e1703aea4887b49ee36858",
            "container_config": {
                "Hostname": "1736a98111e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e84d6b641e43ec51ddf0adda47efc6e930943622fcf0011f9be62f1cdd540f1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-28T17:27:31.075178338Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:23.625980491Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:24.387532921Z",
                    "created_by": "|1 VAULT_VERSION=1.3.10 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-28T17:27:29.145777812Z",
                    "created_by": "|1 VAULT_VERSION=1.3.10 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-28T17:27:29.938847653Z",
                    "created_by": "|1 VAULT_VERSION=1.3.10 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-28T17:27:30.131363517Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:30.322631086Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:30.507431752Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:30.73138304Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-28T17:27:30.895036176Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:31.075178338Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:b445e6cb901f8f22533b17175fee3a98087828a76ecc59ec87eb4a0d482973b9",
                    "sha256:cc18128e1627127268a3e112f53435ce7b11625b3a4970048795c2aa0598b440",
                    "sha256:3e0ee3488b9be3a8abc27730f3f6cfa734e802dbbb7840df966f0907f518eba6",
                    "sha256:3ca0973b836fd84fa36770ad147dbfa7c27dd6241cc2edb478c448fdcd70bbd1"
                ]
            }
        },
        "1.3.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcde4075506e25ef5e58cb85e2742e2c6bf7f2304f5c7b768a11310b4f4ff5b3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "26b215703a6c6a24f6ca16ff96b1c02fec0a62fa302b0452f8fc9222afd25461",
            "container_config": {
                "Hostname": "26b215703a6c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcde4075506e25ef5e58cb85e2742e2c6bf7f2304f5c7b768a11310b4f4ff5b3",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-24T06:15:01.244610332Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T06:14:48.626935448Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T06:14:49.811970645Z",
                    "created_by": "|1 VAULT_VERSION=1.3.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-01-24T06:14:58.337501883Z",
                    "created_by": "|1 VAULT_VERSION=1.3.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-01-24T06:14:59.576113522Z",
                    "created_by": "|1 VAULT_VERSION=1.3.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-01-24T06:14:59.835494801Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T06:15:00.12344592Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T06:15:00.381305434Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T06:15:00.753253579Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-01-24T06:15:01.013070666Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T06:15:01.244610332Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:f1bb08c023de67b6712f0daa43d02e7288032bd6fca04ea337ecfe427fba7a1f",
                    "sha256:1d0df5b8f7a6444876cb26710e1adf21e1c28d084da0d47c9b5d0b7b385e22c1",
                    "sha256:245c2a715ae6e6a17bcfd4fad0ad5467968f4bee72ed82ffe61316730649309a",
                    "sha256:98b3325218ec2f7dcae5f7a4a23c32f7425a8efd3bbc71720c0e19380fa8306b"
                ]
            }
        },
        "1.3.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9695bb78d1ee6e8a6a368fd08f7a9c960df10814734c0f4149ff59e51dad275",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "27b1544dfe6584b856499d51f4ea410cc70429062ee8c67c2e718f525194fc2a",
            "container_config": {
                "Hostname": "27b1544dfe65",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9695bb78d1ee6e8a6a368fd08f7a9c960df10814734c0f4149ff59e51dad275",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-06T02:57:41.882393495Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T02:57:29.629979471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T02:57:30.970401021Z",
                    "created_by": "|1 VAULT_VERSION=1.3.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-03-06T02:57:38.424764147Z",
                    "created_by": "|1 VAULT_VERSION=1.3.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-03-06T02:57:39.903158979Z",
                    "created_by": "|1 VAULT_VERSION=1.3.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-03-06T02:57:40.214385511Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T02:57:40.487399807Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T02:57:40.854689012Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T02:57:41.252283348Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-03-06T02:57:41.571318768Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T02:57:41.882393495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:639bf7eea4f22e79c09cf5f60d9bebfa08f8d1dc3196c487713e5da4035b2b75",
                    "sha256:4d8ba6b095f69ff26bfb7a1f8f1614cb06e2f7d0fdc64dedc71f66338a24c31e",
                    "sha256:a4ecfd1f340016d8bc8afde593ca37dbd380b7a854050558849cd6429a732f15",
                    "sha256:103f36c3ccd62f92aac7a3f4ad8d94805f6512608edf283bcc598d8c0a271d61"
                ]
            }
        },
        "1.3.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d490f4f7678bbad55e9f8a992d6ef679889c9d85bc8d89f06adcc0a95286627",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "998481d3c07b04d0096278be6f8c7cbb5ee5047746f2c12b51508d8efc7afb9a",
            "container_config": {
                "Hostname": "998481d3c07b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d490f4f7678bbad55e9f8a992d6ef679889c9d85bc8d89f06adcc0a95286627",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-20T18:21:56.969997784Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:21:49.418208639Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:21:50.206759013Z",
                    "created_by": "|1 VAULT_VERSION=1.3.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-03-20T18:21:55.049595452Z",
                    "created_by": "|1 VAULT_VERSION=1.3.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-03-20T18:21:55.863490584Z",
                    "created_by": "|1 VAULT_VERSION=1.3.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-03-20T18:21:56.038873377Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:21:56.238317654Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:21:56.426301491Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:21:56.638744785Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-03-20T18:21:56.793804245Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:21:56.969997784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:9a7c89368ebe5a90d820d8e4a90ac96db13adef119589955d2636229b4cc1dac",
                    "sha256:50a1cbb07d028cc5afa4b8145885568742c9b605afec14e84ec882ee63312ff9",
                    "sha256:bbb7b2812f7395f238648b8770df32664de097b315acfa849f678cd85a96518e",
                    "sha256:fd57a9a788b6ae626bca01c27faeeb828a95e6da8a7ed6106d902572d8c41448"
                ]
            }
        },
        "1.3.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d56f2c046522572d04830abbaf8de4f3b520e810a257eeb612a16b7641eadfb7",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "b9d4cac512818377072719cc4b83a0e1b6f1b521a6839af5222031c9ada46206",
            "container_config": {
                "Hostname": "b9d4cac51281",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d56f2c046522572d04830abbaf8de4f3b520e810a257eeb612a16b7641eadfb7",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-30T19:40:28.139797799Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T19:40:20.042689265Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T19:40:20.844731208Z",
                    "created_by": "|1 VAULT_VERSION=1.3.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-04-30T19:40:26.114667476Z",
                    "created_by": "|1 VAULT_VERSION=1.3.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-04-30T19:40:26.94763575Z",
                    "created_by": "|1 VAULT_VERSION=1.3.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-04-30T19:40:27.127715595Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T19:40:27.335474007Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T19:40:27.53456075Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T19:40:27.760496327Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-04-30T19:40:27.956707444Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T19:40:28.139797799Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:a66397bede1cab7415c0126aa35282f9b260216bdd87d7048e72f1c0a178c048",
                    "sha256:3fdc4074baeb121fd466424d358999ab9cf0b8456cc3be779184a66c14e16004",
                    "sha256:febed685bccddda00576efafba1e5592ffa28371a3184697b475d7518601bc17",
                    "sha256:d3e2fd61249d812c369f98ba1a62bf2f16d5f40af84fc74d939db0c178c3b46b"
                ]
            }
        },
        "1.3.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:de96bfc8cec3d36f4b25be89b8a9c356a9a27055bed3c707377e6a4ceb26203a",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "56a3b5acc870fe4258ff0badfbfecc2200ee69d3de58a839a5d75b469621cc8e",
            "container_config": {
                "Hostname": "56a3b5acc870",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:de96bfc8cec3d36f4b25be89b8a9c356a9a27055bed3c707377e6a4ceb26203a",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-22T01:38:15.975824424Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:08.290939656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:09.054564706Z",
                    "created_by": "|1 VAULT_VERSION=1.3.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-05-22T01:38:14.054089584Z",
                    "created_by": "|1 VAULT_VERSION=1.3.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-05-22T01:38:14.862384686Z",
                    "created_by": "|1 VAULT_VERSION=1.3.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-05-22T01:38:15.026537679Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:15.222715525Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:15.402048587Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:15.629390867Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-05-22T01:38:15.796374074Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:15.975824424Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:d75f99f8c5752cdcfe55a7bac4367735e82e35e526b25c6ee329b94e396ddad3",
                    "sha256:cbb395179691c53d866b14670d3acc79d132a135ad3f1181e701b6291eca29a2",
                    "sha256:d1cf36773e5ee75291afbdf0d5d65d2bf6bab6229fab81b1c206e2fb4e5998f6",
                    "sha256:f1aa2d15bcefe447a6eadba12fcfa3ba97d1745f1ffac7745471436d1484851e"
                ]
            }
        },
        "1.3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ce8ade8a952d612f66d0d9fcfe29c8fba6a5f94b94df569db7d71d1358074e0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "ffd3c0bbc3ee232154c9c868d17c416523347274287c2af45e0e825d148e6d34",
            "container_config": {
                "Hostname": "ffd3c0bbc3ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ce8ade8a952d612f66d0d9fcfe29c8fba6a5f94b94df569db7d71d1358074e0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-03T17:20:32.939361682Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:25.399712812Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:26.159613754Z",
                    "created_by": "|1 VAULT_VERSION=1.3.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-07-03T17:20:30.965499218Z",
                    "created_by": "|1 VAULT_VERSION=1.3.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-07-03T17:20:31.792438103Z",
                    "created_by": "|1 VAULT_VERSION=1.3.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-07-03T17:20:31.980171885Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:32.155752572Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:32.344009857Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:32.561126706Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-07-03T17:20:32.731134373Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:32.939361682Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:17fd5e184be2637a1feecf43dd7c9fa92339cc03e271000d12bba767feb7693f",
                    "sha256:809454b3ea07fece0609b60153adaaa4fc21ba8cb6357b0f50279f5ef8b674d8",
                    "sha256:2cf74ba22c57d4193d728518a094ca70dfc6360e9f717bb2d037df1751170db6",
                    "sha256:d3fdfcefc1afe7112338c95bb1f6762533403682e5555b2fe666dbc009fed723"
                ]
            }
        },
        "1.3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:828fc50648f1215520abc2c4be1b46c26784c7120d341c63e5aa5d1c51af8165",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "4e8d9b081b0899da23b0d40b8ac9243d1e46a81d85357200cf13fd5a7da048a2",
            "container_config": {
                "Hostname": "4e8d9b081b08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:828fc50648f1215520abc2c4be1b46c26784c7120d341c63e5aa5d1c51af8165",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-21T19:18:58.89450664Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:48.355394927Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.3.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:49.187994378Z",
                    "created_by": "|1 VAULT_VERSION=1.3.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-21T19:18:55.704364957Z",
                    "created_by": "|1 VAULT_VERSION=1.3.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-21T19:18:56.947407955Z",
                    "created_by": "|1 VAULT_VERSION=1.3.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-21T19:18:57.256229348Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:57.495365383Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:57.827225045Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:58.21838915Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-21T19:18:58.514578442Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:58.89450664Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:713e4d78bb7390cd27ffbeb738aa33ae368e23e9c550f332922f3e4909834f27",
                    "sha256:53e80165d8ceb4f27cd598b700852738d67024f0e51e13803f5ac999c16adfc7",
                    "sha256:94249eba5433ad35a544205b827b3d47576a0ad95b76941a0888426362b24d29",
                    "sha256:7cf5ffbe8b7352bdc55fa144b9ab6531669e7df3cd194ec9c24eebbe4ce2cb09"
                ]
            }
        },
        "1.4.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a0b1d3294cbe507b6e34c3dd5af30e237525cb53b16d7a3c52b60495d227e102",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1b790c6a826cc1d6e03d640b30f6ab3e73cad6d296174e17fad2489ba0df4b68",
            "container_config": {
                "Hostname": "1b790c6a826c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a0b1d3294cbe507b6e34c3dd5af30e237525cb53b16d7a3c52b60495d227e102",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T17:34:53.286269072Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T17:34:45.714167256Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T17:34:46.473940221Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-04-24T17:34:51.415457499Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-04-24T17:34:52.207982888Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-04-24T17:34:52.375223461Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T17:34:52.550316304Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T17:34:52.731247462Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T17:34:52.956352383Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-04-24T17:34:53.122500723Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T17:34:53.286269072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:e6ec3fd71819bbd27868d6d295eb4a4de58440e62c59b59f205385294ad24b35",
                    "sha256:13cbaa40e9fd656ebce87445074a6cd480231a39ec44ac83e613310de0ef3ae3",
                    "sha256:b94619a23060953859c1a8d46e5bfbd4433061623d1fa691804156e92173484c",
                    "sha256:0394edacce8672c9dba028cce1d103b0d061d11092d9beac9d114f831c87e92f"
                ]
            }
        },
        "1.4.0-beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:29155dbd17ca799e64f3076181ccb5e73403b328c4bb616df0ae752603caa1d5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "56f6981b9e5f9e06e46722ffdd984eb71bcac354d89ca18b0c8013ec0ff35649",
            "container_config": {
                "Hostname": "56f6981b9e5f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:29155dbd17ca799e64f3076181ccb5e73403b328c4bb616df0ae752603caa1d5",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-21T21:26:36.779443838Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-21T21:26:28.578974719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.0-beta1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-21T21:26:29.394953656Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0-beta1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-02-21T21:26:34.725727029Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0-beta1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-02-21T21:26:35.631296817Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0-beta1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-02-21T21:26:35.836015329Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-21T21:26:36.031123811Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-21T21:26:36.218987638Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-21T21:26:36.431238778Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-02-21T21:26:36.599183275Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-21T21:26:36.779443838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:8aefb1e5fdde5531d43378ea02e8f945015ddbe1b12552fd55fc182811ca7344",
                    "sha256:8ab160b9e6cf3f740d897ec13d2c83b300683dc25588e0762831d02d4d854c16",
                    "sha256:6d740578f872da781503cab2723db6863df145f000271945745dcfbaa87df955",
                    "sha256:58d2a3a08207767baa86efa099918998e9d8e6fc2202045ba1827295504d55f2"
                ]
            }
        },
        "1.4.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1f9aa7f0ac3cbcf50957959755568cf36d54fb7b1f9ad7602456e3d4b2b487a2",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c3bb3d1994fdb4ee2d72c07397a5aa281c77b959beb24f8d5527d5c5a44ea078",
            "container_config": {
                "Hostname": "c3bb3d1994fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1f9aa7f0ac3cbcf50957959755568cf36d54fb7b1f9ad7602456e3d4b2b487a2",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-20T18:22:08.599256201Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:22:01.084970221Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:22:01.827844515Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-03-20T18:22:06.650270009Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-03-20T18:22:07.450621693Z",
                    "created_by": "|1 VAULT_VERSION=1.4.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-03-20T18:22:07.643233424Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:22:07.826858428Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:22:08.046744686Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:22:08.272171368Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-03-20T18:22:08.439128495Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T18:22:08.599256201Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:834ef3013b6554be9e67a1e3ca9800cdc277e4d5a97fa5e4b9eb83f88f3054ca",
                    "sha256:6d49af1ccdfde273e7fe43d282953e20e8135dca03b30d83befc6eb0559e62d4",
                    "sha256:398bdee892e79879d5c508190e63130684084dd86226dd9c28f5ea83a027ad1d",
                    "sha256:454df276b4b308b5a369f5f254f727d97625ed1e932b26a92c61e3a6706e499e"
                ]
            }
        },
        "1.4.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0def144fcdba98dc319a7c6d9c7b9c4d98877dd812d51f324bc69da07b40690e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "4a6aba97257e3d44a30152dd53136bc2114e2b7fced7f99fcbaaf0226e9a9c7c",
            "container_config": {
                "Hostname": "4a6aba97257e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0def144fcdba98dc319a7c6d9c7b9c4d98877dd812d51f324bc69da07b40690e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-30T23:23:10.131903182Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T23:23:02.422571395Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T23:23:03.275781742Z",
                    "created_by": "|1 VAULT_VERSION=1.4.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-04-30T23:23:08.241597981Z",
                    "created_by": "|1 VAULT_VERSION=1.4.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-04-30T23:23:09.031068732Z",
                    "created_by": "|1 VAULT_VERSION=1.4.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-04-30T23:23:09.194932896Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T23:23:09.366229595Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T23:23:09.53531497Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T23:23:09.759191524Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-04-30T23:23:09.950746973Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T23:23:10.131903182Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:73628a861044e3750053b06e58c4258789f7800853058077182a66851b2fd1c1",
                    "sha256:27c4aa52f5f713a47059f1cba2b8b99dca964d8b195225bee02d74e1b8b763a9",
                    "sha256:1742891a5fe18175a92aef1694895225f9d1f70701541e672f6dad44272432aa",
                    "sha256:0f84a354b60a270f0b3c8efc46407a4b737d7556c1970b160c8ba34741c1c8e7"
                ]
            }
        },
        "1.4.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cb24cd7c8cd0ffda834b12ca493f5f483a9d6ec49816cca085a55b38c940ac4",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d74cb1440fb1775bc6a07196956684b33763454f4c7fb5fdd6b67a511cb58862",
            "container_config": {
                "Hostname": "d74cb1440fb1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cb24cd7c8cd0ffda834b12ca493f5f483a9d6ec49816cca085a55b38c940ac4",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-22T01:38:03.693532734Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:37:55.959173893Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:37:56.747720429Z",
                    "created_by": "|1 VAULT_VERSION=1.4.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-05-22T01:38:01.73920105Z",
                    "created_by": "|1 VAULT_VERSION=1.4.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-05-22T01:38:02.589382613Z",
                    "created_by": "|1 VAULT_VERSION=1.4.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-05-22T01:38:02.774200471Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:02.960861773Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:03.130589082Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:03.344162443Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-05-22T01:38:03.513888447Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-22T01:38:03.693532734Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:41a626ed86737ec61b018ab694978524e8e8a5bcae80c7f9c677554e5975f945",
                    "sha256:2a3e5a17163ef94c01db75646bb50c804508fb63ec1598aa132efc4dd35ef392",
                    "sha256:239807c95ee8d5340a257206a471053e2a3529a4ea60defcb285a4d81545a7ea",
                    "sha256:ab2c570408859df893eea2a0d03a193091e86600564bea9c9c29c327ccf9c655"
                ]
            }
        },
        "1.4.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b4c8d5eb55d9cd6d7cda305b97a6e3b5a62a52058bde03699fb460f53fc6b88",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "655ae9898a49a642772f52ea25eeebd65be7b6a665290363f9a22e7ae8a52bb8",
            "container_config": {
                "Hostname": "655ae9898a49",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b4c8d5eb55d9cd6d7cda305b97a6e3b5a62a52058bde03699fb460f53fc6b88",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-03T17:20:20.591517825Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:12.867801787Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:13.636435763Z",
                    "created_by": "|1 VAULT_VERSION=1.4.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-07-03T17:20:18.66622167Z",
                    "created_by": "|1 VAULT_VERSION=1.4.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-07-03T17:20:19.452581311Z",
                    "created_by": "|1 VAULT_VERSION=1.4.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-07-03T17:20:19.632566825Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:19.831906973Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:20.016458586Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:20.223848659Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-07-03T17:20:20.399284542Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T17:20:20.591517825Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:ef78445b713dd8c22cea9f29a103f1b521f1cf33e0dbb419f7675f6bc33db2ed",
                    "sha256:de22b656e0d89f55361457c3386fe5baf9223bab114d4597fdb7c0ec3120de13",
                    "sha256:aeb08cdb60e77dce4502da62117f6aea355217bbf7222fb0fe1c249dfa0c56cf",
                    "sha256:eb6187e4c5168be1196404df2fea8abb82c09f3758e1d6f8b0c1632eb69dbcce"
                ]
            }
        },
        "1.4.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e37b765ab2740886dc48fd480c840866d38b50d9d111cb7f232b2a2fb1bdada1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "57557be524c32681549e6ef0b392a6d2dfed046f0faf24034e567d0962cca4f8",
            "container_config": {
                "Hostname": "57557be524c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e37b765ab2740886dc48fd480c840866d38b50d9d111cb7f232b2a2fb1bdada1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-21T19:18:41.995957851Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:29.643322032Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:31.103860832Z",
                    "created_by": "|1 VAULT_VERSION=1.4.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-21T19:18:38.976043403Z",
                    "created_by": "|1 VAULT_VERSION=1.4.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-21T19:18:40.318906589Z",
                    "created_by": "|1 VAULT_VERSION=1.4.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-21T19:18:40.498847575Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:40.670737148Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:40.97484245Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:41.360606156Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-21T19:18:41.687239623Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:41.995957851Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:6f87bb8fcb3b32b427b208ab598fd0479ec07734afbe0732b57ae8e2bb4bf5bf",
                    "sha256:40af666d22236c8f9a4428c3858c48680a78310d92658fe48f64988fc2fdc77c",
                    "sha256:278ef96046448a751dd72e81f1351d6879a742ae83b2c595fefb7bea79baab23",
                    "sha256:37d66be96504609e4402d592d20e8c6cd5ddd94d4c429b41bb5e308de37ce2d8"
                ]
            }
        },
        "1.4.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d037a2c4ede0fe2fd743d2c7dd6a976f38a7229f3ab0357247445ee1e77059ad",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "6e8698d1a8dc7f6a59f9b945f0637c036c1fe3fe04e7e383168e442c531c22b8",
            "container_config": {
                "Hostname": "6e8698d1a8dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d037a2c4ede0fe2fd743d2c7dd6a976f38a7229f3ab0357247445ee1e77059ad",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-28T17:27:18.622273061Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:11.174522312Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:11.948286176Z",
                    "created_by": "|1 VAULT_VERSION=1.4.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-28T17:27:16.712646064Z",
                    "created_by": "|1 VAULT_VERSION=1.4.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-28T17:27:17.498631058Z",
                    "created_by": "|1 VAULT_VERSION=1.4.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-28T17:27:17.670304922Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:17.850912492Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:18.030775538Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:18.271139278Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-28T17:27:18.438836284Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:18.622273061Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:131a1cbe135523a2f69bcf6994281cf5865979886658d3faf92ee6aeff85a937",
                    "sha256:29c73fed164a28009b9988085d5437eaed42abb288851ea23775a12cec9845db",
                    "sha256:34fb34bec0a0303209ff2ee88e3ca10749824d1d8ca5a24b0f5ace2d8a0f9be2",
                    "sha256:ee766ec0bd01ed98d0cf98e04026a5339d54826d51b4bf33eed48eb48fa02524"
                ]
            }
        },
        "1.4.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:dd94fc95f7232b9ba8d54c9b731c258c16c48e0a048003b302d7fd1be153efcd",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "39ac2382c71303f43a452014bc3b2f0f0f1c2fbee85ad23efdab48fdf2eb9ea1",
            "container_config": {
                "Hostname": "39ac2382c713",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:dd94fc95f7232b9ba8d54c9b731c258c16c48e0a048003b302d7fd1be153efcd",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-14T23:33:48.969305525Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:20:04.987219124Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c5377eaa926bf412dd8d4a08b0a1f2399cfd708743533b0aa03b53d14cb4bb4e in / "
                },
                {
                    "created": "2021-04-14T19:20:05.338397761Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:40.27770452Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.4.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:41.244534862Z",
                    "created_by": "|1 VAULT_VERSION=1.4.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-14T23:33:46.50751014Z",
                    "created_by": "|1 VAULT_VERSION=1.4.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-14T23:33:47.758302701Z",
                    "created_by": "|1 VAULT_VERSION=1.4.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-14T23:33:47.958274596Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:48.1672236Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:48.373901483Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:48.583720251Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-14T23:33:48.766015059Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:48.969305525Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fb3aa2f8b8023a4bebbf92aa567caf88e38e969ada9f0ac12643b2847391635",
                    "sha256:b19cc2b8887e4c68403cf8683bf5cb625fdb232bd03bc0fc6c8644f6c1bdef07",
                    "sha256:7ec37d02dae2c228e6be2cfe5d329ee3a47f01d167eb960ff32178ca9f40a89d",
                    "sha256:d4d189a467d698f36b726feb4a3b6d0b5c14d1ac82bb8a686be4f68b13184edc",
                    "sha256:63ebd9b0ee693f1206156bda59bc79a2b921c2f6538d9ebbf47cea99f0d1bab3"
                ]
            }
        },
        "1.5.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa5c6e1cc9efc848f1d1c88176a53fe259aa7824c96d414d0dec5aca5767e283",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "6455f11ad4fbfcdcd08611332f11c87c687eff05557e46dee114feb345e77c1a",
            "container_config": {
                "Hostname": "6455f11ad4fb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa5c6e1cc9efc848f1d1c88176a53fe259aa7824c96d414d0dec5aca5767e283",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-22T01:32:10.672604128Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-22T01:31:55.668619129Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-22T01:31:57.387975465Z",
                    "created_by": "|1 VAULT_VERSION=1.5.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-07-22T01:32:06.878248764Z",
                    "created_by": "|1 VAULT_VERSION=1.5.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-07-22T01:32:08.487939505Z",
                    "created_by": "|1 VAULT_VERSION=1.5.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-07-22T01:32:08.827537371Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-22T01:32:09.163240334Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-22T01:32:09.470991389Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-22T01:32:09.937686018Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-07-22T01:32:10.248317064Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-22T01:32:10.672604128Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:d04890a60a27faaebcb79d54ed1d9b7b504bdace7313cbcb209ac80137706e64",
                    "sha256:bd41e765d183e0731fe1095f5bac4853b43aedbff90dbca463e18d8a5f299e33",
                    "sha256:6dc98cf19d4ebfa335424c20bca59e41e8d2a1755c8b7206701cdc9c901cb274",
                    "sha256:5440acb6fb7d2afe92ca4faa7323becc1d768a0d1acef8a2804e2db368b11747"
                ]
            }
        },
        "1.5.0-rc": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:95edfb1638a93716274ea087fee16d03a30fbe488c7e54dd7687a477c465196f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5abfc798a95832db0755fe2e231e1f451b5438a71bda35168affc5771590f5a",
            "container_config": {
                "Hostname": "f5abfc798a95",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:95edfb1638a93716274ea087fee16d03a30fbe488c7e54dd7687a477c465196f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-15T23:52:49.415866425Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-15T23:52:41.566664805Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.0-rc",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-15T23:52:42.371905905Z",
                    "created_by": "|1 VAULT_VERSION=1.5.0-rc /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-07-15T23:52:47.41402998Z",
                    "created_by": "|1 VAULT_VERSION=1.5.0-rc /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-07-15T23:52:48.251422835Z",
                    "created_by": "|1 VAULT_VERSION=1.5.0-rc /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-07-15T23:52:48.422910241Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-15T23:52:48.616316984Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-15T23:52:48.787963166Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-15T23:52:49.027458019Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-07-15T23:52:49.207982016Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-15T23:52:49.415866425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:4bcb4fd8ae60b39fac4affe44419dae1941a26da1ed973bcd77951fec64e3373",
                    "sha256:b1138e1d08e03e5faabb609de89a0392e9f08953a3743fd25612aa12c02d9654",
                    "sha256:bef8f5ed3a03b44b46d4d04fb5771ac1dd6e60e7a5cbcbfcca7cb40c986d32ac",
                    "sha256:93f840aa90ed47b7ba5ba7339e03f60cef2a014c3362d8c053961d8fbf12a86b"
                ]
            }
        },
        "1.5.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:907a70fcaf6b6192dbfc86249b818d2170d1fe0598a9b5d584780067ed6bcc61",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "959031d0a833ccd6b2d597d91613fd1ccc36e0a9fe58a91de07dbacf47151897",
            "container_config": {
                "Hostname": "959031d0a833",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:907a70fcaf6b6192dbfc86249b818d2170d1fe0598a9b5d584780067ed6bcc61",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-21T19:18:23.892264298Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:10.302773246Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:11.942760898Z",
                    "created_by": "|1 VAULT_VERSION=1.5.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-21T19:18:20.417537885Z",
                    "created_by": "|1 VAULT_VERSION=1.5.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-21T19:18:21.87503668Z",
                    "created_by": "|1 VAULT_VERSION=1.5.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-21T19:18:22.14298263Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:22.502883952Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:22.803713512Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:23.256245206Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-21T19:18:23.558785484Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-21T19:18:23.892264298Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:00cf8897c7a69839fa1bef06fbcd49368e09404a7ce49b5f7c2b7831639e16e6",
                    "sha256:538c5f5f45f28d1f42765b7e37ffd8470fbb76f8056c9e5bf713ecae66ebe072",
                    "sha256:5e393c98ef5a3bf97c037fc12fce082bc42c7eae30913462b7b78cf84afb6f1a",
                    "sha256:c07fefa4abb5750dedb779ed2af527fcdd75968d8535bb868da653bd899e644c"
                ]
            }
        },
        "1.5.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5cd9313984a4539ac52965fba1c782fc471639476f8c5539c8d95b9ae46fc7d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f1903b9b8202800618033abde20344c400b075a3849230f1023dde684f4268b6",
            "container_config": {
                "Hostname": "f1903b9b8202",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5cd9313984a4539ac52965fba1c782fc471639476f8c5539c8d95b9ae46fc7d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-28T17:27:06.726550648Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:26:58.970294163Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:26:59.73469875Z",
                    "created_by": "|1 VAULT_VERSION=1.5.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-08-28T17:27:04.721311432Z",
                    "created_by": "|1 VAULT_VERSION=1.5.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-08-28T17:27:05.551457336Z",
                    "created_by": "|1 VAULT_VERSION=1.5.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-08-28T17:27:05.751134867Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:05.942890726Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:06.102447915Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:06.35981808Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-08-28T17:27:06.52742497Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T17:27:06.726550648Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:285d9456042626b945e2482b319764f09fd796bb6a80ef875263166a7bd06cb7",
                    "sha256:3bf0810a4582519d81f70c68790359a03f2c4cb8b988f3c3015105e142c36c0f",
                    "sha256:5949557f129c7c4c4cc07aaf96470731122d4fd8b844e5ff395d948f355dac96",
                    "sha256:6d2764e5103a63aca255f540a450bcbace6dcc3f0e1ab803f30ea1827e934b62"
                ]
            }
        },
        "1.5.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c6c0653f32987cd56a3f971c19fdf8551ffc3f33a98a18f01b1b188a11c12f9b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "9f2672700a35f9e7c0e6e1d2f87c6594e62cb7372fa5ec66615bc08d30f251d1",
            "container_config": {
                "Hostname": "9f2672700a35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c6c0653f32987cd56a3f971c19fdf8551ffc3f33a98a18f01b1b188a11c12f9b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-25T22:23:51.023186342Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:23:41.963726327Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:23:43.000165099Z",
                    "created_by": "|1 VAULT_VERSION=1.5.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-09-25T22:23:49.018610929Z",
                    "created_by": "|1 VAULT_VERSION=1.5.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-09-25T22:23:49.87212843Z",
                    "created_by": "|1 VAULT_VERSION=1.5.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-09-25T22:23:50.066379913Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:23:50.242117353Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:23:50.426642913Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:23:50.643498902Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-09-25T22:23:50.821277089Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:23:51.023186342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:aa167eee4cb2a37c8c87b67724fc125201a7c4cf3cb104f01d5ec9d19bd6d131",
                    "sha256:4fdc30e4b83b6f8b8af77a69d3a2e1c7919e2be71c486204152fd4ec3d6d3cb0",
                    "sha256:e8050fc7c9c8b4d1ba5b53f929ee2fa0604cc588a102aa8b156f98ac7df3f436",
                    "sha256:7781cdc9493c050e82ddebcb1d8c2c05e426e959f1d45677ed7cb0dda14e6b4a"
                ]
            }
        },
        "1.5.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00b71ca6c9d47d5990fa0cf43fa3b3d328454447a048bdd00f5bad2255e8709d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1f32390c245c2bec991d288ac35b6078b215af2fd01dc245a1cbd701dd4ff321",
            "container_config": {
                "Hostname": "1f32390c245c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00b71ca6c9d47d5990fa0cf43fa3b3d328454447a048bdd00f5bad2255e8709d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-27T18:39:50.41915954Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-27T18:39:42.598912782Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-27T18:39:43.347752407Z",
                    "created_by": "|1 VAULT_VERSION=1.5.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-10-27T18:39:48.500500616Z",
                    "created_by": "|1 VAULT_VERSION=1.5.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-10-27T18:39:49.32640134Z",
                    "created_by": "|1 VAULT_VERSION=1.5.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-10-27T18:39:49.498629614Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-27T18:39:49.673868426Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-27T18:39:49.878454246Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-27T18:39:50.098678598Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-10-27T18:39:50.258370536Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-27T18:39:50.41915954Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:a22da3e6d998ecd0c6a2e9761c952c0942c43cf19fe9f3880a084fdb74ae5cb4",
                    "sha256:66031d74e2f01277363067f4ba677795f9362e89bea1e380c1da8b2600e1c55f",
                    "sha256:7bd38c1f2ff172ddba4b82c310f275f4ad5d40a7313ef427053c0bbaa01cca28",
                    "sha256:0346f86c0c8098cd3168b16bfcb724ef8bc4e43215300cba0572d5d0efa0095c"
                ]
            }
        },
        "1.5.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:88e0ef9bc6ea4aafce14678eab0f8a1bcc70612a96c04390cca6da713533f432",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c886e713017fc99af00f4ba56249a535284dce6472fd1835aa4ddf8bc8a77555",
            "container_config": {
                "Hostname": "c886e713017f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:88e0ef9bc6ea4aafce14678eab0f8a1bcc70612a96c04390cca6da713533f432",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-18T07:10:22.618724492Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:14.207156878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:15.208087686Z",
                    "created_by": "|1 VAULT_VERSION=1.5.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-12-18T07:10:20.401906956Z",
                    "created_by": "|1 VAULT_VERSION=1.5.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-12-18T07:10:21.448062963Z",
                    "created_by": "|1 VAULT_VERSION=1.5.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-12-18T07:10:21.625210238Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:21.815456846Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:22.020649782Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:22.247541958Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-12-18T07:10:22.439048789Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:22.618724492Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:b7a94dc2d082e152127841adb319c78608c64074238abbb73b8e30de0f8fa826",
                    "sha256:606e59bd5b812a56adccd75d3cd21561a0419226a8ec8a944e30719f6f00b31d",
                    "sha256:5b2a408c568509b5a0eb3d96c66224d7e539b8970e87dcf1b7d081f306c1a028",
                    "sha256:b653851cb53b1c5609f5027c34bf716db9be25d0ec17751efd007a17f6222dce"
                ]
            }
        },
        "1.5.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:b51ca5589215eac4284efeb1f1840477af9333cded3b51a24eece6b3165ec667",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "69f04995e2ae02038fd80c755c413fc4f2bc4beb0f5c1e4415ee0e0360fc4223",
            "container_config": {
                "Hostname": "69f04995e2ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:b51ca5589215eac4284efeb1f1840477af9333cded3b51a24eece6b3165ec667",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-14T23:33:35.986182831Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:20:04.987219124Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c5377eaa926bf412dd8d4a08b0a1f2399cfd708743533b0aa03b53d14cb4bb4e in / "
                },
                {
                    "created": "2021-04-14T19:20:05.338397761Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:27.110167345Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:28.091365628Z",
                    "created_by": "|1 VAULT_VERSION=1.5.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-14T23:33:33.625011775Z",
                    "created_by": "|1 VAULT_VERSION=1.5.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-14T23:33:34.818310306Z",
                    "created_by": "|1 VAULT_VERSION=1.5.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-14T23:33:35.008119753Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:35.194977308Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:35.394571767Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:35.606934355Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-14T23:33:35.785798887Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:35.986182831Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fb3aa2f8b8023a4bebbf92aa567caf88e38e969ada9f0ac12643b2847391635",
                    "sha256:c0b268fa83230da162d0f5bfcb2bba376648a038e0f7430eb46c1d4fb549a6ce",
                    "sha256:63377d0004e2ac565a45e004b90123fdb2a5ec3ca3ebf5ef4d4e95606be5d7a5",
                    "sha256:600b829d2a3747e53584c956e07819fa1b63d32ebccc4953aa72dad85d663f42",
                    "sha256:2ab7555f80c1dc461840dead4cf5a81181a47e85333b356086e9b7f7c1e76c3d"
                ]
            }
        },
        "1.5.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:5fb3538258b9defa6652fa81e7ff6518f726b81e997c528bc31c0d01b5340591",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "fd8765f34b4ab4eb9601e6c941512f6d863cff104a8df1809560de1b9e3e0892",
            "container_config": {
                "Hostname": "fd8765f34b4a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:5fb3538258b9defa6652fa81e7ff6518f726b81e997c528bc31c0d01b5340591",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:12:10.474675457Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:12:01.798947604Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:12:02.749998004Z",
                    "created_by": "|1 VAULT_VERSION=1.5.8 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-22T01:12:08.246812177Z",
                    "created_by": "|1 VAULT_VERSION=1.5.8 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-22T01:12:09.380272571Z",
                    "created_by": "|1 VAULT_VERSION=1.5.8 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-22T01:12:09.562751308Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:12:09.742115223Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:12:09.938528821Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:12:10.12673156Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-22T01:12:10.295373896Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:12:10.474675457Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:6a85167d0721c9f51b7e2f409af63108c320413de99b732c205f1f8ca85ae300",
                    "sha256:7552e9edc628341a9eb42825b927fb33ce95ac18475fe198e446be343af15217",
                    "sha256:3944a22121b33e91f5466b5e9bb19993aa5d29814e1d9deb6f00c0f70af73dc4",
                    "sha256:26619850a8c4c9d865104a02c378862bb6367a87e2c2bd68f5aa0dbe0f34f843"
                ]
            }
        },
        "1.5.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:6e37a8de944edde3d91908e8cea29dbda02b7b6304254ba6637442adaf226dad",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "8ad50830317ffc32b8f2db07a49d56ceabd29fd1437dad0d74a09846e8a1e9d8",
            "container_config": {
                "Hostname": "8ad50830317f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:6e37a8de944edde3d91908e8cea29dbda02b7b6304254ba6637442adaf226dad",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T11:13:15.136382157Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:58.698676655Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5a707b9d6cb5fff532e4c2141bc35707593f21da5528c9e71ae2ddb6ba4a4eb6 in / "
                },
                {
                    "created": "2021-11-12T17:19:58.948920855Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:04.922676104Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.5.9",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:05.834646484Z",
                    "created_by": "|1 VAULT_VERSION=1.5.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-11-13T11:13:12.720534397Z",
                    "created_by": "|1 VAULT_VERSION=1.5.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-11-13T11:13:13.91517922Z",
                    "created_by": "|1 VAULT_VERSION=1.5.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-11-13T11:13:14.111138185Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:14.319326485Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:14.519675129Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:14.744144343Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-11-13T11:13:14.9271943Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:15.136382157Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcb75871b2101082203959c83514ac8a9f4ecfee77a0fe9aa73bbe56afdf1b4",
                    "sha256:9325ecbe698c32d467b84b3d6f0e92804deb664d827b6520cd5e6257152893ac",
                    "sha256:8a6b3f5765245820536f93bf49cc017e1fcbabcac759e285d4165bfa705c2cf8",
                    "sha256:866c662f16ee7f06a72ac8fbf8d2c241447a7191f8684a841d3b9906e90a5a76",
                    "sha256:aa634dad1a7ca63fc65d571f5155bdf840bd9f7cf07e55e50601e9426f58ba25"
                ]
            }
        },
        "1.6.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:bea105a060740ba48a617a3db1e8b5ad60079e2773dd70ec5e0c7885138a4cbf",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "4903045ab08056956e11bdadc62c3f27cab6f8cc38339f8b2fa3cf1794f292f5",
            "container_config": {
                "Hostname": "4903045ab080",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:bea105a060740ba48a617a3db1e8b5ad60079e2773dd70ec5e0c7885138a4cbf",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T01:38:02.988463217Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T01:37:53.36285255Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T01:37:54.342582911Z",
                    "created_by": "|1 VAULT_VERSION=1.6.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-11-12T01:38:00.754368799Z",
                    "created_by": "|1 VAULT_VERSION=1.6.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-11-12T01:38:01.784035006Z",
                    "created_by": "|1 VAULT_VERSION=1.6.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-11-12T01:38:01.975108339Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T01:38:02.179484109Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T01:38:02.367287251Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T01:38:02.588221522Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-11-12T01:38:02.791336327Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T01:38:02.988463217Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:cfa3a4541846580b6819151e79690b751414aa3ef19696eef212417e3093196f",
                    "sha256:1ac9a3ac670c2886eeb6da066a57d4269d613a0244922aabca3fcdc9a78d4924",
                    "sha256:9e399359d7918615fbb912a39e399c7d6f744e90e5e1ef3c6c50cda872a8cf57",
                    "sha256:15933c99eec55279340e3080124ad52825e1599facbdf18e59699f233002238f"
                ]
            }
        },
        "1.6.0-rc": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:c56996d9f040abaca255890c8459efb27f24bdf76c3d3509f5b1c0b60730571e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "ee72904b9b386b1b39897d9a545196fb162d769284a7bf4afd14ef7945013790",
            "container_config": {
                "Hostname": "ee72904b9b38",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:c56996d9f040abaca255890c8459efb27f24bdf76c3d3509f5b1c0b60730571e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T20:58:33.107157161Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T20:58:23.710670415Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.0-rc",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T20:58:24.706374006Z",
                    "created_by": "|1 VAULT_VERSION=1.6.0-rc /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-11-06T20:58:30.94505409Z",
                    "created_by": "|1 VAULT_VERSION=1.6.0-rc /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-11-06T20:58:31.942515841Z",
                    "created_by": "|1 VAULT_VERSION=1.6.0-rc /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-11-06T20:58:32.151405597Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T20:58:32.366499707Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T20:58:32.546476274Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T20:58:32.757764833Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-11-06T20:58:32.931578819Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T20:58:33.107157161Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:6ba1296b8411a2b2ac929b8d3a450b018a2377f2bb2d37e30e0f76fbd2b608a8",
                    "sha256:dec28304658cb68cb4cc3396fad761a096bb744d7a030fbcbc327173efe689ae",
                    "sha256:bbc9b685c2006cf26d7e1ffc45deaf0a533b861b540c4928924c77f47c2656d4",
                    "sha256:bf1bbf25969200c4b7cb84a78e348374ff0b43564eb7f98b227d6a2dc905d689"
                ]
            }
        },
        "1.6.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:7f3bc312c064ea14bae35be89000249af4d3d32a80ab4be73f5541e6412132ca",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9d9fdf79ca4b8369dead4b3a5f4e129e2b82cba1fa34b92222ef3ee4697bd4d",
            "container_config": {
                "Hostname": "a9d9fdf79ca4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:7f3bc312c064ea14bae35be89000249af4d3d32a80ab4be73f5541e6412132ca",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-18T07:10:09.622801513Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-24T01:05:21.178437685Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:66a440394c2442570f1f060e25c86613cb2d88a8af0c71c5a4154b3570e9a805 in / "
                },
                {
                    "created": "2020-04-24T01:05:21.571691552Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:00.171269503Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:01.15844362Z",
                    "created_by": "|1 VAULT_VERSION=1.6.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2020-12-18T07:10:07.409046516Z",
                    "created_by": "|1 VAULT_VERSION=1.6.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2020-12-18T07:10:08.463968368Z",
                    "created_by": "|1 VAULT_VERSION=1.6.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2020-12-18T07:10:08.647704845Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:08.839714045Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:09.039691834Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:09.252840181Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2020-12-18T07:10:09.434849599Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-18T07:10:09.622801513Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b3ee35aacca9866b01dd96e870136266bde18006ac2f0d6eb706c798d1fa3c3",
                    "sha256:3a7602065d38dc64773cb640f7a53c7afcc3077619c2a7c5e0671c34e91f2c97",
                    "sha256:784d163bd460c63bf70a6a31c285a476424b0120459101570f3f1ca80948e098",
                    "sha256:0ee8f931208afc2d5224bcb0ac32b1ac8e650df5eda938462e7de2a73f9af74c",
                    "sha256:50266b1545c3e811ed041b50dad794222a11a8309a818f0cdca2e668fa511970"
                ]
            }
        },
        "1.6.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:44021f48e015c9d600808e77b4acdbfd074685ec2ae7745a094b97e31886c8a7",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c25384a8eb8af25e00fe21ec2b07f7ed171b79bc39eaab5f8364b4595056e7ed",
            "container_config": {
                "Hostname": "c25384a8eb8a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:44021f48e015c9d600808e77b4acdbfd074685ec2ae7745a094b97e31886c8a7",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-25T03:13:06.956099228Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-24T20:20:20.347504054Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:74b25a491c5eda6bdc97427d5c0f344be56370a103df816f89ef96052b79a736 in / "
                },
                {
                    "created": "2021-02-24T20:20:20.523137098Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-25T03:12:55.076940555Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-25T03:12:56.396493122Z",
                    "created_by": "|1 VAULT_VERSION=1.6.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-02-25T03:13:04.23000264Z",
                    "created_by": "|1 VAULT_VERSION=1.6.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-02-25T03:13:05.50387842Z",
                    "created_by": "|1 VAULT_VERSION=1.6.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-02-25T03:13:05.739573821Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-25T03:13:05.969055874Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-25T03:13:06.21644142Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-25T03:13:06.467873705Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-02-25T03:13:06.74796513Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-25T03:13:06.956099228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:483b65c07faaf8ee7f1f57c6d7de0eda9dfd61a34f03337926650b8178db5286",
                    "sha256:fa43f00c3358a4deb46b17eb26a89f1c35b9f9d33094ca1d4d6d25b3b8f44599",
                    "sha256:3607baee24d9c1510bf05753e6dc2a18c7369841327d94dde111e9db2ccc7c15",
                    "sha256:e51984841b311ab5615226fc9f017e479a67adcb3e8e94b7b8fee517193c7b33",
                    "sha256:f5c2eb4dbf15bdac8232499d4a8557c87bc7b18575d08689e998fe9fa56e3ae9"
                ]
            }
        },
        "1.6.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:f5603c44b52e4e0c2e4e58c3967fe87853196e1ddafd1b6a949d4eadddb8f257",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dab28ea685403a6f563b36a52fd16e97105184967e7005d7d99d71189251a88",
            "container_config": {
                "Hostname": "6dab28ea6854",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:f5603c44b52e4e0c2e4e58c3967fe87853196e1ddafd1b6a949d4eadddb8f257",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-14T23:33:21.730475809Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:01.591692958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:02.613728492Z",
                    "created_by": "|1 VAULT_VERSION=1.6.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-14T23:33:19.331507735Z",
                    "created_by": "|1 VAULT_VERSION=1.6.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-14T23:33:20.558071589Z",
                    "created_by": "|1 VAULT_VERSION=1.6.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-14T23:33:20.741811041Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:20.917377322Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:21.097242845Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:21.318262186Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-14T23:33:21.509995973Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:33:21.730475809Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:a29534817f9a086353efb6b3a3f481bdcb3f7bdd354acf798a142ab7f7257a74",
                    "sha256:a34472cfbc630acdcfaf398be5d9980f1363655235cb80bd5d3eecb8eeb15797",
                    "sha256:27cfb8bf74c271411c4cd598ef42d02b51b82cef5f17bc2cb3b9f68f0866e035",
                    "sha256:cdf617e23d78b314baf39ccd539575f1e51e5498854e12ab32f8d307e5abe4f8"
                ]
            }
        },
        "1.6.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:4606d96f18ee51bdae657b0ac88a764c7635960ab392df47f0aa4d555c2ef31f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "257e3e58ee2af43f776590d160e0fb46f3796a7c81dce8b1b26814bb5d728002",
            "container_config": {
                "Hostname": "257e3e58ee2a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:4606d96f18ee51bdae657b0ac88a764c7635960ab392df47f0aa4d555c2ef31f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:11:59.076905423Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:46.233940325Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:47.180402502Z",
                    "created_by": "|1 VAULT_VERSION=1.6.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-22T01:11:56.715914731Z",
                    "created_by": "|1 VAULT_VERSION=1.6.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-22T01:11:57.906152978Z",
                    "created_by": "|1 VAULT_VERSION=1.6.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-22T01:11:58.094322703Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:58.306136263Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:58.476060979Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:58.707163391Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-22T01:11:58.87480711Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:59.076905423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:00f669b1746bba4b63190e72bc3129eeb368dc3a22c572cec0fb4e7053dbd5b4",
                    "sha256:b5279b821bea014f3fd493a616d61a0bc429732792a77466b29099d85c2b7e84",
                    "sha256:9a1097724b92fcb59e4ebd1fce79f0deaf925061d2a85ce691e22aa19ef25467",
                    "sha256:e9844a38a1f1649c823498edb715289f51f54b5674cb4cbb6a0fdd8f7cc3a87a"
                ]
            }
        },
        "1.6.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:529539afba6a95f7a4d7a6373212e583fd447716733b016b0fa38e712aa95797",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "9f1de5435c67e8d5ed69d04f9da7647807210db54dd2aa137ab42b8d1b0505b8",
            "container_config": {
                "Hostname": "9f1de5435c67",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:529539afba6a95f7a4d7a6373212e583fd447716733b016b0fa38e712aa95797",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-25T00:21:47.57003842Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:37.320328157Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:38.279608926Z",
                    "created_by": "|1 VAULT_VERSION=1.6.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-05-25T00:21:44.770388417Z",
                    "created_by": "|1 VAULT_VERSION=1.6.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-05-25T00:21:46.096642282Z",
                    "created_by": "|1 VAULT_VERSION=1.6.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-05-25T00:21:46.342607317Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:46.542758145Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:46.777547255Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:47.005469164Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-05-25T00:21:47.206452036Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:47.57003842Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:28d3ac8560c635ef8293f33f8654e59258fac3aeb5f938943f34ecb42c0bd360",
                    "sha256:622e46bb6252a0c403db8548e68b6738ec27791b1cff5e8ab3346e0b408f8926",
                    "sha256:7b8086fa17a8d46170fb18ad2b0bc95847bfadfa83d74c3697a0a12ab32cd02d",
                    "sha256:ff8d18d8356dffbcd49b3750ee3c13be5c57a2f9b2b69575fa865f955598b92f"
                ]
            }
        },
        "1.6.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:57a6aa285ba9cb22b7c0f7dd8ef304b44ef95e45f9f97bd7f8478522060dc53c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "7de9cdd356fbc9113f7227fd4bf8407e51f3cddabe26c18c1340a5e70a6f218c",
            "container_config": {
                "Hostname": "7de9cdd356fb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:57a6aa285ba9cb22b7c0f7dd8ef304b44ef95e45f9f97bd7f8478522060dc53c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-27T17:50:19.195957426Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:08.85764752Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:09.626981165Z",
                    "created_by": "|1 VAULT_VERSION=1.6.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-08-27T17:50:16.792706764Z",
                    "created_by": "|1 VAULT_VERSION=1.6.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-08-27T17:50:17.947148069Z",
                    "created_by": "|1 VAULT_VERSION=1.6.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-08-27T17:50:18.1621305Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:18.366142697Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:18.575134224Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:18.80819585Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-08-27T17:50:18.988233202Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:19.195957426Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:91b38bd030797655e8cac7d4630a0794668a12454b44bd3781882e1eb643b58f",
                    "sha256:defee6562df8fea284f1e6ff1a18ff13f529e19bb8117c64333846ed0ed3b2a4",
                    "sha256:bc1f22c5e21bc639f28df1a0a92d73c66a59b1c31788bea6631b19887505a02c",
                    "sha256:8c6cdd3d074f19de37170c213b39eb0e987776608f30138d1447e5750a858854"
                ]
            }
        },
        "1.6.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:521f46295c7e5b62542821e1d665199d31211b09f352468636bf2d7c5fc8b157",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "8d7c6b6488669415af88b0e252752093e4cf8d604cca43b1cd4ebee08ad03f2f",
            "container_config": {
                "Hostname": "8d7c6b648866",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:521f46295c7e5b62542821e1d665199d31211b09f352468636bf2d7c5fc8b157",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T11:13:01.822639927Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:51.338894485Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.6.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:52.118767645Z",
                    "created_by": "|1 VAULT_VERSION=1.6.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-11-13T11:12:59.331655331Z",
                    "created_by": "|1 VAULT_VERSION=1.6.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-11-13T11:13:00.478707625Z",
                    "created_by": "|1 VAULT_VERSION=1.6.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-11-13T11:13:00.666706772Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:00.928517464Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:01.156232589Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:01.395680788Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-11-13T11:13:01.608245682Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:13:01.822639927Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:755ea0999da77b5c759a1af83115038ed94f08a6e7f3c043543b33559596d0f7",
                    "sha256:9c2ae55e9eb9b110be20928dbbe2a3464eb5d918117fdcd3958063f07b57f95f",
                    "sha256:a162d7939294fe9c29a389af79c0a87affb82e5d2c18177502a91bd99425a7b8",
                    "sha256:3ac8e38dea8dccd4d2f57a1b1ad2f2495a3557da516e3dec9a0b60dc9db2e531"
                ]
            }
        },
        "1.7.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:82aacb9df9b0b4943a926c523b27a8baf50cd8b3e3f14e38dfab9334f5f4f3e8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "90db65524eed99e6b5b4c3208c40e71814e3f60f586009ea596e10455bb79ae7",
            "container_config": {
                "Hostname": "90db65524eed",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:82aacb9df9b0b4943a926c523b27a8baf50cd8b3e3f14e38dfab9334f5f4f3e8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-14T23:32:29.898204843Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:09.578095748Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:10.586102035Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-14T23:32:27.385195505Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-14T23:32:28.674744391Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-14T23:32:28.858224993Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:29.063592174Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:29.290541032Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:29.507419533Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-14T23:32:29.698351081Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:29.898204843Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:e70908123ea201433d9d8af3717bb45148688620cdc5a415a121026fd4955bb6",
                    "sha256:a40dfc5966783a31a2e980e0659f4cd8df80d4034dc18bc75bdcd3c0ae8bc623",
                    "sha256:75c3e80951331866e0afbc9e77478ccda134d1c9bcb4544129a98ddd63d568a9",
                    "sha256:050659628db44d097a42fa08bcf768845710b1508740055610401e3d7a3ce560"
                ]
            }
        },
        "1.7.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:76b35025b3f5dff63328c589788243d96717a0c7c45c2a93a34d4bdfb9873fba",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "61466547ec182dd5f64255bedade560dc58dd1c4c01642ac34cb4bd4188ea0a2",
            "container_config": {
                "Hostname": "61466547ec18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:76b35025b3f5dff63328c589788243d96717a0c7c45c2a93a34d4bdfb9873fba",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-14T23:32:58.865130745Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:48.349974861Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:49.342950862Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-14T23:32:56.397200017Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-14T23:32:57.685383265Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-14T23:32:57.857458727Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:58.057952056Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:58.269568144Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:58.482945317Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-14T23:32:58.666278821Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:58.865130745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:f1d4652636ba33b5b11e0ad081a8b0fb93082723f461645b9c25a1e87328aa14",
                    "sha256:495cdaba79010ae277a59508f3b80d8f07a88026c2d3cf67c8e68a53964faf3d",
                    "sha256:cee09b003b4f13ac62e57cdec633d1821d80626a278f78d2777efd686f9a989e",
                    "sha256:4263a48a86f7fa9d1a940ab93d1d791ec0591b0e5c602b00eb9b10e5fbddd321"
                ]
            }
        },
        "1.7.0-rc2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:52b19b35fb047e1edc2f15b5bb73c5bc4e271b5f98c8489f83b9630cb221be0f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f381f83878568586d99f88ca9bdd3f9ef703efa5ab45b51fa37e2134529a1532",
            "container_config": {
                "Hostname": "f381f8387856",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:52b19b35fb047e1edc2f15b5bb73c5bc4e271b5f98c8489f83b9630cb221be0f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-14T23:32:45.053398647Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:35.118391306Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.0-rc2",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:36.106437274Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0-rc2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-14T23:32:42.783248496Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0-rc2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-14T23:32:43.882351744Z",
                    "created_by": "|1 VAULT_VERSION=1.7.0-rc2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-14T23:32:44.086309217Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:44.265884878Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:44.454745221Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:44.670673583Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-14T23:32:44.861406962Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T23:32:45.053398647Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:09dc6971dc0b42b8351a1504824abf52941e8d9ae7fd8f2bdeb0aba67df0dc04",
                    "sha256:90ad4f2a81fb9e1ed76d58583981761f6943a623d92db2d31f27539ebbd46679",
                    "sha256:698ce3bbacd1745521f3081efa7c02d0cc17dd72f6917cf6e0ca1151b7c9089f",
                    "sha256:f501c5994fa3343f981bc4bc257df7ac11c49c5e3add3d0b50a0b56cd8446def"
                ]
            }
        },
        "1.7.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:5e7fe9f268f6d2d3c71c9527bb3d9893ada7101a217d5831b9107204d6989df4",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "20884f28418ebf39b541bbd2ce1aaf267fd5e1eb816f7b6e70c2ec3e6244f69a",
            "container_config": {
                "Hostname": "20884f28418e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:5e7fe9f268f6d2d3c71c9527bb3d9893ada7101a217d5831b9107204d6989df4",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:11:43.251098907Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:33.146605973Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:34.103153327Z",
                    "created_by": "|1 VAULT_VERSION=1.7.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-04-22T01:11:40.83928507Z",
                    "created_by": "|1 VAULT_VERSION=1.7.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=91A6E7F85D05C65630BEF18951852D87348FFC4C;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-04-22T01:11:42.074228122Z",
                    "created_by": "|1 VAULT_VERSION=1.7.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-04-22T01:11:42.258145185Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:42.458020323Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:42.662249391Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:42.862735041Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-04-22T01:11:43.047813667Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:11:43.251098907Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:13fdacec1ed5878d7abe9fda22f59fb6188d621f8a8c9d818794f7df1edc0afe",
                    "sha256:798ec2421b2966e36251bb49eb665f24cfcca254a3ba7215c383293dec4766f6",
                    "sha256:b67a84e2befbed31970dbd3dd91df95da171270d7cd9cde593f8df21c6948b7e",
                    "sha256:88047c1537206e72b231ecc01c9d2d9376d7e6fc098fff4120c987c68dfa300f"
                ]
            }
        },
        "1.7.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:bb6529a1715043edd01ffcc64f97891a9ed99ed9b53f534fdd2b3e2869a71a44",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "be6b6b0f7e3ccb0e591cc0640adadd174403c72fbc928bfc5297a93ff82dd1fc",
            "container_config": {
                "Hostname": "be6b6b0f7e3c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:bb6529a1715043edd01ffcc64f97891a9ed99ed9b53f534fdd2b3e2869a71a44",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-05T11:28:00.778400412Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:51.919445651Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:52.449624343Z",
                    "created_by": "|1 VAULT_VERSION=1.7.10 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-05T11:27:59.325740211Z",
                    "created_by": "|1 VAULT_VERSION=1.7.10 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-05T11:28:00.155321993Z",
                    "created_by": "|1 VAULT_VERSION=1.7.10 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-05T11:28:00.255217912Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:28:00.363001603Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:28:00.462519011Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:28:00.572710925Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-05T11:28:00.677077137Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:28:00.778400412Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:504f64cac146f6ae9dc7f286fd86bbe4baa84c5666db43b778e1753ed374c89e",
                    "sha256:02d20db5bf7e41460d0588a7ca208075479b1a784a809dc30c587507cf423b68",
                    "sha256:47c2ae985419f89b94cf97777b1a7d2d266b17780afe37906c5417d6b0bc7105",
                    "sha256:17742ad006e160581b4c41413801a911281e0f4016383842cabcc9571afe6184"
                ]
            }
        },
        "1.7.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:541fd935b42456dbabefb04b86c4d4a29168755ef3a230064b3f7343a26fa54e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "5adb9f2bb7ead6811a750472d135f01b63c7ee6e22f1d4e9f27ad6c6a3f7acd6",
            "container_config": {
                "Hostname": "5adb9f2bb7ea",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:541fd935b42456dbabefb04b86c4d4a29168755ef3a230064b3f7343a26fa54e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-25T00:21:32.48263019Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:21.757238329Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:22.744985578Z",
                    "created_by": "|1 VAULT_VERSION=1.7.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-05-25T00:21:29.810622487Z",
                    "created_by": "|1 VAULT_VERSION=1.7.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-05-25T00:21:31.213701054Z",
                    "created_by": "|1 VAULT_VERSION=1.7.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-05-25T00:21:31.400605558Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:31.605496292Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:31.812302045Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:32.019041961Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-05-25T00:21:32.265899539Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-25T00:21:32.48263019Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:83af1b290ed16e0244ba0c29308f0dd0d16759fc0a0f5c22059eac9c68bedc48",
                    "sha256:ea17f5035266c01ee2170ce152e1c69da5e50e7030e246f37f46e318231d508a",
                    "sha256:65f823dc8156153fb192f7617da20362e2e73dedfa760c40b7d63ac28e607d6b",
                    "sha256:e71d7dd36eedcfdbf1ae5d071487589f4ee84fe71515686e1b93fb68783ea5c7"
                ]
            }
        },
        "1.7.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:62a98763b43313f1d351d7792a739b22764a042ee24d907ea08165f26e09d3e0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "cd9d04de132479395c0bd885f5867b7020f2c1f44eb8d36fb71b40d973e679d4",
            "container_config": {
                "Hostname": "cd9d04de1324",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:62a98763b43313f1d351d7792a739b22764a042ee24d907ea08165f26e09d3e0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-16T22:42:06.579548431Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:56.009018246Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:57.093987032Z",
                    "created_by": "|1 VAULT_VERSION=1.7.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-06-16T22:42:03.999814566Z",
                    "created_by": "|1 VAULT_VERSION=1.7.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-06-16T22:42:05.323239227Z",
                    "created_by": "|1 VAULT_VERSION=1.7.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-06-16T22:42:05.526448652Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:42:05.739227757Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:42:05.951153567Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:42:06.171034526Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-06-16T22:42:06.368278037Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:42:06.579548431Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:c6c713595680dd5778082e005d3564b607535029647847bc08f36bfdbad55b3e",
                    "sha256:a1d45765b909596f3c12c2a0ddd5753c35493961656666b43ebb123babd2ccdd",
                    "sha256:6fbdfb95b845ac348047719e7824e5dffb4a6039721b0ec80a3b4d91d4c503e5",
                    "sha256:419b37a8227deb8b456d455343a6a7c9a5f024c8bf0f2e409e878333134f9f46"
                ]
            }
        },
        "1.7.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:9e1bb791c917cdd7de44a55926a3e3e6edc090eed41ee9da848ca76a1b0a1226",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "59c1edbfba4bb4b989b3896ddfaee08048aa528167d937d68c258eb9edb78a56",
            "container_config": {
                "Hostname": "59c1edbfba4b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:9e1bb791c917cdd7de44a55926a3e3e6edc090eed41ee9da848ca76a1b0a1226",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-27T17:50:05.463949027Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:50.806873652Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:51.747647315Z",
                    "created_by": "|1 VAULT_VERSION=1.7.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-08-27T17:50:02.921545924Z",
                    "created_by": "|1 VAULT_VERSION=1.7.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-08-27T17:50:04.099477957Z",
                    "created_by": "|1 VAULT_VERSION=1.7.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-08-27T17:50:04.307398331Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:04.523746747Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:04.753353979Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:05.016542707Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-08-27T17:50:05.239697037Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:50:05.463949027Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:bc7f1c6760109ee2dd1264219446a71d546e9e1480df1030732e993563bbd236",
                    "sha256:6203762289ef789e0f8136eebe756b6531fce233fb6f8394effeeacc3ed4fdad",
                    "sha256:dca8bb6b9cbe2f6a4825e3edb56b05903e88407fcefa9d280ab2b18768d41c8d",
                    "sha256:e86705e7ee63f91af571ab222a0fd878dc05d64edc2e7f22db0d68c5797db808"
                ]
            }
        },
        "1.7.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:bc093a329cd14f12bfb819cea7f3064a981e7871dc0fad625a637ca8de6229c6",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "08fac808c0f46b314526f09fd773ac2aeafe4037365e4ad33097b60e20845bf3",
            "container_config": {
                "Hostname": "08fac808c0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:bc093a329cd14f12bfb819cea7f3064a981e7871dc0fad625a637ca8de6229c6",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-09-29T23:21:26.191454242Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:13.426884648Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:14.2041441Z",
                    "created_by": "|1 VAULT_VERSION=1.7.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-09-29T23:21:23.77386097Z",
                    "created_by": "|1 VAULT_VERSION=1.7.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-09-29T23:21:24.942117492Z",
                    "created_by": "|1 VAULT_VERSION=1.7.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-09-29T23:21:25.152634722Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:25.363172015Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:25.5917909Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:25.805909667Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-09-29T23:21:26.00314626Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:26.191454242Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:575b7b8c6b0cb812e5d479ad6ce9c023c587c2a050a43cfc0a0dd8441c2ccae0",
                    "sha256:0e13f0f55b83780a2ab8fec6d23cfc353bfab17a5d2da4554544267aed229907",
                    "sha256:7c43af88def36a84c7a92029dedf8d1eb0e3ae8b014096d6eb394c9aa29b5289",
                    "sha256:846561f9ee96b2f8a16dc8f1693d5c504f0c924f144dd8899258d83b53fa3806"
                ]
            }
        },
        "1.7.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:621a210dcc3bbc212c30942444b8a7b07eed95937018bd3c31708d19354c92f6",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d3a1651e36ed37d2492faf87d8192beaf3c619765c23caff873e00a8c46bccae",
            "container_config": {
                "Hostname": "d3a1651e36ed",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:621a210dcc3bbc212c30942444b8a7b07eed95937018bd3c31708d19354c92f6",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T11:12:49.306748401Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:37.438984117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:38.334083716Z",
                    "created_by": "|1 VAULT_VERSION=1.7.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-11-13T11:12:47.044813836Z",
                    "created_by": "|1 VAULT_VERSION=1.7.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-11-13T11:12:47.971241809Z",
                    "created_by": "|1 VAULT_VERSION=1.7.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-11-13T11:12:48.1984994Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:48.40417041Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:48.646873514Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:48.89573203Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-11-13T11:12:49.082376576Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:49.306748401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:7739a5c68454e339822bc855a693a471c7fa408a37497ac0787b26c68a6f83d8",
                    "sha256:0809dd22062edbcb3dff559fe4d1cf2391cc5f761d07b04a1713534aaac2ef59",
                    "sha256:2228164e56f1928d02218cd9590c445e838c134a5af3c161b777e8db3e3b4e2f",
                    "sha256:fd701315c17337e9b3789c577f5846fcc9c84414f11d64ec45a89764673a0a38"
                ]
            }
        },
        "1.7.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:5d360ee88fa869812f2a59172bf08e218b3ce4e55c30bf23ae717044df4a5190",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e43b1c8f54aff3807d23dd7534905028c94007578d283f28a6699ec9bc674f96",
            "container_config": {
                "Hostname": "e43b1c8f54af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:5d360ee88fa869812f2a59172bf08e218b3ce4e55c30bf23ae717044df4a5190",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-13T19:45:04.264493381Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:53.667453651Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:54.445580958Z",
                    "created_by": "|1 VAULT_VERSION=1.7.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-12-13T19:45:01.901015192Z",
                    "created_by": "|1 VAULT_VERSION=1.7.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-12-13T19:45:03.059533024Z",
                    "created_by": "|1 VAULT_VERSION=1.7.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-12-13T19:45:03.247592707Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:45:03.460089071Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:45:03.656144127Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:45:03.881324342Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-12-13T19:45:04.058064017Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:45:04.264493381Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:fbe19dd1ae7b1ab8a41399bae8ad885c313d9aff0462b9edda0565f3503fae1b",
                    "sha256:af087667f7fd91c08802c0e22183200cd062610a4768b1bae9429468ab138b17",
                    "sha256:803ba3550b60b1ee7fa39583a2b42c48b584bc2219b880d9b1f33aff43cd2c01",
                    "sha256:467b4ab55f0be07c31e6681fb347982c6a0a40d8e6123b2ef8b0bd9f08daadde"
                ]
            }
        },
        "1.7.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:8625077322ceb9651ebcc7d78cb78bebff83dc37a9a6ddd4b47f6bd13711a47e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c6e8d6479e14031770b42266d746e62bbf7e71f8fb64f4d4855301eb8d0d217",
            "container_config": {
                "Hostname": "0c6e8d6479e1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:8625077322ceb9651ebcc7d78cb78bebff83dc37a9a6ddd4b47f6bd13711a47e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-22T22:03:26.509444482Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:16.916500599Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:17.7687594Z",
                    "created_by": "|1 VAULT_VERSION=1.7.8 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-12-22T22:03:24.093666199Z",
                    "created_by": "|1 VAULT_VERSION=1.7.8 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-12-22T22:03:25.181989261Z",
                    "created_by": "|1 VAULT_VERSION=1.7.8 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-12-22T22:03:25.382825201Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:25.628590689Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:25.846257658Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:26.091257403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-12-22T22:03:26.301661567Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:26.509444482Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:ece98ddcf53788782050602d6ae34880e7319d5315d01048d29a518b9361a17b",
                    "sha256:a0d88fe166691b5261ddb3fc9efd2337db45eb9f449600a0bd5ca596c695c8bc",
                    "sha256:e990927a276be3c6cdab4802216ec9d74d747017704c2400020abd3234123111",
                    "sha256:9997822d4198680be88f4413d59271d0d8c5c5e2dc42c3efb430ccb793bb6b7f"
                ]
            }
        },
        "1.7.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:835a9e628c1ef489010a3b168e1c59c6f832fa6a71cc9158ada0cf3040e3e9d0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1dce5f1133ab2d9096f0e371da7a9a6b4a5b42f1c8b58ddfb51346adb5f5f961",
            "container_config": {
                "Hostname": "1dce5f1133ab",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:835a9e628c1ef489010a3b168e1c59c6f832fa6a71cc9158ada0cf3040e3e9d0",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-01-29T07:02:10.089558392Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:01:19.942085383Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:01:22.03066578Z",
                    "created_by": "|1 VAULT_VERSION=1.7.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-01-29T07:02:04.399794889Z",
                    "created_by": "|1 VAULT_VERSION=1.7.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-01-29T07:02:06.983766921Z",
                    "created_by": "|1 VAULT_VERSION=1.7.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-01-29T07:02:07.452099899Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:02:07.942260705Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:02:08.493389163Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:02:09.135654132Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-01-29T07:02:09.505596077Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:02:10.089558392Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:84d132c7070d27e2897a4e9570eab0c7fa435112d1375608aa2c69bf735990eb",
                    "sha256:5fb6525ea7262329eb2e224d748f025a7c976fb993ba4975b1ab10481d2872de",
                    "sha256:9240865bbb15d0e7675856e90e80656ff60c93cfe8cde0cd659bdf483db66c4e",
                    "sha256:5c9736e095d8ee144f7f86f8d850324e61bd0cebad3d476b83a09559603f699e"
                ]
            }
        },
        "1.8.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:de8054087207d838daf06c39cea3b08022696cfa97e2bdfa305f33bbea2866fa",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "081d95aa90908d781bf935b7df742e7f468e54dbcf2aacfd2bf31b3c0f4904a9",
            "container_config": {
                "Hostname": "081d95aa9090",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:de8054087207d838daf06c39cea3b08022696cfa97e2bdfa305f33bbea2866fa",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-07-29T00:26:34.158524369Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T00:26:24.7222863Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T00:26:25.484417968Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-07-29T00:26:31.9681121Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-07-29T00:26:32.957300241Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-07-29T00:26:33.149327987Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T00:26:33.354675145Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T00:26:33.564186204Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T00:26:33.781629465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-07-29T00:26:33.961892036Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T00:26:34.158524369Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:ccb3f5cd8ce95609bb5eb1d27354b6213f20b172c9ffcd1d102c6f0a09ba30b3",
                    "sha256:abb8745b9623facd15bcd11caa9268df0e6cdb260ce5d772fcd263c6cbae1c32",
                    "sha256:9ba8f0b79e3aef4a8a96d79938aa541bd46f395caecd691654e732278572bf1f",
                    "sha256:ff435425d1f7185baa410168172d2595ede4fef45ef4f4d8c061be9d00defd5c"
                ]
            }
        },
        "1.8.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:46365be3a6f7cf1f3f0e4f8f41e89f6a9afdb78a34467ab7a23616061147bed8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a704f72f2b3bdc826284a3422aa05219f0786f2adde69454009695361654b35c",
            "container_config": {
                "Hostname": "a704f72f2b3b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:46365be3a6f7cf1f3f0e4f8f41e89f6a9afdb78a34467ab7a23616061147bed8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-16T22:41:51.455393643Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:40.798642888Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:42.246479949Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-06-16T22:41:48.855696252Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-06-16T22:41:50.181444547Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-06-16T22:41:50.413603706Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:50.606689394Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:50.814906695Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:51.027809667Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-06-16T22:41:51.232140721Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T22:41:51.455393643Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:2a0e3859a69eb4f0e3726ca3f68b7ca91a25b3b2aaa64195d85159c287953c44",
                    "sha256:5e5f69bd8ae2b420e362d6cfad7916dde53d5c9cad6906e8305ec18d5b10a0b1",
                    "sha256:e24f58f7c83e54ec081716e9d866479b020f1151fc9aad8d9e9a5db42aef7b25",
                    "sha256:8a02cff73e24fa075ef3da1220c269e8054868c96da53e02e088336a7c1d9113"
                ]
            }
        },
        "1.8.0-rc2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:5ce1c1211f3fb8b790575dacb058649747a1a0d5744619721b00cc6b1031e8ad",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "85717760d04bbd37f5c06a097c17bf79edcff862a906282631f9988983e87fc8",
            "container_config": {
                "Hostname": "85717760d04b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:5ce1c1211f3fb8b790575dacb058649747a1a0d5744619721b00cc6b1031e8ad",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-07-15T00:20:58.722654952Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-15T00:20:48.265508838Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.0-rc2",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-15T00:20:49.33809346Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0-rc2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-07-15T00:20:56.207118974Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0-rc2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-07-15T00:20:57.484947666Z",
                    "created_by": "|1 VAULT_VERSION=1.8.0-rc2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-07-15T00:20:57.697503721Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-15T00:20:57.898003289Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-15T00:20:58.102502788Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-15T00:20:58.339568487Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-07-15T00:20:58.534528792Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-15T00:20:58.722654952Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:eef15a2f0c3fdfa08fdee1602dec44da5d21c266c9162bba55a313eed275a3a3",
                    "sha256:dc6cd884a63d896900226e8fd9c41387fc131ebf24e4fa8893fa9122a2f48401",
                    "sha256:08c45fff65be2a1901411548b5d8deb59e8c1d6dc81666b088adf2be76656e81",
                    "sha256:35840e65aedd257b3cfddac457c9fc1aac3a916dc13c7dfeefd9c8eca72a39b3"
                ]
            }
        },
        "1.8.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:6dbc7f64b0c6474816e7080267bfac25e4f81664f460d20b9098f767ce81f192",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5286072af6a126e71db0d155eaf22b2ae87dcb61bd01e4b18677ee52ee5fe94",
            "container_config": {
                "Hostname": "c5286072af6a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:6dbc7f64b0c6474816e7080267bfac25e4f81664f460d20b9098f767ce81f192",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-05T23:47:39.30671448Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-04-14T19:19:39.267885491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "
                },
                {
                    "created": "2021-04-14T19:19:39.643236135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:47:28.282530408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:47:29.126938122Z",
                    "created_by": "|1 VAULT_VERSION=1.8.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-08-05T23:47:36.992066454Z",
                    "created_by": "|1 VAULT_VERSION=1.8.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-08-05T23:47:38.079071838Z",
                    "created_by": "|1 VAULT_VERSION=1.8.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-08-05T23:47:38.270752956Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:47:38.478961656Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:47:38.694344415Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:47:38.91117186Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-08-05T23:47:39.083448007Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:47:39.30671448Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116",
                    "sha256:d2f4e573fa3ae33a19cc5f119973c8b4836a69764d1cec62fd0b5d0bae9e27d6",
                    "sha256:7470b3c70d0ddeb699a5f4b3a62cd66aba3dbd40883aaf194a6a13cfd65b36c1",
                    "sha256:96204360be88b78befc535958442878e229fd7ef4ac7288d8bec6954e3ff8e1d",
                    "sha256:b95b37ec13f22a775fe3d7e8a51384e04af64676dac2cdf90422fb7e4a6af5a7"
                ]
            }
        },
        "1.8.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:b851ee21278d898986a32b823a03ef8c620c7e4dcdc6b8c2d33e58e3882c9628",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "d3e79b40dc9b85b22fe9c0d971878e3bef6696e0cc4e5ca9da476d76c8d7d269",
            "container_config": {
                "Hostname": "d3e79b40dc9b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:b851ee21278d898986a32b823a03ef8c620c7e4dcdc6b8c2d33e58e3882c9628",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-23T00:28:22.813572684Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:13.488855616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:14.008967962Z",
                    "created_by": "|1 VAULT_VERSION=1.8.10 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-23T00:28:21.374349295Z",
                    "created_by": "|1 VAULT_VERSION=1.8.10 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-23T00:28:22.207562521Z",
                    "created_by": "|1 VAULT_VERSION=1.8.10 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-23T00:28:22.303113585Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:22.400781425Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:22.505318333Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:22.616897179Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-23T00:28:22.715680411Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:22.813572684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:383fed34d4873736a420b47f1822a9fee6135b7998f7b0de7fcf6946c2cef401",
                    "sha256:c7a1e809881fd4c5a04ca6715b4d31cff224f355e210bcf5148d31f71878cdf9",
                    "sha256:ffa76b7b39c0757fcdae6119a4a687807314b2d50e5fd0ff41950eb55ef54a25",
                    "sha256:65f62c7a0c6de5c049eee116386af82fe328105c6d71a7f62a5c20e2468ffa8c"
                ]
            }
        },
        "1.8.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:8af6c7bafffedc0a6807dfa0634dd7a34fa739561411e8d75bed12cb6f6c72db",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "3236444787c0bdf09e2b5dc4b95357256899a6ed6a7d4e09d007d93a75333e8f",
            "container_config": {
                "Hostname": "3236444787c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:8af6c7bafffedc0a6807dfa0634dd7a34fa739561411e8d75bed12cb6f6c72db",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-29T22:28:18.032015898Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:08.195111284Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:08.776666095Z",
                    "created_by": "|1 VAULT_VERSION=1.8.11 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-29T22:28:16.479020034Z",
                    "created_by": "|1 VAULT_VERSION=1.8.11 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-29T22:28:17.40227072Z",
                    "created_by": "|1 VAULT_VERSION=1.8.11 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-29T22:28:17.50233943Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:17.605646353Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:17.712270589Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:17.824919495Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-29T22:28:17.924165294Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:18.032015898Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:22b8dcba9a307632969e23ef114df62d6c35defffae3b57e75c08f90d7476893",
                    "sha256:8638a311d319ab66b70272242cf1da2d1ab82dd585ebaf485847fcf1ee121566",
                    "sha256:9740dd000547d652a29015472f0cc65890643c725ef1e9da4946cca495332e9f",
                    "sha256:a3340eab7463da61fe0752ac1e6a1db3583b4dd2531c8bf98d75174a537620e1"
                ]
            }
        },
        "1.8.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:7f0c7498abf8749816e859894ff1c47d3f382745d267d28dfe6359dc4f807a99",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "5a4612290b98c26fa05585a1900fb380876c609252066e8ced0b23260bc6e7ae",
            "container_config": {
                "Hostname": "5a4612290b98",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:7f0c7498abf8749816e859894ff1c47d3f382745d267d28dfe6359dc4f807a99",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T04:28:03.152375088Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:53.597289441Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:54.163757506Z",
                    "created_by": "|1 VAULT_VERSION=1.8.12 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T04:28:01.525896618Z",
                    "created_by": "|1 VAULT_VERSION=1.8.12 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T04:28:02.469620313Z",
                    "created_by": "|1 VAULT_VERSION=1.8.12 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T04:28:02.576103322Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:28:02.692740981Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:28:02.808516895Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:28:02.93759793Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T04:28:03.044137995Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:28:03.152375088Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:ea8ce7858cbede6c42d55acee07917bd3be84f6823f732a4c9f05c12380db4b3",
                    "sha256:7d8c27533d1974a07cca726f08c67b56fd9dd02efd73729736e2c9a0f7acd1b0",
                    "sha256:d6d83e5611daa90c1e604df6c548709c7977d0ab6f532b69dfa7cb615ac79ac2",
                    "sha256:ab6b48e2db3b8d41d05e76beb1ffff075bba854e3b9acabdb83b3dd24f459fa6"
                ]
            }
        },
        "1.8.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:432dd8cfaca646d25a8899b79d2ad71d73f5f9689bf67deebc923dd0501221ff",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f1d3ade0c5d3e303289fd701e27122462a01e6c8ad6d30cde4734d365045382",
            "container_config": {
                "Hostname": "2f1d3ade0c5d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:432dd8cfaca646d25a8899b79d2ad71d73f5f9689bf67deebc923dd0501221ff",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-27T17:49:46.464518487Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:29.095899121Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:29.954858992Z",
                    "created_by": "|1 VAULT_VERSION=1.8.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-08-27T17:49:44.084747729Z",
                    "created_by": "|1 VAULT_VERSION=1.8.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-08-27T17:49:45.2279084Z",
                    "created_by": "|1 VAULT_VERSION=1.8.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-08-27T17:49:45.442888207Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:45.670663089Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:45.859198574Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:46.071679593Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-08-27T17:49:46.263424597Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-27T17:49:46.464518487Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:34228a77fd32ca1de113501a626553a3e8570657595fa713eff20ff527701928",
                    "sha256:d85554bae540c57a083c66c0faa10af9948eaa15af7d9a9dba22277e56606387",
                    "sha256:d66b259d15e7fd3521dc58915b3354c2ba696971d1c2090034027e57acf30540",
                    "sha256:d6fbbdf711dfe854dcc8b234d2961cfef86d120c224a32510e52011d183cd120"
                ]
            }
        },
        "1.8.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:d2d223cea64268e124382503d53223008a49c33ed22bbb02c194d06fa4b42fe9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "cbcfc5658f8f0f8a940af12fef3e66561c70fa80f05a4c8befae74fad69802d4",
            "container_config": {
                "Hostname": "cbcfc5658f8f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:d2d223cea64268e124382503d53223008a49c33ed22bbb02c194d06fa4b42fe9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-09-29T23:21:07.29156623Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:20:48.043697959Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:20:48.832406276Z",
                    "created_by": "|1 VAULT_VERSION=1.8.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-09-29T23:21:04.961957432Z",
                    "created_by": "|1 VAULT_VERSION=1.8.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-09-29T23:21:06.067230134Z",
                    "created_by": "|1 VAULT_VERSION=1.8.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-09-29T23:21:06.259672772Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:06.491226349Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:06.690733205Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:06.907419431Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-09-29T23:21:07.096308467Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T23:21:07.29156623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:59f25bb0852ec75d873fe1dc665570ba4e6e70b07e0e1baa21e3cfa026979c45",
                    "sha256:1359443974eb6f5ac002b3d44a2bff4911f082c7b51b4c686dc6d45eceef9af9",
                    "sha256:1191789e903ea7274129a71aa4c4bf9df26e805a7dbad14bd219922176bf29f8",
                    "sha256:6e29aba97e8ba2bb7c68c8120ab3b023866c503e6f2fa0d9b2d6dcd9ad26c35f"
                ]
            }
        },
        "1.8.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:fa2d2eea060bf467e87f9dd66d951c3e9ac510e89e63ac9286cb98a9a0c534b9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f2b8b6282330e044f8e27a614507a479a8b238c68f5e26db7f975ad8a755ba60",
            "container_config": {
                "Hostname": "f2b8b6282330",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:fa2d2eea060bf467e87f9dd66d951c3e9ac510e89e63ac9286cb98a9a0c534b9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-06T22:21:10.264647476Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-27T17:19:45.553092363Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in / "
                },
                {
                    "created": "2021-08-27T17:19:45.758611523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-06T22:20:55.127041445Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-06T22:20:55.924310648Z",
                    "created_by": "|1 VAULT_VERSION=1.8.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-10-06T22:21:07.996881771Z",
                    "created_by": "|1 VAULT_VERSION=1.8.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-10-06T22:21:09.059014517Z",
                    "created_by": "|1 VAULT_VERSION=1.8.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-10-06T22:21:09.251008795Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-06T22:21:09.460138262Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-06T22:21:09.663698977Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-06T22:21:09.888149512Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-10-06T22:21:10.0674409Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-06T22:21:10.264647476Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2eb06d8af8218cfec8210147357a68b7e13f7c485b991c288c2d01dc228bb68",
                    "sha256:8966f7b45ef44830426c50b5a0b06637fec08a45c29936d1f27f29adbfc858f6",
                    "sha256:ef42bde48b2dd9749d0404ded34fc5cf102d49b8eb8ba3a6266c913a23ae69a6",
                    "sha256:6f5d84b8c3340717a4aea1b954e2bdd28ec1be94f32f4fa8d5e8a70bed37d314",
                    "sha256:6c0b2f6ff210585d7793e18034143c305e67e090c5ebfcdc1e3eb842d61b0cdc"
                ]
            }
        },
        "1.8.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:1a14388ed7fcb9dc2b2f8b58e5b05ced291916e67a3e2e0e3c7e34eb5a3b6634",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a9a6e4189ce36df7087d1c16b3857630c724edee78c9162e844b0c5b3547be9",
            "container_config": {
                "Hostname": "8a9a6e4189ce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:1a14388ed7fcb9dc2b2f8b58e5b05ced291916e67a3e2e0e3c7e34eb5a3b6634",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T11:12:34.798845384Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:21.055043593Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:21.942888808Z",
                    "created_by": "|1 VAULT_VERSION=1.8.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-11-13T11:12:32.132662321Z",
                    "created_by": "|1 VAULT_VERSION=1.8.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-11-13T11:12:33.359805159Z",
                    "created_by": "|1 VAULT_VERSION=1.8.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-11-13T11:12:33.575885839Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:33.823296039Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:34.046698388Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:34.28901484Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-11-13T11:12:34.547766125Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:34.798845384Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:e769dfe3b87b7000927edf4632fb3c289dc1ce30e9f4ecbdac51e0dbd19c1baf",
                    "sha256:8ddee3de7e282a3322289c47ffb06726f77edd128c460ce410ab37766d9dddf4",
                    "sha256:469e656c20be9f786293301ced04d29c8050f62813c01fe57599e17e385781df",
                    "sha256:eb3f298dc099e699f0db69b67b00fc26935dd6f1f98b94eb93b35c163382d0c3"
                ]
            }
        },
        "1.8.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:28e569017e4c7d057bfb7a63bae79fdef29a4116b0e636370eb6e52a2e309b0c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "aa8bb69c939d1e96b5c120b37ffb8fc620304c9ef1c5e1d747629827fd029080",
            "container_config": {
                "Hostname": "aa8bb69c939d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:28e569017e4c7d057bfb7a63bae79fdef29a4116b0e636370eb6e52a2e309b0c",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-13T19:44:51.22520604Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:40.181170161Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:41.004724336Z",
                    "created_by": "|1 VAULT_VERSION=1.8.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-12-13T19:44:48.988896389Z",
                    "created_by": "|1 VAULT_VERSION=1.8.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-12-13T19:44:50.039483568Z",
                    "created_by": "|1 VAULT_VERSION=1.8.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-12-13T19:44:50.215769214Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:50.396532634Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:50.604097859Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:50.820968716Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-12-13T19:44:51.013220207Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:51.22520604Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:2fce6aedf8fa20ddcae1b4c87ab25fd45af0ce6bf1a0a2cb531d2fba29db9d85",
                    "sha256:3039b2130e7f02ceace95d7a4013d5e21c37fe3c314303d2b7f16dc05ebc8417",
                    "sha256:25e7de6b2f10ead8e7a78a6b31778d7682857a167ce5ba6261251d77a00c1b77",
                    "sha256:405d820d0e95c5f5f4661a5caa16ccfcbfa7e09f60d6908f5b6807ae17546947"
                ]
            }
        },
        "1.8.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:90fad6de4029cd343e9d67e942d116b4552ff64d6f43afc5b1b03a6f38dfd7cc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "0ccc3c5cfd3032d8cd372cc62c79730d9344593793539e1763637b16ba60f33e",
            "container_config": {
                "Hostname": "0ccc3c5cfd30",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:90fad6de4029cd343e9d67e942d116b4552ff64d6f43afc5b1b03a6f38dfd7cc",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-22T22:03:13.965761801Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:03.104053251Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:03.975991043Z",
                    "created_by": "|1 VAULT_VERSION=1.8.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-12-22T22:03:11.539588778Z",
                    "created_by": "|1 VAULT_VERSION=1.8.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-12-22T22:03:12.673295685Z",
                    "created_by": "|1 VAULT_VERSION=1.8.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-12-22T22:03:12.920401364Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:13.148079863Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:13.355895033Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:13.568988428Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-12-22T22:03:13.772252484Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:13.965761801Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:278ccf3452da490e8f0f3ee3630883a9d9c10e47a096c28edbe5519ea5ea8888",
                    "sha256:5945452688981ffb581581143dd7125351489d44c58248be95613f930639e1bb",
                    "sha256:2d9f54b2862455c09330e25ff7221409913a9680a2b9e7fd41b2c61a6c9eb5cd",
                    "sha256:e3b9faf8d754db8263dac6d48450bed4fc0a4442ab517dc406c0e547209aa90f"
                ]
            }
        },
        "1.8.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:d8085e21c7e97af070ea6b4d06fe0fda4209386c7556447c0d2e7a4223ad67b8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "8577ff9778287de9a0d05d93a1e0c2a43e0cca58d2155266ce9a8925702f3e34",
            "container_config": {
                "Hostname": "8577ff977828",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:d8085e21c7e97af070ea6b4d06fe0fda4209386c7556447c0d2e7a4223ad67b8",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-01-29T07:01:14.45356697Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:00:20.348125069Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:00:21.19679473Z",
                    "created_by": "|1 VAULT_VERSION=1.8.8 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-01-29T07:01:09.255376394Z",
                    "created_by": "|1 VAULT_VERSION=1.8.8 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-01-29T07:01:11.69305807Z",
                    "created_by": "|1 VAULT_VERSION=1.8.8 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-01-29T07:01:12.092060497Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:01:12.496798679Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:01:13.015461493Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:01:13.661851776Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-01-29T07:01:14.13369185Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:01:14.45356697Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:8cd18336f4fb5c09d6680da776094f73822849d064b16d3c0689e3c5e136f04e",
                    "sha256:ded9bfe080cff4e06bfeceae7f2974b1462f6aa49f351f47f4917bc32e655b38",
                    "sha256:ac5519d95d949cf307aa70b5b32cb982a2d12ed4a1de13704193ffee645bb369",
                    "sha256:d75d607db287ab27310190bf208bf7aee70281da4fc235e639cd3b3b2f7660a3"
                ]
            }
        },
        "1.8.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:62b1fd40fc0ceb9005099ad9e743998be5811181355a75d04ad02bc57884d878",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1036d138b706e17d0e00cd3e22b5a8d1ff0608c5ee1a962286d62a6f522b879f",
            "container_config": {
                "Hostname": "1036d138b706",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:62b1fd40fc0ceb9005099ad9e743998be5811181355a75d04ad02bc57884d878",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-05T11:27:49.522240985Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:40.617062779Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.8.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:41.272187404Z",
                    "created_by": "|1 VAULT_VERSION=1.8.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-05T11:27:48.083882621Z",
                    "created_by": "|1 VAULT_VERSION=1.8.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-05T11:27:48.928435007Z",
                    "created_by": "|1 VAULT_VERSION=1.8.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-05T11:27:49.023680177Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:49.12124517Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:49.219191867Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:49.331899074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-05T11:27:49.42577494Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:49.522240985Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:091539663a0930c0f3ca9592413551396716acad81beaba7bf6e6c93a6532486",
                    "sha256:3dd2dd478740195fb21fa6610f3fa301c9fc49a0ca97f1bd5bd3597f459f3131",
                    "sha256:1ca1da00a7be1d8c5956f28c111ae49a3cd882e843edf2bb48be50456fd05d83",
                    "sha256:5f7f784f04876f27f13eed2ce7505552840acfe3300fd3d45474ad9e820e8d1e"
                ]
            }
        },
        "1.9.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:f57b6184ac86c006ce31cda287e05c54d32fcf418896d21b3e6c1887565ed33d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "767878285ad58390130ddcb67f44e837b9822b416406c0378d19d97af4e620ef",
            "container_config": {
                "Hostname": "767878285ad5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:f57b6184ac86c006ce31cda287e05c54d32fcf418896d21b3e6c1887565ed33d",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-18T20:42:57.437214223Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-18T20:42:43.34884415Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-18T20:42:44.152676896Z",
                    "created_by": "|1 VAULT_VERSION=1.9.0 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-11-18T20:42:55.173143216Z",
                    "created_by": "|1 VAULT_VERSION=1.9.0 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-11-18T20:42:56.269144371Z",
                    "created_by": "|1 VAULT_VERSION=1.9.0 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-11-18T20:42:56.451521758Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-18T20:42:56.643243629Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-18T20:42:56.851901778Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-18T20:42:57.047266964Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-11-18T20:42:57.231027749Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-18T20:42:57.437214223Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:6cc75598e0a4403d707f993175f2fdf2e671c976274cbec0419d4015b4c2a9df",
                    "sha256:ff11ac6e382fda223faf38b7deea39029239596d4f394892bbbee1dcef6bbb40",
                    "sha256:4c2e30cb5f6ae9573e392f19b71c09508b28f2d81357fffc12e0d62c1c7bea1e",
                    "sha256:56bc2c9e5edd80263a66fba32c98b9e75c11412f8b67e9e094813b9de69149f2"
                ]
            }
        },
        "1.9.0-rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:33066c2fc6b2321f3ada0908ccdbfa594c6af8b3c6210ba1a01c6eb05c46d787",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "808f812bfd35b7cb938a02088c8ae617e5982f82a200e4c5b1292c360dfbf0b4",
            "container_config": {
                "Hostname": "808f812bfd35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:33066c2fc6b2321f3ada0908ccdbfa594c6af8b3c6210ba1a01c6eb05c46d787",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T11:12:18.718363221Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:01.159181531Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.0-rc1",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:01.994594391Z",
                    "created_by": "|1 VAULT_VERSION=1.9.0-rc1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-11-13T11:12:15.761925934Z",
                    "created_by": "|1 VAULT_VERSION=1.9.0-rc1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-11-13T11:12:17.332579123Z",
                    "created_by": "|1 VAULT_VERSION=1.9.0-rc1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-11-13T11:12:17.617831145Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:17.852510121Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:18.083643381Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:18.309148415Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-11-13T11:12:18.507327743Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:12:18.718363221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:a081e887268b72be22a2ddc49a39c42f3eaca05860d6661ee3378e9e076876a5",
                    "sha256:0c8c033ba6563f595978933e20bbd14e8bb4f96005c20016353878a05f1fe3c7",
                    "sha256:f30d42d73b626eb2ca3f584f0d60b7862d9533ab9300bbea1469e1141330cb4c",
                    "sha256:63adeb517fcfdb24bb22cd0176e1d15fa63002a2a2556465c966a8b2a4d03d6e"
                ]
            }
        },
        "1.9.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:ef50b0413847e7f1a5e721878a5bec08a49553782c78d3a25a622f0c7575a885",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "a699a085ff55c92ff3425269c9d521987cecfefb6d5ff83b74b8bade010852d0",
            "container_config": {
                "Hostname": "a699a085ff55",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:ef50b0413847e7f1a5e721878a5bec08a49553782c78d3a25a622f0c7575a885",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-13T19:44:37.592609668Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:26.659603446Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:27.525565458Z",
                    "created_by": "|1 VAULT_VERSION=1.9.1 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-12-13T19:44:35.38221513Z",
                    "created_by": "|1 VAULT_VERSION=1.9.1 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-12-13T19:44:36.429213367Z",
                    "created_by": "|1 VAULT_VERSION=1.9.1 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-12-13T19:44:36.615056181Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:36.808429049Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:36.996402474Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:37.22239502Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-12-13T19:44:37.40548794Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-13T19:44:37.592609668Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:cd80d3df91b5055877effff9a9f8e98011faf463c789a2820db38f52dca26832",
                    "sha256:8670d84dd62cee665851ff13c9117f894876d51a7177820c0a0639d97a28df06",
                    "sha256:235611d671e25f9ec51c248edad85bbbae19ec959b75d625cddb4794f0dec3b7",
                    "sha256:6b83e2dca64d420d47c9f8585133940491a5b1a2118510a593d2a9f282855b63"
                ]
            }
        },
        "1.9.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:037c5d0456b202b4fc5ff3112607499aac5fd1a859d8b756c89d9916c0c9a4fe",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "b4e597bff2ecb0f2c3c6fe0c2268d7d385447957cbef7b5aa9baaed22cc096e5",
            "container_config": {
                "Hostname": "b4e597bff2ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:037c5d0456b202b4fc5ff3112607499aac5fd1a859d8b756c89d9916c0c9a4fe",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-11T14:14:36.982361597Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-11T04:46:59.853255849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a41bb436701fd0adf99a3157d19f172b3e54ea033f5c617009e2d1bdeac206d7 in / "
                },
                {
                    "created": "2023-02-11T04:46:59.997430675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:27.561783171Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:28.13079655Z",
                    "created_by": "|1 VAULT_VERSION=1.9.10 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2023-02-11T14:14:35.302061165Z",
                    "created_by": "|1 VAULT_VERSION=1.9.10 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2023-02-11T14:14:36.349455549Z",
                    "created_by": "|1 VAULT_VERSION=1.9.10 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2023-02-11T14:14:36.450348116Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:36.555360728Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:36.665265994Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:36.780655192Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2023-02-11T14:14:36.877804343Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T14:14:36.982361597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:625523cb9cce7a1bcc1d03e3038de4843a27af3b92d859004bcefb0027291933",
                    "sha256:25b6a49477de4cb70ee95eff92034e36daa1a4df1f27c3678e09b09d096bdb34",
                    "sha256:3c675c795522640b266a843e25009af6dd5b62947e186ff01214111ed07bce22",
                    "sha256:7e0fbc46589b394f171822253274331bd62202e2ae99cb8d074da355bc82ebaf",
                    "sha256:b7f514e0aabd8d5b811724f4b99dd353c10c157f2b9cced44cdf82e96cd654b5"
                ]
            }
        },
        "1.9.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:e11e785bd5dd5fbec275743c857bf67092d01c68cc83d80758dd2cc8ebe5c67b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "5dfdd43ae0b949bcafede8483973302ef78414f3eb0f1236947b515186dacb5b",
            "container_config": {
                "Hostname": "5dfdd43ae0b9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:e11e785bd5dd5fbec275743c857bf67092d01c68cc83d80758dd2cc8ebe5c67b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-22T22:03:00.660847769Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:02:49.542240413Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:02:50.465050005Z",
                    "created_by": "|1 VAULT_VERSION=1.9.2 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2021-12-22T22:02:58.223451827Z",
                    "created_by": "|1 VAULT_VERSION=1.9.2 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2021-12-22T22:02:59.371870128Z",
                    "created_by": "|1 VAULT_VERSION=1.9.2 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2021-12-22T22:02:59.601401521Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:02:59.822573441Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:00.011166797Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:00.256584496Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2021-12-22T22:03:00.466233158Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-22T22:03:00.660847769Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:091b0063aae5ae45f42f27b8f33d49f41d8820b00b40cfe96617e0eba386b425",
                    "sha256:ca7d028cd70c22eeb30879df226a054e3bc99320979189ac2f5ffb950e8d9ece",
                    "sha256:e41f1b664d177e6534ad7b0d0c83cf3554712f38e28e6477bdeefa0023deee25",
                    "sha256:4c0264490112a866e203b9ff0f5e688135c3448e2d34415c97a96080dfa14662"
                ]
            }
        },
        "1.9.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:0e1aef588b4bfe7981047e74c0fe95cdac05892a864fc2c8b908be1bd7a8e56e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5a5b74af4bff424a3cae9749dca2113a31598077fc135ae4978121081092324",
            "container_config": {
                "Hostname": "c5a5b74af4bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:0e1aef588b4bfe7981047e74c0fe95cdac05892a864fc2c8b908be1bd7a8e56e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-01-29T07:00:07.336254964Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:44.795237917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:762c899ec0505d1a32930ee804c5b008825f41611161be104076cba33b7e5b2b in / "
                },
                {
                    "created": "2021-11-12T17:19:45.079013213Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T06:59:11.750936223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T06:59:13.677282005Z",
                    "created_by": "|1 VAULT_VERSION=1.9.3 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-01-29T07:00:04.573797972Z",
                    "created_by": "|1 VAULT_VERSION=1.9.3 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkp://p80.pool.sks-keyservers.net:80         hkp://keyserver.ubuntu.com:80         hkp://pgp.mit.edu:80     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-01-29T07:00:05.954413006Z",
                    "created_by": "|1 VAULT_VERSION=1.9.3 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-01-29T07:00:06.187543074Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:00:06.414869765Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:00:06.645203396Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:00:06.922022598Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a1e68ac70727f49824592e948e9a677097c8d3752a047b468122ba433b453fc4 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-01-29T07:00:07.107387208Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-29T07:00:07.336254964Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a058d5342cc722ad5439cacae4b2b4eedde51d8fe8800fcf28444302355c16d",
                    "sha256:dbbdc89fe0b7751151f7205589f0b0fadc2280a50743c4bf85c1ade4c2bb47f5",
                    "sha256:90e4a8ecc34e5a3699d733a94abc0ffe85e7ff70a9e5550aef419cc3b5d18ece",
                    "sha256:66d2be0eb1d601df268596d20e77a3a82c9db14b24bb0095fcd20483bf9c0c80",
                    "sha256:60e1d62eee8a85a58f623ac319c615af5fcf6dc0053cf1050b3a02bee87e4c74"
                ]
            }
        },
        "1.9.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:2eed222b2e72b75213d891f2d92b718150a17b0b8682ee3ece356eb40f249ae9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "71e7696820562e521865572613d3263beb70687fa952bcfcd1e6f1432537a542",
            "container_config": {
                "Hostname": "71e769682056",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:2eed222b2e72b75213d891f2d92b718150a17b0b8682ee3ece356eb40f249ae9",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-05T11:27:38.027634047Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:29.320821458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:29.855942236Z",
                    "created_by": "|1 VAULT_VERSION=1.9.4 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-05T11:27:36.532833158Z",
                    "created_by": "|1 VAULT_VERSION=1.9.4 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-05T11:27:37.424930641Z",
                    "created_by": "|1 VAULT_VERSION=1.9.4 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-05T11:27:37.525808575Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:37.622276587Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:37.719954378Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:37.830411091Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-05T11:27:37.925767267Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T11:27:38.027634047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:3b2e4b8dfd2c7d97218658bd1bf50d0a8163368812e6eda95955a8c6348e2bc3",
                    "sha256:3dcc6252554644fcb7be2ee08300798c1c0a1ffca4cb25071d2bc5c95a3d2b29",
                    "sha256:b44eb05c80e5e098a4d10d1ffe33bcba1fc1ec6d090b33d7a0ba7a66d43b6ed9",
                    "sha256:59570e5cb9ffd4e534a7c773dca3915a4d22bdd5fd14752d12df6cc0a17fab8b"
                ]
            }
        },
        "1.9.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:e886e38dc824d09c02cc882360cc3f5fefe54bc653c1cd505704cd000e9f360b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1eaf69db74fbe24982a504d2dd849b8ac69bfeea3d68f47e9bb33394e2d222dd",
            "container_config": {
                "Hostname": "1eaf69db74fb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:e886e38dc824d09c02cc882360cc3f5fefe54bc653c1cd505704cd000e9f360b",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-23T00:28:10.027891465Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:27:59.98170592Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:00.552404739Z",
                    "created_by": "|1 VAULT_VERSION=1.9.5 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-23T00:28:08.512580905Z",
                    "created_by": "|1 VAULT_VERSION=1.9.5 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-23T00:28:09.441936167Z",
                    "created_by": "|1 VAULT_VERSION=1.9.5 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-23T00:28:09.535074273Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:09.63100361Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:09.729859481Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:09.838153774Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-23T00:28:09.929699606Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-23T00:28:10.027891465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:c3f2c05ac3dca4c88c87d2b11625e06fe30cd42b13d4898421c50e7c7a1e1a5d",
                    "sha256:059ca889eb0e39d74f492824d9539acfd3b47a7013e66b776caf0a3c1572a75d",
                    "sha256:288d75191caa7ee7ee36dabe5a828e3860cdad42cc03b2f78cbc04282a471d39",
                    "sha256:28ffe33a560797726c03d2a36ef5bc02aadef1a3f8b77e28f4d06e84f2c1cd79"
                ]
            }
        },
        "1.9.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:843df794728d0a472b55213f084182c3feadd6698ea5f9fa8b9be06718fd6489",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5caa143880a26ca64a0806bffbe3852c4c569fba7fca08e788869c9e47e5554",
            "container_config": {
                "Hostname": "f5caa143880a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:843df794728d0a472b55213f084182c3feadd6698ea5f9fa8b9be06718fd6489",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-29T22:28:04.282311865Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:54.577849016Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:27:55.180902743Z",
                    "created_by": "|1 VAULT_VERSION=1.9.6 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-04-29T22:28:02.547425062Z",
                    "created_by": "|1 VAULT_VERSION=1.9.6 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-04-29T22:28:03.548063243Z",
                    "created_by": "|1 VAULT_VERSION=1.9.6 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-04-29T22:28:03.659561417Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:03.765942726Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:03.9149102Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:04.035509992Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-04-29T22:28:04.149362965Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-29T22:28:04.282311865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:b23f602d88246439a765ffa89691b02458a389d2d7c0dc12c66fa6955e3e9d04",
                    "sha256:5066a0ba3088fb40066afc8b2014adc577d2a2127b047d59a78d4efc74e1cfe4",
                    "sha256:af50829902acc2bb76853149223eae28255c7da175423a2b7145d801ca731e5d",
                    "sha256:02b064739fa6976cb6639d15fd7a09cdc0a8a401ab148b66528d124c75cb97cf"
                ]
            }
        },
        "1.9.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:2ad93607e8c83eda13e1547dd3363759f4bf63ccf9edee0eaa051a129ad1939f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "c85b6dd2f7b4c65d79e2a0e2aaeead42c3947c74913f3f1bcb595efccbe1d0f8",
            "container_config": {
                "Hostname": "c85b6dd2f7b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:2ad93607e8c83eda13e1547dd3363759f4bf63ccf9edee0eaa051a129ad1939f",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-20T02:03:35.504751228Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-19T22:20:18.8583754Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80b46be2fe86b402518b00758ff5d8556d92113dc267a002b6c72a5f9c6742a3 in / "
                },
                {
                    "created": "2022-07-19T22:20:18.974810894Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:25.651327976Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:26.240768524Z",
                    "created_by": "|1 VAULT_VERSION=1.9.7 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-07-20T02:03:34.000962609Z",
                    "created_by": "|1 VAULT_VERSION=1.9.7 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-07-20T02:03:34.890199399Z",
                    "created_by": "|1 VAULT_VERSION=1.9.7 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-07-20T02:03:34.989595348Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:35.090113943Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:35.193599224Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:35.307769899Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-07-20T02:03:35.401526983Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-20T02:03:35.504751228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:713e7675e2c1e8b5b484c7032e21ca148e1fb18dad74f61be1338b8671ed2aef",
                    "sha256:62ab16c70a1718a091ce86e772a3e6cacf8a68bae2b93f4ce23a7a6f21c74e01",
                    "sha256:7352b60176e2df8b5e3e27f3d15a071b370faf32eae765e3c31c03ba8fe676f7",
                    "sha256:239cb7d8a61533191c709554332706b4b1d617398ee906e0ef233d1d76cb906d",
                    "sha256:af7c82428ea1dd33c9c1b1381a501836bdd829bbb73572a5a016be4a3e7342d0"
                ]
            }
        },
        "1.9.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:c11e2b271dcea8918dd14b679c3eb88cd2023647bfdefc360ce4ce469167304e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "83ac92e8416b7fdcc517c31c422d4ff21a4e10b57ef126cb55295f17ff507a76",
            "container_config": {
                "Hostname": "83ac92e8416b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:c11e2b271dcea8918dd14b679c3eb88cd2023647bfdefc360ce4ce469167304e",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T01:27:29.190473593Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:19.431404206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:20.024821222Z",
                    "created_by": "|1 VAULT_VERSION=1.9.8 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-08-10T01:27:27.561647479Z",
                    "created_by": "|1 VAULT_VERSION=1.9.8 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-08-10T01:27:28.571804194Z",
                    "created_by": "|1 VAULT_VERSION=1.9.8 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-08-10T01:27:28.665784821Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:28.764719404Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:28.869995943Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:28.987134365Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-08-10T01:27:29.085413922Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T01:27:29.190473593Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:c45f718b5cff25eb9adfe18bcbcef81d2406a3f1a76bd37f73093188f10bf499",
                    "sha256:71efb47aa567ab1ae93e4fd610996fa82c26e2885e49b9dec47428c367e9272d",
                    "sha256:4a95df7629e502cf650b8558670413718baa90540eb9dcedb22f20060e554dd5",
                    "sha256:02f6714ce6fdb02daa6301eca2289207a38e5a32c24256994dee8eb9bbc86b98"
                ]
            }
        },
        "1.9.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "Image": "sha256:3c66213b5b246c8b2c5a14de25afe4f5b2c0e5c8696c11077691c55e27a3a6d1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "1437e478aecb81aa07b1db48561d0321c15a584b2b5845729c7d9c7ea954b5f9",
            "container_config": {
                "Hostname": "1437e478aecb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"server\" \"-dev\"]"
                ],
                "Image": "sha256:3c66213b5b246c8b2c5a14de25afe4f5b2c0e5c8696c11077691c55e27a3a6d1",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-07T04:27:51.036545543Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:07.901188109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9bd10cf83356cb7281baa0fbaca5186cf27491f59eda87abe57f83a5aaf5ec1 in / "
                },
                {
                    "created": "2022-08-09T17:20:08.015648568Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:39.788075128Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VAULT_VERSION=1.9.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:41.152490261Z",
                    "created_by": "|1 VAULT_VERSION=1.9.9 /bin/sh -c addgroup vault &&     adduser -S -G vault vault"
                },
                {
                    "created": "2022-10-07T04:27:49.49069698Z",
                    "created_by": "|1 VAULT_VERSION=1.9.9 /bin/sh -c set -eux;     apk add --no-cache ca-certificates gnupg openssl libcap su-exec dumb-init tzdata &&     apkArch=\"$(apk --print-arch)\";     case \"$apkArch\" in         armhf) ARCH='arm' ;;         aarch64) ARCH='arm64' ;;         x86_64) ARCH='amd64' ;;         x86) ARCH='386' ;;         *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;;     esac &&     VAULT_GPGKEY=C874011F0AB405110D02105534365D9472D7468F;     found='';     for server in         hkps://keys.openpgp.org         hkps://keyserver.ubuntu.com         hkps://pgp.mit.edu     ; do         echo \"Fetching GPG key $VAULT_GPGKEY from $server\";         gpg --batch --keyserver \"$server\" --recv-keys \"$VAULT_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $VAULT_GPGKEY\" && exit 1;     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_${ARCH}.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /tmp/build vault_${VAULT_VERSION}_linux_${ARCH}.zip &&     cp /tmp/build/vault /bin/vault &&     if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/EULA.txt /usr/share/doc/vault/EULA.txt; fi &&     if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/vault; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/vault/TermsOfEvaluation.txt; fi &&     cd /tmp &&     rm -rf /tmp/build &&     gpgconf --kill dirmngr &&     gpgconf --kill gpg-agent &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2022-10-07T04:27:50.369747827Z",
                    "created_by": "|1 VAULT_VERSION=1.9.9 /bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config &&     chown -R vault:vault /vault"
                },
                {
                    "created": "2022-10-07T04:27:50.478632476Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:50.585390001Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:50.691154427Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 8200",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:50.814246996Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:284725e82dfade67c8b2092585f70a151b8782d83106082a5b4852b996b7e550 in /usr/local/bin/docker-entrypoint.sh "
                },
                {
                    "created": "2022-10-07T04:27:50.926245723Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-07T04:27:51.036545543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63493a9ab2d41e319e25dd7474e184d875e28cb267f7e6856ca91dccdd90ee28",
                    "sha256:1fe6087c6d07db4fbb7e8d061d1f07b8dab878574e6ac1f8ee6ae89755ff3039",
                    "sha256:b25315f5586eac6a5a6565214acdf5af407a15aae64549544cf02e6caecfa53c",
                    "sha256:117de889c76823ec811069f158505ba39bd03bfbe96f3fc801d7f944a54d37cc",
                    "sha256:1750cb2f6cd62c3db7d56758d0cf381df00c69a715fe8d05d1714f5cf6e48878"
                ]
            }
        },
        "v0.6.0": {
            "architecture": "amd64",
            "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
            "config": {
                "Hostname": "4c573a7cf4a3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "server",
                    "-dev"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7cfea17e368089340e591bbfcce15e894ff05be37d5f8abaf2d97ae17437de11",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "1ab9d81f343d487e59dd07012b119d4ecdec95839656c874deffd6f4fe20062c",
            "container_config": {
                "Hostname": "4c573a7cf4a3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "8200/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "VAULT_VERSION=0.6.0",
                    "DOCKER_BASE_VERSION=0.0.4"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) CMD [\"server\" \"-dev\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7cfea17e368089340e591bbfcce15e894ff05be37d5f8abaf2d97ae17437de11",
                "Volumes": {
                    "/vault/file": {},
                    "/vault/logs": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-07-21T17:10:04.228710044Z",
            "docker_version": "1.10.3",
            "history": [
                {
                    "created": "2016-06-23T19:55:18.048565927Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:852e9d0cb9d906535af512a89339fc70b2873a0f94defbcbe41cd44942dd6ac8 in /"
                },
                {
                    "created": "2016-07-21T17:09:34.385192926Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:09:34.716520773Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) ENV VAULT_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:09:35.279113996Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) ENV DOCKER_BASE_VERSION=0.0.4",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:10:00.116685518Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates gnupg openssl &&     gpg --recv-keys 91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip &&     cp bin/gosu bin/dumb-init /bin &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS &&     wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS.sig &&     gpg --batch --verify vault_${VAULT_VERSION}_SHA256SUMS.sig vault_${VAULT_VERSION}_SHA256SUMS &&     grep vault_${VAULT_VERSION}_linux_amd64.zip vault_${VAULT_VERSION}_SHA256SUMS | sha256sum -c &&     unzip -d /bin vault_${VAULT_VERSION}_linux_amd64.zip &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm -rf /root/.gnupg"
                },
                {
                    "created": "2016-07-21T17:10:01.439892481Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c mkdir -p /vault/logs &&     mkdir -p /vault/file &&     mkdir -p /vault/config"
                },
                {
                    "created": "2016-07-21T17:10:01.795816729Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) VOLUME [/vault/logs]",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:10:02.194957804Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) VOLUME [/vault/file]",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:10:02.66469244Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) EXPOSE 8200/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:10:03.415084705Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) COPY file:9f4fd4592e2bea6f6ff3dcb256633c886c59df0516bec3d69937b9c66ae54448 in /usr/local/bin/docker-entrypoint.sh"
                },
                {
                    "created": "2016-07-21T17:10:03.846042881Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) ENTRYPOINT &{[\"docker-entrypoint.sh\"]}",
                    "empty_layer": true
                },
                {
                    "created": "2016-07-21T17:10:04.228710044Z",
                    "author": "Jeff Mitchell <jeff@hashicorp.com> (@jefferai)",
                    "created_by": "/bin/sh -c #(nop) CMD [\"server\" \"-dev\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4fe15f8d0ae69e169824f25f1d4da3015a48feeeeebb265cd2e328e15c6a869f",
                    "sha256:4ec609511e73b6c89a693a1feef802b31d4a2aac4e0037409407ae15c4a1aca4",
                    "sha256:ca01f376780d4d01df5a38d6eae55adacc8317268f6a2ebe778b3be0ac636346",
                    "sha256:e154e181bc69f2a17f177e5de4f92f6f657928a4c68442987d8fda03d08a8fc5"
                ]
            }
        }
    }
}