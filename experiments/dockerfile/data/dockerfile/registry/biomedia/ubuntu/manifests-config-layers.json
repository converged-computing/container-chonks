{
    "manifests": {
        "14.04-mirtk": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10037,
                "digest": "sha256:cd387b257f576282ef60f3e53a83596f5d7722b1893d9039dd7a091c54e70c46"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65688471,
                    "digest": "sha256:5a132a7e7af11f304041e93efb9cb2a0a7839bccaec5a03cfbdc9a3f5d0eb481"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71483,
                    "digest": "sha256:fd2731e4c50ce221d785d4ce26a8430bca9a95bfe4162fafc997a1cc65682cce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:28a2f68d1120598986362662445c47dce7ec13c2662479e7aab9f0ecad4a7416"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135395984,
                    "digest": "sha256:8431afe8ca7f029d0a9b331e336a94dee05871c437a7bb207018bb58abbe1705"
                }
            ]
        },
        "18.04-mirtk": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10020,
                "digest": "sha256:d09972a1504884923b30187ff8e10753e02a2780900bf1844e8b6fee6b107489"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 272900659,
                    "digest": "sha256:63721e261fc36374b047f3d1c4da505c01f21c030ab9558b1c4a15481141a216"
                }
            ]
        },
        "mirtk": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10037,
                "digest": "sha256:cd387b257f576282ef60f3e53a83596f5d7722b1893d9039dd7a091c54e70c46"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65688471,
                    "digest": "sha256:5a132a7e7af11f304041e93efb9cb2a0a7839bccaec5a03cfbdc9a3f5d0eb481"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71483,
                    "digest": "sha256:fd2731e4c50ce221d785d4ce26a8430bca9a95bfe4162fafc997a1cc65682cce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 681,
                    "digest": "sha256:28a2f68d1120598986362662445c47dce7ec13c2662479e7aab9f0ecad4a7416"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135395984,
                    "digest": "sha256:8431afe8ca7f029d0a9b331e336a94dee05871c437a7bb207018bb58abbe1705"
                }
            ]
        }
    },
    "tags": [
        "14.04-mirtk",
        "18.04-mirtk",
        "mirtk"
    ],
    "configs": {
        "14.04-mirtk": {
            "architecture": "amd64",
            "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
            "config": {
                "Hostname": "c24ffee5b2b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d45fc82a226715d8ee4672d7e608c3f2bf5ed9d34aa6bc1c64644eb36ac63b1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "Description": "Ubuntu with prerequisits for MIRTK installed",
                    "Vendor": "BioMedIA"
                }
            },
            "container": "adc9786474479a5e4e8881b63b9e5b1f612e78f9d364ac6f6617398aa2b47360",
            "container_config": {
                "Hostname": "c24ffee5b2b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "|2",
                    "EIGEN_VERSION=3.2.8",
                    "VTK_VERSION=7.0.0",
                    "/bin/sh",
                    "-c",
                    "NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`}     && echo \"Maximum number of build threads = $NUM_CPUS\"     && apt-get update && apt-get install -y --no-install-recommends       software-properties-common     && add-apt-repository -y ppa:bzindovic/suitesparse-bugfix-1319687     && apt-get update && apt-get install -y --no-install-recommends       wget       gcc       g++       make       cmake       python       freeglut3-dev       libarpack2-dev       libboost-math-dev       libboost-random-dev       libflann-dev       libgtest-dev       libnifti-dev       libpng-dev       libsuitesparse-dev       libtbb-dev       zlib1g-dev     && mkdir /usr/src/gtest/build     && cd /usr/src/gtest/build     && cmake ..     && make -j $NUM_CPUS     && mv -f libgtest.a libgtest_main.a /usr/lib     && cd /usr/src     && rm -rf /usr/src/gtest/build     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libeigen3-dev;     else       EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION}       && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3       && cd ${EIGEN_SOURCE_DIR}       && wget -O archive.tar.bz2 http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2       && tar vxjf archive.tar.bz2 --strip 1       && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/       && mv cmake/FindEigen3.cmake /usr/share/cmake-2.8/Modules/       && cd /usr/src       && rm -rf ${EIGEN_SOURCE_DIR};     fi     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libvtk6-dev;     else       VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//`       && cd /usr/src       && wget http://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz       && tar -xvzf VTK-${VTK_VERSION}.tar.gz       && rm -f VTK-${VTK_VERSION}.tar.gz       && mkdir VTK-${VTK_VERSION}/Build       && cd VTK-${VTK_VERSION}/Build       && cmake         -D CMAKE_INSTALL_PREFIX=/usr/local         -D CMAKE_BUILD_TYPE=Release         -D CMAKE_CXX_FLAGS=-std=c++11         -D VTK_USE_SYSTEM_PNG=ON         -D VTK_USE_SYSTEM_ZLIB=ON         -D BUILD_SHARED_LIBS=ON         -D BUILD_EXAMPLES=OFF         -D BUILD_TESTING=OFF         -D BUILD_DOCUMENTATION=OFF         ..       && make -j $NUM_CPUS install       && cd /usr/src       && rm -rf /usr/src/VTK-${VTK_VERSION}       && ldconfig;     fi     && rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d45fc82a226715d8ee4672d7e608c3f2bf5ed9d34aa6bc1c64644eb36ac63b1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "Description": "Ubuntu with prerequisits for MIRTK installed",
                    "Vendor": "BioMedIA"
                }
            },
            "created": "2016-06-08T10:21:34.340736788Z",
            "docker_version": "1.11.1",
            "history": [
                {
                    "created": "2016-03-03T21:38:46.169812943Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9504126dc55908988977286e89c43c7ea73a506d43fae82c29ef132e21b6ece in /"
                },
                {
                    "created": "2016-03-03T21:38:51.45368726Z",
                    "created_by": "/bin/sh -c echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes"
                },
                {
                    "created": "2016-03-03T21:38:53.085760873Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-03-03T21:38:53.80360049Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-03-07T15:25:48.209941728Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-03-07T20:18:23.23208988Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) LABEL Description=Ubuntu with prerequisits for MIRTK installed Vendor=BioMedIA",
                    "empty_layer": true
                },
                {
                    "created": "2016-03-08T15:59:02.196912921Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) ARG THREADS",
                    "empty_layer": true
                },
                {
                    "created": "2016-06-07T23:02:08.681083717Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) ARG VTK_VERSION=7.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-06-08T09:21:32.87048634Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) ARG EIGEN_VERSION=3.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2016-06-08T10:21:34.340736788Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "|2 EIGEN_VERSION=3.2.8 VTK_VERSION=7.0.0 /bin/sh -c NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`}     && echo \"Maximum number of build threads = $NUM_CPUS\"     && apt-get update && apt-get install -y --no-install-recommends       software-properties-common     && add-apt-repository -y ppa:bzindovic/suitesparse-bugfix-1319687     && apt-get update && apt-get install -y --no-install-recommends       wget       gcc       g++       make       cmake       python       freeglut3-dev       libarpack2-dev       libboost-math-dev       libboost-random-dev       libflann-dev       libgtest-dev       libnifti-dev       libpng-dev       libsuitesparse-dev       libtbb-dev       zlib1g-dev     && mkdir /usr/src/gtest/build     && cd /usr/src/gtest/build     && cmake ..     && make -j $NUM_CPUS     && mv -f libgtest.a libgtest_main.a /usr/lib     && cd /usr/src     && rm -rf /usr/src/gtest/build     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libeigen3-dev;     else       EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION}       && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3       && cd ${EIGEN_SOURCE_DIR}       && wget -O archive.tar.bz2 http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2       && tar vxjf archive.tar.bz2 --strip 1       && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/       && mv cmake/FindEigen3.cmake /usr/share/cmake-2.8/Modules/       && cd /usr/src       && rm -rf ${EIGEN_SOURCE_DIR};     fi     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libvtk6-dev;     else       VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//`       && cd /usr/src       && wget http://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz       && tar -xvzf VTK-${VTK_VERSION}.tar.gz       && rm -f VTK-${VTK_VERSION}.tar.gz       && mkdir VTK-${VTK_VERSION}/Build       && cd VTK-${VTK_VERSION}/Build       && cmake         -D CMAKE_INSTALL_PREFIX=/usr/local         -D CMAKE_BUILD_TYPE=Release         -D CMAKE_CXX_FLAGS=-std=c++11         -D VTK_USE_SYSTEM_PNG=ON         -D VTK_USE_SYSTEM_ZLIB=ON         -D BUILD_SHARED_LIBS=ON         -D BUILD_EXAMPLES=OFF         -D BUILD_TESTING=OFF         -D BUILD_DOCUMENTATION=OFF         ..       && make -j $NUM_CPUS install       && cd /usr/src       && rm -rf /usr/src/VTK-${VTK_VERSION}       && ldconfig;     fi     && rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:56abdd66ba312859b30b5629268c30d44a6bbef6e2f0ebe923655092855106e8",
                    "sha256:9468150a390c828170d21822a4c98f1d0323e732596f84690148144b7212bb9c",
                    "sha256:11083b444c9090899d2727bf61be39958775882bd8e14354d9cc0b9c4f454616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ee59efe04f1bd2f9acd2b8b34a662c2c42b731c194633501606056dce666337"
                ]
            }
        },
        "18.04-mirtk": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:326d14d02e5bad5331b6b2d6ec8963bd05a32b85aa1ac47554d974ece21847c9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "Ubuntu with prerequisits for MIRTK installed",
                    "Maintainer": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "Vendor": "BioMedIA"
                }
            },
            "container": "4e4e6ab67d750424cdd2501058caf3a0bbebf654fad565ea30d8acc1582f7dc7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "|3",
                    "CXX_STANDARD=c++14",
                    "EIGEN_VERSION=3.3.7",
                    "VTK_VERSION=8.2.0",
                    "/bin/sh",
                    "-c",
                    "NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`}     && echo \"Maximum number of build threads = $NUM_CPUS\"     && apt-get update && apt-get install -y --no-install-recommends       software-properties-common     && apt-get update && apt-get install -y --no-install-recommends       wget       gcc       g++       make       cmake       python3       freeglut3-dev       libarpack2-dev       libboost-math-dev       libboost-random-dev       libflann-dev       libfftw3-dev       libgtest-dev       libinsighttoolkit4-dev       libnifti-dev       libpng-dev       libsuitesparse-dev       libtbb-dev       uuid-dev       zlib1g-dev     && mkdir /usr/src/gtest/build     && cd /usr/src/gtest/build     && cmake ..     && make -j $NUM_CPUS     && mv -f libgtest.a libgtest_main.a /usr/lib     && cd /usr/src     && rm -rf /usr/src/gtest/build     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libeigen3-dev;     else       EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION}       && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3       && cd ${EIGEN_SOURCE_DIR}       && wget -O archive.tar.bz2 http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2       && tar vxjf archive.tar.bz2 --strip 1       && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/       && mv cmake/FindEigen3.cmake /usr/share/cmake-3.10/Modules/       && cd /usr/src       && rm -rf ${EIGEN_SOURCE_DIR};     fi     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libvtk7-dev;     else       VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//`       && cd /usr/src       && wget http://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz       && tar -xvzf VTK-${VTK_VERSION}.tar.gz       && rm -f VTK-${VTK_VERSION}.tar.gz       && mkdir VTK-${VTK_VERSION}/Build       && cd VTK-${VTK_VERSION}/Build       && cmake         -D CMAKE_INSTALL_PREFIX=/usr/local         -D CMAKE_BUILD_TYPE=Release         -D CMAKE_CXX_STANDARD=${CXX_STANDARD}         -D VTK_USE_SYSTEM_PNG=ON         -D VTK_USE_SYSTEM_ZLIB=ON         -D BUILD_SHARED_LIBS=ON         -D BUILD_EXAMPLES=OFF         -D BUILD_TESTING=OFF         -D BUILD_DOCUMENTATION=OFF         ..       && make -j $NUM_CPUS install       && cd /usr/src       && rm -rf /usr/src/VTK-${VTK_VERSION}       && ldconfig;     fi     && rm -rf /var/lib/apt/lists/*"
                ],
                "Image": "sha256:326d14d02e5bad5331b6b2d6ec8963bd05a32b85aa1ac47554d974ece21847c9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "Description": "Ubuntu with prerequisits for MIRTK installed",
                    "Maintainer": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "Vendor": "BioMedIA"
                }
            },
            "created": "2019-12-23T13:35:55.2710287Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T23:41:04.9206977Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL Maintainer=Andreas Schuh <andreas.schuh.84@gmail.com> Description=Ubuntu with prerequisits for MIRTK installed Vendor=BioMedIA",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T23:41:05.3229744Z",
                    "created_by": "/bin/sh -c #(nop)  ARG THREADS",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T23:41:05.7217037Z",
                    "created_by": "/bin/sh -c #(nop)  ARG VTK_VERSION=8.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T23:41:06.1036264Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EIGEN_VERSION=3.3.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T23:41:06.4548432Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CXX_STANDARD=c++14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-23T13:35:55.2710287Z",
                    "created_by": "|3 CXX_STANDARD=c++14 EIGEN_VERSION=3.3.7 VTK_VERSION=8.2.0 /bin/sh -c NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`}     && echo \"Maximum number of build threads = $NUM_CPUS\"     && apt-get update && apt-get install -y --no-install-recommends       software-properties-common     && apt-get update && apt-get install -y --no-install-recommends       wget       gcc       g++       make       cmake       python3       freeglut3-dev       libarpack2-dev       libboost-math-dev       libboost-random-dev       libflann-dev       libfftw3-dev       libgtest-dev       libinsighttoolkit4-dev       libnifti-dev       libpng-dev       libsuitesparse-dev       libtbb-dev       uuid-dev       zlib1g-dev     && mkdir /usr/src/gtest/build     && cd /usr/src/gtest/build     && cmake ..     && make -j $NUM_CPUS     && mv -f libgtest.a libgtest_main.a /usr/lib     && cd /usr/src     && rm -rf /usr/src/gtest/build     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libeigen3-dev;     else       EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION}       && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3       && cd ${EIGEN_SOURCE_DIR}       && wget -O archive.tar.bz2 http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2       && tar vxjf archive.tar.bz2 --strip 1       && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/       && mv cmake/FindEigen3.cmake /usr/share/cmake-3.10/Modules/       && cd /usr/src       && rm -rf ${EIGEN_SOURCE_DIR};     fi     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libvtk7-dev;     else       VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//`       && cd /usr/src       && wget http://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz       && tar -xvzf VTK-${VTK_VERSION}.tar.gz       && rm -f VTK-${VTK_VERSION}.tar.gz       && mkdir VTK-${VTK_VERSION}/Build       && cd VTK-${VTK_VERSION}/Build       && cmake         -D CMAKE_INSTALL_PREFIX=/usr/local         -D CMAKE_BUILD_TYPE=Release         -D CMAKE_CXX_STANDARD=${CXX_STANDARD}         -D VTK_USE_SYSTEM_PNG=ON         -D VTK_USE_SYSTEM_ZLIB=ON         -D BUILD_SHARED_LIBS=ON         -D BUILD_EXAMPLES=OFF         -D BUILD_TESTING=OFF         -D BUILD_DOCUMENTATION=OFF         ..       && make -j $NUM_CPUS install       && cd /usr/src       && rm -rf /usr/src/VTK-${VTK_VERSION}       && ldconfig;     fi     && rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:d802bdd52f3ee4f4bca9cc099d56912d47b6a63624d01a5822bfa61133ce7291"
                ]
            }
        },
        "mirtk": {
            "architecture": "amd64",
            "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
            "config": {
                "Hostname": "c24ffee5b2b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d45fc82a226715d8ee4672d7e608c3f2bf5ed9d34aa6bc1c64644eb36ac63b1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "Description": "Ubuntu with prerequisits for MIRTK installed",
                    "Vendor": "BioMedIA"
                }
            },
            "container": "adc9786474479a5e4e8881b63b9e5b1f612e78f9d364ac6f6617398aa2b47360",
            "container_config": {
                "Hostname": "c24ffee5b2b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "|2",
                    "EIGEN_VERSION=3.2.8",
                    "VTK_VERSION=7.0.0",
                    "/bin/sh",
                    "-c",
                    "NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`}     && echo \"Maximum number of build threads = $NUM_CPUS\"     && apt-get update && apt-get install -y --no-install-recommends       software-properties-common     && add-apt-repository -y ppa:bzindovic/suitesparse-bugfix-1319687     && apt-get update && apt-get install -y --no-install-recommends       wget       gcc       g++       make       cmake       python       freeglut3-dev       libarpack2-dev       libboost-math-dev       libboost-random-dev       libflann-dev       libgtest-dev       libnifti-dev       libpng-dev       libsuitesparse-dev       libtbb-dev       zlib1g-dev     && mkdir /usr/src/gtest/build     && cd /usr/src/gtest/build     && cmake ..     && make -j $NUM_CPUS     && mv -f libgtest.a libgtest_main.a /usr/lib     && cd /usr/src     && rm -rf /usr/src/gtest/build     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libeigen3-dev;     else       EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION}       && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3       && cd ${EIGEN_SOURCE_DIR}       && wget -O archive.tar.bz2 http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2       && tar vxjf archive.tar.bz2 --strip 1       && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/       && mv cmake/FindEigen3.cmake /usr/share/cmake-2.8/Modules/       && cd /usr/src       && rm -rf ${EIGEN_SOURCE_DIR};     fi     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libvtk6-dev;     else       VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//`       && cd /usr/src       && wget http://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz       && tar -xvzf VTK-${VTK_VERSION}.tar.gz       && rm -f VTK-${VTK_VERSION}.tar.gz       && mkdir VTK-${VTK_VERSION}/Build       && cd VTK-${VTK_VERSION}/Build       && cmake         -D CMAKE_INSTALL_PREFIX=/usr/local         -D CMAKE_BUILD_TYPE=Release         -D CMAKE_CXX_FLAGS=-std=c++11         -D VTK_USE_SYSTEM_PNG=ON         -D VTK_USE_SYSTEM_ZLIB=ON         -D BUILD_SHARED_LIBS=ON         -D BUILD_EXAMPLES=OFF         -D BUILD_TESTING=OFF         -D BUILD_DOCUMENTATION=OFF         ..       && make -j $NUM_CPUS install       && cd /usr/src       && rm -rf /usr/src/VTK-${VTK_VERSION}       && ldconfig;     fi     && rm -rf /var/lib/apt/lists/*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d45fc82a226715d8ee4672d7e608c3f2bf5ed9d34aa6bc1c64644eb36ac63b1",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {
                    "Description": "Ubuntu with prerequisits for MIRTK installed",
                    "Vendor": "BioMedIA"
                }
            },
            "created": "2016-06-08T10:21:34.340736788Z",
            "docker_version": "1.11.1",
            "history": [
                {
                    "created": "2016-03-03T21:38:46.169812943Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9504126dc55908988977286e89c43c7ea73a506d43fae82c29ef132e21b6ece in /"
                },
                {
                    "created": "2016-03-03T21:38:51.45368726Z",
                    "created_by": "/bin/sh -c echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes"
                },
                {
                    "created": "2016-03-03T21:38:53.085760873Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2016-03-03T21:38:53.80360049Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-03-07T15:25:48.209941728Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2016-03-07T20:18:23.23208988Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) LABEL Description=Ubuntu with prerequisits for MIRTK installed Vendor=BioMedIA",
                    "empty_layer": true
                },
                {
                    "created": "2016-03-08T15:59:02.196912921Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) ARG THREADS",
                    "empty_layer": true
                },
                {
                    "created": "2016-06-07T23:02:08.681083717Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) ARG VTK_VERSION=7.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2016-06-08T09:21:32.87048634Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) ARG EIGEN_VERSION=3.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2016-06-08T10:21:34.340736788Z",
                    "author": "Andreas Schuh <andreas.schuh.84@gmail.com>",
                    "created_by": "|2 EIGEN_VERSION=3.2.8 VTK_VERSION=7.0.0 /bin/sh -c NUM_CPUS=${THREADS:-`cat /proc/cpuinfo | grep processor | wc -l`}     && echo \"Maximum number of build threads = $NUM_CPUS\"     && apt-get update && apt-get install -y --no-install-recommends       software-properties-common     && add-apt-repository -y ppa:bzindovic/suitesparse-bugfix-1319687     && apt-get update && apt-get install -y --no-install-recommends       wget       gcc       g++       make       cmake       python       freeglut3-dev       libarpack2-dev       libboost-math-dev       libboost-random-dev       libflann-dev       libgtest-dev       libnifti-dev       libpng-dev       libsuitesparse-dev       libtbb-dev       zlib1g-dev     && mkdir /usr/src/gtest/build     && cd /usr/src/gtest/build     && cmake ..     && make -j $NUM_CPUS     && mv -f libgtest.a libgtest_main.a /usr/lib     && cd /usr/src     && rm -rf /usr/src/gtest/build     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libeigen3-dev;     else       EIGEN_SOURCE_DIR=/usr/src/eigen-${EIGEN_VERSION}       && mkdir ${EIGEN_SOURCE_DIR} /usr/include/eigen3       && cd ${EIGEN_SOURCE_DIR}       && wget -O archive.tar.bz2 http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2       && tar vxjf archive.tar.bz2 --strip 1       && mv signature_of_eigen3_matrix_library Eigen /usr/include/eigen3/       && mv cmake/FindEigen3.cmake /usr/share/cmake-2.8/Modules/       && cd /usr/src       && rm -rf ${EIGEN_SOURCE_DIR};     fi     &&     if [ -z ${VTK_VERSION} ]; then       apt-get install -y libvtk6-dev;     else       VTK_RELEASE=`echo ${VTK_VERSION} | sed s/\\.[0-9]*$//`       && cd /usr/src       && wget http://www.vtk.org/files/release/${VTK_RELEASE}/VTK-${VTK_VERSION}.tar.gz       && tar -xvzf VTK-${VTK_VERSION}.tar.gz       && rm -f VTK-${VTK_VERSION}.tar.gz       && mkdir VTK-${VTK_VERSION}/Build       && cd VTK-${VTK_VERSION}/Build       && cmake         -D CMAKE_INSTALL_PREFIX=/usr/local         -D CMAKE_BUILD_TYPE=Release         -D CMAKE_CXX_FLAGS=-std=c++11         -D VTK_USE_SYSTEM_PNG=ON         -D VTK_USE_SYSTEM_ZLIB=ON         -D BUILD_SHARED_LIBS=ON         -D BUILD_EXAMPLES=OFF         -D BUILD_TESTING=OFF         -D BUILD_DOCUMENTATION=OFF         ..       && make -j $NUM_CPUS install       && cd /usr/src       && rm -rf /usr/src/VTK-${VTK_VERSION}       && ldconfig;     fi     && rm -rf /var/lib/apt/lists/*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:56abdd66ba312859b30b5629268c30d44a6bbef6e2f0ebe923655092855106e8",
                    "sha256:9468150a390c828170d21822a4c98f1d0323e732596f84690148144b7212bb9c",
                    "sha256:11083b444c9090899d2727bf61be39958775882bd8e14354d9cc0b9c4f454616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ee59efe04f1bd2f9acd2b8b34a662c2c42b731c194633501606056dce666337"
                ]
            }
        }
    }
}