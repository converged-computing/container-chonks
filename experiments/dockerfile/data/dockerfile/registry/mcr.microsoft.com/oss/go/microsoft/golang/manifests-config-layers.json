{
    "manifests": {
        "1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:d9f124ea46e465a44d9063f85b05cb1eec6e5cc31050f17dc592e71fb85a739e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:38d4ac8e5b09d2e2baff8fb5760d55088a31698efab2dd894d8b0b7091152cb6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:f0afcd188afec13f842242713f42ec6c6349206994603d6a9d3ec3c74ab4402c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:d9f124ea46e465a44d9063f85b05cb1eec6e5cc31050f17dc592e71fb85a739e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:38d4ac8e5b09d2e2baff8fb5760d55088a31698efab2dd894d8b0b7091152cb6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:f0afcd188afec13f842242713f42ec6c6349206994603d6a9d3ec3c74ab4402c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:bb5d0c08b9beb6e6ca1c3931c0f51bc81c2bb951e3ae23aed3fca66896192c5f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:fb49edd709a9cc2c9624408447f1b031882d60ecc113e4c1c6af774936cab876",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:aed2f6d703c528500e1edbfc42e6aca46228c0b6e00503a4c12ad2118a3d246c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1585,
                    "digest": "sha256:6d764273bd5a233a66a7fedf601c1e9801ee1b834d4c0f5cfffc8a33c8616a6e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1585,
                    "digest": "sha256:014a89fd835e8b730a35325f0655431e9549f255c2f06f131ddfc047763c8e48",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1585,
                    "digest": "sha256:ec5e5981eadc418b7b070d3b0f27352daf5f807a5a7097df5e2ababfef7b477c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1575,
                    "digest": "sha256:2691e0e744d4b14f21913b378e7f2df2fe089d74435fe0baf44d41781a89f91e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:001c29e5e33d4146f26afe55880f877e3ab435c045e5b57be044c0c9596e7ebb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1575,
                    "digest": "sha256:922523a19919bfce811088742030febd63797dd87c42c43fab8c52be20fe9442",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1575,
                    "digest": "sha256:935470da510d8e3f5843067086f0db189a8a087614f4e85244c9d9a07dc51b39",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-fips-bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:3357c45533b7299237a8a1d2b170c5987c32f93e88d28edad2689d060791ab76",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:73ecbe9017011264f22144c686c69515f4313a49caacb375889d69a092ecca2b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:ae3d68fae001208ea1f00fdff3d4bb3a5b4ba92c7ab216bd74ebad2be9048035",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-fips-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:62a06565fe9e724c7cf7b7d97f5a30cf6fef6f6403c620e2200c809f82914d98",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:43ba04ce0dc094755dd665c82d7ac3308bf6d1feea99e9a6f1a2d6a686c8abbe",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1790,
                    "digest": "sha256:e776e612ee6ee63825c43d6ce941ab523ad68687fedec4c11af86f93a6798a75",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-fips-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1585,
                    "digest": "sha256:72d541f409ef69dde8a36279923a5e2cac20ff9d4162c98a1a5f0343331e5916",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1585,
                    "digest": "sha256:bded4729cb15bbb702e13a928c2424a23ebe414801bde7446a576f814a9ea28a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1585,
                    "digest": "sha256:1da43eb1ab2b1996e03d63362b763e4b3b35edfb6ee20e4890976776221031a9",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1575,
                    "digest": "sha256:08a53c6b6d78ec908a1f24f09da124aaf605e1d336b95c87fed346755690ca50",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:b71797ec996a6a348e642f1b699e770007785f0e4bb2c056cc261fd509969d4c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1575,
                    "digest": "sha256:ff44f35b0e456d90b017f8c571c276a4b9eae4eec9fcf4ec6aeb8b31fe31bc44",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1575,
                    "digest": "sha256:af038e33afebf84a08d24de2a499a3439066dcc48e73edd532ee189f14ad5c2f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-fips-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2616,
                    "digest": "sha256:1524aed00d81e5ff2a3740b1fe5ecff89a319dccb7c7f236652c9be81b4f3e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    }
                }
            ]
        },
        "1-fips-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2616,
                    "digest": "sha256:23c1d114de539220c792b2ea691a5c259c17b17ff40aecf2bae4c9274132b971",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    }
                }
            ]
        },
        "1-fips-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3250,
                    "digest": "sha256:421a066b12a50b8e44b95fc542f4cb799464e977324abfa60b7b8019a3e50a42",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    }
                }
            ]
        },
        "1-fips-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3250,
                    "digest": "sha256:bdba7a779a660e11b10a31563f23f8900815a456e315dba8b069f8e02803cec3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    }
                }
            ]
        },
        "1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2408,
                    "digest": "sha256:1cfb4597c9ef51d780cc982e230b4b1e9864d159b0e25d03524cd7fafc4083de",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    }
                }
            ]
        },
        "1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2408,
                    "digest": "sha256:6ee2153a89a7351fe1a378ff6809cbc1d542e21f47bd3516020f524cfe721478",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    }
                }
            ]
        },
        "1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2bc6300b875fbe18d84947f06ffe43fc4b4fd292b96cf7ec9a4edd07fa8e7bbf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2b601bd3a29fb4926ee66c1eb38eb47b19db894278917a407545a512b4cc47b3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:879d8fc3858c2092248ae5159c42624be2ea96746fab66c48dca19683b406f90",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3042,
                    "digest": "sha256:fc7facad9664f11b72d80abae873683935ecfbdda8a8d3280f54b27afc36a6e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    }
                }
            ]
        },
        "1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2831,
                    "digest": "sha256:7348dd4532f6a6e89c68dd61a502c90c6f9c5a62fc37c13e3244dacd140cfbed",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5996"
                    }
                }
            ]
        },
        "1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3042,
                    "digest": "sha256:7d28f5d9a0a8ee301dcec1f667efa49b86d857af1e79cff2425c056996b0bd2e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    }
                }
            ]
        },
        "1.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cc0a2ea1654167987eedd545ff0c89f223b09ee334384b70be37a66b5707c1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cc0a2ea1654167987eedd545ff0c89f223b09ee334384b70be37a66b5707c1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0716f28ca600585d6d5cc41699e0ca728518e5a3d68e1f99ecf06593bc368645",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b2dba4dfc08801d13aa66fb5aae8950facfbda7772861b1d67ccfb60a09a7417",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:978646a756582ad92993ff27a46b6e1e16bcfeed9f72eda80c48a75ad2e3e780",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c0204370e9e067b98650464ce60769d23f1c2b038779add6677acf6d7bb7afcd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.16.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:58527f4e6afde7560564fe967fb2576b05fe3d78b1bbd0fa8dc5abf2c33e708f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.14-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:58527f4e6afde7560564fe967fb2576b05fe3d78b1bbd0fa8dc5abf2c33e708f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.14-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:58527f4e6afde7560564fe967fb2576b05fe3d78b1bbd0fa8dc5abf2c33e708f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.14-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6314,
                "digest": "sha256:39ee94e04d2248f4fba49fa6d91fa81a001541efd26717f26de555171ff51336"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437057,
                    "digest": "sha256:a024302f8a017855dd20a107ace079dd543c4bdfa8e7c11472771babbe298d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7833856,
                    "digest": "sha256:289773030fdc98afe6cc53bdd0c05332ea8ff21ad836afa1d3042388953c43f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997205,
                    "digest": "sha256:81bb8b3399fe8dd0b83bd5e32a97e5183ab235d6fb4cc0b5dfabb20e6653e715"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51839910,
                    "digest": "sha256:9c63da771697b362929cecc84777e8cfbb716ff3d575b999854d83ada039b695"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68551770,
                    "digest": "sha256:6d2557f4f0ee3db984306fc7c932e483b700131b494b31b45d9e20aa16161157"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129142362,
                    "digest": "sha256:5fa2e8f47243e13f0fef492d268dca9b29ae4da5e885b3523968dd54870a2aa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:feaa232be10105b9a9eb2ccf9ca72c81de690a85e702923f8971c72c8c356678"
                }
            ]
        },
        "1.16.14-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:3821535397e30d054ed9ebbbca025652c60606b8a7a223a6d629ba94ac87f2a1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.14-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2991,
                "digest": "sha256:58b406bf9423b80ddeabe72fb4f3bf70793dbf0657192cc6205cafc5b015265a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103087119,
                    "digest": "sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:adc15674def080debf30acf1177204884a4302452d466db80d8f6400a458fa0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:ccebb0a4ad757b7f63005cd5fe885d35104e4306cbcfc69bdf0c70293e9512d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1040,
                    "digest": "sha256:774e94e58679cb82dc8f54b2c64b76a50206c1d78d98d054d7730b7496208de5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72126,
                    "digest": "sha256:83040b75f86cd67e010b3164cd3616a3cc20fb9f21bfa4aea9cd29d9b6a4ab73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:57c4c313932286b5467311978d27bdb09474b11338ac768044e5c919844efa87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1067,
                    "digest": "sha256:ac1d6178f5aafd9485696a1b26f44ae715480a1491b999c70a5ba581692cf331"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136428070,
                    "digest": "sha256:e9535553a695b700fb9fa35b734dbc74c1aff24af06e3927cf48259fbb151b27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76286,
                    "digest": "sha256:dcb8de81f2ff32c4018cfde66db725f95ebcabbabdd5ea4f7871631da06335d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1273,
                    "digest": "sha256:9116f12e1ff98d9d48e60e8d7a045618e8ee9f943b2a9df0500c7cd15b82dfea"
                }
            ]
        },
        "1.16.14-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8767e5a09f41a45a83b72a498c1e47e29970d0843dc48b5860c5b578fe57007e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.14-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6345,
                "digest": "sha256:8b738a8b44310b9fd01acf859582c89ac75b0809b1dd73db60d1dfb0e2e4b8d6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45381397,
                    "digest": "sha256:a834d7c95167a3e129adb00a5ddbaf5d3c035ad748ff7ee1273373d150457820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11301881,
                    "digest": "sha256:57b3fa6f1b88b95ac6adeafdb618011e672d4c9f5637b92be373276ee7e066dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342406,
                    "digest": "sha256:778df3ecaa0fbba90d3a7d88947a4376ebdc7e2fcf8a4b5ce43b3c699faadff6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49762420,
                    "digest": "sha256:d353c340774e155d838e2e0f0952201366cee28591b065b7d328fde7bc72e034"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57634094,
                    "digest": "sha256:d573d0dabd421a85bd9b241ee7a3a587be13a0812a2e5cf79d33c390786df08d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129143984,
                    "digest": "sha256:049cdf06ea5327384a49e1e6df92ccef8414b85a7bbde600e65ccf899cf1f9e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2cf4e249ad085ac4df1d825f22e62a4efd48dceece2b70ca14e109b7ed2f40a5"
                }
            ]
        },
        "1.16.14-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:6c6a09e06cd5b0d3f1e69117770161ec99175c719def3be9440f8e29f9112e18",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.14-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7178,
                "digest": "sha256:1a3153438a78a58b29a0d23e451582761767af3be5b946992e27a6bc8997d2b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 995381853,
                    "digest": "sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1294,
                    "digest": "sha256:189bc201c04fc2cd055a588a8995cc147f5f8272cb98ce93ed052a8e441d58ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:6b1bf442433834f3d4fbfaf38847613564a584ea4c7c5c4bf2d432296bb3bbf3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1326,
                    "digest": "sha256:a51bf30eb4ed0ee58ef78c2f0d3893cd9fd1f0a09227ab1907df0bf96567739f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1324,
                    "digest": "sha256:410046ff6e99f56a887941be7724a14e303abb3caf55af0872653a2dc4ada7f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1386,
                    "digest": "sha256:70bbfd7542ee9758dd3cf3dd4509b5d5806d71f47d112e43f6ed7c08d0c33801"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25483263,
                    "digest": "sha256:7dabb8021fee5b15bae04dd6be5e230a7169746a1a1b1d7163146726a5d7dbe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1323,
                    "digest": "sha256:0bdd0045a3343854a5eee83bfa8ca1c4d9541d3b449f98fb7c28288acde14c61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 392545,
                    "digest": "sha256:990d8af01aa2ab81e3897979edf3853e69cac6cc552741ccf7c4e3735cb0139f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1321,
                    "digest": "sha256:525679afef0ae65c69f9453152a73aed14603abfc227d500c07286d0b67a1b9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136845263,
                    "digest": "sha256:f053ffe3eda8bc4a3345a5dfda8cb79c77677a8fa0f45f73a3503b0ef933aa07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1448,
                    "digest": "sha256:887a78a9b577a20a72add2df038e91e404755acc99e14e802bf5b65d303f2701"
                }
            ]
        },
        "1.16.14-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:100a560d68def514db3356541bedc9680488dfa96d5e40d60596464ed3ba3bd5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.16.14-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7163,
                "digest": "sha256:7cc1a25b3ca327cb569fcf05e4e38f5806e315213a2b3120c5af887618e5e61a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2205612730,
                    "digest": "sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1381,
                    "digest": "sha256:8743492853680e7692b563beabe6b76c83d30e8f7205816168a256d6337f7c64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1366,
                    "digest": "sha256:80ca2f5c84b77e7668229f131b82010d25837c6121628e31da6503a72b3e0dc9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1420,
                    "digest": "sha256:45a1698888cefbe9fedf0855842e39baedc31e9e56f8e720aa3a785b9f00824a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1383,
                    "digest": "sha256:cbd835ea5214acfc30daac34f3fa8487a066ef5b44e2ba6b036f990c4adf9bb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1417,
                    "digest": "sha256:f7b660bce18a682bc73a721ce142666a282daa2908e8ad79bf17c066e636a5c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25456153,
                    "digest": "sha256:4e27fb2fabcc2dd979b073085d087ea719bea1bfb78d1862d752074b0bfca314"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1377,
                    "digest": "sha256:5ac3dbaff86faf15d1d35ca9dd45a6df1c9570f33d455f112840ea955a8821f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5978006,
                    "digest": "sha256:4a38e2ce253251b416040c04d48a153635432f8732bf1556870b22491afe8669"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1362,
                    "digest": "sha256:e15602686ad2714fb378646eaffa66679564ada8012aa9083285e26693de5bf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147109779,
                    "digest": "sha256:9b3554a272138e3672313a251fe8a2d1286b5ffbc2f1153cbfe1bec5b4ea6215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1543,
                    "digest": "sha256:315af85b5442af7e6ce2923095bb4f768b373b8c4772cea2630af59d9b53afd4"
                }
            ]
        },
        "1.16.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:58527f4e6afde7560564fe967fb2576b05fe3d78b1bbd0fa8dc5abf2c33e708f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.14-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:3821535397e30d054ed9ebbbca025652c60606b8a7a223a6d629ba94ac87f2a1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8767e5a09f41a45a83b72a498c1e47e29970d0843dc48b5860c5b578fe57007e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.14-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:6c6a09e06cd5b0d3f1e69117770161ec99175c719def3be9440f8e29f9112e18",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.14-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:100a560d68def514db3356541bedc9680488dfa96d5e40d60596464ed3ba3bd5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.16.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cc0a2ea1654167987eedd545ff0c89f223b09ee334384b70be37a66b5707c1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.15-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cc0a2ea1654167987eedd545ff0c89f223b09ee334384b70be37a66b5707c1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.15-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cc0a2ea1654167987eedd545ff0c89f223b09ee334384b70be37a66b5707c1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.15-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6268,
                "digest": "sha256:efd3ef730e9a990dd7c758f743fb534e7a4d963c524cf613dee0e01c96764729"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437046,
                    "digest": "sha256:1c9a8b42b5780ac49c71f392c9512c0167ecc23de9b30b1b5f38747b73097d1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7834052,
                    "digest": "sha256:163066942b43a00ba7f4674c4c1ca90eccc8d99366a3dc47cb64e06ad79c36e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997298,
                    "digest": "sha256:cf70e03a8272d87e65c7b1592f97f6e739cf1f5d13cc536670f41c28b086b4cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843267,
                    "digest": "sha256:86c5ff33549498a7154441116b5843e184c1f4441df2eab519ad2c498cb8a716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68552026,
                    "digest": "sha256:0834123680bb27c1c61e9f04352487703685eb5191097c208fe45d25f7810a7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129200112,
                    "digest": "sha256:c296214f571a3248dbfb386d5a80ca47afa03de1311acdcd0524d9ea26663622"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b4bb28ef8d4520a0b76a628fa35c16e84f2f32cd94f5016d8021c140205975a1"
                }
            ]
        },
        "1.16.15-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0716f28ca600585d6d5cc41699e0ca728518e5a3d68e1f99ecf06593bc368645",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.15-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2994,
                "digest": "sha256:a04c3fa547c22bbe40bf51e5bbe8ec52371a5c4451ccd08c30cf514444cc4b79"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103087119,
                    "digest": "sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1073,
                    "digest": "sha256:8131c113e0b6c2fea600fb0654a93728548b423ff22e4817de0153a382ee815c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1043,
                    "digest": "sha256:076d2239ec825400f5565c0eb651e9fad707ebe2b7602ae7aa066ecd5d835d69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1110,
                    "digest": "sha256:3fb26618c5d0ad689101196e485c51ce0ce40d32c5003b976e33281a5c363968"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68056,
                    "digest": "sha256:cf27c5fc9ca4440c86fa39f885c688a5f58fe84f35e832cddbca07adba9e68b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1065,
                    "digest": "sha256:3bd5e9eea03bf8147f392859f62f098af2632fffec4d77b3dc68997f3e8f31f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1036,
                    "digest": "sha256:7944e4eb4f229fdd4f967f400c448a2205806b698eb6d2f00c2f8022899d856f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136487518,
                    "digest": "sha256:70ab6541423e290a6917f268ea2366a75b46eb1f47d573973ec0a5e861320660"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68408,
                    "digest": "sha256:c2dc9d5d1a8c66d2b1fe0919772cd24f0eb0eb0b13021b20ea8d2e1bc925a2ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1301,
                    "digest": "sha256:735166e4c1473c41161d347e660f091e70f7cbed8816c45dfb3f04a973d8c546"
                }
            ]
        },
        "1.16.15-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b2dba4dfc08801d13aa66fb5aae8950facfbda7772861b1d67ccfb60a09a7417",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.15-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6302,
                "digest": "sha256:54efe6318234f32f632c41c6e0e0d83e83f9e69f66cb18db822406445340b4b1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45381330,
                    "digest": "sha256:ec52bb9d0b765b0726e476d07a8d9b2f808cf7b380f27c1544afa286fe5578cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11301983,
                    "digest": "sha256:f289049e62eb62ae7bd7a8f612cd5b42f36d423951256750f08baa96922b8587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342352,
                    "digest": "sha256:1e926c3d7ccab64c93f5552646ea61693989e06e27abf8cfdcbd0aad8e78c71d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49762476,
                    "digest": "sha256:fd63791ebe323af1573a61d3e6c93bcf5c12da3b8603289c2b9e8825b045bd3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57633953,
                    "digest": "sha256:2bfba05979e9b34315e99ce2fb7d1d416bcb46d3126ad2182f7b9b6bff403d76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129204023,
                    "digest": "sha256:7b79befcfca6c3da0fed7b454226ce9f6d28e28da548e4cb9d5beff7d9fedff3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2c96b2d1f70ef51d0ed3fa430413a3d41d24cb1f3e68cfe93079a93230939c6e"
                }
            ]
        },
        "1.16.15-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:978646a756582ad92993ff27a46b6e1e16bcfeed9f72eda80c48a75ad2e3e780",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.15-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7177,
                "digest": "sha256:4243bf051ef7ad17dcc6109d816f9fe22d314d00e0ee5c59be82d02abe33cdad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 995381853,
                    "digest": "sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1296,
                    "digest": "sha256:390a4bef452711726a8319aed6fe4d8d5e7cf9dfb7c0f2c6446e3b8fda9303c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:19a6ca4fa171005df8891ee10fb4bf2a78aa2608e333ad17e1f93e85c665d84b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1295,
                    "digest": "sha256:280e24772b151693bbf94e9739f0a542fa7a2c0d5d87fca9b2d0a7c35b256678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1343,
                    "digest": "sha256:0fbe1d769ca7e449a7682ffe2941c7de8be1e8e594b900ac256e67c623984fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1332,
                    "digest": "sha256:03f37e76968924bb4fdbaf9bc52623c17d47001b15c7a0599cf71b04d17c576e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25478954,
                    "digest": "sha256:21649abc1a99a04f1a63514f763cca609c030608bd79e0c1d83ab52ce201946a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:7d1738b3e5d47b3651cb654c3faa1833c2e09a7469f828db3e783c6771b0a095"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 387734,
                    "digest": "sha256:de986d6f5bf9da0a887eb73d7487a2c3bf8d25f4680b4fea968cbe473562b26e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:a21ada49a0318e57cf12116edf1a8d80ead2335bccde9708460ee9411ce5a58a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 136911422,
                    "digest": "sha256:48114e4728d15bec0ea7de4985e5c5347a5b10d4906be66a6a7d19abd84e47b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1448,
                    "digest": "sha256:74c9ffac5b21ffb7b0d0a290940e7c9c2c49120ad1da3b307eeb1ef7a6f33dcd"
                }
            ]
        },
        "1.16.15-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c0204370e9e067b98650464ce60769d23f1c2b038779add6677acf6d7bb7afcd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.16.15-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7163,
                "digest": "sha256:76ec99f120871753ce214557a9c42c8a75b23658a3f601e8e06703bda5ef5ca4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2205612730,
                    "digest": "sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1405,
                    "digest": "sha256:f894eb65cfb795ca47eaa79c68309e964ad4c96bd2fa4057bcbd2465f46973eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1411,
                    "digest": "sha256:ad1abd8ec49141e396bb8ee8496ac2c6a20fbdc2b2bcfe18ac7f60ed351dde66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1407,
                    "digest": "sha256:fa1500ac89e3ff053e26d1f1a3ab78a6b2cfbeabacc324cdd839f49b816cb9d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1428,
                    "digest": "sha256:83359c1ab48e3e6bcc81bf46e49ceb820d9f2a054c328f7c737e7129a880f65a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1393,
                    "digest": "sha256:bfb295cd857769f4a8ed27d0d177d3a83702e0f808bc3e9482f4022e84f647f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25459155,
                    "digest": "sha256:aa0c31d1d58848e4db1b05a119d583652d0d7303b034e6ac9c10017c6bcababb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1408,
                    "digest": "sha256:68b58d2fb50843da061678e1e2e5811957c9d2e6d2713c49c478625baeb61dd0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5971838,
                    "digest": "sha256:3c3ae1dcd1f1d92b158b6e4e24d1d1ca52669031f498aedadefcb8bb470579c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1416,
                    "digest": "sha256:527ec1d692d967903bfe78e72f075cd18191bc39623263962f785ca2d09ba425"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147028458,
                    "digest": "sha256:23be6a3128ab11e4a276c34fa4615329f9e94c616cbdf8259914243802085dc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1558,
                    "digest": "sha256:129e324377d6290091d523f625347e675c4a94352fd1a0238a083f832d050e94"
                }
            ]
        },
        "1.16.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e9cc0a2ea1654167987eedd545ff0c89f223b09ee334384b70be37a66b5707c1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.15-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0716f28ca600585d6d5cc41699e0ca728518e5a3d68e1f99ecf06593bc368645",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b2dba4dfc08801d13aa66fb5aae8950facfbda7772861b1d67ccfb60a09a7417",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.16.15-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:978646a756582ad92993ff27a46b6e1e16bcfeed9f72eda80c48a75ad2e3e780",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.16.15-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c0204370e9e067b98650464ce60769d23f1c2b038779add6677acf6d7bb7afcd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40aad00bce77945ec13ee363a8b16c471824ee1ee400fac7ea06c08127fa2550",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0cf6d0a4a675d14bfe24038b35bb1e166740134164e6252cc72c71fceb6858c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:66d81434c7db5d9a42b510ab80f6ba4853308b63f6375547414b6313e209a665",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40aad00bce77945ec13ee363a8b16c471824ee1ee400fac7ea06c08127fa2550",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0cf6d0a4a675d14bfe24038b35bb1e166740134164e6252cc72c71fceb6858c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:66d81434c7db5d9a42b510ab80f6ba4853308b63f6375547414b6313e209a665",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:421fa96fb0c7081a2e1e2c0fc616badaf8dea15d6524cdf4205167708be8ca78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b48753ad08f375c81de30c0fa736b70fbd244f5c7fc381962c08521bb3c5d304",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5f663ee47fe9ea7a9f51d54245166d06ea9e87983b4e36fea3e11ed661649a55",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:003fb637c2fcb5a498ba8407197d244d7568c0ce7078772342d0f011ebf32592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:859ffbaa3a21d358936843b8b45b2ab734126b86e2d522b8194938aa3d3093c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:003fb637c2fcb5a498ba8407197d244d7568c0ce7078772342d0f011ebf32592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:859ffbaa3a21d358936843b8b45b2ab734126b86e2d522b8194938aa3d3093c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:8afcf497275317a0185bf5ce1fd7d3b9af8ebeb5455a8d25eb696eec368b9d8f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:1ac99cd70fb5cdfecd282c966c094eb60f6cbc9b899f75c464268a5332219327",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:c36a714b6fac9d57e6558f9547ed7a8cba40441b682443eec6160381d97934fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:cc9f329113d4604f38cbd2936915f7e1ef2184eb5d9f4a850af989cbbb7bcb58",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:77a003eb62c5f76e9d7b0e6fc5d68d06019ab43262ed0d170f2cb1b252b676e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:83391f96164101eb4e3dd8a3bb534a3dc465b12e35ec9696a0d36b881d45e057",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c237bf519c2291026ce3c55869125ff53eceb31811809e04dc04ed151bd68e40",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:5357a151849f2f68237129ff986d22e3b0e0da2f4f42bacc74ed9f873c8bdfc6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:291f4129e1b74964c9bc2780c0baf6b807093e0bd49abfa92bb92266ace5a56d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5246"
                    }
                }
            ]
        },
        "1.17-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:af0165b8daef3835d8eb89181aa9a6bb2920cd3547f5342b9f6b981bbdac95fa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f5c46cc5d281d39a889c5d60d27cf30fd989885af9262f7ece95ce844b08ecff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7b2d6375e271a9b8845ab90dba15fd074acf46cfe369e0d17c4e17ca550dbec3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a368139323c36abf923504be2efb4feed64a5a30e39304675f31f1df68443ce4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f5c46cc5d281d39a889c5d60d27cf30fd989885af9262f7ece95ce844b08ecff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7b2d6375e271a9b8845ab90dba15fd074acf46cfe369e0d17c4e17ca550dbec3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a368139323c36abf923504be2efb4feed64a5a30e39304675f31f1df68443ce4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f5c46cc5d281d39a889c5d60d27cf30fd989885af9262f7ece95ce844b08ecff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7b2d6375e271a9b8845ab90dba15fd074acf46cfe369e0d17c4e17ca550dbec3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a368139323c36abf923504be2efb4feed64a5a30e39304675f31f1df68443ce4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6764,
                "digest": "sha256:b260dd301c8442d2e134eaf7ddf961d3767fefb6524eda344bcf4f8c5f46fd9c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54945622,
                    "digest": "sha256:67e8aa6c8bbc76b1f2bccb3864b0887671833b8667dc1f6c965fcb0eac7e6402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5155721,
                    "digest": "sha256:627e6c1e105548ea4a08354eea581f137cf368d91aeb0ad47dcb706fca54fd8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10875052,
                    "digest": "sha256:0670968926f6461e3135c82ba2c0ad3ebdedc0d0f41b18bda4a1e41104b8be8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54578468,
                    "digest": "sha256:5a8b0e20be4b4a332bc3d90b9903a5f3c0664b440fd9f1d2a1db0d4b7e6e826b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85629628,
                    "digest": "sha256:8d7de92f7358c93b034d1ff8c47d148a257aabb75e9bd39051c380e7b6c9cd42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134991796,
                    "digest": "sha256:ecd2c2c49a9abc86c49d6c98881ff07e22420178b46cb4ebe4b2b5056d37d0cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6ed1f02663d7fcbf5c3f68dc8ffdd0b47bfe19fa0c7afeea25fe33da7ab739be"
                }
            ]
        },
        "1.17.10-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6767,
                "digest": "sha256:abafc39f42d9c34d944053aa1b0c8f5e11bad5c6bbd14089a03f8c381bae739f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50134069,
                    "digest": "sha256:ba38f9a6c66968e207a7ada348a2110e3be0ff117e621d9e10ddd7c4becc0d2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924901,
                    "digest": "sha256:f71423015d7b4f718e54ff1561cc06bb4c8357baedc23b49d25fe99cd4b0ae41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217886,
                    "digest": "sha256:dd8f92194faa0a66e5bd160b229941428f0b0387c6e313e4f1f903c678fbb17e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50329744,
                    "digest": "sha256:c410c75a05c2df4ed485cda22fd35206e0ea4b9fbc9f096b11ed5adc6f83fa1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64580914,
                    "digest": "sha256:673648adbdf7d738d20970d66b72ac5718a62faf0a20f9a1da22c4205f3b117f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102975104,
                    "digest": "sha256:3470aedc14e720b733a14bd381352abea11c7858a662ebb65b287a80854585c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4d8c0a170d15926dfac729267cdd392b52460a7be517201aaabca809a2b0ec31"
                }
            ]
        },
        "1.17.10-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6770,
                "digest": "sha256:9c4a08f55ae85f0392ab58ad87b526bc1be710eb677e562a9d07da640e0125e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53634337,
                    "digest": "sha256:3a36574378e6cece2dd3a839e1c0220eaccc4063b61d7481d1a19d3990c1f2c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4938615,
                    "digest": "sha256:a61d3345afba43846f3e638752cce2f0d1d47b21cc667ba08b00db10767a4702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10656992,
                    "digest": "sha256:3e267d6aa58f93a513352a3b46c7addbf9335d7d43bfa4f1df4026d21785181c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54672822,
                    "digest": "sha256:f647907d26b879e0d43f6f4f0807f01e4dbdc034edcecbc988f6033cf401becf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81067443,
                    "digest": "sha256:05019f3f63484511d58e0440ac437b7e0c03fe81e93f13956756eefdd16eadf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102734171,
                    "digest": "sha256:6697f3870f3a447cfdd519186b74a3222ee998d5e9de703652b7c47928525b52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a780cac5277750315e0edbba0266e981c6ebf888cd2ab065b2eddca4f4800365"
                }
            ]
        },
        "1.17.10-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5f06574a420934897cfef09b3c56ab6fa43150091106d72f0752b28dc18e5313",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6a5e88d8ce491afeb9735369d521d1cf3ad2a09444c4f366c0b17b95f71f6108",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4614513dd86415568af3e12e9bea1cc2976ece31488a8c83909da76e0ca7fe68",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6765,
                "digest": "sha256:ecac3f20ff78a6f37e551fe7f0432ce3fda2b0663f203975966dbb3c5ef2a304"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437966,
                    "digest": "sha256:b03a94565ecb6e02edf716307f25a0ea5090e3e2f7acec6a3687b95415378a30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856436,
                    "digest": "sha256:ae7bcede80b1916d73be58ae0a2af8321770c4ce0c8ada05c39271e292355325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997259,
                    "digest": "sha256:37471fc83c2dc382a8aec5dc1c1f0f2f8156f4df529cd1aea7647cbaee4b25fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843657,
                    "digest": "sha256:0162432a49c07aa492d3e1031af58a9a9f9b22acde859829434e5a54d019aa1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68576219,
                    "digest": "sha256:bb73c530b872e32243a8614efb7fb7c27471d28ed878918ba4e6cce7ae376547"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134991842,
                    "digest": "sha256:ae5d86d5c8fe0b9bcb207137a28582b059c8c49b31c867bc8930f0b7101f466c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0efbf297bd93f44e8ce85054e6b26beb6557cd8e3bba536437e21b4eee8e3675"
                }
            ]
        },
        "1.17.10-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6769,
                "digest": "sha256:0d9f467ee519386747c3c148a7ce18d1022076afe30aa4c560f7b9b377465c6d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45910176,
                    "digest": "sha256:f328f2671b27c760193a9d82808b176a8a7420205e8eb884e1fee20d2ac57ff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145025,
                    "digest": "sha256:9e554a91160b4bf86ab199d7a5f5f105c5ffecc37b098c4274d98c264f677799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343816,
                    "digest": "sha256:8c1b07ef419c0604851908ed718983760891b21a649a1b8758b871522e7d3e48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47359230,
                    "digest": "sha256:398961d3cf225ff82b93bd457012e308b756c455d1dbe1191bca51a54483f1d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53049823,
                    "digest": "sha256:ec6fc43776e7e9d179c8aa5870bcee0e63286a83d20c454a7a55319b143b9b49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102975090,
                    "digest": "sha256:1fde5b1c9707260add989403ca9f22ffd25bab18ef307ad80fb0273c444948d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:8ca4f40a4dc8bd40cb2f0f0de1a6b84b1aa8e9417f35dd232aa989684c7aa2e9"
                }
            ]
        },
        "1.17.10-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6770,
                "digest": "sha256:cca41b3190c890fd5972573b0ae3c80e90f65296f0a8468f07108a66a49735bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49228300,
                    "digest": "sha256:5528d23e3f315103c99c14258e007a025d09bb4fd587c2d8a32d6dbb6047b891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7719789,
                    "digest": "sha256:64b2d66a1dbe5960c6de4181ca3512467d3303dfb9cde3d92ecf7a85111cf68b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9767329,
                    "digest": "sha256:ba9244ac9f9851b43ddc1032930666d339c3a5d9b934e2ca42ecd2e8ef3dd680"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174787,
                    "digest": "sha256:06885dc77f03f05a5f98ceb35e871f027525d932d32027ed9d4ffb0cbd29786c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62442254,
                    "digest": "sha256:a9c10bcf5bfe081abc3ce1237003f862c361cff245b8977e9b4c8f623a1995a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102734061,
                    "digest": "sha256:ce3e0cff56537d0248581bd34d77e9326981c29019a1d0536eef535cd5720f6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a780cac5277750315e0edbba0266e981c6ebf888cd2ab065b2eddca4f4800365"
                }
            ]
        },
        "1.17.10-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:4a05897cda960362dd5c52181c9dd5ceabe1b0817e6e539e2535f0b98c0c174f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:3d20e2f445ebb8d784164e86a7d494eaa5ace400bf10493fa30cc1f6e447dc75",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.10-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:4a05897cda960362dd5c52181c9dd5ceabe1b0817e6e539e2535f0b98c0c174f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:3d20e2f445ebb8d784164e86a7d494eaa5ace400bf10493fa30cc1f6e447dc75",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.10-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5289,
                "digest": "sha256:c4f2f4f84f2008604fad525c4bc39a72d2c292cc17f25641bb137cb602b7d9e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66341387,
                    "digest": "sha256:1bc9e758c51a40cd73027fc05e0d70ddf8e0cf6f06a80a00c5b3da646e7f73ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70736602,
                    "digest": "sha256:66e3fd28a91abb6a7103e1d01e15b641f11eca800727b957b57bfb653fddf816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146430667,
                    "digest": "sha256:3fa362c86a71f33504be1caceb6f41d696f1ecba17c877e6443764db82a7ca66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6ecf5100f21306334d25432ab8304ff25aa232614d89d8c0914dd5027a661a4a"
                }
            ]
        },
        "1.17.10-1-fips-cbl-mariner1.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5280,
                "digest": "sha256:ae85e2fe26920b96e8f320fb442cf3389a90247871df55e7ee803f7d64926a0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65053549,
                    "digest": "sha256:055b1e9976930afc92226baf0eb7fa1e3b556546516a565d5e1e022f927b2010"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61618701,
                    "digest": "sha256:e7f6445dab7fb863ccb2f1a0cafeb6aaa4b77957f3982f7e345f3aeb278d8094"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107406949,
                    "digest": "sha256:960c3d91175ecda95bfd938cc84ef4a2fa8f1848c366f8511c2ad8d58601cfaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:9dc884242c4ec8dc07bdc0c6bb563ecdba2f3e1164d085026035ff9a77ec3882"
                }
            ]
        },
        "1.17.10-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:3687fb667fbbc8b146593476bca29199f2b259b6324989984c23c03ee40dec76",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.10-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2999,
                "digest": "sha256:d1e264f58e4a41348f7f43fe2bc62dec6bde843bfcd442f43143f646aada2857"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103133833,
                    "digest": "sha256:6626f490e738e10ea5e31ff2643e3a8c372e076d9030c77fac37537dbf12b73c",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:6626f490e738e10ea5e31ff2643e3a8c372e076d9030c77fac37537dbf12b73c"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1043,
                    "digest": "sha256:d315be012f079d9239e845c18be8d2698903d213c7dc2e50a75cad628a714e2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:7fc6638e2c8f26ad78f1833c8d3050dcff165693610d6fec56f0052a9a11617e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1032,
                    "digest": "sha256:d12895b9bab90082af736858eee8978b43dd563ecf59f547e08a9281655b4505"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69947,
                    "digest": "sha256:1cfb557e3d2be7918f2b67b563f2f62c057489ba0ed2b31a839f883d3cc3b18d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1035,
                    "digest": "sha256:6a019a5def480054c05294505233f1bc66c5100481a846f6a607501353fe6684"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:c314864b4ffccbbaf001773f976225b9dfa267c001de6e71238fdadc6376d2f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142411871,
                    "digest": "sha256:5e95fac681f417bc99af21a9337bac7ff5cda060029446bf924e88672d03c27f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68225,
                    "digest": "sha256:c2521381d5ee0bd469cbfae498a239c4df3ce175ade3456c23c132ed638d564b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1237,
                    "digest": "sha256:59d6836306836f15088949f205cd2d8cb1bf3997e58638be74e7a98dd3d3bba1"
                }
            ]
        },
        "1.17.10-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:229edbc756b95f17dd54b4c248f08b0d515df1a07c45b1ec81a9517d8548c180",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.10-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2997,
                "digest": "sha256:d4f5d5a7e2e61ae212adcfdf3eb554ff28677cc50ae8eef1918e0508d3fe8640"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117687017,
                    "digest": "sha256:2c74f0842c5a8e9b80b9e2cf64e1ab10a6fa67951f28cff5fee060b88128564c",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:2c74f0842c5a8e9b80b9e2cf64e1ab10a6fa67951f28cff5fee060b88128564c"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1058,
                    "digest": "sha256:fef6296ef64432c182bebeee282e38744c130a94ffb658815e5648409a0055bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1051,
                    "digest": "sha256:8e1d0db839bc23c91925f380adaab3e667564bd4d04d3a7d83d4051d2e5e08bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038,
                    "digest": "sha256:5c66d1514e0162c8898f1bfa2a2565d17357bbb449b550db49ddd76aebb991e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95832,
                    "digest": "sha256:c99a9bc68c1fe30e8df4840047766cd7b2fff9536adc6d9ec91448a125f5703d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1036,
                    "digest": "sha256:39bfd77e34195655ccd11c2ad1d66345bbfca5214d38156fa2f73cd63ce48c91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1045,
                    "digest": "sha256:01a6f50821f5427cac5a59b8d2cbfe8359ef6f15fae3feeeeaad78b7eaf1d0ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142431176,
                    "digest": "sha256:e04b415b18da7dcc0a90b7b2b56acbe8a19340eca486b1b263bcd7d1c1168536"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93927,
                    "digest": "sha256:92d21907c279eb70accc6a5a3873fe4897980f392822b4e1ce7259b5ea078197"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1209,
                    "digest": "sha256:f913657c09aaeac1d210a0c8426962dc5158baf581461a5f60196284c8204d40"
                }
            ]
        },
        "1.17.10-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:be4b308617d5a4c141780ea91aa07b9fca0960ee112a816fa4b5373d7a4ed57b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:93e34e214e162c61e2887dd01db5ce40f32faaac8182fb432450069a202d3216",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:610e72b3fd42ca5c03464c52a8c3f0b02294e847b2e984e26842de7b2493f1cd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6797,
                "digest": "sha256:e4d09fe155c9d9cdc573ab101350ec84fa4734c2ab9ddafdf5198bed26acc04d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45428005,
                    "digest": "sha256:06e39e28714dba08fe310ca1aafb43905427729ecf8e9586f811a7e5062fd09b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302273,
                    "digest": "sha256:de2141afc44a4cc9b8f9bd9ae1ad4ec8921fdf75b6be9b192b60f1b7f8469919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342926,
                    "digest": "sha256:38533702160421fc5a777d84e162c51816a24426e58139f426e8156fef69d7a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765289,
                    "digest": "sha256:60f25117aaebc0a8e2452e10a973f1d943fca50b033292ded9826449657fddba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57647089,
                    "digest": "sha256:5d18591ec9a2627aaf1ccc78f73721256bff3ef9a83dbf775e76b52206115963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134991745,
                    "digest": "sha256:e08b4be85173c30f1493acd45735975bc5f23c3378dfe5884bc50f6b1ed11755"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f8dbd136aac6b42e5b0037eb9012a3461e8b7dcda72023983264c22e57044b70"
                }
            ]
        },
        "1.17.10-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6803,
                "digest": "sha256:974c0af977b9fb420af2019e698a658852ef576f5f52879d4f2775433c5adefb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42151163,
                    "digest": "sha256:629c5b996bdb9cea71f1d194d7a244d4aba271133bad4f5b88bfe38c4626349a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9956859,
                    "digest": "sha256:9fbf25ac5d0e3ca11a0fb961c2ac0f897f1982389c85b6e31ee0fa63a0293cc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921810,
                    "digest": "sha256:c2a3f9738e27d03b85306ba8927ec41f0ffd375d26fc501906f097e639a1047f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128018,
                    "digest": "sha256:57e17eeba6c7bc95de3a6d3399ff5b2580880dcdd7052a29dae70bb9f332a67b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45975483,
                    "digest": "sha256:987f88b0806c69f185434b79bc3003e5106fe909625608f9fa1dafe13a49fc5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102974895,
                    "digest": "sha256:8e1d12c9dd23314ebade80a9e881e442344ac6cfed8680be544a5e76891e39fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:eb0f148fce5c117a421e35de776d9141c3595519b23192f44de8a3d57358edbd"
                }
            ]
        },
        "1.17.10-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6804,
                "digest": "sha256:fdbc13cc45475db9cb3f98ba5f040779c4b14b86c155daefaf483d434fe465fe"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43212478,
                    "digest": "sha256:139065d8f4553df403babda56f830c32aa1f3e57f18d2145a3179468921a4bb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217776,
                    "digest": "sha256:7d0acfd1725613d968a54b7fbfe1f70f24b8a0dad792ad3cb28349035f7736fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874525,
                    "digest": "sha256:002c314192ef0350d2ac1d1e49b4fddbc49dbcdc609e56e0e2567ee2dd37f0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47735546,
                    "digest": "sha256:45a0592b38ee1d873cc3681a7998f4ccbb2745e34ddf1d93c35a1d299949facb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49039311,
                    "digest": "sha256:88fd00d0504f7184545f925a08e052f2acea9091350c9545b6613f2e3c016e95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102734159,
                    "digest": "sha256:34ca7ae1cb34d01b89f0f9323a4758bcbfb9feccbd3fbf7f76a517e8353cb61b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:8ca4f40a4dc8bd40cb2f0f0de1a6b84b1aa8e9417f35dd232aa989684c7aa2e9"
                }
            ]
        },
        "1.17.10-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:6472f906e985b4b72989894ca2261e3432a39b882d746a8fb57278d522d88364",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.10-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7259,
                "digest": "sha256:73a82c3dbbdc461ad4c5c0a69d24a59d4c34ba4dcfc959bec59bcbfbbcbd7950"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1877166088,
                    "digest": "sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 626889777,
                    "digest": "sha256:8b534d64a7c337eb8a23b425e4f598cd3e7407ddf8c7b2f714d1e7f7ed6a04be",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8b534d64a7c337eb8a23b425e4f598cd3e7407ddf8c7b2f714d1e7f7ed6a04be"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1335,
                    "digest": "sha256:4587bd787a1f70df25b5dce703c3ebf4d49a7d88a2fe3311bd0aba21d1258939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1271,
                    "digest": "sha256:e9c5e9764539281ea3fe5fa8ac592990a07001558d9eea9ceba67df638aed436"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1367,
                    "digest": "sha256:96689708b0f8ba6f764431c9a41328859bee1b3bbe3f8254aa939be9995a7243"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1309,
                    "digest": "sha256:87202f11155504c2a01980a09d83878c0a4b94db98eb9ee0ba81a2c4be530d53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1314,
                    "digest": "sha256:a3eadcb785bd644dd02a6c3aea7ac2f4440f5e2048dc45a5a5c681d479a9d505"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25587004,
                    "digest": "sha256:fdecffff16c960c6ad35e8c1cc63bc0f86af43a54e01dc5c2f1ec28e3aa2b433"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1286,
                    "digest": "sha256:c39ed57432fd64bb29d3c65a4f80b0234966aabde94540516fd6e53581e175cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 374210,
                    "digest": "sha256:5fe09ff8d2b39882ac925859ca98dd78254c75fbcfdb736db9f3b28d7f10c5c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1275,
                    "digest": "sha256:999c7bc0f4294bc286ad63198f76b7d86b240c17c29881426d3b94f23eb6cae2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142826957,
                    "digest": "sha256:5ce2ba510a52d538c77103867fd643a9f48fc94fabff04d4d60b32bd1bdd7bab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1448,
                    "digest": "sha256:1573fda313a5255d9838bb3aba4faa34749435865314101347dc580c38b08167"
                }
            ]
        },
        "1.17.10-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c6c70a95d414af9835b15fb3c1b29a958536558f232a1ddb2c97255a4472564e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5125"
                    }
                }
            ]
        },
        "1.17.10-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7260,
                "digest": "sha256:9a6d240f37278928224140d52c4d934cc9308be19570990053b5117dcd8e67ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2208956366,
                    "digest": "sha256:8e90f10d7f367e1134c0a79f47fef5028828d636674e0e3290d85891f9f95d62",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8e90f10d7f367e1134c0a79f47fef5028828d636674e0e3290d85891f9f95d62"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1410,
                    "digest": "sha256:776959e4f8d7fde6af32e554a15989272f69737273fb51cb4353061c5222db83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412,
                    "digest": "sha256:f5aa967603cd53ecb5b89bab2cc083cfcbc0fd21dc487c75a6b948883d36412e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1411,
                    "digest": "sha256:5d2cb7dc7079ef72b0c7696ea9e9094af508bce806200403896a53193f61f3f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1402,
                    "digest": "sha256:17f53f7249ab29bf8d4c463469ed3fa97288045ad61094042cfc643a43b28d36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1423,
                    "digest": "sha256:86214b91accabcdd70c456e7ce028245812a8e6597c3dbc66ed74eaa94e452e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25427868,
                    "digest": "sha256:d1abb667074e98ab7c481861a3c45e999062fb49b29048a96239444cb4548158"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1409,
                    "digest": "sha256:b399e7ea223f94585fbbbdef15da96eaf4dbeafcf0af08490ef5dc6a193b23b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5955538,
                    "digest": "sha256:92d885562dcb3d6ba53953287635130e7fa7fc23f437e8c75bd19aa42b716ba1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1373,
                    "digest": "sha256:ee97c545181c7be7be31a761515a9200c031324e4d70d5ca82e4acee4cdffeea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153042856,
                    "digest": "sha256:e4d0807dcfb6d707106fa5e5d387f13287088d6e838c675468ee26915bac082e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1484,
                    "digest": "sha256:43b581a6e63e23b9dce34a5979a1a9aeaf0ea1a499efccfe2e4ad78dcbc4f53b"
                }
            ]
        },
        "1.17.10-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:b8fec6c92811c947c409ba75d27bbd97a7d9e2230ffac9f9c68d00ccbf6556d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.10-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7259,
                "digest": "sha256:c823cd62382fb9b325e3507a039956b061472861bc5f4fa96c709149bc91ea8e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1436863614,
                    "digest": "sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 800671635,
                    "digest": "sha256:12fb50a031bdc8d2b65d86d694a4ed20e937852ed1bd3c433d8f2f60279cecc7",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:12fb50a031bdc8d2b65d86d694a4ed20e937852ed1bd3c433d8f2f60279cecc7"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1300,
                    "digest": "sha256:86df0a5781290ee1258111d5cb1c6e22be0af3df42b6ee56d60f8acdf6fe6717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1277,
                    "digest": "sha256:7fd26e4f5b5f35248e8c128f396371ba278a5942327628f68fa7b597ec391606"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1272,
                    "digest": "sha256:20726efd79b75685da0ebe6b989b4edd00e067a5841c55746a20f405e90ae1e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:bc697a169d112fccd9adc01cb976513d0618594683df25922916f3a5cb4ff2b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:ae0ca56ffb032759aff05c798fff1b12138286fcd82df413093cac76101b729d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25698911,
                    "digest": "sha256:4be6c1d3269d2a21b0b7cc83214d62ba6781842a34e5dda0825a8d3db85044f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:e15292beee03657133fb34e7d6069f2694e6083822d11cd4f019d5971a2dda2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 585944,
                    "digest": "sha256:c9d6d560902c592b3b25242106f1a98e3c356d6dba7b7f6e10cfbb9eed316e83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1277,
                    "digest": "sha256:4ada58feb7298c0e83a762c090c7827ddf5611ec37442f90ed8171e98c9f33f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143078422,
                    "digest": "sha256:8f9fa82116c80e0e93a5439092fcdc9742aa5e3df2a4d59612505ce98e716bc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1420,
                    "digest": "sha256:3c5b6d1fe94430fe20f009f97bb9b259f2be8fb56df78a30ca59450fba4fa64b"
                }
            ]
        },
        "1.17.10-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f5c46cc5d281d39a889c5d60d27cf30fd989885af9262f7ece95ce844b08ecff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7b2d6375e271a9b8845ab90dba15fd074acf46cfe369e0d17c4e17ca550dbec3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a368139323c36abf923504be2efb4feed64a5a30e39304675f31f1df68443ce4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5f06574a420934897cfef09b3c56ab6fa43150091106d72f0752b28dc18e5313",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6a5e88d8ce491afeb9735369d521d1cf3ad2a09444c4f366c0b17b95f71f6108",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4614513dd86415568af3e12e9bea1cc2976ece31488a8c83909da76e0ca7fe68",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:4a05897cda960362dd5c52181c9dd5ceabe1b0817e6e539e2535f0b98c0c174f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:3d20e2f445ebb8d784164e86a7d494eaa5ace400bf10493fa30cc1f6e447dc75",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.10-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:4a05897cda960362dd5c52181c9dd5ceabe1b0817e6e539e2535f0b98c0c174f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:3d20e2f445ebb8d784164e86a7d494eaa5ace400bf10493fa30cc1f6e447dc75",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.10-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:3687fb667fbbc8b146593476bca29199f2b259b6324989984c23c03ee40dec76",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.10-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:229edbc756b95f17dd54b4c248f08b0d515df1a07c45b1ec81a9517d8548c180",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:be4b308617d5a4c141780ea91aa07b9fca0960ee112a816fa4b5373d7a4ed57b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:93e34e214e162c61e2887dd01db5ce40f32faaac8182fb432450069a202d3216",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:610e72b3fd42ca5c03464c52a8c3f0b02294e847b2e984e26842de7b2493f1cd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.10-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:6472f906e985b4b72989894ca2261e3432a39b882d746a8fb57278d522d88364",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.10-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c6c70a95d414af9835b15fb3c1b29a958536558f232a1ddb2c97255a4472564e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5125"
                    }
                }
            ]
        },
        "1.17.10-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:b8fec6c92811c947c409ba75d27bbd97a7d9e2230ffac9f9c68d00ccbf6556d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:43a7a2d0005479b7acbf29bc3b2105489b11248df7bc20e709f628c8f24e7e40",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7de614a49a8f11dd472b23f3ad6da488f7245eeaac9899461ace7c61d4149f30",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1c564e598febe9a1799823f2e7a3600a6068f04e79722cd2189b5246110e06eb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:43a7a2d0005479b7acbf29bc3b2105489b11248df7bc20e709f628c8f24e7e40",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7de614a49a8f11dd472b23f3ad6da488f7245eeaac9899461ace7c61d4149f30",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1c564e598febe9a1799823f2e7a3600a6068f04e79722cd2189b5246110e06eb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:43a7a2d0005479b7acbf29bc3b2105489b11248df7bc20e709f628c8f24e7e40",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7de614a49a8f11dd472b23f3ad6da488f7245eeaac9899461ace7c61d4149f30",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1c564e598febe9a1799823f2e7a3600a6068f04e79722cd2189b5246110e06eb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6762,
                "digest": "sha256:eed1f84ed30fb68c08bc8fd6f5167d6ea6c2398d01a4f4235c79d94c024b415b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55009253,
                    "digest": "sha256:e756f3fdd6a378aa16205b0f75d178b7532b110e86be7659004fc6a21183226c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5156036,
                    "digest": "sha256:bf168a6748997eb97b48cc86234b7ff7d8bc907645b9be99013158b3f146b272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10875008,
                    "digest": "sha256:e604223835ccf02d097187b5a58ca73e8598cadbb16a36202ca1943e97f56f1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54579133,
                    "digest": "sha256:6d5c91c4cd86dde23108ab3af91e9eae838d0059a380ee7dfd4f370b6d985523"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85645083,
                    "digest": "sha256:23151ba03adc048d097b9c195f912f719a3ba5059e9b9b32af5268d3040ca29f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135014050,
                    "digest": "sha256:db775c0a44d24bb974a187a1ca308ac58f4d4fe32e50ec88c6a39c1282065aad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:9b8ace741f03886d6c5dfe6483c412c791e302647a6edd5b52f280354a2528c6"
                }
            ]
        },
        "1.17.11-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6770,
                "digest": "sha256:2ae434a8418be656c36d11197697abcbd96854d66f1156d6b569350b77b43790"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50199379,
                    "digest": "sha256:8c8b1770c0de8d780b721bb37e9a8b6e5071a83530a584b1aed8ddc9aa12dd00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924792,
                    "digest": "sha256:fb7380c9813fdc7aac45d249b456f89965b8eee97a56d8cc8d01bf2c09bd344e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217910,
                    "digest": "sha256:fed7ad25f71b787f363a804d83f044bdccc37536ae3e8856aecb500db41357a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50329718,
                    "digest": "sha256:927d9aeacff3f0d387cb224277ca6a3173e26fe6f535adcca91aa8b2a5fa35c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64598740,
                    "digest": "sha256:b5f9149f77b10035aec063af766624be5520b88f6bb1e4939b5eaadc5e5c4c9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102977816,
                    "digest": "sha256:6a819fc8f07a96be0a74931c487fdc049e2e20fbadc6a34a8e0ff102369012ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:55edd6e1d3544b658650cf8b4b2641177919c434a6b311cd8da2e7ba14cdc308"
                }
            ]
        },
        "1.17.11-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6771,
                "digest": "sha256:80141d579bf8d0f97d3683987edf40970522fe10d29cccec8a1542ac75c630b4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53696947,
                    "digest": "sha256:d794814721d57f8aaec06ab3652e90212cc3beccf5ff5c87f6ecf8375784bcc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4938744,
                    "digest": "sha256:bf62ee63325dbbad699d6845f68c2391db3bf158f60373849c2d1cb6bb479788"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10657073,
                    "digest": "sha256:29e37b4c58dd1db7ead6f3c2cdf757f490b4e29c958d2a70559c313e9a03a5ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54672458,
                    "digest": "sha256:9cb366fec153b3461ef6bedb0d03ddfd52da9b314025abfccb50a3e8e8669fdb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81083650,
                    "digest": "sha256:c30cd5ba412c2b002935a079083d4a78cf5230c4930c12be40860a80e37e0f1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102737853,
                    "digest": "sha256:82b2cbf213e681baa5be66a0bca891ce387ac650f862276f1528015baba2fda4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4e3d86eb8022e3e9e840c6c02fe9283cc367cbae2a041c7bca631787f323b012"
                }
            ]
        },
        "1.17.11-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:af3636b1220b3a4f5993b80da533c6d2d5a5285123c5bca9af3f28817d79d7b8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:79b074b8f0edafa4bff980e9116055c2dbebf15860c098b15dd746c314d44309",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d2b09b52abfe978ce829bff02b8fe69c049d8c28e34309bbe5b5145ab42b5b8e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6765,
                "digest": "sha256:e8fedecba83cfc1ccdfb4ead22120c2932416272df0cc3ea8edb3d50b1a35dfa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50440422,
                    "digest": "sha256:982cba7e471c6d3ce96014cf58b2e4e115a525e60da2e1e08716818f2c057a6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856653,
                    "digest": "sha256:b02d86f59850f3e13d394072350625a8526b912af24b3bfc0e50e9a8862a79d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997224,
                    "digest": "sha256:8b047e8f2e47bdf998a952572ae5e9d64edf8e29b716be0ee50a15e6d21cb2ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843777,
                    "digest": "sha256:478cfe935c2fb922eb2a95131ad8a2f1e6ff472bbdecdf94709edc3a85f74dfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68578671,
                    "digest": "sha256:8618a3769add449b958fedca09373c6ef005854cfed8ff8cdb136598805a4cfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135014052,
                    "digest": "sha256:16f368cb506d350e28e1f5cf4b787d60fec960b7bca79f2480b66cad791736ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4ce75a3f9480fd57de9694b3cc70cb9b78b7b41d44f125070acc306ff510a404"
                }
            ]
        },
        "1.17.11-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6771,
                "digest": "sha256:58fd97ebcc912ece06cb99b0bf5f949d768e6e4034dbd4ae6a96f0c22c122b71"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45915564,
                    "digest": "sha256:59fe0b97900eb1b641ad94d8d8f3bd9dbff0472e481c4c4c38f2372ef790900a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145382,
                    "digest": "sha256:49649b4a05bcb1345df6dfa9a17fe8f7e713c3a3ff8df5a44f32e7bd74df8bfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343880,
                    "digest": "sha256:03cd2dac771a38a2c51428234f8ad25ae6aa1f7b60d2497c96d251b5fafc88d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47359471,
                    "digest": "sha256:60a6a17283b05e5d4fc6748f4fc5c19db1f90640b2e3e18d2b792a6eb338fe11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53052827,
                    "digest": "sha256:99d7d0a25664baf200d8936b1e0b8d92eb350ce1efc256f5141b83730f124953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102977840,
                    "digest": "sha256:e052bfe57042dc5811c7445cc23b38c8a2dba25d344ca623fd4e0dc2c0c83a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f0eea4b96b459891baa7d96d7a18d163c76bc89b44d887731da3d334aeb616c5"
                }
            ]
        },
        "1.17.11-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6771,
                "digest": "sha256:d99aa1ffd4407a95aadd9579f2f6d2e547d731b30a8c53d78c083f9dd776b8c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49229054,
                    "digest": "sha256:fadbed17b01e84815ca3018d3dc42670c3add65c67e7cc74d6bc477ae8425934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7719823,
                    "digest": "sha256:5795076bf6e9bf96da71f2e31cbe91d3c49a17f211c5b0d33e032e095c5564a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9767307,
                    "digest": "sha256:b1eda3e266fa432ba8ae8ba25a5ad2fa4c5349ef2aa244612c89f990704c5b25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174936,
                    "digest": "sha256:64dfac45ba23f255c176d3688a882854cfc56b2e822c56e0eb0d91ecc8bad25f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62445392,
                    "digest": "sha256:8df95c8c3bc4b11956614e6f194a6e8a01443092e6c0141984dc458ae1a07bd7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102737819,
                    "digest": "sha256:193446e37ec75ea147d1e91d909b0925ec9b63babe98d9c0861f4bdc46062a3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1eabc3acbd1cfec63b97be3dff5da94006819a15af4cc7bf5a145d2ec68f938a"
                }
            ]
        },
        "1.17.11-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:0dcad36a758dda8f290ef85d3ce3f68edc168f9f513c48b390063c37b405b7a4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bdf647333dee4f8cd21ffb4bbb4c6de723e67d0c9414ce8ddd2b600bbfcd8921",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.11-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:0dcad36a758dda8f290ef85d3ce3f68edc168f9f513c48b390063c37b405b7a4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bdf647333dee4f8cd21ffb4bbb4c6de723e67d0c9414ce8ddd2b600bbfcd8921",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.11-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5285,
                "digest": "sha256:3a008ae5e2beb238e6875991c3a38c2933b16f17e2b833ff73fa642088192842"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70914473,
                    "digest": "sha256:2a77c178f98f3dce6dc50873ef6819f04b9a6c005fb4f98944acc13be806a9f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70767868,
                    "digest": "sha256:81beecd91f7a62a9bc2a39a2a3125a79a4dba6fad39f01629fcfed88153de616"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146546193,
                    "digest": "sha256:b7c69fdc992424b43074a53fcf209830c34ee5a12acee041292e66df27806179"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6e0b81b3add63a0232c46ce8a63d8cdc894023150052896aa32d76db248ca70a"
                }
            ]
        },
        "1.17.11-1-fips-cbl-mariner1.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5279,
                "digest": "sha256:ded3fa32528312ee32019a30fd837c6eec28a15cedc31e1a08dac23cb2a585ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69656052,
                    "digest": "sha256:b7587783df85a6bc2c7e90e3e065d93312fcdb57b0556093d2a8086005e23c4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61634244,
                    "digest": "sha256:64b7cb46162cefc0cc607c28c18f10da09977cc41578912bab9981dddfae7a5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107522443,
                    "digest": "sha256:fdf8423c2ad8eefb036af9977e0cfaedf656fda4aa435e9e8c2bd0946a16c460"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a2d114892ad81ea9b9637cfd5b1da92ba1955b01d278f9dd80c60a62cf24395d"
                }
            ]
        },
        "1.17.11-1-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:4f25438c705bc56de726b4ef79eaaa4e7e5698aa7b0dcf86581b2b2a87771323",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:4dfd822926da5ca9bedc45e58318ec161e1931aadd37b43716ab9fde5a6c217b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.11-1-fips-cbl-mariner2.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5138,
                "digest": "sha256:3176b41de489a52628c65223efc4593a90a43ff0fe3d6a7c7caf73e840e38ba9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29269987,
                    "digest": "sha256:262e2611f46a581ab9954e0abed879ddcec60e075fea0668141677858ff50288"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118062283,
                    "digest": "sha256:01a00b50d5915abd602ce38c5ece44073c9015e6db04101d98707b4a1016c55f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146546086,
                    "digest": "sha256:8d91ce284652e49f3eb6d274ec049f094a96c8fc729b32174e8e9254f3168786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b0ed2be35654bb737b091b1451cbe87687616f5b77d10dc0204fab35ff04b2b1"
                }
            ]
        },
        "1.17.11-1-fips-cbl-mariner2.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5129,
                "digest": "sha256:fb543d6a3936b546d02b31b6f5fa483b0cbc853854652fa668dd602e7c7d08df"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27747777,
                    "digest": "sha256:f27a512fbc86b71efc705b77d3b71d1f3e259e00b8ad948040495cabcf9edd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108627813,
                    "digest": "sha256:e8c1feaae07541f68fbe36c19d84f09d1b79148d41d0bf8291de4025d529774e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107523077,
                    "digest": "sha256:a5a921c54006caa5eae8310cbaa3bda0017d558ac0340162510edd8c46db3ddc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2a630df558792961b21c52f4f35f1c3655ea322380f9bbc9241916b72343a429"
                }
            ]
        },
        "1.17.11-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:bab68b38bd948db433659d1fbcbe15fc00fbb55a0e76f3dd9a4128a3a5718596",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.11-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3001,
                "digest": "sha256:0d72db9a763357f069ab7a1e1730bf5d9353594afebaadc06230b53bd189fa0c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103133833,
                    "digest": "sha256:6626f490e738e10ea5e31ff2643e3a8c372e076d9030c77fac37537dbf12b73c",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:6626f490e738e10ea5e31ff2643e3a8c372e076d9030c77fac37537dbf12b73c"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1035,
                    "digest": "sha256:5c10a666c6a7a0f3d236edd57a447c609aad0cc668e9cf04b99c1e2bbded81c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1109,
                    "digest": "sha256:19a9cb8f08fe7446166ca7be0536c0c87e97721da8e615545b4867ce675b62ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:c453d374af6ed9681c3824b2a81130c67eab064141bdbe657fbfa519a1dde5b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69595,
                    "digest": "sha256:f7937bd62262689900769e6a176aa20597ee4d7f7c023d1d66fcd506218758ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1036,
                    "digest": "sha256:0ef2f0f6aefdf4f6432ea9c2b9922c59f0d5d33c8fdfc06079939f962a40f89d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:f4fce0e32e0a7238cede74b54334d83cb322efe216dc27bd8b1be3bf80e96408"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142430338,
                    "digest": "sha256:65419183d06e047a999372f8ecbcaee8ce4e87f7bac76f929956e195aa0e632b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68237,
                    "digest": "sha256:9ef3ad5f1bd9e3d32ea64ea9336409fe4cd2f719e0e29cdfe119788e5d20d4aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1238,
                    "digest": "sha256:982ef260a39d9def65a59fd4583ecd7a1896b02e7e8b21b53294c8eaa33c56e0"
                }
            ]
        },
        "1.17.11-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:cd60d19fcd460ed684630020ecc6ed7a0fc3b97cf5f96a9347696b7e41e1c606",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.11-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2998,
                "digest": "sha256:49cd24f50e759def8bdfab2a21d81c297ad25f780933e3bade731a383a4251ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117687017,
                    "digest": "sha256:2c74f0842c5a8e9b80b9e2cf64e1ab10a6fa67951f28cff5fee060b88128564c",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:2c74f0842c5a8e9b80b9e2cf64e1ab10a6fa67951f28cff5fee060b88128564c"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:d16c51f5261bfe74921a077c02e370a76fc1053e75087e2f1a9b3f5f2c35dee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1043,
                    "digest": "sha256:1b98c722df762b216663ea1e14f566edca638a01a0cffee35cdd55a9327089f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1025,
                    "digest": "sha256:0bfd7ae6b55d61cc00f9f4d7564043db889f63b927d71cca70b33c619ea45f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74874,
                    "digest": "sha256:6fd095d0a63abd3b2d1d07b3d7b37b1e3fbcf25a38f7505cd346a9c29d63511d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:06da21d4270ff2ab5a7a629c40e3f7e1f72fce46876367a22a4c6d9dd523dae9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1045,
                    "digest": "sha256:6e0267cf80cdec4091dbd6264b545ce46bde61ec2b9fe0faf17f437c0ed9e49d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142455813,
                    "digest": "sha256:20900ecfde260a8795d2b7db0a1568ef362869fe2c2df92b524892cfbe2196c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115873,
                    "digest": "sha256:ab222fa07c709a9e83187a2ccac41972b848dc0c7b073854ea2a2048e4369363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1271,
                    "digest": "sha256:378e84bb626dabaf66581fa11bbd40453578d403d163fe57002f169a56cdac5b"
                }
            ]
        },
        "1.17.11-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:73df04a7cc87bb8be8de6217d50502685f0238e3fa7bd568c2a150c34435d906",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:17c9411e0167575e6637345ce2a5b6be3a48509da35e2f8ea0457e1b4cafd6de",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:86631d60db26164e6bb43aa4d43848559547c4d12692628199c8ceea6a6c7cef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6798,
                "digest": "sha256:83e9232703ea82f62a9bfd7c3c7fb448e49a43680835ca8acde4ce736a776187"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45429730,
                    "digest": "sha256:d3d4e1d44a24e0c5abd41b803d14f211ba153bc7963871713cba8ee5fc687888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302994,
                    "digest": "sha256:9fec8bceb2e238bbbbec9e458cf83c1342015ed1b717be0f88b50d267c52437d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342992,
                    "digest": "sha256:3c2aa521faedb4a16c079e9574f537b51a05c2ad4fbabd16f83d9bd58c365bac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765581,
                    "digest": "sha256:20527d0d718ee46b5f18a310324e3d635eeb75021e2b9d9ec450ea75755ddcfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57651326,
                    "digest": "sha256:d5fcd2f2c9ff6a810b0bd391a16b7ba28b728d4716d6ebaa4b5a4f87fb5bcc0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135014018,
                    "digest": "sha256:24eb3dcff6d7b46eece8cbf331a90def27ae6f8c0ef4a30abc70613a0d293566"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fd25d7802e3213e1074b9e388787188a01d890eaa0bfd570ff5f0ea0ea3c5855"
                }
            ]
        },
        "1.17.11-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6801,
                "digest": "sha256:a81c84b83af0cdd65d5a9772593c5cd33df08126445135c172b2e328a99d4807"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42150781,
                    "digest": "sha256:ae3d55ab33f9bf9aa2c47629e66da1c4e679da10d83c29941f39b04140996e4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9957035,
                    "digest": "sha256:d277a5551d8d3385d5cf64c67234fe8db9bad96903365595e8c6c61146e48d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921757,
                    "digest": "sha256:2055cd14260ece06830786d784271b3008f3ce2ea3279123620a6d78a2afecfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46127871,
                    "digest": "sha256:7574dbdaaad44c5640ade0f5aba1843344998699356f46c27a9d56220564c345"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45979988,
                    "digest": "sha256:7b44d7f1aab550b61709029b7e5dc1e6aa219020529130651854cd3413af7e04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102977868,
                    "digest": "sha256:17631988e6f03538f461748b890f04809a7e5f3ff6c93ecfe5f2c68182d0eaf6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:573851f05cccd515865d42b68dafcc947fe2266d18a8f386f50274477551f16c"
                }
            ]
        },
        "1.17.11-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6804,
                "digest": "sha256:de3f6e68f0fe85c1e2dfe12cdc099c6dd8aac8378f9b60ea421714d2a97fac7a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43212871,
                    "digest": "sha256:de7fc2a3b80bcd193de687188fc9051c8be6c61ec81fec3aeae61c079f71e69e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218522,
                    "digest": "sha256:3ee73573552502f742607ea1dcdefcee9aeafa4ad8d5deca24b48a262f4ba108"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874461,
                    "digest": "sha256:e05d3983d65175e68348dcb2cd43933f2af4d2d8c1bf36c9d5f237394c9fa53b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47735540,
                    "digest": "sha256:cd59fa3985bf6ff678d23ae30d099fae0b35d3f6b5357aeb519800a5c9f15a1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49040855,
                    "digest": "sha256:50b6ccfac95157286a299dfb98c446ef97988827da74a303550d1d1947aca976"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102737870,
                    "digest": "sha256:4e917f17ceeefd1f3e352f0f313a1d84561222b26bf3f0ddddee1d867d729078"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:c5f985e6f3fd5c3963debbfa54458078675817be511d6316ab818ad92a1b3a5b"
                }
            ]
        },
        "1.17.11-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:d04eec08fbdb13a208d70fef00e36a53e14c28e2fe59f552b6ed152eafb50462",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.11-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7263,
                "digest": "sha256:17884bbfc9da722391b38e4427b0c42da4df32f013fca02cc8443353bc50701e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1877166088,
                    "digest": "sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 626889777,
                    "digest": "sha256:8b534d64a7c337eb8a23b425e4f598cd3e7407ddf8c7b2f714d1e7f7ed6a04be",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8b534d64a7c337eb8a23b425e4f598cd3e7407ddf8c7b2f714d1e7f7ed6a04be"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1296,
                    "digest": "sha256:faba224533f7182b94d371d6dd7a248720b7870d472db3f368c24dff21e90be2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1296,
                    "digest": "sha256:ab62d69781ba0ee12bc01bde5d1d455ff4d098a23b30c6d872e9f804d72584e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1326,
                    "digest": "sha256:e8bf3b81a09a97e854252ca5e950a8ff604078334948fbcdb16c6dd2c5217845"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1295,
                    "digest": "sha256:52a26d576d48cda06d2b7d5466b80c057d10b9b0a47212ad24e864cedd939b6c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1370,
                    "digest": "sha256:efc8e094e90c3364248c30f359ce8bbe85901bcf1cc2b373e5dc39701f5762c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25605153,
                    "digest": "sha256:149d458b04d1cf16aae28c0e71c5cbcf6552ad9c3c753523f3f3c414db7528f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1322,
                    "digest": "sha256:b9e0572ad20b597cc4bdb35e400e97472c54d1e55dff6be89e7e3ede8467b8aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 390477,
                    "digest": "sha256:4380d969c9031e0b50b0cdfb81f4d73b5df4b2feba91996d9667e47478e30a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1366,
                    "digest": "sha256:e007db965b38cec144e89d33b247143c0620a0228d27664b19fb9316fc2d642d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142891492,
                    "digest": "sha256:6ecca754288ac928b87c0247b32d8fb5fd776aeeb69ec7eee0496a766df84af6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1448,
                    "digest": "sha256:6e8c8e2360de99daddee46375534d29449b48bdeb8bd51e92ca3ba42c3ff0b7c"
                }
            ]
        },
        "1.17.11-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:6add0d3810ab330a667846c5a9f7898960264ea78b148ef69d82a50f3dd6dc55",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5125"
                    }
                }
            ]
        },
        "1.17.11-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7262,
                "digest": "sha256:a88dc2ece272dd96fd72a533575b981213ec93dfedccd4ec2049996a68383d70"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2208956366,
                    "digest": "sha256:8e90f10d7f367e1134c0a79f47fef5028828d636674e0e3290d85891f9f95d62",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8e90f10d7f367e1134c0a79f47fef5028828d636674e0e3290d85891f9f95d62"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1422,
                    "digest": "sha256:b7233da346d8432a68868f82b5ca4c93e6fededcf5fb03a3e921fd2f8b7de9c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1414,
                    "digest": "sha256:b34b3b703f9b5bc08b1fcfbdec938ea2016faabdc3084f4298b8f376328db69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1402,
                    "digest": "sha256:989174b0a606c97620359ba10f2f16929db9acbeb4df061321362d712497adb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1409,
                    "digest": "sha256:deb029fc7a95391283c28ddf2c7d4c2ab286d7bb24d604d80a78a6ec16ba48db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1416,
                    "digest": "sha256:d849661709f2a603e0c742a81894bb6f75123184b0fb0526fa7d6dd837c77469"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25431259,
                    "digest": "sha256:b4178113937c4e96d8c36dd41e84273a383f45a51e6c74de70e49560a5225980"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1423,
                    "digest": "sha256:c69aeed297369ba506a6c1b69fe506579de2ee177d89f9947bd614caea63f4a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5966205,
                    "digest": "sha256:f046459cf5095c90d53e5ae8523e07bef5530c04b3c30fb8acd7f696c5757a31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1379,
                    "digest": "sha256:fb58e9fa8b8b6cfd0c6a7363fc2dcd195c985a233668de005f9236bf8341f88c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153058254,
                    "digest": "sha256:88d66aee58c2a1ec6fd87661a379caf44f05af0aff71e2952a148056c6b7b067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1511,
                    "digest": "sha256:0bd6e5da42804518ec81608c94acd6145c6001f30a0b3a184b443867b4b453c9"
                }
            ]
        },
        "1.17.11-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:3395a6a95088743928d76a41839ea5cc612ecfcf8639aff4924d24f6c69f977d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.11-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7259,
                "digest": "sha256:cdd5f17044fd23e49e3d31ad36459a06906a664ddaec4ee13bc5e80177ccb113"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1436863614,
                    "digest": "sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 800671635,
                    "digest": "sha256:12fb50a031bdc8d2b65d86d694a4ed20e937852ed1bd3c433d8f2f60279cecc7",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:12fb50a031bdc8d2b65d86d694a4ed20e937852ed1bd3c433d8f2f60279cecc7"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1285,
                    "digest": "sha256:bb4f68d1de9d1fe34ffd944c13ee62a4b2249ea31b2174f2dbaf2764c63c6ba2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1283,
                    "digest": "sha256:37722d7b3f84e531fcc1fd6e412f4b189b76432b5a5a954d526005896bfd0bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1278,
                    "digest": "sha256:58899c64c708f275439b882204c7b1bc957bf5f81406c13df3bd25556257bd97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1301,
                    "digest": "sha256:80b1cd31aa61b4779500b7f2f6838b432e3d07e938bf9a3434524c59f3346aa6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1323,
                    "digest": "sha256:7347f79651cafd8b887a3677ab203bec5b454466726aa228bf9b2e42cef62c49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25714472,
                    "digest": "sha256:d0e3dc8f00f97d5a7fb086b1519726ab6e29f05125cc16ad5a28b332107dc697"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:0380b10f4652f3434fd4aaa1d44639e9ed8d2f73cf124e53c7cb0fbe044bcd9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 601326,
                    "digest": "sha256:9fbc1300199eb18924b1e5fd4c4724035da3d13f886c781028b28e7dc12eda01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:d68b45c31516d4b40b483de7b3258532cd8f089a3b93518dbee51ac13140bc83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143112110,
                    "digest": "sha256:34f9251e6aee27d8cb2ebd2249d84102479d3b15f64f40242b92669eacc75268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1440,
                    "digest": "sha256:e462bfda45fd953c86be4fd94c13cff59cbc5c8139a3db1778bd80987b1fe9df"
                }
            ]
        },
        "1.17.11-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:43a7a2d0005479b7acbf29bc3b2105489b11248df7bc20e709f628c8f24e7e40",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7de614a49a8f11dd472b23f3ad6da488f7245eeaac9899461ace7c61d4149f30",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1c564e598febe9a1799823f2e7a3600a6068f04e79722cd2189b5246110e06eb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:af3636b1220b3a4f5993b80da533c6d2d5a5285123c5bca9af3f28817d79d7b8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:79b074b8f0edafa4bff980e9116055c2dbebf15860c098b15dd746c314d44309",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d2b09b52abfe978ce829bff02b8fe69c049d8c28e34309bbe5b5145ab42b5b8e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:0dcad36a758dda8f290ef85d3ce3f68edc168f9f513c48b390063c37b405b7a4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bdf647333dee4f8cd21ffb4bbb4c6de723e67d0c9414ce8ddd2b600bbfcd8921",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.11-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:0dcad36a758dda8f290ef85d3ce3f68edc168f9f513c48b390063c37b405b7a4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bdf647333dee4f8cd21ffb4bbb4c6de723e67d0c9414ce8ddd2b600bbfcd8921",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.11-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:4f25438c705bc56de726b4ef79eaaa4e7e5698aa7b0dcf86581b2b2a87771323",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:4dfd822926da5ca9bedc45e58318ec161e1931aadd37b43716ab9fde5a6c217b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.11-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:bab68b38bd948db433659d1fbcbe15fc00fbb55a0e76f3dd9a4128a3a5718596",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.11-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:cd60d19fcd460ed684630020ecc6ed7a0fc3b97cf5f96a9347696b7e41e1c606",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:73df04a7cc87bb8be8de6217d50502685f0238e3fa7bd568c2a150c34435d906",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:17c9411e0167575e6637345ce2a5b6be3a48509da35e2f8ea0457e1b4cafd6de",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:86631d60db26164e6bb43aa4d43848559547c4d12692628199c8ceea6a6c7cef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.11-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:d04eec08fbdb13a208d70fef00e36a53e14c28e2fe59f552b6ed152eafb50462",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.17.11-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:6add0d3810ab330a667846c5a9f7898960264ea78b148ef69d82a50f3dd6dc55",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5125"
                    }
                }
            ]
        },
        "1.17.11-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:3395a6a95088743928d76a41839ea5cc612ecfcf8639aff4924d24f6c69f977d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.17.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b91e6a512e018a4e89994d63f80851d08175e7001105d47ed8ccb765032903f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2bd3d0cff80c371136ecb0687ad1234ae2fa813997787a24d9295f89b35c8c5c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8ea104049e60f1440c190cda069b6c6e99970be0d7b940dbfab4f7bfb48da386",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b91e6a512e018a4e89994d63f80851d08175e7001105d47ed8ccb765032903f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2bd3d0cff80c371136ecb0687ad1234ae2fa813997787a24d9295f89b35c8c5c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8ea104049e60f1440c190cda069b6c6e99970be0d7b940dbfab4f7bfb48da386",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b91e6a512e018a4e89994d63f80851d08175e7001105d47ed8ccb765032903f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2bd3d0cff80c371136ecb0687ad1234ae2fa813997787a24d9295f89b35c8c5c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8ea104049e60f1440c190cda069b6c6e99970be0d7b940dbfab4f7bfb48da386",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6823,
                "digest": "sha256:cfeb9c650829581f2b9644c071030cf5b8c0ae425d972dce14b8d8479a41aea8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55009886,
                    "digest": "sha256:1339eaac5b67d16d6d9f41fb7a7b96f7cebf3ba4beab36cbb60935aa772af583"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5155961,
                    "digest": "sha256:4c78fa1b97999d08408734a61040475ade5bd7e33e91c0d5170dba2c7c7a92fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10875087,
                    "digest": "sha256:14f0d2bd524377dc42d072443c0e5e7cafa14f5df609d39bb1f717f43817a2cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54577874,
                    "digest": "sha256:76e5964a957d206950c8c0de99f3c491ecec78887ebe4df0ac5ab9ceb536a4d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85675259,
                    "digest": "sha256:b88d1d65ae5c128f5d0030555cbd6bb811409c07e5c8cd05968ed40ecbdbd35a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135078484,
                    "digest": "sha256:cca3935b348606a68c1dbb4e316221c81fdb09d7b8d363973a589b2750c29804"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b44fa06a94832bd67afe2d7d90bfd48856034936e7ae82ed8bc8db7edba6a29d"
                }
            ]
        },
        "1.17.12-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6828,
                "digest": "sha256:bd9845a629410f9993a96c6eb95948ba60c58c7707ba60129b1ddeefd28cb29f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50199604,
                    "digest": "sha256:2147df557f50051066d8920b460727b890c1da5cb2c15b055c99ed8216b5528f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924846,
                    "digest": "sha256:e0b28303e18c4d3b1788071e1a67ed51ad28c9574bf30371176fc152638acdbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217964,
                    "digest": "sha256:536c76bf1b84e75e4834c8b50a6f3697460303c4b2021434891103b94ca78fac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50329194,
                    "digest": "sha256:72032391c22caab41b7e492fc3cac93cd17f7c920e05ff5c34031a544a4a833e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64628380,
                    "digest": "sha256:1e87f679e09111175af1657bc7f48639503eb2cf37077d443ff3004adfd62945"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103036544,
                    "digest": "sha256:2551d5e5e4d806d7e5e1273423a78de8914fe5e557b81ba7bb11cc60113b8055"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:9efdaf0ff8b2b94f470a8c78bc6fdc38b894c65420b728088140b55c0f580521"
                }
            ]
        },
        "1.17.12-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6829,
                "digest": "sha256:c8f47e7a24a7b68277b27b6c63b12c62b60f5b3f36e60210b825423b5bccfb63"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53696815,
                    "digest": "sha256:f873dfbc59b181817d5bc2b9fc31d90d8f9139c8cabb2fa7264f9bd7b418b8d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4938760,
                    "digest": "sha256:bc7b65e0e9cdc28c8cedaabbc5cbae4652c9b107c47684de49f01a77741a5ded"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10656970,
                    "digest": "sha256:b43836e7983cba8b758620a218a0ee622daf5513308b6a9e8316f94c271ecafd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54673319,
                    "digest": "sha256:b1209d2973c25405a6c092fa82923495c9cbf17ea31b92f3c5f9dc06d85c19a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81114725,
                    "digest": "sha256:07631ef53276d72053eaa400ed7b47e59af4d6d1eb0265d9ba9b2acda46650bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102789072,
                    "digest": "sha256:2db459231181358cb9c90ee799ae62d9960bcad7700e43b8c7062c6c00137d5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:2cdfe5c01bf4ebd39b06743ede8b665a8b7627288e58d431d5ae484478d52b8f"
                }
            ]
        },
        "1.17.12-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a4492879399b287fe115d21e605e67c5a313056c49664423d09a6e665f6c2792",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3a2da1e97bc0c2ec9228a07a608e24f487105ee8cd40cba4bf0fbe76ce10cae6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7be2eb7d1caa398fb7b59999fb4da98ad31af70262d28a916c3d7b12457f0bbd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6824,
                "digest": "sha256:a63f527499885eda64ffcc767b8a059c144480bfe6363acb1f702bdadc862cc6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50440811,
                    "digest": "sha256:ea267e4631a981caf2841a7e9a1faf29cef9d020c4378fc64845802d17586531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856631,
                    "digest": "sha256:8a014c92148934973210d840dc7cfed53e0afba38d839afaa48ed5150eae19af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997231,
                    "digest": "sha256:293ff1be7001d642a624409e2d5f90e7708ef7e6f1a75f4eb7362a9296e18d20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843778,
                    "digest": "sha256:4e42533e7311ad0a85fe19e9bc5fe3138f608853eeaaea70ee08b2a631b356c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68605138,
                    "digest": "sha256:dbd2d426ecd7fcec1a188a318a5f2d19dfb69a96997d743642dd8afaf55aff31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135078539,
                    "digest": "sha256:f5d32aed9b444fb6d7e2df698faf531535504846891c14d774b8fc761d991a46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b84287ed4a3c97bd75582e57f8e903cb2a7d7a16a0eff957c8b94569f4804224"
                }
            ]
        },
        "1.17.12-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6829,
                "digest": "sha256:8176fe0053843899004478d6919cc6e39a871bb0e5743ce981616b7252f214be"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45915761,
                    "digest": "sha256:0555d003e6ef528480fa5625ca8ff9a45d899a62b5c20ab7547a42c64d7c1d4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145400,
                    "digest": "sha256:d67b659cf86b06bd457cf205d2cfded55fd9654e275d3ec128f15fb94099c21f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343917,
                    "digest": "sha256:e6da167dadbe348ebfc7cbe4152eae80fb72e14b28b417ffa2bc6adf87034179"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47359583,
                    "digest": "sha256:034ac9bc2920b12499948ed10c17ffdc5b34b7e5bff76a6b5735dbddcd25233f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53068185,
                    "digest": "sha256:43e59ab518d9e51b599fdf6223cfbe170763a08af275b797ea5ff317b5068147"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103036593,
                    "digest": "sha256:b50c71aeef9754a78ac0a40ddea6c08f60c9fd1ed7b35871477d365c50564ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a1495fde9be30935fbd29940a307cb6e71e220346554a589e9682cb598171665"
                }
            ]
        },
        "1.17.12-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6829,
                "digest": "sha256:14d95f62574d51e30fb91f29067fa4eeed4ecff8e7186e3ea6237fbd64c5dc6a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49229092,
                    "digest": "sha256:8d6f1451981514e25c21542f5c7ee9bb90052b8856b484ce47294cbf1fd5a234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7719858,
                    "digest": "sha256:8ccc9fb4baf6e7f2e6ee18ed689c8ee1171c6751c8bbd317d580a193da27a5f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9767307,
                    "digest": "sha256:620d55693ed5943ab298346d9ccafefdd6d6f33994e6820a857737df89b65f3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174988,
                    "digest": "sha256:82dcb0fa2b6020cd95c3972ec0fe03da38862f57574fe03a49360713d6f415d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470675,
                    "digest": "sha256:cf83f1cb191183ea6154915b09b50fc2e6f9efdb8a29376756654da38627ad1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102789068,
                    "digest": "sha256:ca8f13481b25e05d073bf669fd616cf7b65dc06c684e6a8cd0372fe5f2cc57c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ae8a4c2036c05463b62c3e9f4e54c5702304c3c3c793dd38c21d355eaa2ccd18"
                }
            ]
        },
        "1.17.12-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:133dbcdf80cc83204e198c92dccc21865de35e34fadf9fef326cb0f7377c1d85",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:5bfd5ab8dffc24827ca6c970e3607e38a7b25c7118f436b7c481cef06e4d8170",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.12-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:133dbcdf80cc83204e198c92dccc21865de35e34fadf9fef326cb0f7377c1d85",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:5bfd5ab8dffc24827ca6c970e3607e38a7b25c7118f436b7c481cef06e4d8170",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.12-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5142,
                "digest": "sha256:b44a7d0cc13aafc210ce22755d4596599052f00ca983da92d3b38b46f22edecd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70821089,
                    "digest": "sha256:bed9d41a3e6469f8f8a2c55dcd409b33629c4c8f011a89b63f0a86baa1d5d08b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 74556705,
                    "digest": "sha256:bba821c151901ec2b83522ed10004698b41997956ef5ebf701e3148679c4d58e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146619401,
                    "digest": "sha256:296092fbf788822c169c5f44e4ebda0246939f724d566ad423547e79c9f65a97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:d6fc22fcad3e70eb5297d9a99ed2b4f78b89186e201d64a2cd5bb2a6fe3f32ff"
                }
            ]
        },
        "1.17.12-1-fips-cbl-mariner1.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5133,
                "digest": "sha256:210c6889cafa3f1965d6f5e51d732a4d1f5eeb1f4de166dca7ecf6661d5e2c5d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69741388,
                    "digest": "sha256:8da3511a2e32adae221c873300fe993ee54fe90db2ee5297efc700908f5ed058"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65336786,
                    "digest": "sha256:4c2c6790a8cea01978ea3dfc15fe4f08f52cc11ad13f153b42a09442889b27cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107554798,
                    "digest": "sha256:65ea1ffe775ab865411bd2d4fc1aa02719540196df9c2e57300380280805ea75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3598a7b302c12825a82c8329ea71632a1851959ce47dc0db7da699f40c90b7a5"
                }
            ]
        },
        "1.17.12-1-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:136855198e873b4fbd5cd04fd11c56fd26694f1cc0389b3b22c95259ea9c0e15",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:1fe90005424592f266d56785b53de1b75927e2c4aa2a4b2d338331157a68262e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.12-1-fips-cbl-mariner2.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5142,
                "digest": "sha256:43fe73751c05d6967205db03767d400a1574479edeee5439d946a847fee4c76e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27977678,
                    "digest": "sha256:d7f8fd7377e74551888e07f6e10a055c346bc176ece91d823837703612f0e07c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116797567,
                    "digest": "sha256:2c10d3f15cc87bfa1c7584f72352352b9379c06884d3cc2b1dab3c05da314783"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146619446,
                    "digest": "sha256:759ee65db216cc89a4c90bfc7c585acb018c40eb20af2d1b341694352c987e12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f85b87aa9dedf4d4fbd42851484b7bb5252a51bf720b797eca6f2b921612018e"
                }
            ]
        },
        "1.17.12-1-fips-cbl-mariner2.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5133,
                "digest": "sha256:784fa8887832c469eb84340277b0fb969cf90270818db217153f00a6723355e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26498922,
                    "digest": "sha256:9d337e0b277ecf64a8de0ab2339c74da20240bd96a9be9f1096f28318e737850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107349217,
                    "digest": "sha256:917cb757687d3ced568116598d42e0ddd2d47758d0c81a19f84ad909e67d1e8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107554841,
                    "digest": "sha256:779ba7d6b185f31e57546ab533786155493ef5b5dbdd094aa2b24e4979201d7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3dcb9d54346121c6fa89aa66c91096b2b3072ed487c11abbec3cc210f4958781"
                }
            ]
        },
        "1.17.12-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:9e447d2406d7d72b4b701bf114033787316c705a84e32378f3b72aade3dc3909",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.12-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2998,
                "digest": "sha256:e693c597ca9380cac00fbf5523d0168f8ff6a4ef0891c9e874407701a7c603e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103155009,
                    "digest": "sha256:5d24e1a2f5c566b0afb1e46fc24e5cec821c8ebf44220276a95a2b91f44a2f2a",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:5d24e1a2f5c566b0afb1e46fc24e5cec821c8ebf44220276a95a2b91f44a2f2a"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1057,
                    "digest": "sha256:1eb2556bbdc5c41c63d846f23e62b156207e73b29daf8c6fbd4a5357627e7a25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1033,
                    "digest": "sha256:ca8099cfd5450105d810738c5eb20cb7f9ff626e46de686125cb618fb1fc0772"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1015,
                    "digest": "sha256:d0d4c945ec78d36e257b002ed2490f4240b5b724aec3cf97824c6cd64f1b6bda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79229,
                    "digest": "sha256:e899517478807ff695fcc41ad1233451863c11c97cbd7dec8c4c705a70889524"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1042,
                    "digest": "sha256:78d8771ae90d3c1bda460095f4c21ff00ac5c8fa4d188bb3552f58cdb185bc8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1076,
                    "digest": "sha256:b46fbeca7068ff6430d711de43fc4d404747568993831fbc72608ba8efa71a42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142504641,
                    "digest": "sha256:0b958f26839df6f076e003009bf55458b0ce512d176a72f806d80896ca9a249f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89506,
                    "digest": "sha256:8cc7c36ad9f2c10e68eacfb65b961e298937b658cab6b9d08aa896fc82ca750f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1254,
                    "digest": "sha256:92f91ff595be11eab572992b8e1ea97e9d213b79f721c9ae69ce5f20b3894d97"
                }
            ]
        },
        "1.17.12-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:1d083f2eccf96166ac325c4dc0e5506b40c13194710a04730f3f69a6ed89cf2b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.12-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2998,
                "digest": "sha256:85c01841798955aeb463b9d710106feaf2919d7414387ea8eb8e08ab089999b1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 118046090,
                    "digest": "sha256:3719b23d309b17276277110a008a58133c9fc92465d2519f2f32c9961c39887d",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:3719b23d309b17276277110a008a58133c9fc92465d2519f2f32c9961c39887d"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1035,
                    "digest": "sha256:c073849c2c9c7adf1330a3c284f0d9f2f64b8fa3d7511ae67f688d4e1a266ed6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1045,
                    "digest": "sha256:de02cede85422fb7403b98eb9dc2ca79d8b8235fa80e9d88477be6db155a5735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1101,
                    "digest": "sha256:7f6dda9110cbfc7ddb66476226bec05d3fd4ab94933683f0e255c6ba256fc471"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 94936,
                    "digest": "sha256:a520f56b5799a350ebb90a9c7f053ec1c3e8a102b2d0449955326433bd09e31f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1091,
                    "digest": "sha256:0607cac46198438c437ddb8bb45500789198ef1eaf816d2ced4e1f089157849c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1046,
                    "digest": "sha256:ad23b915c24e718e7d976fb626a11feda6ce760f5a584877049b34027dd4e79d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142524547,
                    "digest": "sha256:cefbbb3f09258670fa8d49e9477412b2156b56ad2f37a23d311b102bc60f1e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92598,
                    "digest": "sha256:f33b57508d4417dd99152f147585bc7028dbe926ea280deb31825a7331092503"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1252,
                    "digest": "sha256:db950ef6a73e4e7661642ae0ee9a9b9b6e59c634e6a22de59bd65d9f6efd41a9"
                }
            ]
        },
        "1.17.12-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:3035998846f1ab86ac1c12cc790cca076f7ad19a596766ece7737ada9ee61eff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:77a8521a86cccad2e719d9877bda57d434eb8b263703361dea552088149d9633",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fd7845ccafe3f20e916562c133870363238881d8403c614b52d1c1cc909156df",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6855,
                "digest": "sha256:0d372c5196b1f559321bf7fdcb23a430c8eab33c25de43ef235936dc5d99a3c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45430020,
                    "digest": "sha256:8372a04f222be82bf67eb0010a59644b1e52f1246b3da9034edaa98f3d591cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302923,
                    "digest": "sha256:a1728fee80d376293a9ef5fdcc0acd3f6398fc4159b12064ce4c1e66f67e7e9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342926,
                    "digest": "sha256:e6cf50aa0a4b80b39d1bf4be232d404da0b1ad38cdd3bb1a017b727947b5f4bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765716,
                    "digest": "sha256:f576518faec8cbe1e4fdcc36cb9870736c6a0889e0c7db2bde641503f37b6d19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57667318,
                    "digest": "sha256:8f6adcc3428bb0660a505a906524bae67190215b583bdd25e68a4c8628fbb84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135078405,
                    "digest": "sha256:871f44214ffe443dd8ad919a38ed683b93e1feb60ab7960426077c1746d8072b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:59c90519276cb38616026fb5abbb4c324e56bcad3a27b97b43103d1bb93b100d"
                }
            ]
        },
        "1.17.12-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6860,
                "digest": "sha256:376b6eb6be92117405248b82626320aea203d4d8e9d61a8492d469076f7eee49"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42150850,
                    "digest": "sha256:cf35481e5c316d184dac1873898948d1e8108de590a2a940c32cda34173fe7c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9957097,
                    "digest": "sha256:93b740b174e94fb77095522004355bb6f430f0b25308acd5fc66d325f04f99c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921761,
                    "digest": "sha256:cf98bd2fdfbc26a0f8c12d47c32e612d01389ff5e4aafc52aa04b72381a6c823"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128363,
                    "digest": "sha256:bf0525b8f82975354336694dce23771eb04576302410a29a334172526e5de07d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45995844,
                    "digest": "sha256:cf9add6cdcda97d2c4f70f9d2e136a37f2308057aee3f989a59c34bb9cf9c6e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103036592,
                    "digest": "sha256:18ca49c3af9a1adc5e41d29c6cf95dbe3e978a6e0214bd60e8cd2cdcd0d74bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:211369db5111fe1d69b4723b1547b8c80dcc0a1c32b35c6e3ad7b925f4b108e4"
                }
            ]
        },
        "1.17.12-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6862,
                "digest": "sha256:7dd8190a4dd83f10430047bef5c19e564f8e7f4d5b6d5a07fe4c04f75714e7d9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43213121,
                    "digest": "sha256:d8ccec8a513f896fedd1d9765f3f2abf98bc8264f61cecf17919c80c9aa7ddbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218617,
                    "digest": "sha256:6b40625a6bb21cb2cd6b19ef7592951f90da9ea1d8abf359196bf48300c448b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874558,
                    "digest": "sha256:414226169d0f92fdcd77314cbd06ba7613675d62a3afd63aa88afbf0072c44c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47736296,
                    "digest": "sha256:ddb01f37c2a0f6704c7bc0d24baac1a6d5694b5e2fec5ae71f1c257b337a9348"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49058365,
                    "digest": "sha256:2590a832844dbecf91b659d8a4d5cf29fe965957e8f2758b5bb1f576f21abc85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102788866,
                    "digest": "sha256:5820c1f95f3ada495d5cc7c758ca84a67dc6545fbbd4251eccf1fe1bc1d82767"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:db12b2c6aff4ab3ddc53c4c05a95f431f2dde301dbcb9e15406ddae7802f49e9"
                }
            ]
        },
        "1.17.12-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:7773dd60232db2af110bef2ec2c98d73335ea9cb8a9d674f283f4d82b8dbdf2f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.12-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7261,
                "digest": "sha256:c08aaa3b4cfdf71b9e4f1f05e3a693d9baea370651358c0a2e4d035a8c888890"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1877166088,
                    "digest": "sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 794877652,
                    "digest": "sha256:7aca8de30754f19fe03ee4c21eed0762efb5e91bf684b0cc36cc92b2af13446d",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:7aca8de30754f19fe03ee4c21eed0762efb5e91bf684b0cc36cc92b2af13446d"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1271,
                    "digest": "sha256:c7d4bb13b156bf774c03c99fef5d8586d67957f61147becb35d0e409c13edee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1265,
                    "digest": "sha256:d5fc882278f0b5408d2fe00453e48e10aa7f0b7559d2fe1774c5d9137053d2b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1295,
                    "digest": "sha256:9b8a13912c339f239bdd2966cb6fbf7282d0d9d05f21cfb6568288924f0d51c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1268,
                    "digest": "sha256:73d116beb205105116cedbf25d4086e182b5cfe1cb161a052f10927c70ad4f2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1295,
                    "digest": "sha256:264cd22b76e6ddee5c035a3e653482713719caeaf103811a2994893ca7d2c4a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25459038,
                    "digest": "sha256:096dff55ef31d3378cbce29edb2370527ae61bb388afa3b5d3ac2a577dd97d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:1aa84daf5ea3e42164fe413629372325ca2ba3f2276be5d0327b38a1093a9ddc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 369132,
                    "digest": "sha256:4aaa7f7239fa59dd370eaf448f50980dea17300484cb2a06100cba5fabc1c6ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:df828d06323d6df4e5b792a9310a10652a75912978d3592aeade8b0aadc52768"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142926315,
                    "digest": "sha256:a7ade3dd6a3081439eb8ff5e217118346dd9db5a5f06388da6c4e9b714802c91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1421,
                    "digest": "sha256:346d2ba9c25d380f4a099ffa0b122795081636c4dfab29107efc6d080c1fdcc0"
                }
            ]
        },
        "1.17.12-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:1979e817914ca56316131b63a9f7e9c845d856086779f074345ff64e3aa62b25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5246"
                    }
                }
            ]
        },
        "1.17.12-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7260,
                "digest": "sha256:3c9aa817c3d38046f3724fdeb8e082b8f294c4fee971e8cfbb8e4c30e0173a2e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2210006368,
                    "digest": "sha256:823bb17a0d3e84a37de7b16eec4140cf4e0b4e540b96c4f515a3421c71d87804",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:823bb17a0d3e84a37de7b16eec4140cf4e0b4e540b96c4f515a3421c71d87804"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1388,
                    "digest": "sha256:4a98a45a6b2bce753210751254a95ffe56d9577de400934de4aee26cf7056ebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1409,
                    "digest": "sha256:3b8ea314825c63a23acae5a94c1c54dd309cb0cb5bd1bcfac675de420b3efe4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1435,
                    "digest": "sha256:0fc304d5cd8777e2b77e237201685f1abe6d6dd293d9769b5c0b741dd7fbc369"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1432,
                    "digest": "sha256:2ab44dfd0d1ae1310ece3983ac666325a6e4f2a39921faaa7fda3449d0645565"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1427,
                    "digest": "sha256:b234bf8291a52be71d2503f7cc34dd8f4bdf551fde00a32f8a89ea23260a07b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25456217,
                    "digest": "sha256:858a5c2bc7cfb59acb8235fb23abcadee869c1b4eedfe347c8056c598431bc02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1417,
                    "digest": "sha256:9ceb6f30a317acd4b4de226743f54a1ce7661c6364b7e25447c3996070df049e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5977203,
                    "digest": "sha256:ab7058834ae01238e415f5358721b70d1d5c5084a90ce102ada740a481a5f9e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1431,
                    "digest": "sha256:85612aa496ec5711a40a613a3c9e30d7cd9ae49a3aaa608d1ee936a0dfa8ffff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153043038,
                    "digest": "sha256:6815d60ec8f7e3fd426d3dae364ca65a67c53a5fe85221628af4b4ec6ce02f8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1577,
                    "digest": "sha256:f13bb834ee4d3df5a0afcaf93923d3e6008e7485eeb6c10fa0f26e0881a16506"
                }
            ]
        },
        "1.17.12-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:9fee0b780c6a91ede11755dcae482bdfb6d4449741f2a9614fb578de5af2ae7c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.12-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7260,
                "digest": "sha256:4375617127db591650d37cabdda42422600b450ea8181ed8e2e473deae428b55"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1436863614,
                    "digest": "sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 863367943,
                    "digest": "sha256:e1a27cb9d4615dec325f2cbabac4ca1f65413bdbb8b440cc961df032993a9b81",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:e1a27cb9d4615dec325f2cbabac4ca1f65413bdbb8b440cc961df032993a9b81"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1344,
                    "digest": "sha256:382ff913c6e0e34a6f553da52430a44f32a5462b3a915325544e1a046f396504"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1275,
                    "digest": "sha256:c8b53b3a7d229444c58258e6da192c98f29ff4653ae649655c6022e6fc9c0f18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:202acca0905e29a9fb64ddc774c87fb14f519e2d0bf6a127243938fb641ed4ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1274,
                    "digest": "sha256:5b587d51cbddf4624266536da720d7517b67c1000482f82d76834ec5981eb44c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:662e8f42667baa8acd0426ffc9b4c8ea514652061973a563698cf8b9434fcca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25748983,
                    "digest": "sha256:a6f02c53fd27f8943f1eb219d497d727d03820e5baa526c4bdd9dd69cdac8f8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1281,
                    "digest": "sha256:7b66494d91c98cca0c0186c5720b814c3adfd89d472db7cb10563a49e2e2a2d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 605659,
                    "digest": "sha256:468ea20eeafd1eed072d2045eb322a7ecb7ad495f33248a6417eee0a5f731d5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1316,
                    "digest": "sha256:291193358412efd04611994a0079a8aa76eb79744d083107e5b73883b72792fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143187559,
                    "digest": "sha256:7d57656b887c3fc194fe3d60878fef3973af731a29655f705f2f4a190dc180f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1433,
                    "digest": "sha256:3b08aba8457896911ce48d09a8dd4de31666c0b9812d2cda3e31d9c05c9eebde"
                }
            ]
        },
        "1.17.12-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b91e6a512e018a4e89994d63f80851d08175e7001105d47ed8ccb765032903f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2bd3d0cff80c371136ecb0687ad1234ae2fa813997787a24d9295f89b35c8c5c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8ea104049e60f1440c190cda069b6c6e99970be0d7b940dbfab4f7bfb48da386",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:133dbcdf80cc83204e198c92dccc21865de35e34fadf9fef326cb0f7377c1d85",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:5bfd5ab8dffc24827ca6c970e3607e38a7b25c7118f436b7c481cef06e4d8170",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.12-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:133dbcdf80cc83204e198c92dccc21865de35e34fadf9fef326cb0f7377c1d85",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:5bfd5ab8dffc24827ca6c970e3607e38a7b25c7118f436b7c481cef06e4d8170",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.12-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:136855198e873b4fbd5cd04fd11c56fd26694f1cc0389b3b22c95259ea9c0e15",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:1fe90005424592f266d56785b53de1b75927e2c4aa2a4b2d338331157a68262e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.12-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:9e447d2406d7d72b4b701bf114033787316c705a84e32378f3b72aade3dc3909",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.12-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:1d083f2eccf96166ac325c4dc0e5506b40c13194710a04730f3f69a6ed89cf2b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:3035998846f1ab86ac1c12cc790cca076f7ad19a596766ece7737ada9ee61eff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:77a8521a86cccad2e719d9877bda57d434eb8b263703361dea552088149d9633",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fd7845ccafe3f20e916562c133870363238881d8403c614b52d1c1cc909156df",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.12-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:7773dd60232db2af110bef2ec2c98d73335ea9cb8a9d674f283f4d82b8dbdf2f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.12-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:1979e817914ca56316131b63a9f7e9c845d856086779f074345ff64e3aa62b25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5246"
                    }
                }
            ]
        },
        "1.17.12-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:9fee0b780c6a91ede11755dcae482bdfb6d4449741f2a9614fb578de5af2ae7c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40aad00bce77945ec13ee363a8b16c471824ee1ee400fac7ea06c08127fa2550",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0cf6d0a4a675d14bfe24038b35bb1e166740134164e6252cc72c71fceb6858c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:66d81434c7db5d9a42b510ab80f6ba4853308b63f6375547414b6313e209a665",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40aad00bce77945ec13ee363a8b16c471824ee1ee400fac7ea06c08127fa2550",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0cf6d0a4a675d14bfe24038b35bb1e166740134164e6252cc72c71fceb6858c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:66d81434c7db5d9a42b510ab80f6ba4853308b63f6375547414b6313e209a665",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40aad00bce77945ec13ee363a8b16c471824ee1ee400fac7ea06c08127fa2550",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0cf6d0a4a675d14bfe24038b35bb1e166740134164e6252cc72c71fceb6858c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:66d81434c7db5d9a42b510ab80f6ba4853308b63f6375547414b6313e209a665",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6823,
                "digest": "sha256:6e41bfa7027427b3f2590de114cc6002ff09cbc2c197722965993d2644d1251f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54999406,
                    "digest": "sha256:d836772a1c1f9c4b1f280fb2a98ace30a4c4c87370f89aa092b35dfd9556278a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5156110,
                    "digest": "sha256:66a9e63c657ad881997f5165c0826be395bfc064415876b9fbaae74bcb5dc721"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10876416,
                    "digest": "sha256:d1989b6e74cfdda1591b9dd23be47c5caeb002b7a151379361ec0c3f0e6d0e52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54579006,
                    "digest": "sha256:c28818711e1ed38df107014a20127b41491b224d7aed8aa7066b55552d9600d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85676763,
                    "digest": "sha256:f55bb1d8365be29c9f00473b597f42d03ea8faaa5f2d033e465030f4d400c3cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135108853,
                    "digest": "sha256:adf7e8ae89b99f846d33fcf6a2ff81835106e51986da87e36eff0da3c573d94c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d1c3f2995c1d55c1af5e4c4a3f12600a3ea9883f64f9e9ef1cc0a0bb3e048d06"
                }
            ]
        },
        "1.17.13-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6828,
                "digest": "sha256:120546a3f273ad0db0857169e0013d871b5930c448bd84982cbb6dd9e3f42b72"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50194881,
                    "digest": "sha256:a8a55ed160b9a554de2e46b828d606a0829d8d9f19c79bc47eddac683aeb2b91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924805,
                    "digest": "sha256:7de0d7ddb0c03f1180487d49fda757592276a2a2eedc3f36d7bd625e1de85cc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218017,
                    "digest": "sha256:fc57b4c2f87bc9e41a073ca20fcc00a5105e1147f67f5968e36f843fff2da78a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50330098,
                    "digest": "sha256:b7fe9284e40b932004071c0a79e7e354a236000649999e6096974cb02f48b35a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64628607,
                    "digest": "sha256:a405273afda0a1437996ee038f1ae396aef827eb2cb38d2aaa31d0d0f8f41bc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103046330,
                    "digest": "sha256:a8659e00921856da2751d12e05550bd6720c62334ca042bffccb2b3bb0ad7e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:348d049136fd2ac0f1c8d9e27f91b9f8af4b0948699091a1c810279c586cb5af"
                }
            ]
        },
        "1.17.13-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6831,
                "digest": "sha256:e03fe7116ee82c8ba93da08247295981e4d5013aef48615de155114518c5d61b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53683129,
                    "digest": "sha256:cfc947b533a3ed8b8ce79820c7fe5e7634bf9c08479ed0aee1e74ee7b4f2b068"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5142960,
                    "digest": "sha256:9ca36aa4204d2a708dcd1d41d1d4a128b095f8d88a2f9544f89799c36914e356"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10657500,
                    "digest": "sha256:1fdcd2014de70fbce8c43a70cd1f42bceab4f1e35953db987fc318dbc0fb0d26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54673820,
                    "digest": "sha256:e288b20a616767a00416e22f7d8ee6390ba5b48061d92577f55bdb11121e6946"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81114852,
                    "digest": "sha256:76c28101aec91a5b4686711fb1e1245ad615abafbc1a6784a6e553095089c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102824266,
                    "digest": "sha256:b8d21dafd398f1b1cd361356d4962a9ad3e5c437da4bf1a526e66fd14eb43d4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:961f8a883aad7cd7d8694d189ba851908a83da96d1e79fdca72cbd3fea762028"
                }
            ]
        },
        "1.17.13-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:421fa96fb0c7081a2e1e2c0fc616badaf8dea15d6524cdf4205167708be8ca78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b48753ad08f375c81de30c0fa736b70fbd244f5c7fc381962c08521bb3c5d304",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5f663ee47fe9ea7a9f51d54245166d06ea9e87983b4e36fea3e11ed661649a55",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6821,
                "digest": "sha256:e7e81248377adf26eae6d4ffb5c59d5e3feaacc8446091d03aeae4895ffc74f7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50440555,
                    "digest": "sha256:80b89a2b88b24e7be7c8038e2cbff99ad4fd2f07ad914da4bab80dabaadf8a99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856888,
                    "digest": "sha256:5b0405f798f5b335d83b02371187f3be0ce2092aa0c6b6178ff11290ee6a14c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9998095,
                    "digest": "sha256:ab80b2b0494ab26b41941fb73a028292e2e5d2070c56b3488e890eda20e04641"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843739,
                    "digest": "sha256:bb827974c1cb152eae96a7b67abce3afa75353dec7790c0c07fdbb8906925921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68605225,
                    "digest": "sha256:19508fc90d78db6d091483e7ddb2c33718e85b82e8115454b9852ac3302bddcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135108842,
                    "digest": "sha256:caf5453935e6dc33604fca58cd6d0a62ac15b79fc873c942cccaaffd52298e39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3414d0566433b9606f6a6cc4033f45aa44a59afa474df6f21c3213ec093d7adf"
                }
            ]
        },
        "1.17.13-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6826,
                "digest": "sha256:359ccc21d2ddd98cf61e64b46c219dfa1b40bb0b34ff87f1123e9c0a15c0853a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45915505,
                    "digest": "sha256:13036b2c6f13fd64780f7786c065cc2f0788024adbc684878bc4e33285ffcd1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145473,
                    "digest": "sha256:c6ee655d152d3acb35f3825891e9643f3691ede0af3d9d3d2148308272ad147e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9344322,
                    "digest": "sha256:69443875e8fdb06680327c732654bbfa6b479a256d0d865012b3f931609bd0f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47359742,
                    "digest": "sha256:92bdfec5c03781bcb3c6813122f21d30df45bbedb3c172824b93ddba76a9bfe0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53067994,
                    "digest": "sha256:bf2f03d00d85a5fa1d883ced57f6d1a5d8d26bb0c4e98a1f77f1ad2eadb4043a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103046244,
                    "digest": "sha256:0f5f2f4c15b42b08027ebd8b02baf1b993fe0405fae4ca89f876b36fce62743e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:eb91d360d18a93e1c3df8536d98b996ad36242d7614e2d991b170ca8a561a160"
                }
            ]
        },
        "1.17.13-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6829,
                "digest": "sha256:855ccbd16d30a54aeda706ea84f43445b215f3ee5a01573420d04dd429281ea9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49228928,
                    "digest": "sha256:891a1587d3644a8b4b6dab3726ef380a725a0e19bfbf0eac02a275f711985862"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7720027,
                    "digest": "sha256:6a5d1ed6a27dab15e77b7afa9c8697a170f017a73ec9ea8f3f00d5f322e1d3ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9768648,
                    "digest": "sha256:1186afd5d5e89c602b988d31dd5210c9e3c19435f849f6cc4a6a22a2388e83cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174846,
                    "digest": "sha256:a5359768b018a374b04e8bf19e97c814527cb448f87c25de12fbabbb2ff3556d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62470489,
                    "digest": "sha256:6d9985099b0074bee52a366c41387a78172148bf93cd375ff17ef1fc3cfba2d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102824438,
                    "digest": "sha256:f13ffccafb82b19424670afa0667741c93d7908cabbb795c0d73c57c5498b397"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:85a0652ae16d639e1106a907afb8d102ab55682985688afe2c28cca30218686e"
                }
            ]
        },
        "1.17.13-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:003fb637c2fcb5a498ba8407197d244d7568c0ce7078772342d0f011ebf32592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:859ffbaa3a21d358936843b8b45b2ab734126b86e2d522b8194938aa3d3093c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.13-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:003fb637c2fcb5a498ba8407197d244d7568c0ce7078772342d0f011ebf32592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:859ffbaa3a21d358936843b8b45b2ab734126b86e2d522b8194938aa3d3093c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.13-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5145,
                "digest": "sha256:65add8ca5e5adbac8787d623886f2e746552ffc72fe9cce2ea0b6e70917e6a27"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71470750,
                    "digest": "sha256:9f5cf7ac096fec545046c58a9066d69e5d278a08247599da38fe8b9ab93032be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70766367,
                    "digest": "sha256:6843f10a99c1802160d715a7c38d75f5fcc52008562cd093062ddd511c92bcd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146645620,
                    "digest": "sha256:25d7d9b3c05a6e83fb302e7e82273c7c831adcc407cb186829444ed0849c293f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:85e2695b8b18fc4101bd3903034e1746fe174f53749618ac4cc39ad2e1b01e5e"
                }
            ]
        },
        "1.17.13-1-fips-cbl-mariner1.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5135,
                "digest": "sha256:acd502d5176be2f8abe68a4a663cf9f4db9d90d9ae39ddaba63f16a1f5261cd9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70376064,
                    "digest": "sha256:d08bdd47a3c7c19b18511fdc9393aedf5b6ad5eeab0bd23bd5ab3746fb033ad6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61629499,
                    "digest": "sha256:0ee572782f510afd69c25544cf737a7f1c1dbfc93a6bc4bc4ae68360a30025e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107578174,
                    "digest": "sha256:2c1ad682443381398482e2265dae41c43164442c4a134518cf17693e5b139db5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:60d9ae26ce349c54881dc18b19676629d034efa9f524ae61c2a39ee69ba86584"
                }
            ]
        },
        "1.17.13-1-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:8afcf497275317a0185bf5ce1fd7d3b9af8ebeb5455a8d25eb696eec368b9d8f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:1ac99cd70fb5cdfecd282c966c094eb60f6cbc9b899f75c464268a5332219327",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.13-1-fips-cbl-mariner2.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5146,
                "digest": "sha256:9ca8ffcbf1eb2d618e0a96fbaeae79e24de3ed470f2c71d6a1f46d343fca3312"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27977678,
                    "digest": "sha256:d7f8fd7377e74551888e07f6e10a055c346bc176ece91d823837703612f0e07c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 116797603,
                    "digest": "sha256:b1fbbd9693a6efa26d7e7c3d225b8d1d9cf86f2d93150b9b013e8447c19eaa24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146645660,
                    "digest": "sha256:9ebe86f74877151f588ea5bcc72c24bffe90ab286b084cba985ab913eba6cc87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3414d0566433b9606f6a6cc4033f45aa44a59afa474df6f21c3213ec093d7adf"
                }
            ]
        },
        "1.17.13-1-fips-cbl-mariner2.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5136,
                "digest": "sha256:736b2a15cf1fe22b45ae1efafef17f110fe71ffa430bf3ab3574f51bd0eaad00"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26498922,
                    "digest": "sha256:9d337e0b277ecf64a8de0ab2339c74da20240bd96a9be9f1096f28318e737850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107349077,
                    "digest": "sha256:5ccdb5a31c21f52940d435832aa33bf9ca6f752c71e98d59f20ae74ed3e8c83d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107577956,
                    "digest": "sha256:937027f33c8cb56aea85e7e47be3d4140bce43a66267d06bb49bfeb874090b27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:cbc1c9c989e62e99e4c11e38a2ee6be3aaa0dad1f92d1f9129e6b0ebb1d3d078"
                }
            ]
        },
        "1.17.13-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:c36a714b6fac9d57e6558f9547ed7a8cba40441b682443eec6160381d97934fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.13-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3001,
                "digest": "sha256:65367087261721541702ea8c3b078ad1c841e0087ff08b1ddbed22beb5239710"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103155009,
                    "digest": "sha256:5d24e1a2f5c566b0afb1e46fc24e5cec821c8ebf44220276a95a2b91f44a2f2a",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:5d24e1a2f5c566b0afb1e46fc24e5cec821c8ebf44220276a95a2b91f44a2f2a"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1014,
                    "digest": "sha256:b8902311e66f3bb5bb1a17c5a33515091559f53ae68b4623b7485c921580a8b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1024,
                    "digest": "sha256:914849b74986d18c954939b3a0cbed1bfafaaf80f2ac0a6868916e74b0c1c5a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:936d7b06ede1203aba6f580e51b944ccbb3f7f798080f8968b1a3918e0d33724"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 84369,
                    "digest": "sha256:c99069355650168c11323be6f658c59501ce8022931bbf919704b70bdc16f8bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1027,
                    "digest": "sha256:a8506a8c337312db52aa7481a588d4f1c2137462466349b2b409348c0cca6ecc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1009,
                    "digest": "sha256:8f84d865bce9ac2f500649f1b847425fd96ac59dbc14f3203014e71410611337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142549114,
                    "digest": "sha256:750d82c45a2bb74dcb146990cdd85d99eb761ad32b969a974b0517d63683e608"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 89711,
                    "digest": "sha256:30d3268ec1917fb2799236a0a065fb410be82cc8897a5e9b8db553d27bfcb2a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1240,
                    "digest": "sha256:e73c2b960246c0f46f8b2892f668ddb9d41dba6c856af1525d053f8282e55032"
                }
            ]
        },
        "1.17.13-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:cc9f329113d4604f38cbd2936915f7e1ef2184eb5d9f4a850af989cbbb7bcb58",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.13-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2997,
                "digest": "sha256:01f123166a7d46f27e2add44bd7b9c15ab79a9be5a16507e2bd4fff94190f900"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 118046090,
                    "digest": "sha256:3719b23d309b17276277110a008a58133c9fc92465d2519f2f32c9961c39887d",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:3719b23d309b17276277110a008a58133c9fc92465d2519f2f32c9961c39887d"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1044,
                    "digest": "sha256:81dab37341c69a09fc1d3b91aacee974e9be19a70b0eea0e4233d48059a23d1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1066,
                    "digest": "sha256:18f53376f76cfbb367f172d7862726b45f9514fc8413994a2b1d6126244758e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1040,
                    "digest": "sha256:d0ddf36db87f746ada9b6de53aaee57e674a2bdd63ddac915576817c3b680a9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 87880,
                    "digest": "sha256:982a2dc609d8f0d12aecf88416bf7ae07873affe0ae8fa5cac802df5bbbbbf7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:4d60f3c0053861383d6eba1a2bc181253b73683ff435b945e346ed2bc489e5f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1071,
                    "digest": "sha256:467ee09c25b5c4b2787b39dd96edbe6f317ae9afb28db68c48ffb561cbbd9e94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142557420,
                    "digest": "sha256:b49c1e87e79a14765fe85c8171a74ab47ca903efa306e4943cdd2f456ab5d879"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 95475,
                    "digest": "sha256:c90b1d117e859f0f6ac049160f35cf3f4618ecbbd3c11840c036c38d8c6cb786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1272,
                    "digest": "sha256:8f59fda6b61064be120f3e31fd4720b7582692ab3cf2ace5826989129d432c66"
                }
            ]
        },
        "1.17.13-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:77a003eb62c5f76e9d7b0e6fc5d68d06019ab43262ed0d170f2cb1b252b676e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:83391f96164101eb4e3dd8a3bb534a3dc465b12e35ec9696a0d36b881d45e057",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c237bf519c2291026ce3c55869125ff53eceb31811809e04dc04ed151bd68e40",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6856,
                "digest": "sha256:a203b97667bcb7ec3dd0a256bef3fe9ba0565237c2ce86b908b07cbfe02b73d8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45430020,
                    "digest": "sha256:8372a04f222be82bf67eb0010a59644b1e52f1246b3da9034edaa98f3d591cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302923,
                    "digest": "sha256:a1728fee80d376293a9ef5fdcc0acd3f6398fc4159b12064ce4c1e66f67e7e9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342926,
                    "digest": "sha256:e6cf50aa0a4b80b39d1bf4be232d404da0b1ad38cdd3bb1a017b727947b5f4bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765716,
                    "digest": "sha256:f576518faec8cbe1e4fdcc36cb9870736c6a0889e0c7db2bde641503f37b6d19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57667380,
                    "digest": "sha256:ade2d371b0bed304e21da636b83a66c491370ecdc1c0da2d171d4b8ae10f076d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135108802,
                    "digest": "sha256:c691a0dbe7f2cac0c6f857d0b4a26e4ea895aed7fdf0f17f9e5e2da96039703f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f450cb43eaa6507b10f7d16bd9ce10f22aad519aafd4e29ac5cee44f29394227"
                }
            ]
        },
        "1.17.13-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6860,
                "digest": "sha256:d7754586bf1e51436c228788c348abf3c8bcce4bf4d3980f13a0597346cfe7a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42150850,
                    "digest": "sha256:cf35481e5c316d184dac1873898948d1e8108de590a2a940c32cda34173fe7c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9957097,
                    "digest": "sha256:93b740b174e94fb77095522004355bb6f430f0b25308acd5fc66d325f04f99c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921761,
                    "digest": "sha256:cf98bd2fdfbc26a0f8c12d47c32e612d01389ff5e4aafc52aa04b72381a6c823"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128363,
                    "digest": "sha256:bf0525b8f82975354336694dce23771eb04576302410a29a334172526e5de07d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45995765,
                    "digest": "sha256:adba2261fc60fe3055b0c04b66110d01df97f9109cde6509a43ebc73e7b038b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103046511,
                    "digest": "sha256:34dc3a66acf106ea8f2dff766c09be89c07304767735a515cc05ecb29d1ca310"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:16b88ef4f0af8cbda7f1378c72be56a7a29bb04874d315dcdff5194caf766981"
                }
            ]
        },
        "1.17.13-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6862,
                "digest": "sha256:dfdf4a15dad2c884d52ff02598adebc5cac68f86e80017ea0871862e93803206"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43213121,
                    "digest": "sha256:d8ccec8a513f896fedd1d9765f3f2abf98bc8264f61cecf17919c80c9aa7ddbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218617,
                    "digest": "sha256:6b40625a6bb21cb2cd6b19ef7592951f90da9ea1d8abf359196bf48300c448b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874558,
                    "digest": "sha256:414226169d0f92fdcd77314cbd06ba7613675d62a3afd63aa88afbf0072c44c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47736296,
                    "digest": "sha256:ddb01f37c2a0f6704c7bc0d24baac1a6d5694b5e2fec5ae71f1c257b337a9348"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49057862,
                    "digest": "sha256:82f0ac687f80e4c1764d59007ee59932b42746af59ccd03f2023728c7c1e3645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102824438,
                    "digest": "sha256:a59f39ec114223b6046eede1c1cbb7b05f9dad8f33611604cc6dafcc05827ac4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3d3767f78510f76a8e20fd46adf52170423d13745149e2e789db62b37fbf8edb"
                }
            ]
        },
        "1.17.13-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:5357a151849f2f68237129ff986d22e3b0e0da2f4f42bacc74ed9f873c8bdfc6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.13-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7261,
                "digest": "sha256:5533db4f12768285d478e18503e04b93bdb6f67c5f8bcf6c2f8447c828f2efef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1877166088,
                    "digest": "sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 794877652,
                    "digest": "sha256:7aca8de30754f19fe03ee4c21eed0762efb5e91bf684b0cc36cc92b2af13446d",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:7aca8de30754f19fe03ee4c21eed0762efb5e91bf684b0cc36cc92b2af13446d"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:4d3aede6bde13bc944b369c0c0f0b2ef99ec469375598a591c2cb51b005309f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1276,
                    "digest": "sha256:8b20237033f08353074d4947b0fef1588e22a1d98b4a4f05469c086479d23ec3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:973304cbfa43f0854832c80a3bf9009d6239447ae89a4abae597a271a54dfcec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1289,
                    "digest": "sha256:98b0fb7cabae5b3768e0db4bb897ce4cadbc85e204ea7d70982788acbe3626f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1298,
                    "digest": "sha256:f646594e04495fb8323d94bef1b83f438270b944e946b645f3b30dcc68149f8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25481400,
                    "digest": "sha256:e6ef23d86710722858e28348d02d38dd7b0a71b648f5d2dc89c2a1564ceea1cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1299,
                    "digest": "sha256:a459a4a6946f8d5418a4318b2717bfa56650827c581bab47a91c9e2c30f00706"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 390478,
                    "digest": "sha256:d3f6a9271b06a568cd3c71c372170e65c4849c60cff96486121a51e76757eed2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1320,
                    "digest": "sha256:7e19aa3ea06706a8c479e59a895c45bbbef2e7cb53dc7bc0682e580b0a0fb27b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142983986,
                    "digest": "sha256:53c855503672e19723afbed634d6b5dccf378fed611b9d43a9ad5e411524dd2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1439,
                    "digest": "sha256:b1f8500f0f50a37a8888188c849a55cbd0297165172300066119816ebb827b1b"
                }
            ]
        },
        "1.17.13-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:291f4129e1b74964c9bc2780c0baf6b807093e0bd49abfa92bb92266ace5a56d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5246"
                    }
                }
            ]
        },
        "1.17.13-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7260,
                "digest": "sha256:6d193992ea82d34df0c24c6b0ae3ea16fda9df4c22a1fe13bd58fc5ba5594e82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2210006368,
                    "digest": "sha256:823bb17a0d3e84a37de7b16eec4140cf4e0b4e540b96c4f515a3421c71d87804",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:823bb17a0d3e84a37de7b16eec4140cf4e0b4e540b96c4f515a3421c71d87804"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1427,
                    "digest": "sha256:1f375e4b81539e9cf8f297aa219c808d4e99e15bbf91a2ec212605ccaf7da05e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1422,
                    "digest": "sha256:b2579c649132cb1fa9db4487a98360b904b4edf486f1281190c8c8477187ebd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1426,
                    "digest": "sha256:368a34232e0ae6e38b4a5c5a9dad03359971f41b1d86f28db71bb0aa652913b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1424,
                    "digest": "sha256:4115949081698475ae68d4986a8f9fb4cef3586bae6926029d262fc280669634"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1404,
                    "digest": "sha256:f508e31328e2c99bb423d681e902a41a308c0d5a48a644aa5888fcfa0a9e8bf0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25455966,
                    "digest": "sha256:d6d3e82ac7d552aaf0d56578675f71e7c9119a45906847b6ea6feaf593a23c92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1421,
                    "digest": "sha256:3551401dea86e6b69048f4fef5174b5196db8c147e2db559386ed1229ded4c87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5974362,
                    "digest": "sha256:ee901bd61151a885223cb889d1986bf76a281478121c758d1358805fbf7116ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1401,
                    "digest": "sha256:4e93962075c48b46476a54b233295ebdaa76281903ceb48fc2bae7103b475859"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153077516,
                    "digest": "sha256:6771738b04f5806706b0763b005cf13aac2d2470d04c267ac2b1046088ed8119"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1569,
                    "digest": "sha256:0bbb41dc61985eba219ddd51c4326b814cb9bc35ecba815205f6914ab35be09b"
                }
            ]
        },
        "1.17.13-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:af0165b8daef3835d8eb89181aa9a6bb2920cd3547f5342b9f6b981bbdac95fa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.13-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7258,
                "digest": "sha256:b666dbb6f442a48b220f67c4d5b6c9c2e0a050b0e5abff5a74e3a9e8a274cb5c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1436863614,
                    "digest": "sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 863367943,
                    "digest": "sha256:e1a27cb9d4615dec325f2cbabac4ca1f65413bdbb8b440cc961df032993a9b81",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:e1a27cb9d4615dec325f2cbabac4ca1f65413bdbb8b440cc961df032993a9b81"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1321,
                    "digest": "sha256:876c375cd9eac322519708ba5ddf6b2b3b1b38d34257eefe010296d0f8888352"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1311,
                    "digest": "sha256:40bd8124c8f22163eb7e5c9b2c43bf2746dd6f35e8ef45ee5ff31ea07b0e530c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:ed4ff506fe797c1d7f70bdab166c985ff710e7e9ed6a27b1d2ed8f1fabe19717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:d3eb2e50f0e5aca3e9b6986079c295b0873df8dfbcb835df6190aad04b2678a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1318,
                    "digest": "sha256:b7223223b08746ffc952097abde20de3c9b6328fedea24d4cc037e8647692f67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25749542,
                    "digest": "sha256:aa8d2d1d3c2fc826ee29e025f0a32ea294345fbbb6db2c1d9aef243950360f3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1280,
                    "digest": "sha256:30068b562f9a48f3c525591f7b2c56a8d3c1a920708954af281d5ec555726abf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 605857,
                    "digest": "sha256:59d67ff01d31da4f7acaa33d7af8dd8ee0adf60fa7014de4b042db99abbf7ef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1268,
                    "digest": "sha256:4c1cecff3a0989446be54d475e1af39598a60989f6bec80349c917c7cce13f21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143229501,
                    "digest": "sha256:c087b87a9e138cca15233172dab5dd92979ac961896f76453c88b0809758ee0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1431,
                    "digest": "sha256:c78c397b897b9fccf42b6a0755567819af1d757401ce5f157d14ed4f400e825d"
                }
            ]
        },
        "1.17.13-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40aad00bce77945ec13ee363a8b16c471824ee1ee400fac7ea06c08127fa2550",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0cf6d0a4a675d14bfe24038b35bb1e166740134164e6252cc72c71fceb6858c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:66d81434c7db5d9a42b510ab80f6ba4853308b63f6375547414b6313e209a665",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:421fa96fb0c7081a2e1e2c0fc616badaf8dea15d6524cdf4205167708be8ca78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b48753ad08f375c81de30c0fa736b70fbd244f5c7fc381962c08521bb3c5d304",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5f663ee47fe9ea7a9f51d54245166d06ea9e87983b4e36fea3e11ed661649a55",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:003fb637c2fcb5a498ba8407197d244d7568c0ce7078772342d0f011ebf32592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:859ffbaa3a21d358936843b8b45b2ab734126b86e2d522b8194938aa3d3093c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.13-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:003fb637c2fcb5a498ba8407197d244d7568c0ce7078772342d0f011ebf32592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:859ffbaa3a21d358936843b8b45b2ab734126b86e2d522b8194938aa3d3093c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.13-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:8afcf497275317a0185bf5ce1fd7d3b9af8ebeb5455a8d25eb696eec368b9d8f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1162,
                    "digest": "sha256:1ac99cd70fb5cdfecd282c966c094eb60f6cbc9b899f75c464268a5332219327",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.13-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:c36a714b6fac9d57e6558f9547ed7a8cba40441b682443eec6160381d97934fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.13-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:cc9f329113d4604f38cbd2936915f7e1ef2184eb5d9f4a850af989cbbb7bcb58",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:77a003eb62c5f76e9d7b0e6fc5d68d06019ab43262ed0d170f2cb1b252b676e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:83391f96164101eb4e3dd8a3bb534a3dc465b12e35ec9696a0d36b881d45e057",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c237bf519c2291026ce3c55869125ff53eceb31811809e04dc04ed151bd68e40",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.13-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:5357a151849f2f68237129ff986d22e3b0e0da2f4f42bacc74ed9f873c8bdfc6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3165"
                    }
                }
            ]
        },
        "1.17.13-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:291f4129e1b74964c9bc2780c0baf6b807093e0bd49abfa92bb92266ace5a56d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5246"
                    }
                }
            ]
        },
        "1.17.13-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:af0165b8daef3835d8eb89181aa9a6bb2920cd3547f5342b9f6b981bbdac95fa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.825"
                    }
                }
            ]
        },
        "1.17.6-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:a60174b1069f3924fa8357031cc7d564efb65acc6e4098b9d1ea8b15e678aa8d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.6-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:a60174b1069f3924fa8357031cc7d564efb65acc6e4098b9d1ea8b15e678aa8d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.6-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5078,
                "digest": "sha256:d112f8d7391d348c127c3dcda7d44fbabddcc40478011aca032526099ee1393c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66212634,
                    "digest": "sha256:cc41e592f31bec309c8daf9f1261cfd38914fb874ead4a6716c92daf86874858"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70759355,
                    "digest": "sha256:ef6dc645a6c8eb0dcf5183832796198edd791bdc81e820304007edacd2188a66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146307553,
                    "digest": "sha256:2dc1361407059b252560671c74795b6c521cc699141a9ae038159102578e7575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:19ea611fb052da917f7b4808264655fd751972350ca5be849379aabd61e127f4"
                }
            ]
        },
        "1.17.6-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:a60174b1069f3924fa8357031cc7d564efb65acc6e4098b9d1ea8b15e678aa8d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.6-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:a60174b1069f3924fa8357031cc7d564efb65acc6e4098b9d1ea8b15e678aa8d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c5d05645fbc37f30d50004f7abe49324fbb7c242af75c3c502d8b04c5f440868",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c5d05645fbc37f30d50004f7abe49324fbb7c242af75c3c502d8b04c5f440868",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c5d05645fbc37f30d50004f7abe49324fbb7c242af75c3c502d8b04c5f440868",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6311,
                "digest": "sha256:f9092f86efcccc36555ba2edc503081c421986d47244f4e2928144febbbad968"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54917164,
                    "digest": "sha256:0c6b8ff8c37e92eb1ca65ed8917e818927d5bf318b6f18896049b5d9afc28343"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5152685,
                    "digest": "sha256:412caad352a3ecbb29c080379407ae0761e7b9b454f7239cbfd1d1da25e06b29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871783,
                    "digest": "sha256:e6d3e61f7a504fa66d7275123969e9917570188650eb84b2280a726b996040f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54567492,
                    "digest": "sha256:461bb1d8c517c7f9fc0f1df66c9dc34c85a23421c1e1c540b2e28cbb258e75f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85587234,
                    "digest": "sha256:c6ac0ef2d8ffcd82abab3c7575d9d17e87f0c660d431fada6c0d6d2ba61a446e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134879573,
                    "digest": "sha256:9c2512a5f6ad48d7d70750707c7aaf98a19fecc2ee307a519d0e44a383b31e98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2cf4e249ad085ac4df1d825f22e62a4efd48dceece2b70ca14e109b7ed2f40a5"
                }
            ]
        },
        "1.17.7-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e71cbe1c36f2c2fd7b8da4ff2d7db6dd29243e2dfbaa7782c69dab416e75fea7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6310,
                "digest": "sha256:36d66b7c7693eb45c16928929cd2072288fc3078b5976c55f9decb6f3e580ea1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437057,
                    "digest": "sha256:a024302f8a017855dd20a107ace079dd543c4bdfa8e7c11472771babbe298d2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7833856,
                    "digest": "sha256:289773030fdc98afe6cc53bdd0c05332ea8ff21ad836afa1d3042388953c43f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997205,
                    "digest": "sha256:81bb8b3399fe8dd0b83bd5e32a97e5183ab235d6fb4cc0b5dfabb20e6653e715"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51839910,
                    "digest": "sha256:9c63da771697b362929cecc84777e8cfbb716ff3d575b999854d83ada039b695"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68551432,
                    "digest": "sha256:d6c005da6958d64baae11733983f3e20cca6ed8ff64112a78d0b97691741da75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134879403,
                    "digest": "sha256:208a844d9e7c40a7b9ef338f7b860c8b881b0cecb6cbb226f937873e4b66f59c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:00039679598b128d57f63b19d29b0dc212930b4c1903419ec2d6e6e04599ffd7"
                }
            ]
        },
        "1.17.7-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:69c1898cc57a5eab0374e8d0749fc625f60bd80d72d43d14cf0d081d0d23c29f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:69c1898cc57a5eab0374e8d0749fc625f60bd80d72d43d14cf0d081d0d23c29f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5055,
                "digest": "sha256:8a80205f5ed1db8c74f4b670f208e705043ddabdbd55eeb00dd63eef24291d3a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66212634,
                    "digest": "sha256:cc41e592f31bec309c8daf9f1261cfd38914fb874ead4a6716c92daf86874858"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70759301,
                    "digest": "sha256:8c28686feefbcbd9e69bb094c0849a119c0ea3079f6fbc78f13d44c746753b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146289727,
                    "digest": "sha256:001633f603db9b8743a29730d6e0972e46e776f9fcb3c773542d24f8a8389787"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:890b846b1af53abffca12867b5779a6988f37eac3bbf4bbd721faeafc4d97482"
                }
            ]
        },
        "1.17.7-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:a46b03e5fb7a23e66c1d70ab1d0580861b8f57d09fefbe987c599bac41cb722d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.7-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2992,
                "digest": "sha256:1c52bdc047243fbf5db601a6291005254df1f8524bc1a8917796b1e3687c7003"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103087119,
                    "digest": "sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:942b1bd65b373d1724fe8e78014e66cced5d578bd9be83f2d8aac557c2d41ae4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1028,
                    "digest": "sha256:ec86a2b85c86ca2baef6453186c2bd635966447aeeca26fe0bf5152cc042d0aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1104,
                    "digest": "sha256:830efed7101c74ebb07b12aa465c426a991cb60fcbda757f3abc60cec9cac93e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72240,
                    "digest": "sha256:52303a5ada5d5faa934e74d985e3cdef1f4cde2432d428593f934febec1f64c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1077,
                    "digest": "sha256:bdbe17dfe1614634a7319077b457a5d66319c35a23b73827b79feee0635a42dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1047,
                    "digest": "sha256:a05adcb5ba2a9e0e745e563b2732d8d87d0c92368d10a4276ba15da227adc889"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142325392,
                    "digest": "sha256:432b989f79de84a4ab79c42d637fd849e301fb80272b5dcd7e05a15544f15297"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90581,
                    "digest": "sha256:78b9608865841bebd2912427c15f65b7dd7bd8f9cd217a99b2c3becb16ed1595"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1314,
                    "digest": "sha256:4985822bde2bb46b71ad085f12e2cd00a838cefc395219f7454a9e042d78285f"
                }
            ]
        },
        "1.17.7-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:ed1785fd5d7d8529df45d86727d3092b561df8beadc438aa236c1f46a80435ba",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.7-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2995,
                "digest": "sha256:4a5821e532569cc70122eeb50c305ab2bda5663316a40a0a42528d00c92c1eb6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117457656,
                    "digest": "sha256:3ab33c1d9cc1eaef56d5617b87373ead45d8a4ff7ab7da384afe612ba569a524",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:3ab33c1d9cc1eaef56d5617b87373ead45d8a4ff7ab7da384afe612ba569a524"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:ac090b079696d087fe9c41e3033d3b4186a2616ce644e4ff2fac3bdd36693287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:2871b098657f0c611e55ee09a63fd6317807a919e30b934eb4c73dbc4e182549"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1078,
                    "digest": "sha256:cead9c3e957a26f9ffb7d4883b70dca3ff704ade228c14aeb3b81db0f8d08215"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 96036,
                    "digest": "sha256:ead02531c26527cf501947259a4cc4142c4a0b54345fddf74196bea2554bcaf1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1044,
                    "digest": "sha256:396418fe8d36f7777a9b13b1d8bef7bbf1348f27a8244d4bc9f5fdbaac78aae5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1042,
                    "digest": "sha256:15b657ca61ccd60a4244a9c977acec36acdaf37357f8bbe34191041f789d3249"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142328308,
                    "digest": "sha256:07ab09006c20731561d4f2106aca6b82cd8ce7d45b80a2f711909a9f13d5d897"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 93825,
                    "digest": "sha256:9d5acfd4c9225f07e390d4c7f0472d02e54cd33d6c4015d50dfc6326acd25119"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1338,
                    "digest": "sha256:fe8ee50cb6e115bbf3d294d2b4e8576d64fe8927bb227a6e0976b67e79c30019"
                }
            ]
        },
        "1.17.7-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5e4cad11a70842fb5cefee1027364970ef12a8acd362e93bbb6dc70aaef742d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6341,
                "digest": "sha256:205b6a0cbbc0baa580ffc1fcef827596d9f834bca30be60f5e23e8d2c8c35d93"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45381397,
                    "digest": "sha256:a834d7c95167a3e129adb00a5ddbaf5d3c035ad748ff7ee1273373d150457820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11301881,
                    "digest": "sha256:57b3fa6f1b88b95ac6adeafdb618011e672d4c9f5637b92be373276ee7e066dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342406,
                    "digest": "sha256:778df3ecaa0fbba90d3a7d88947a4376ebdc7e2fcf8a4b5ce43b3c699faadff6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49762420,
                    "digest": "sha256:d353c340774e155d838e2e0f0952201366cee28591b065b7d328fde7bc72e034"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57633977,
                    "digest": "sha256:c29fee20e9b680253162975fbcaa7877a04e6da2b261d0b79dba832df6c7fd69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134879135,
                    "digest": "sha256:98281380555b3b6f95aa17d7950f8df2fe0daf7a838d3ac7bb90f2045fe727a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3af12ec96320cd78df19ea6bdbc6b368c4745d4d22570659e5189b738ce70870"
                }
            ]
        },
        "1.17.7-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:455a9e2a00062d17eceaf111fccf62d0fde52ccae1ae3d0b4aae15e74c0ddb9a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.7-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7252,
                "digest": "sha256:0cab8f1bebe173193afb54232e5b0ad2992ca4da556d4952ac5c85c3c1642db7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 995381853,
                    "digest": "sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:0c2f0cc014fad9b689a8b76c38a1e339f68d2d9cfe63c6caca2fe1074846e1cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1299,
                    "digest": "sha256:f7afbdb4d7d1a87bad845b07899672efd355c92355bacede0670bdfe3f81f3ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1325,
                    "digest": "sha256:950065b88cba82b326d0c5327ae0efd268e50af519dc3ea5e706f7476f4ff8ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1370,
                    "digest": "sha256:8cad5ec1bae65a145bec2f8d28f3ce5e94086c9ea171de1b9b71aeacd53ff1cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1369,
                    "digest": "sha256:61e13ac032a08191c85dbffcf95838ecee00fd2e028764bd7362297fe47b1745"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25479143,
                    "digest": "sha256:6656b7bc3421bb1ee70f092bc04e452705462996db5cd3966a0ae1abb55458e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1336,
                    "digest": "sha256:56c326f6763fcfb599ba8b4ff2bcba8ac914ab57417cf3f19e2be2830a99ed25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 389279,
                    "digest": "sha256:a739a1a5277c2f0974a790d5c474441211348128db1731e9c10227d32d0a7586"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:82bb84cccb19b7faf478e2ced06c4fb14c49b91dd315c3d0c75cc189f7b83a00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142746328,
                    "digest": "sha256:ca6a51c9103e7e9015e6495720036b3dd29d49d3e86bb998ed875eec7c3214f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1443,
                    "digest": "sha256:0fef6d64bee8dcda61db0a0731a6ddc3844aeca6abf129510705559a4ea683f1"
                }
            ]
        },
        "1.17.7-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:90f7438ee35c2e6cf784549806a430814403ebfa59816b66fbbe5683fe6d3601",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.17.7-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7242,
                "digest": "sha256:b1bb01e841d67ccf9b8385c56a11b2cc0733b695d50bb572e11097910dba60d2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2205612730,
                    "digest": "sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1407,
                    "digest": "sha256:4bad6cfd760abb9aa5e2362672fe444b7e83368634a8311e407967a6365908f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1380,
                    "digest": "sha256:0f792725e47e6087179cbe06a8b05a0f84687d03a4881b61c566a249d9713b05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1418,
                    "digest": "sha256:12b576c5f16c2c924ec7278d531667d18243238b533a5eb61e29b19369352a6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1392,
                    "digest": "sha256:c4c9517a742c83cf7b3d7c6f8a0a0bba47fde7550955e6bb968b7d3cb42d5c39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1414,
                    "digest": "sha256:4faee165473244343c9e227fa8bc835a89a41daf9a946de8645ba58351c966df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25456696,
                    "digest": "sha256:648615cf8016b0e98b5088f0ad12d4ddca37b6ce9bc2c6c9e75577b36613eb81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1404,
                    "digest": "sha256:f69c09d7a4089021015153e3be3c26e0fb6b6cbbb5718ef30d02b0698844c4cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5936536,
                    "digest": "sha256:10667334db7e78feb13ef60d35a7394e3a5d12cf5405b3fa33872d71bb913fbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1417,
                    "digest": "sha256:d1c9360ad09baf95df8a09c688739bd9ca78d97ec7a975ad1ce7817b78a80bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152970161,
                    "digest": "sha256:1d5461d28b38acd87678baba32ba73423e347f355957e223511fe75b1aa6b908"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1570,
                    "digest": "sha256:dcc26c19fed6554d741f80b96b624c38949bbd2e954c4f90123512607d196254"
                }
            ]
        },
        "1.17.7-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:2c8e628a6685b03357e862105357ba182e2359bffbb6a4596071b27355886c1b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.7-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7253,
                "digest": "sha256:d1c03568e114e8397a683e271cfaee1594c7daf78a4def6ce1888cf6484014b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1251699055,
                    "digest": "sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 963225591,
                    "digest": "sha256:898469748ff68223ab87b654b29fb366c1f4f2b7cfad7a37426346ea16db8dfa",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:898469748ff68223ab87b654b29fb366c1f4f2b7cfad7a37426346ea16db8dfa"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1276,
                    "digest": "sha256:a0f7ea32bbac2fe33c2f5c96e68d5689c2591737368e96a56df77a79158469f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1290,
                    "digest": "sha256:62c140a99ec86db26b61081c355cb2e6e6d871738763b21f9d7a9787332a9fb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1283,
                    "digest": "sha256:fcf88e41c1833752d27683f04ddcc49d4c6f32b4654c9ff33959086f7b4a672c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1278,
                    "digest": "sha256:0c6e83e249679731c4d33a7f0ff33b54f8fc2bb8fcda8bdd82973813d06b20e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1303,
                    "digest": "sha256:e46337dd174b3eebcfce16c3357ad9e552c19124848b446ac63d6f26d9268f6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25719724,
                    "digest": "sha256:51efbce309378e23f524d6fabae6e39243c912125c51d2b66520bc2215ecd617"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1278,
                    "digest": "sha256:0418c4b3d8bf9d320d145b1e2ae09f18142b68a6835b68e834d62d26c6ea70ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 586396,
                    "digest": "sha256:ecd2612c7d556c01b82d522ec930d220038aa90d9bbcee16cc589977a20aa54c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:4480b104b10b5bb018979b015d1e1fa3b320e9243f0e62262e65c38dd3c8e571"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142980983,
                    "digest": "sha256:b06f17bee8cb38bf22e9c480e0177039e4039c4a95b913d3b5079923a815b758"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1432,
                    "digest": "sha256:260f9281a20131b27d17c35e969c89a1c995cb92b4b7ba225367b85138beab3d"
                }
            ]
        },
        "1.17.7-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c5d05645fbc37f30d50004f7abe49324fbb7c242af75c3c502d8b04c5f440868",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e71cbe1c36f2c2fd7b8da4ff2d7db6dd29243e2dfbaa7782c69dab416e75fea7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:69c1898cc57a5eab0374e8d0749fc625f60bd80d72d43d14cf0d081d0d23c29f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:69c1898cc57a5eab0374e8d0749fc625f60bd80d72d43d14cf0d081d0d23c29f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:a46b03e5fb7a23e66c1d70ab1d0580861b8f57d09fefbe987c599bac41cb722d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.7-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:ed1785fd5d7d8529df45d86727d3092b561df8beadc438aa236c1f46a80435ba",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5e4cad11a70842fb5cefee1027364970ef12a8acd362e93bbb6dc70aaef742d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.7-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:455a9e2a00062d17eceaf111fccf62d0fde52ccae1ae3d0b4aae15e74c0ddb9a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.7-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:90f7438ee35c2e6cf784549806a430814403ebfa59816b66fbbe5683fe6d3601",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.17.7-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:2c8e628a6685b03357e862105357ba182e2359bffbb6a4596071b27355886c1b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:10c2ec2332df515efee6b4ead979a7aa1b49f350bdbc997973b4a41c7d0e6be7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:10c2ec2332df515efee6b4ead979a7aa1b49f350bdbc997973b4a41c7d0e6be7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:10c2ec2332df515efee6b4ead979a7aa1b49f350bdbc997973b4a41c7d0e6be7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6266,
                "digest": "sha256:7c43f2efd3ea695a1473509673b9aaebb0defa83cc638a3197b899aa0a3be928"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54917063,
                    "digest": "sha256:e4d61adff2077d048c6372d73c41b0bd68f525ad41f5530af05098a876683055"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5153034,
                    "digest": "sha256:4ff1945c672b08a1791df62afaaf8aff14d3047155365f9c3646902937f7ffe6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871885,
                    "digest": "sha256:ff5b10aec998344606441aec43a335ab6326f32aae331aab27da16a6bb4ec2be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54575903,
                    "digest": "sha256:12de8c754e45686ace9e25d11bee372b070eed5b5ab20aa3b4fab8c936496d02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85587384,
                    "digest": "sha256:818e914277cbff6c265f9fd26ca96bc8cbba56592c10894d93ebcd1cc500e4bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134940104,
                    "digest": "sha256:4c8b34b239628ccaddf42738983c3243e15d2dbc0c0983a1f1fce9fe56a053a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2ddac309ff7e6b0d5a503be870ce67dbd5cbedc10d4cbee0368875e824aeb53f"
                }
            ]
        },
        "1.17.8-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5a3d20e17cc3193d9604e0f0e33895f2a108da9c83345803308740353d173845",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6268,
                "digest": "sha256:ead88aa1eb4c557b9cef760cac5a37e3b7ebebea77bd2e23b873349beba60beb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437046,
                    "digest": "sha256:1c9a8b42b5780ac49c71f392c9512c0167ecc23de9b30b1b5f38747b73097d1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7834052,
                    "digest": "sha256:163066942b43a00ba7f4674c4c1ca90eccc8d99366a3dc47cb64e06ad79c36e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997298,
                    "digest": "sha256:cf70e03a8272d87e65c7b1592f97f6e739cf1f5d13cc536670f41c28b086b4cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843267,
                    "digest": "sha256:86c5ff33549498a7154441116b5843e184c1f4441df2eab519ad2c498cb8a716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68551949,
                    "digest": "sha256:e0b068e44a95c868cb7a7fc4fee93d8b6f4c1c18eaac34d28093ad792b44e00e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134940249,
                    "digest": "sha256:ad139b9114778c66ec4068fbf78c807b217cef0c83233490cde05a4f3e45bef6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:e8fea30320286f34dddd261de7bffc5dd5600129ce4c8e84f7738d6c9298b38e"
                }
            ]
        },
        "1.17.8-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:c9a7380ef060fff10a96fa03fab603e38e33e72e87c990c3f9cd9eecb45eda7c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:c9a7380ef060fff10a96fa03fab603e38e33e72e87c990c3f9cd9eecb45eda7c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5034,
                "digest": "sha256:4fbde98c907c4723292e3569cb13680a0788ff497b231270d34b1695a960a283"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66197134,
                    "digest": "sha256:299a26d5d2f1c5148f3592ef40d3ef817f858e8734b73915fb60c5bb55318929"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70746499,
                    "digest": "sha256:9696840a42da24dfcc75e9e76e4ae8198a9f53c2fc7a5d7f091c8636072664d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146361414,
                    "digest": "sha256:8a2edfecefe891a909b0bcfb83f783098ae76857bf70f0400bdc3582a38fbc48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:808571b18b7be64ae97b6be8c1f6f8b54675b16e6fb7199a400f80d9b424d244"
                }
            ]
        },
        "1.17.8-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:9d50594d731b83a72fcc2e9b8276fa2fb82d5505a691ecb671ed7e5757331e87",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.8-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2993,
                "digest": "sha256:d2f47cdff387d2d5a60e440841ee87ebe89f6a9087d193156c8a954138b415a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103087119,
                    "digest": "sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:bd0b37167cd3d731eb15196e123df7156b5a35597874d3016a1a4298c46fac3f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1036,
                    "digest": "sha256:7cf19cbe1ab4c8f4b706da594f64500bc2d0240e77afddb358c0afe12eb477b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1084,
                    "digest": "sha256:248fc5fced20f5109d49cc57876ce6ba333d8e60a70876207b445d3bee835fca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1074,
                    "digest": "sha256:137e5df51cc30b7f29ab9a88ecae19c6b5fa677caf28a0cf7198f0d7643bb7d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68524,
                    "digest": "sha256:1bbe1d9dae343336db694ffc3aec3dace0f9b8d83e4122c32fb5238cf2f5a7a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:034155785647f27ebe9ee4dc7b113279b6faa225c7ad553dc767320a98e4c00a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1110,
                    "digest": "sha256:743e3e99712822599459c0b1f456f1a449d3215b977cc90f4daa44726a2db2c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142388476,
                    "digest": "sha256:2106069f9595080b561b5eb850c299c13a235cc28c3d570d088971c0b39ab2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 69786,
                    "digest": "sha256:8506e915727161c3083d6c2bae91993ffa47a020f13cafe6bbc1a7791095b8de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1272,
                    "digest": "sha256:31585a95c6980c396dad950d83c8c5daed71d15d1d1dd2bff9f9b7d8e8a191d2"
                }
            ]
        },
        "1.17.8-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:b03b07d2734ed072de35a51953439bd9c35d8195a1ccaa235736424695b80ce5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.8-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2996,
                "digest": "sha256:3683f8f1f2d50b7c7c9ff0103029539ebe595ac8244f34275989279c86b20d2a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117457656,
                    "digest": "sha256:3ab33c1d9cc1eaef56d5617b87373ead45d8a4ff7ab7da384afe612ba569a524",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:3ab33c1d9cc1eaef56d5617b87373ead45d8a4ff7ab7da384afe612ba569a524"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1064,
                    "digest": "sha256:38126b84f1c0f1e269f7bb73bf8df0b64972bfbaae0e8572209e60574c40d145"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1034,
                    "digest": "sha256:1187420ff9c4e6420a98753cabdc7d5c2fdbf9ff202343994017b1118209a7f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1008,
                    "digest": "sha256:c86b87ad2826857b1caade671f3e1599c4ee6a2a7eda6082ae4176c4d1c6ed5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77434,
                    "digest": "sha256:263235f2a8a3367e434423a451c95618d00a853f13e9b19b4b11c971e018c2b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1069,
                    "digest": "sha256:f496862abd02949887ef4bade74d70b2c4fbc09391c9c150419a4c584f07d06f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1064,
                    "digest": "sha256:6a613e5e9c7beeaf310397042a2ff9f820809873d2ca4719029e6633692efd2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142380599,
                    "digest": "sha256:3d5afc38dda28b867ebd1809e26e78b05b90cb98bf86415a729aea9d1c161b84"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106734,
                    "digest": "sha256:89464013da748a342a1dd1b6d0daf8b7ea9a1a6e724fdd7f6723ceeba44fbcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1232,
                    "digest": "sha256:0ebd90a77491aaca7e293ddd3c2e065cf09eded6e3398aa4445e8f607b20703d"
                }
            ]
        },
        "1.17.8-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:e0843fff25c0404058c7c5f6188bd5ff2c51cc077318c79ddd1e21139bb89a42",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6300,
                "digest": "sha256:c8298d092e59d56583dab6ee6929f47bb265947741bed8bec4a8d5942ff67556"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45381330,
                    "digest": "sha256:ec52bb9d0b765b0726e476d07a8d9b2f808cf7b380f27c1544afa286fe5578cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11301983,
                    "digest": "sha256:f289049e62eb62ae7bd7a8f612cd5b42f36d423951256750f08baa96922b8587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342352,
                    "digest": "sha256:1e926c3d7ccab64c93f5552646ea61693989e06e27abf8cfdcbd0aad8e78c71d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49762476,
                    "digest": "sha256:fd63791ebe323af1573a61d3e6c93bcf5c12da3b8603289c2b9e8825b045bd3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57634115,
                    "digest": "sha256:47dc2fe66d60906803ad77d939b8db7128aad43660aa65ff6314c98156b48412"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134940363,
                    "digest": "sha256:f3aff6d371ab776a20e5081bedec014456c07714de30ae487f41e7c5195a233f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:1b6c8db78aa22224718a7797b2a3d054a04074f4e05a5f6a16b8c16172dd9f45"
                }
            ]
        },
        "1.17.8-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:11bfa12a59235e2620df7efb8ce583df45eddedd82a821ed7e174a9c8da84333",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.8-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7252,
                "digest": "sha256:27a1c797ba6767d3d982c38b249a1197027ee2cd88afa219eb2437a2d1332015"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 995381853,
                    "digest": "sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:1bd78008c728d8f9e56dc2093e6eb55f0f0b1aa96e5d0c7ccc830c5f60876cdf"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1299,
                    "digest": "sha256:c00488df77dd137f4fb91fde09ead400445fd2e7fd99e1fa0ea1db0bf15c7bcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:9d8bf57ec2eeed02fbcdc3f407f8b67767d75e7817a9680e88944210671cdd8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:1b5fbf490751143b5e0bf9ed68b67ca6556722f1fcfe15efec47193baefe8f57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1299,
                    "digest": "sha256:2af918f378d84269c2c97d428d5f3ae1b054a822666f61b87068657b986d17cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1330,
                    "digest": "sha256:ef1d02d9c4e7356fcfe134f5a9a5a74d299474b391174725015c72800bac357b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25478305,
                    "digest": "sha256:363378bbf870c5f698380e2874ec1987d4adc7dcbf5ddf655c0dec315395c224"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:bfde47c24e3dd9008c00c42fdc482c440f5667cccddd8dd5d92017995ec551a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 388052,
                    "digest": "sha256:ba5630118e3a038171a247e96c26b5a0b1d884ba20090f9b24b51e46736e6291"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1319,
                    "digest": "sha256:3a765ba447dc6e578c16c1ecb417541f79627f4a1c057a3d56a822854ee705d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142794515,
                    "digest": "sha256:22d9382ea412cb05a030f17f15bb19d7e2665d8d54ea99a7e7e8bcce279a411b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1444,
                    "digest": "sha256:6685eecb47bc424a833b6856deaa98b3cc5a6cfd04f83d909b528a069e6d0256"
                }
            ]
        },
        "1.17.8-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:20f8fb9b13a90081dc68aa270ae7ef81fcf1d8002f2b306e5d7c4cfc06c52748",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.17.8-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7242,
                "digest": "sha256:22f1edbbefee13a76c9d44f4a2c9867f1d7e8fd9642ddfc318a9dde742bea1cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2205612730,
                    "digest": "sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:09f55b4e451046a1ab7cf4005d33599e7fe5da96e602505167c251e768a20dac"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1435,
                    "digest": "sha256:fde9b18780e779d82c0a858b499c654bb43d5c92690d2b0a3c8fa5773a74b09d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1424,
                    "digest": "sha256:11e64604983c447b13e9043e3655cdb543f3a30b3f3fd142713de20450b892ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1395,
                    "digest": "sha256:5b07f1f640f203a9a45c36101ac86f5408d812b472d6c0254c08eb0e8835e8e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1425,
                    "digest": "sha256:ee1e9e6ddac02036562db4ed9e1831ce886db277a57251db873483df21377958"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1426,
                    "digest": "sha256:f0f23c89d65c7612292f4618201ebf634e2293562573fb6fba3384cf8244306e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25459386,
                    "digest": "sha256:dc9157e03b6c9a29fc64d0264a4448ab4cdc950a19c6a8ea6b3a3675e50d6006"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1397,
                    "digest": "sha256:9e9bbd6a39ac06a0bfb97576fe0beb891c1aeab46281a4710f26ca84d9a3e5ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5971746,
                    "digest": "sha256:787db1496f24bb3e230241be2c6cfbbd3bb73da364c996e7a1776ccb1aa7cb5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1430,
                    "digest": "sha256:4b0e75a7e201155b543418f9d029fb574b6d86615e92a4cf415e48b37a96ffb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152924035,
                    "digest": "sha256:bdaaba5b7d7f5b4c2a9e558fccbf9c9a2917f04c605f424c67527b1e4e3c2bfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1563,
                    "digest": "sha256:fbf85d15f6a4b6f8fe8c93ffa9285fd142c11a59b2629de04f414a127ad9ab21"
                }
            ]
        },
        "1.17.8-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:c1d39d72109fa6de72a235ba0916743a99aa858a60b1907c79b2205b4f10ca04",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.8-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7251,
                "digest": "sha256:e901b3c81415cc5dc0811319801a6ee3c5e8bfc2d978d388290f7af2636b07a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1251699055,
                    "digest": "sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 963225591,
                    "digest": "sha256:898469748ff68223ab87b654b29fb366c1f4f2b7cfad7a37426346ea16db8dfa",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:898469748ff68223ab87b654b29fb366c1f4f2b7cfad7a37426346ea16db8dfa"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:765488c7f8cc7051f57fb23220bb31494309a8f8865ceb02596305d1183214bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1290,
                    "digest": "sha256:0338acd15f5300c4b4183a9cd8ad7b9a12864865c0ea8f701f24af396f3c0f36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1267,
                    "digest": "sha256:67cb3561211ded72d7f06ebb0bb8f93151ec261aaf439bf6ebcbc232b82d8130"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:9d7a45de3a1b353cd384cafb73ec0830a47cf900bf718b0e898bc23db3b3a1bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1265,
                    "digest": "sha256:3038d946b42332eb0ab72a46023a110a771ee5b5679150ff7d1cc2424b56cc2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25714375,
                    "digest": "sha256:171e1db7d6560d7d5c5474aa0d798097c739d92a6b6b36d3a95e2c73e8f85b8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1290,
                    "digest": "sha256:5a8ddcf91821414e1894559d72b2e24381ab4021f8c07041279e9a85190dd3ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 581724,
                    "digest": "sha256:9d62947bdf1667512601b41cb3f1b55d2b2313475462d8a8aa5b2ff0da4d22e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:ede0256082d0ccaccee0605af5c556f6e557d136f58cf5090ad25916971ef32b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143041219,
                    "digest": "sha256:771c8e099b9a48765f9c2f22eb3c6623245a99e1c4cbb1aff173d6f9568f97b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1437,
                    "digest": "sha256:9748a3040bb31828a76bdafe4b70c24bfee3a8b248b20ba0cf96be82ea178bc5"
                }
            ]
        },
        "1.17.8-2-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:35edd0f22e6652dc34c3b4511f44c08dcc28141e3acb66d92b638392dca9a795",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-2-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:35edd0f22e6652dc34c3b4511f44c08dcc28141e3acb66d92b638392dca9a795",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-2-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5035,
                "digest": "sha256:80d4e7035361dc8a909fc9dcf994f5fb97fc5897bee7f1348c55ae67b7d57737"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66341387,
                    "digest": "sha256:1bc9e758c51a40cd73027fc05e0d70ddf8e0cf6f06a80a00c5b3da646e7f73ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70750453,
                    "digest": "sha256:1392770d5f077a75f57165fe65b80feb17be79099534333f8b32ddfa652b9496"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146363698,
                    "digest": "sha256:9a619c7962c2f553555cdf3f7d1fed2e9a96d17f39dfb9936e317310da70004c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0726d15486e26c029f25287d932cc8230977a46ce78d279d20400832209c2c24"
                }
            ]
        },
        "1.17.8-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:10c2ec2332df515efee6b4ead979a7aa1b49f350bdbc997973b4a41c7d0e6be7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5a3d20e17cc3193d9604e0f0e33895f2a108da9c83345803308740353d173845",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:35edd0f22e6652dc34c3b4511f44c08dcc28141e3acb66d92b638392dca9a795",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:35edd0f22e6652dc34c3b4511f44c08dcc28141e3acb66d92b638392dca9a795",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:9d50594d731b83a72fcc2e9b8276fa2fb82d5505a691ecb671ed7e5757331e87",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.8-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:b03b07d2734ed072de35a51953439bd9c35d8195a1ccaa235736424695b80ce5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:e0843fff25c0404058c7c5f6188bd5ff2c51cc077318c79ddd1e21139bb89a42",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.8-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:11bfa12a59235e2620df7efb8ce583df45eddedd82a821ed7e174a9c8da84333",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2565"
                    }
                }
            ]
        },
        "1.17.8-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:20f8fb9b13a90081dc68aa270ae7ef81fcf1d8002f2b306e5d7c4cfc06c52748",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4946"
                    }
                }
            ]
        },
        "1.17.8-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:c1d39d72109fa6de72a235ba0916743a99aa858a60b1907c79b2205b4f10ca04",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.524"
                    }
                }
            ]
        },
        "1.17.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b0d8476a3377ae42952692ff2d909e8a348abfad4aa69bc7c1d2915c38cfeabb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75bb23d42757e4901f79f97dfede4f188c63fd0d8f14392322e2fa15304e9138",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:97131737b213bec54833fd7432b26ebf29226fb919b2a88d2254a552c943c028",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b0d8476a3377ae42952692ff2d909e8a348abfad4aa69bc7c1d2915c38cfeabb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75bb23d42757e4901f79f97dfede4f188c63fd0d8f14392322e2fa15304e9138",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:97131737b213bec54833fd7432b26ebf29226fb919b2a88d2254a552c943c028",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b0d8476a3377ae42952692ff2d909e8a348abfad4aa69bc7c1d2915c38cfeabb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75bb23d42757e4901f79f97dfede4f188c63fd0d8f14392322e2fa15304e9138",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:97131737b213bec54833fd7432b26ebf29226fb919b2a88d2254a552c943c028",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6763,
                "digest": "sha256:c9120804e404e06d828b2b1b1cad015c9082e8fef8650f5a75897a3746912bc2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54941777,
                    "digest": "sha256:6aefca2dc61dcbcd268b8a9861e552f9cdb69e57242faec64ac120d2355a9c1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5155716,
                    "digest": "sha256:967757d5652770cfa81b6cc7577d65e06d336173da116d1fb5b2d349d5d44127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10874928,
                    "digest": "sha256:c357e2c68cb3bf1e98dcb3eb6ceb16837253db71535921d6993c594588bffe04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54578663,
                    "digest": "sha256:c766e27afb21eddf9ab3e4349700ebe697c32a4c6ada6af4f08282277a291a28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85612250,
                    "digest": "sha256:f29b795fd785716250dc923046e0a2af7ac49ffd3d383ff8a317d5a74e7da776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134990318,
                    "digest": "sha256:1a77d73107999cd874b8a91140d55c883ae95703111a27c701995c924b2b559a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2dfe544021ba6eb9ac37be6cced251d1df9d455c9be1f37c232a65d6370d2f09"
                }
            ]
        },
        "1.17.9-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6765,
                "digest": "sha256:93c8a6b44d0ef3c8b4bf0f27ad6221cafabfbf19a732cb583d361d636c601c40"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50133696,
                    "digest": "sha256:0a2c02101ee4340d4a9ebb962e9331486e417a3835c9adefb9badd2f0c116ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924850,
                    "digest": "sha256:301394875428f05a3ac7068600f0d729f8c7df313e7c9574aec8362194fb4e56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218007,
                    "digest": "sha256:44f80b9e8049b2a4b26cc100bccded1ae7d0bc8ff2e1fa9fc7e255631328f0af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50327803,
                    "digest": "sha256:08bb57ee492f81d7ea44b47b65fd9782dfb9241e2f5c66bd60aaba1aa5d4fcb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64562417,
                    "digest": "sha256:78796d3fd2db5b5941eb51509c8684ce28ee1fa641dc2996fcd263332f335989"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102971062,
                    "digest": "sha256:5b658820268cde191abe7318b044b97015144c1d487424ea69688828282d1a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b19038fc74d7bbf4f449fec3b60d6d2b5c419e9cda22574e2ccec5122d98f4aa"
                }
            ]
        },
        "1.17.9-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6769,
                "digest": "sha256:44929da81ed2e3628a75099f455d76bb9559ba69daef49ec1249f30fa93dbd19"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53633096,
                    "digest": "sha256:83d5dcfea08e6927083bc886bf182fc39d87bb04b54b63002ac0c4c0b9aab682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4938663,
                    "digest": "sha256:45cfa86b7b1aca6d694057e4d42ee1440527f41c00b9e577df729244380c9eba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10656971,
                    "digest": "sha256:5c79b19335f27cc78840bf9159e875322f3252ac06113c73756f9d4fba905f9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54672934,
                    "digest": "sha256:350ecaf08eac09037b05465ab97a1b8f7bc9b7a9b1fcef900dedd7dba9bbcf4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81049819,
                    "digest": "sha256:a64bc1c08cecaed28cf9101a54b0b78e7d1310708b2f3db54615ff6096a1d16c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127568916,
                    "digest": "sha256:dff87032e3b4730b56beb30a8265ba7e05a2cbbfca8bbe86474f9baa20f220b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:18d50833c7710a98a3440e86f023f1cb4458da0ce8d8aa1ff1da62a4bc4d9280"
                }
            ]
        },
        "1.17.9-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0c1c79d1831eab2828132399167212d9fd11baf7590932cfe9fbb49d2336f876",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4337bac9cf1d7dfba6a640cb1d677b2d321ef31c4ac72e686a6dd2ea2e531d29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e78961a5d1d66ab2271e86ae1d4695b3db03441cd4de3e615ec1fdacbcb528fe",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6760,
                "digest": "sha256:63eaf45c7cc8dda1c400cf1c575e274a9cec3a8395ccfa4f72ab2ba39e37bac0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50436985,
                    "digest": "sha256:85bed84afb9a834cf090b55d2e584abd55b4792d93b750db896f486680638344"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856378,
                    "digest": "sha256:5fdd409f4b2bf3771fac1cbc2df46d1cbb4b800b154cfc33e8e0cd23e67ab3e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997231,
                    "digest": "sha256:fa3069e6cecf9d5e43ace0a925b53849b2fd189ef41883d45d8f2e12213c2c06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843794,
                    "digest": "sha256:4ee16f45eff97cbe98b74c63ca2375b2c6b2592cd765a86df098f731baab13ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68576088,
                    "digest": "sha256:82e4550ec040b13bd816a83cbfc80e81e22b40cf72cdfaba04db55fbcb525ebf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134990427,
                    "digest": "sha256:dbf316a4bd79984573ae4e6c9f3994a059017ba4c13fc72839c798c02d01e5c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:75c6bc92c3c2fa35eb369113d9e85a48f6914b751c11f4913f8935011b556022"
                }
            ]
        },
        "1.17.9-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6766,
                "digest": "sha256:d9c56ac4ff94dd66c4c16bc11a055a4f3ccf6785006b9c4049b8da275d337c0c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45908143,
                    "digest": "sha256:ca53ad6266ed4ba4323f1553d8b226d0a180384cd290a8361ab19347f6d761fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145008,
                    "digest": "sha256:88557019ac316ca250696b933e42aaa72ec3e8fbf729c5533426c4086c2fdbfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343718,
                    "digest": "sha256:15a4c4d54010e8b79170bb4258d395325738492033d7f8f54b6e0e833848c969"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47357445,
                    "digest": "sha256:982abaa2631ddfdda5b8470dc4b0b57ed3b1d10e77d38dca63de7a440db0a2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53049999,
                    "digest": "sha256:aba74ba3ff86f0b750cf08dfdc8a3fe1165648e285aa7dd7768d9fefe831548f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102971277,
                    "digest": "sha256:246cfb77f11d70470d6bd37891877c6e7d2bb9b10d1247b16aa485a822c65548"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6aeb48e29df41127340f39166e958234938d6e7d4cd19788e9ed0f45d3e93182"
                }
            ]
        },
        "1.17.9-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6770,
                "digest": "sha256:da9241efcf99aded08c0142bce26e9130cd1593b18d86ee8863922f5c9798adc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49227738,
                    "digest": "sha256:b9f330b3a7e234282d632d95bd19a655cf0e06c1a76a51d0f73b9581be8f851b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7719745,
                    "digest": "sha256:8a80651adb7e52d8ecd27d43b9e69ada9ca277071ea09607121d0076de36480b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9767312,
                    "digest": "sha256:a7b38ee622cbfb492ebc3bc598771624fba7ef1830b4e0f9737f2bbf4b6ec0ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174549,
                    "digest": "sha256:fc937997baec7d2d040aba23614db074862008cbdd69b46d2baea31711d58a50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62442144,
                    "digest": "sha256:e27f8eeb37b2bf26ba80d386efbfdf0a3efe667aaa0b326e474b0502912c3b4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127568800,
                    "digest": "sha256:dd5e5862c7453a80feb8329f21830d5d3f35577f050627c9606b12684cfe681c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:042f9af730eddb79b39a31883beaa1f21540a9e5b01845f1623add28c666631a"
                }
            ]
        },
        "1.17.9-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d8fc0f27d445428900cc1f3f26cb11e7134e8c3f349f86029c11075d5aa19790",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d1efd8c8c1b2e23610e384362d5c30b1fc5793a203026398b42eeadddda3664c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.9-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d8fc0f27d445428900cc1f3f26cb11e7134e8c3f349f86029c11075d5aa19790",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d1efd8c8c1b2e23610e384362d5c30b1fc5793a203026398b42eeadddda3664c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.9-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5285,
                "digest": "sha256:24225c4c71dfa9c7b9b4c3c3dc106b938665d9d2c7714021a1c0fc25263b9a2a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66341387,
                    "digest": "sha256:1bc9e758c51a40cd73027fc05e0d70ddf8e0cf6f06a80a00c5b3da646e7f73ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70736554,
                    "digest": "sha256:d1e4f6cd3fb19e6aedbd35fff4e61e5cf989ef5787c682a3906d0227cea8ac57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 146415483,
                    "digest": "sha256:479bfb9ccc89611994fb631b57e861f2fb4ef45039a050ae1f670f0ce06755d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0935dbdacb29b0e4b6860b9f98ca39b01bd3129a1dbab21d2a895d965a59eabb"
                }
            ]
        },
        "1.17.9-1-fips-cbl-mariner1.0-arm64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5278,
                "digest": "sha256:a32d94ed78f8cdfc6343afbbfb9820891a83b3cb8041a4f8cfa0defcc37aa724"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65053549,
                    "digest": "sha256:055b1e9976930afc92226baf0eb7fa1e3b556546516a565d5e1e022f927b2010"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61618537,
                    "digest": "sha256:590b800d418d6718f3e4cb213f494b917c0ba60a18459e73cdb53758277252de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 132762177,
                    "digest": "sha256:5b211e2a3fa7f3d27c763fdc5d2de2f0bac7c7d42db924dc724f890f81025863"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b535312a603fedbb29e559355dbb27446fd0170defefbeda165b17227ad37269"
                }
            ]
        },
        "1.17.9-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:c5429abe1c19c19a58507ed3868a861290001edf8c9be03ecfdd71a06cce1538",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.17.9-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2993,
                "digest": "sha256:95dfd4f536c60f5c31d9ec30c8003bc39662fedbdb44042b345f715fb5b0f46d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103096169,
                    "digest": "sha256:6fc97003d8b7f593fe071cf3ea64f3ce760cc060f3402bb6b1b849c040e222d5",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:6fc97003d8b7f593fe071cf3ea64f3ce760cc060f3402bb6b1b849c040e222d5"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1027,
                    "digest": "sha256:5725dcdba1a7c88f7587ab984d3eb55bf41d72bd78416c8a850708cb0f37efd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1040,
                    "digest": "sha256:71d329f97d02ce9b54cdcb69f08ad7e48ffb6227a67d2f83be573d938b85b2a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1017,
                    "digest": "sha256:cba09ba345ea0ae01a85bde2acf70bd143b2ef33a8965def4fac61caedccea20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68626,
                    "digest": "sha256:803872c4ea638fd3e413a27b8293d3eed0502fc02311e4de4b3bb029f544635b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1035,
                    "digest": "sha256:fa6e8795e554d01c8587e88fa3911e9313d86cea556b78526c26527b68c842ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1020,
                    "digest": "sha256:9be5c0822b38ac378a292b428d7de55634000fa80c59cb9b54b0a47e6afc9fe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142407756,
                    "digest": "sha256:1414ed9134b3fcdaea57b0d5d6535d0fe67f6a73f4ff9b6a7cc06b871d3ad1f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66162,
                    "digest": "sha256:03c998b6ba8c676a30ff96a730aac8bf303caede3f7e87c93d086aeb40a3bf29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1223,
                    "digest": "sha256:b8da799416b411db76a65fd1b483d13abfc6aeae1e94399f86b37eba91bc735e"
                }
            ]
        },
        "1.17.9-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:e7236c1f94e417cdbb4f4c52aa3a3b72bb1b247ce75678ef91298d4b6beb41a2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.17.9-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2994,
                "digest": "sha256:3296b1ce8e9ba15e85498f9e4a93379dccba5cfeed179aa83ca179101d90d163"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117579416,
                    "digest": "sha256:5ee98801bdad72bc36678d072c89f7dd482fee29086c1d9c8ad6ff0cb5afa385",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:5ee98801bdad72bc36678d072c89f7dd482fee29086c1d9c8ad6ff0cb5afa385"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1044,
                    "digest": "sha256:0d88a6056e3b9a60d10bc4620b811e40d7471c45839b0fe45939bcd62d78e18c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1025,
                    "digest": "sha256:c801c78a7e246343a23acd3997a96236d6d44dbc61a05f23ff9912c7af3d4aef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1048,
                    "digest": "sha256:20647cc56271c01d42d3be9da1249342e08b07ee819275398182eb85218b8212"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82632,
                    "digest": "sha256:cd31da47829db4d89d0ff13ab3aa416ddc514f073be9f7dee473f61672dffe7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1078,
                    "digest": "sha256:d35757bbadd886bb49725a1a6a0c904d16982ae2b698c4a920464718024c78ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1040,
                    "digest": "sha256:a804976c91bded5d788332e13e29b34ba2be606fa108f71732e09f5c920dab93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142427885,
                    "digest": "sha256:73a5a5ed36d8bb5ad4ab9e022653ef574e0273a5d292a393b6c6b35fdc28a472"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104261,
                    "digest": "sha256:d6b85dd3fffaa7151af92c596b9dbe688dc984aec182212c0d16bafa94b9a8d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1250,
                    "digest": "sha256:9e82f123efa9e56fe7f955d98c8a64d42a2be8df71a29d3ec25d42af1d3ca8b9"
                }
            ]
        },
        "1.17.9-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fc49697f6e3505c16ddf34dee0a3253a20ea856fd8660d6bd9fe74344d0c4b89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:47106a73ba33f0615c1d616023cf850e06ca15cfa04c637b99c2da44a24cfb98",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:ddc0cc1edff474bb7ee4fa2063fb52539b534bece947cf59317101a6cd7c2da3",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6793,
                "digest": "sha256:dc8eb40792cf0e779e69f0abb2aeec9af9aef9d4513c7a21d45a67174a707f64"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45427434,
                    "digest": "sha256:f5196cdf25181bc7e4411865a2e002932b7b6b0ffce787c04c1bdeaf1f204f20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302268,
                    "digest": "sha256:9bed1e86f01ee95c76d2c8b4385a47ae336e6d293afade9368469d99daa9369f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342835,
                    "digest": "sha256:f44e4bdb3a6c1325cc4d40e585ed7a759127c0c87b0388ec0236b1698827d70d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765440,
                    "digest": "sha256:2f75d131f4060950dd6cc1f580e2fa5504ece8d692113a9cdb0a866637b397d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57647034,
                    "digest": "sha256:75d99596a84e483a66241aa1230a3b7719ddc2df0c26d8f6b3ceafa3b48ba0a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134995443,
                    "digest": "sha256:d0e4e343f02ef3581afbb69e20140caa462b2528b6a928bebc2a3c72fdbc6e25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1835cdc08e95c00ae8235d883744afed88adc21d91d6c01345098e90f2d9b2b3"
                }
            ]
        },
        "1.17.9-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6800,
                "digest": "sha256:ec9132147ba2e91a402e1be43f31954e4ed084dcabf7f2c5ecf4a18e9bb3380c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42150830,
                    "digest": "sha256:ef9cca547ca93783f3168dc26ce42494066c74a8d5b51e766ac90a3fb5ad2931"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9956748,
                    "digest": "sha256:6285962850cf5b230e4a2eb808fd79f78710d9ccf974416423b5f2c7905f2c34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921748,
                    "digest": "sha256:a2b3452ca257fe80d12cd035d9bd535e8ce590e38b76f361fb3ed4a590f29d4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128111,
                    "digest": "sha256:621aa9808b0cdbc996903aa5067dd061c24f2d850a00f404682a1ccb8a7defef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45975316,
                    "digest": "sha256:a3c498cfe97d7d116abd6d8f4e42b9777e5c6db6331a5db761415d3f8c82955e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102971318,
                    "digest": "sha256:8091f86627c2681fcfe93059a07953c5f49e50394b6d014c0beea7e638c441f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0953ddba42ec6bd59710573c231c6df9991d6199931bd88f1090de0d649c39c7"
                }
            ]
        },
        "1.17.9-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6799,
                "digest": "sha256:93007a50c796c39802fb557645296cd88956f3d2265da74ff47fc9951f5e7e99"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43212018,
                    "digest": "sha256:a41fbedfa4b1547a2b4fea33de48af745d66a94741d3cf344cb2766f0e80211b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217775,
                    "digest": "sha256:6a94d3b1a91a1952461644c0005791faf07bf7c6b042272a89113ec795a493d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874445,
                    "digest": "sha256:dad88c3c2eedd19cb4e591bedf0013f98bd12344b922299e40887a253d50de12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47736126,
                    "digest": "sha256:67f90700f5859b0f6187aad3354827bb2b243385f8e4af17fbfd2f81f4867e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49039367,
                    "digest": "sha256:7ba484898b1fb05781e9a8d092489b4159ab4d4497e1cbbf14a5f559d69a943c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127572531,
                    "digest": "sha256:4506de1e6a9ec0228cd8381f23e259beff203fd4ec561c7e19a5a75dc3ead473"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:bc46605f86349f7636e6e71f8017fb1345b5610ef85cd7b798bb41a93461b554"
                }
            ]
        },
        "1.17.9-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:c541d8f19ea800f41717314a8502d251676bb36b7529fecb9b47728b46e6a19e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.17.9-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7253,
                "digest": "sha256:87a6590d4d689d9b57ae2c9fde3e13d2dc0ac94577a2a841776572bf6a32ec22"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 997587446,
                    "digest": "sha256:ba8181afd4264392fbbf8df14fb4cddc55fbe085ab000e986b789678bc2bb171",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:ba8181afd4264392fbbf8df14fb4cddc55fbe085ab000e986b789678bc2bb171"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1278,
                    "digest": "sha256:1cb92689a657e58aa2206e8d4f85abd613f5b53050e52256ff5e844c77eb86a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1305,
                    "digest": "sha256:3778ce50c98608b2cd198cb07f7db3bd62cd1888c42aae24a98d4286067eb383"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:056917d6cb12c160b02dcc8cb73c1c8138541ceee97a72231d0909bec1ba0017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:89319016a574a285990268759e5e45cef273952645bce968c48c5fe4954378da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1271,
                    "digest": "sha256:fc835895aa022c09138967ef61f9b1ae16cb95b66eb2f6b9c60a80660ede7377"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25469759,
                    "digest": "sha256:34d57d7c6e07da771edce65eb1a6d03fe1ecbe84bfced9472cbbf2028d7757e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:61ea36944df06742292e4ceac1e0b6105e8be8b7f6430c96408cffc463ea4087"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 377943,
                    "digest": "sha256:59cf89f735b859f777ff06a14f3367de4188cb035ba97f52cffe8a49ffce551f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1312,
                    "digest": "sha256:698bac526c29c6f18a12226af0dd9153c3545281d6f05e2beab0b7cd8f32e55b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142830068,
                    "digest": "sha256:61a5ea13c44f561dcb21e79dbb9330123b08f6304170123390d0472bcb3dc207"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1428,
                    "digest": "sha256:56f83b195f7dc391b9b1e426b4b3ef1feb2943847d8af1ab2d8d5ef0fce907c8"
                }
            ]
        },
        "1.17.9-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c3b54ef811e849db59bb7d41a7dd6db39d6c832d4a1ba83326f28408d0b62dfc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5066"
                    }
                }
            ]
        },
        "1.17.9-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7240,
                "digest": "sha256:64d66f03e79a7af4f872c581b72568bcec788d405c81a1f2482fc7e334959e32"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2207761325,
                    "digest": "sha256:76489c4b585ccf3b550f6533659372537c65550cfb470af50efbdf0a4c173c59",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:76489c4b585ccf3b550f6533659372537c65550cfb470af50efbdf0a4c173c59"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1406,
                    "digest": "sha256:15a6190fefcdd38863765d8e6057117f0e58d6b1334dd052bb316a227fef873e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1416,
                    "digest": "sha256:e6914f99357c15b3a2b51b28ddb2c7c6b31878084e77a9c1e6c178569cc070d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419,
                    "digest": "sha256:75134454813539668b557280ac071ca0457a6b8cbcf9b1a15a933aaea8a6d459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1377,
                    "digest": "sha256:9e8100b38e1f249cacadc061c769a14b0810ff29edcf7ead0d6c4223ef708ce5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412,
                    "digest": "sha256:f00f6a6d003b599937b46db7c66bdeae74d384e625b9a05f0986b2cbef1c67a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25448881,
                    "digest": "sha256:acd010690f51c98b389b897633495328dcd2794c57f109aa67cc0ae1e3de9a7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1378,
                    "digest": "sha256:c63dfe8879661dd669a6252b85653b9895d1892ccca183e5ab6b6bbc5d60c3f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5980723,
                    "digest": "sha256:0722dddf9af4a216ecc2a33470207844e3e6cf576f946d14759eb4911c02d749"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1385,
                    "digest": "sha256:5848e8aa58646ca640d1255ca2b62071efbb7053744851bef935e899db6673a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153096248,
                    "digest": "sha256:59c50a94ccc163618997f8d37ece7d038d3ca070949d5626e9945753a663fa52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1520,
                    "digest": "sha256:6d335fbacc89b623af3a105933060e67b1fa11f1c0fd73b043e2949b0c2ad6d7"
                }
            ]
        },
        "1.17.9-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:1929b5ea6eb1c76edfc4954a0b1b7c9fb832a1212732e61133d49b39c94fea0c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.17.9-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7252,
                "digest": "sha256:6060506616bca530e95cd1a35240b39211d28de3d7ca9ab6c5dc361f620eaa75"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1251699055,
                    "digest": "sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 975255801,
                    "digest": "sha256:dccd9e4d14d3d5a6e93f87350b903e117368ada32d711986f779b5a3ef8657cc",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:dccd9e4d14d3d5a6e93f87350b903e117368ada32d711986f779b5a3ef8657cc"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:660a70644b2ad87de3e182e4a8d372eeb168c520bd3b1e14d38f4fb739b850bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1276,
                    "digest": "sha256:a3013ba8cab57f5b57c7abb3ff95e6758a90f59db205129478b07d806607698b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:9c5faf9f7df8c779c605c62b9fa3732e32d9229ad0261b573b144f8c580180af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1322,
                    "digest": "sha256:faff02b3a911dddf11879d9b0a74afcae0e281b5ded8d27aad039988e3ea073d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1294,
                    "digest": "sha256:15776cc3bbb04db1797ec29b24135422015f4dfee1e4ebd57c888ba43e268a4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25722728,
                    "digest": "sha256:bc0db397dc13c28c36d0f7d4d588c5139107758abf3c2c6bbf0292accf002138"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:f2c52d71af293bd93365606bf376297d2fdc943421c9edc5b296b79885855492"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 609666,
                    "digest": "sha256:6853b0dca8c8940ef39a1d5b4b62320c2d81bb86dcc32c5aa2017bacfa1bbf5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1267,
                    "digest": "sha256:2495468f2b9ce210c5fd1b213ffa451777e5dfd148471fba4c8560195d99d850"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143099369,
                    "digest": "sha256:93d7ee5d8907fe5ae9bd0b5a48e202dda257b7662304ccf6eac0f46a19def228"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1445,
                    "digest": "sha256:15b0ed9a3acf3da6edb7ce1e6bb0f2160246518fc36490b7e9f8ddb11046f162"
                }
            ]
        },
        "1.17.9-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b0d8476a3377ae42952692ff2d909e8a348abfad4aa69bc7c1d2915c38cfeabb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75bb23d42757e4901f79f97dfede4f188c63fd0d8f14392322e2fa15304e9138",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:97131737b213bec54833fd7432b26ebf29226fb919b2a88d2254a552c943c028",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0c1c79d1831eab2828132399167212d9fd11baf7590932cfe9fbb49d2336f876",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4337bac9cf1d7dfba6a640cb1d677b2d321ef31c4ac72e686a6dd2ea2e531d29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e78961a5d1d66ab2271e86ae1d4695b3db03441cd4de3e615ec1fdacbcb528fe",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d8fc0f27d445428900cc1f3f26cb11e7134e8c3f349f86029c11075d5aa19790",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d1efd8c8c1b2e23610e384362d5c30b1fc5793a203026398b42eeadddda3664c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.9-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d8fc0f27d445428900cc1f3f26cb11e7134e8c3f349f86029c11075d5aa19790",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:d1efd8c8c1b2e23610e384362d5c30b1fc5793a203026398b42eeadddda3664c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.17.9-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:c5429abe1c19c19a58507ed3868a861290001edf8c9be03ecfdd71a06cce1538",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.17.9-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:e7236c1f94e417cdbb4f4c52aa3a3b72bb1b247ce75678ef91298d4b6beb41a2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.17.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fc49697f6e3505c16ddf34dee0a3253a20ea856fd8660d6bd9fe74344d0c4b89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:47106a73ba33f0615c1d616023cf850e06ca15cfa04c637b99c2da44a24cfb98",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:ddc0cc1edff474bb7ee4fa2063fb52539b534bece947cf59317101a6cd7c2da3",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.17.9-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:c541d8f19ea800f41717314a8502d251676bb36b7529fecb9b47728b46e6a19e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.17.9-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:c3b54ef811e849db59bb7d41a7dd6db39d6c832d4a1ba83326f28408d0b62dfc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5066"
                    }
                }
            ]
        },
        "1.17.9-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:1929b5ea6eb1c76edfc4954a0b1b7c9fb832a1212732e61133d49b39c94fea0c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.18": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:12d6ca811dc7b3c84aa41bee2a9381e0bab8edafdd385ffefc6a03ff38e1ea78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da0a8c2d42dd2ad4855be783ef73cb8d239a04c0853289efe2d7bcd599f9118d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:34927148aad9b6f571374a47ab68058789988b775f61d72f73697d49da2fab77",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:12d6ca811dc7b3c84aa41bee2a9381e0bab8edafdd385ffefc6a03ff38e1ea78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da0a8c2d42dd2ad4855be783ef73cb8d239a04c0853289efe2d7bcd599f9118d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:34927148aad9b6f571374a47ab68058789988b775f61d72f73697d49da2fab77",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8fb09604b819e4b87293f826fbfe4ea3bb4ccae82de6987dcc06289ecd2a4af4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:79e0ea685e8cbac8e706db87b742f37239d03962eaf4f536fd3f9fc70c1d161f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d08b5059fa50c5482625f364afe801cc77ef3afef72c12ad75d6a68b96000b8b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1370,
                    "digest": "sha256:3e900ac2fe49b0fba1157d909a18046714e7f08fd9a60147077d3eb22369c748",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1370,
                    "digest": "sha256:699e04844b340d5ec4b6697e0c10df3bd44f14f3996cefe660e51828a4d09d09",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:35b2aa156b0060c968385fde88eb6ba121d5c98b671e10f89d37f091009b2a4a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3887"
                    }
                }
            ]
        },
        "1.18-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:9ab5718a827391ab21b07ae7bf94e673e8b8a1221c207312fe24c6eb5bbfa36e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.1487"
                    }
                }
            ]
        },
        "1.18-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2bc6300b875fbe18d84947f06ffe43fc4b4fd292b96cf7ec9a4edd07fa8e7bbf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2b601bd3a29fb4926ee66c1eb38eb47b19db894278917a407545a512b4cc47b3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:879d8fc3858c2092248ae5159c42624be2ea96746fab66c48dca19683b406f90",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3009,
                    "digest": "sha256:8b09ae3747c7994ef235361ce49af7834ae370a437d59dd9fe56036fef804f79",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3887"
                    }
                }
            ]
        },
        "1.18-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:be54d8c47631c699ddfb3b5637d47948626d662539f7a71a5b22e095e687a529",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5648"
                    }
                }
            ]
        },
        "1.18-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3009,
                    "digest": "sha256:12b47c55c7ce667212b40aab9a38e72678ae05628362b6a8b87667919604f9fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.1487"
                    }
                }
            ]
        },
        "1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:cc3ccabb60e14145efbaa2b0893443bbc499b0d44990e24c3bf4e3e5d555e36d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:cc3ccabb60e14145efbaa2b0893443bbc499b0d44990e24c3bf4e3e5d555e36d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:cc3ccabb60e14145efbaa2b0893443bbc499b0d44990e24c3bf4e3e5d555e36d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6266,
                "digest": "sha256:8ac25cb2320643d09621c9b9df143cbc4b15a1007cca4db74b1f91a5109f1d5f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54917063,
                    "digest": "sha256:e4d61adff2077d048c6372d73c41b0bd68f525ad41f5530af05098a876683055"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5153034,
                    "digest": "sha256:4ff1945c672b08a1791df62afaaf8aff14d3047155365f9c3646902937f7ffe6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10871885,
                    "digest": "sha256:ff5b10aec998344606441aec43a335ab6326f32aae331aab27da16a6bb4ec2be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54575903,
                    "digest": "sha256:12de8c754e45686ace9e25d11bee372b070eed5b5ab20aa3b4fab8c936496d02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85608864,
                    "digest": "sha256:30aeeef90bdd72865a0b1752d4cd45b4fc0e45fd4332d4f0ffc2c12f8f065b44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141744672,
                    "digest": "sha256:82b3cebf20f2fc4ab2c62a251e08a49042c1ee13a2147d7ec4e3e6ec3a1dd224"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d5307e910759339e3c8dfc1a3719a605439e00799c9eca0d0abbb047097139b2"
                }
            ]
        },
        "1.18.0-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a731777927cc8b1f992b6e835c4f35ed58c911ac8ea4157f3a27670491f8355b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6267,
                "digest": "sha256:3b5389c4bdc46e22cc83315294a23aeb6732df7da876852f0e992cae3d402907"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437046,
                    "digest": "sha256:1c9a8b42b5780ac49c71f392c9512c0167ecc23de9b30b1b5f38747b73097d1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7834052,
                    "digest": "sha256:163066942b43a00ba7f4674c4c1ca90eccc8d99366a3dc47cb64e06ad79c36e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997298,
                    "digest": "sha256:cf70e03a8272d87e65c7b1592f97f6e739cf1f5d13cc536670f41c28b086b4cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843267,
                    "digest": "sha256:86c5ff33549498a7154441116b5843e184c1f4441df2eab519ad2c498cb8a716"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68578699,
                    "digest": "sha256:b95d261cfb122f5da7d4f1126dc430b0f9450a4b1c8c61494d61447aa3725089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141744529,
                    "digest": "sha256:120ffb354e73a2e9352fe88a3381368210f7eaaa014826185fd42d5036ca0a2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:eabc0787daea5329d9f35080029baae1243ca6003e56dbfab28b205eb32581b7"
                }
            ]
        },
        "1.18.0-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:581efecb6e50f6f40232d95361ee54ef0bfc31ec56b69696937b5e2661f08456",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:581efecb6e50f6f40232d95361ee54ef0bfc31ec56b69696937b5e2661f08456",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5033,
                "digest": "sha256:8f8f72734d0e267ca1bbc6cbd2a834316eda5a7156c15b4d46bc58399016acab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66462893,
                    "digest": "sha256:f05adfcffca8a10a9057a464ad42815ef2aac6dda843d1119f41a6e0ec3edcc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70746308,
                    "digest": "sha256:cbfc66b8e8ff73b9d796a78149ffb0f9439929945be8bcfdada2d23324468d5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153212407,
                    "digest": "sha256:d0453d2c8cb79bf863e9f6758d98f433c86ba0f9dac7bb4488dc371b7102585e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0f8fa575a01f0f1f20682808a320839d84542986905769e0c5c1448d485b7cd5"
                }
            ]
        },
        "1.18.0-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:b166d85f67f53cb678ee381038f9fbc9c26497501e374a33d56376bc9d1d451b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2686"
                    }
                }
            ]
        },
        "1.18.0-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2993,
                "digest": "sha256:8b8285b89b47bde06455d420a592b05c3d3700447bfc306caff7d59a8e1c4976"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103054555,
                    "digest": "sha256:8e36e211379dc6a584a05a445fe37d396de6e76a42cc6742213c3cc3c656dd48",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:8e36e211379dc6a584a05a445fe37d396de6e76a42cc6742213c3cc3c656dd48"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1025,
                    "digest": "sha256:1375272bfe005a02a9c2997a29966f9b2f89f18e31f70c99bb375fc54326fbd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1040,
                    "digest": "sha256:fc6bf71df92a01f096317769f0d7bc01fa3960da989116271fe6d407f0f48ec1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1040,
                    "digest": "sha256:f300972dd6b6dd39abf36e1248c1fb405afeb52c5145858bee9cc6e7f085771b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70023,
                    "digest": "sha256:824d97e6256394e88f660093359641e4d82a2c56825c7a218e0a39b988a7535c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1038,
                    "digest": "sha256:e2f44af0e4d7bc556d127fbf000fcebb6c2a53685b399ac344dd5d2f59e2fb0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1027,
                    "digest": "sha256:cee0656d6d1524468fb73798358cf8c985dcf259fdb96dbac47b3c16635ae0e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149268074,
                    "digest": "sha256:271f38d09137c55c00340562cff17f2e7178b05d9ee60cb5d1ee411c4650a8d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73264,
                    "digest": "sha256:9c7f5b19fd2f70b7267f7aade0b3883f24fa60fd0f9b5ead2e9687f3e176a016"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1250,
                    "digest": "sha256:c7e82711ef308902285e1c7d0be1769fd4cd609734f5b2d3dfc9c44306ad34af"
                }
            ]
        },
        "1.18.0-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0784d72a6bace5b0f3a70f8e945d1d5e4e3ac8740b3a5347c9a80fd73498b867",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.587"
                    }
                }
            ]
        },
        "1.18.0-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2994,
                "digest": "sha256:97d1f395e810b59b797e8a304090aa0a0431f6949006e6586541d48c54f9dd68"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117485491,
                    "digest": "sha256:dad81795ce109a7e20ebf80ad31925797ed97f9ba2a559f13f96ce3be5ea712b",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:dad81795ce109a7e20ebf80ad31925797ed97f9ba2a559f13f96ce3be5ea712b"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1032,
                    "digest": "sha256:c21bbdbffc931b2ef6bc73845eaa72fd2fc35b61339852dbfbf5deb0cafff70e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1042,
                    "digest": "sha256:ba943b45b2ab03727207e946af3dfe3ba3ec20d8026da6b8604855e1a072c300"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:b78c0124f74063a011f6c324b17a5ab5f0af739788ed7aa5e16c51be596854f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90067,
                    "digest": "sha256:e0bcbeae7eaa9f25b4ee46047391d0bb4f42beb17a4c7ad16b0b009d2477ae97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1043,
                    "digest": "sha256:53c83b4a6313eeb9aacf3d9afd2435e3cdb5a07f70752d1b34fadf21854da5d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1117,
                    "digest": "sha256:9ef62d91627ecea7813e6f1e2975609018b550f1c642b013aaeaed08f51df9c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149284380,
                    "digest": "sha256:e24768fd49c3f997151a6a2cda706fb5252ee80753a59060ae27872006ea2893"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98580,
                    "digest": "sha256:647ffb5fb84e794f8391e7698428e781641ced9c20a88a9d69599bede5204048"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1234,
                    "digest": "sha256:b1f3377c5e5312f9ce3d4a0c0597999a8a27a27f02b555974275d3275363e7d0"
                }
            ]
        },
        "1.18.0-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d63f1e9857a4d74c9f8d09c633265a099627adf3b5b4c74eff719df6b9526d8e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6300,
                "digest": "sha256:268265c757f0481b9da762c73e8cbe6857b96a20077ed9039100a4b262c3498e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45381330,
                    "digest": "sha256:ec52bb9d0b765b0726e476d07a8d9b2f808cf7b380f27c1544afa286fe5578cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11301983,
                    "digest": "sha256:f289049e62eb62ae7bd7a8f612cd5b42f36d423951256750f08baa96922b8587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342352,
                    "digest": "sha256:1e926c3d7ccab64c93f5552646ea61693989e06e27abf8cfdcbd0aad8e78c71d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49762476,
                    "digest": "sha256:fd63791ebe323af1573a61d3e6c93bcf5c12da3b8603289c2b9e8825b045bd3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57646764,
                    "digest": "sha256:a1a940cfc6d91eaaad9d31259cf7b7fe0545d6a1416d872ada972e13627cb101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141744997,
                    "digest": "sha256:daaaec048b430b40d55443357ac397c5ba30bfe1c35a6f2a91fe449ba06c7127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:80f6a43fb1f395a6ab618de2a1845190ae79643d33671a9f35d5973022755213"
                }
            ]
        },
        "1.18.0-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:e0f8c505b8fa5d0585211f15eba49ee9642f4c98c80af64f650687e48d3a1cea",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2686"
                    }
                }
            ]
        },
        "1.18.0-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7252,
                "digest": "sha256:691e5433feae10ebd6bf9bcb6c5882a24944b477ae53f4d035fa0eb45237f353"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 997119751,
                    "digest": "sha256:0a6173b79e25f2ebc0ed51b0ac32a6f65ca5a3bbfcbeab8b74a6c24324121dea",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:0a6173b79e25f2ebc0ed51b0ac32a6f65ca5a3bbfcbeab8b74a6c24324121dea"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:92f5617025c646e07c27da25bbe973bf2178f67f968f282f3f8f7a90e6eed299"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1319,
                    "digest": "sha256:341e6b71bd7a35aae6a39a6101403a92f0a6b53616b39227117055cc42cfd16d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1285,
                    "digest": "sha256:a48a1cf0338f1952a464286619686e5b45966f7f7e91bccbeb1b9c747c92f34a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1285,
                    "digest": "sha256:365022fc76c4552be959bfc94bfcfe23cf000d4d93cad2b31849d654b53fdb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1268,
                    "digest": "sha256:d7b2c8b667510b0ee33394300804f2c6409b4417a42308ca50e14aa0fb376bd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25476950,
                    "digest": "sha256:65f1aa67d09277e6d2c1944fed72868ba0ef15fb22ef7f28f7a4ab4f31ed2e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:8f68a48cad234af2118387672997930089ba4c4d83d147b0e36f6f80564a4681"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 379882,
                    "digest": "sha256:39f0161c2d56924393976baf3d54bfbad81f1f49e9da51b651071af4c0c9a7a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1276,
                    "digest": "sha256:ade53252b43cafe67490efed404a55d7e7d6c4454fcb03091adaf7250667cce3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149691217,
                    "digest": "sha256:0170ae4ea60f27bf57763c317d92544599b6e7678d1d5a004a3dc9b79deeb733"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1444,
                    "digest": "sha256:ff7e3d3652a15e525ff027161ea3fcabbcc0d5fbbb4d033d05bdc0db8fd2e653"
                }
            ]
        },
        "1.18.0-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:7c3e2ac59ca78e2532531e35fec53c79034d639e95232b443af22d37e8d95c6f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5006"
                    }
                }
            ]
        },
        "1.18.0-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7237,
                "digest": "sha256:94eb647109649963684da12dbdf70a78e9c2784343070f9a036df21b14c37e67"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2207094901,
                    "digest": "sha256:0fe465a8df276d07bd592c9424c00276a476fb7f74be6f867256b07fba31212d",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:0fe465a8df276d07bd592c9424c00276a476fb7f74be6f867256b07fba31212d"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1405,
                    "digest": "sha256:61943c9b987d83b353076c1816c7d1219b66024f0b0ad92b6afa9b05d47a4857"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1397,
                    "digest": "sha256:e4de0e0d7248327a24c6cca266cd1a4b40754ea24d5ed1626884fdb2ddb6747e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1404,
                    "digest": "sha256:c67728bddc87b0c5079cb70f150e38567e95be048b8609f8a3caa00ef4491aec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1405,
                    "digest": "sha256:3af70408f15da515ef8afedf5ab83a102f82cb2bf9a7f0c86f425441cb4adce8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1413,
                    "digest": "sha256:18b97cafd5cda287d0d30fbf2ec115d8286e9f72e955bba4733ad5497086cd23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25456556,
                    "digest": "sha256:62ef76363fefaf546231f946b72913baedc590f42c54065da0385731fbd9ce09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1383,
                    "digest": "sha256:f447ce87f440da596379749ab6f26ec979b795e77fca574750b776343ff4d6de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5938321,
                    "digest": "sha256:adb7bee645b9838c192c8407fcb250374f08571b9b3092c3e4fb28b84b270daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1383,
                    "digest": "sha256:5180299ab2de74c67f2e7dda69220533388b758d322797d0f86cbb6afd7caa41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159907793,
                    "digest": "sha256:05bedac4f55de4b4e4ff282e1b715c2cbb97bcdcf2c7cf03039b1d6db66fe8dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1547,
                    "digest": "sha256:2a79479180c2bcd6dcec3d5eaad4df2b5fb662593fd88634ec536136090929d0"
                }
            ]
        },
        "1.18.0-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:6fcb20fda6b6b879f80817c8e19a7f3feb0d1d85cac9cde3a5416380b95ee48b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.587"
                    }
                }
            ]
        },
        "1.18.0-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7247,
                "digest": "sha256:62fe2db80b755518b573c8bdf77526832f16a6ca7438ec8fb5b7104c0b91dec0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1251699055,
                    "digest": "sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 969547968,
                    "digest": "sha256:037d5740b40414bc505c21324142a1cd3eab10c176189a9a74d1a90354ac7cd4",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:037d5740b40414bc505c21324142a1cd3eab10c176189a9a74d1a90354ac7cd4"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1319,
                    "digest": "sha256:359025a41699a1dded4383068aa755e66503b7449c74e637a265c9ad7560a2c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1434,
                    "digest": "sha256:f0f4de1f578575f66e38119db8e16fbf874de99427e61ab96530cc7e5c0c1b40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:e2388809bf99aa32c5247e80c27818dbaccc74b830f231d399b319aed63375fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:498072f17add7f75a65eab28db0d59a64c484a48179bcfad6c240330bec820cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1300,
                    "digest": "sha256:6aacd9cc1a95e614e78de1cc334db6d6027301776d7a838882cd7a460f4ed74d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25711375,
                    "digest": "sha256:67f06b23a7d354fdf5084296d63010d0e530685f19c2736d8ec3e7c0e74fa0f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1294,
                    "digest": "sha256:8e910e84da0ece213e33a500ca2d803311d98a34905dba3a1d78b093132d33dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 572776,
                    "digest": "sha256:1979da0415c7ac8f781d77224d8a15de19a3cd12c1327ed971efb1facd5af5e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:d7df47bb37cfecfdef4ade1c1866e2bdcb8afcebdb542d5fdb7abbc7d32695f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149948399,
                    "digest": "sha256:962b783d871074e2d3a0cdfca3f4ec050fbc853824f2db058eb6badc3879fc2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1437,
                    "digest": "sha256:362413a6fe5ef8ffa13a8f0becdb44b19753f2cdc4d19267c63c7f9746df2b14"
                }
            ]
        },
        "1.18.0-2-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:453b93872e5edde20d2a5c1bef1eaf8ecc3c54e41e67ef776a39d435435056d1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-2-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:453b93872e5edde20d2a5c1bef1eaf8ecc3c54e41e67ef776a39d435435056d1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-2-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5032,
                "digest": "sha256:02cf288500eff25d30f2aef7d0c0f67aba8534c259f3f538dda6008a7abc8698"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66341387,
                    "digest": "sha256:1bc9e758c51a40cd73027fc05e0d70ddf8e0cf6f06a80a00c5b3da646e7f73ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70750408,
                    "digest": "sha256:e9015cae7ffedf8aa8a096e868fd5f28b340b9b6f29b3f409e14aafb3d4d1d6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153212901,
                    "digest": "sha256:71749124ea63720f581336e634585dad99b992471051a5b44dde7d4b3947cf92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2f956223706cbf01aecadd398e44cf680ee3105603b892e5dcfd13f31f755e8d"
                }
            ]
        },
        "1.18.0-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:cc3ccabb60e14145efbaa2b0893443bbc499b0d44990e24c3bf4e3e5d555e36d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a731777927cc8b1f992b6e835c4f35ed58c911ac8ea4157f3a27670491f8355b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:453b93872e5edde20d2a5c1bef1eaf8ecc3c54e41e67ef776a39d435435056d1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:453b93872e5edde20d2a5c1bef1eaf8ecc3c54e41e67ef776a39d435435056d1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:b166d85f67f53cb678ee381038f9fbc9c26497501e374a33d56376bc9d1d451b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2686"
                    }
                }
            ]
        },
        "1.18.0-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0784d72a6bace5b0f3a70f8e945d1d5e4e3ac8740b3a5347c9a80fd73498b867",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.587"
                    }
                }
            ]
        },
        "1.18.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d63f1e9857a4d74c9f8d09c633265a099627adf3b5b4c74eff719df6b9526d8e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.0-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:e0f8c505b8fa5d0585211f15eba49ee9642f4c98c80af64f650687e48d3a1cea",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2686"
                    }
                }
            ]
        },
        "1.18.0-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:7c3e2ac59ca78e2532531e35fec53c79034d639e95232b443af22d37e8d95c6f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5006"
                    }
                }
            ]
        },
        "1.18.0-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:6fcb20fda6b6b879f80817c8e19a7f3feb0d1d85cac9cde3a5416380b95ee48b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.587"
                    }
                }
            ]
        },
        "1.18.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a52d34b05bf97cd6d84a80d99ff7ebb98c66fdd39034ae959376462363a49fe5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d4517ea98a342964f30f99979def1a1a81dda271bef2ff4bb271c296adbc94ad",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c71e14db5b72afe3aa768b6b7eab394fc927984f2fadc419a1bacb94bc2ff6d7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a52d34b05bf97cd6d84a80d99ff7ebb98c66fdd39034ae959376462363a49fe5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d4517ea98a342964f30f99979def1a1a81dda271bef2ff4bb271c296adbc94ad",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c71e14db5b72afe3aa768b6b7eab394fc927984f2fadc419a1bacb94bc2ff6d7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a52d34b05bf97cd6d84a80d99ff7ebb98c66fdd39034ae959376462363a49fe5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d4517ea98a342964f30f99979def1a1a81dda271bef2ff4bb271c296adbc94ad",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c71e14db5b72afe3aa768b6b7eab394fc927984f2fadc419a1bacb94bc2ff6d7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6763,
                "digest": "sha256:201017e827d37325d098959a26d773effd409caebef22ca183148660c5afacf6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54941777,
                    "digest": "sha256:6aefca2dc61dcbcd268b8a9861e552f9cdb69e57242faec64ac120d2355a9c1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5155716,
                    "digest": "sha256:967757d5652770cfa81b6cc7577d65e06d336173da116d1fb5b2d349d5d44127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10874928,
                    "digest": "sha256:c357e2c68cb3bf1e98dcb3eb6ceb16837253db71535921d6993c594588bffe04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54578663,
                    "digest": "sha256:c766e27afb21eddf9ab3e4349700ebe697c32a4c6ada6af4f08282277a291a28"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85612289,
                    "digest": "sha256:c5439771a5f401dc3149a19e165676d2f6443552b089b05e2d802c2976eaf3af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141746849,
                    "digest": "sha256:827bd22eaa638738d00ba68d3529281afb6a3fd9f0323cbc2ba983549a8785af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:10620f032dccbd9eec4d3c2f8dd7c408bc01aaff269de9e6b94d441e33d29fd3"
                }
            ]
        },
        "1.18.1-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6764,
                "digest": "sha256:d74e44d5b8d1c3dfebefd69e0404ad24eea59aa49efd168ae3fe5f431717a2de"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50133696,
                    "digest": "sha256:0a2c02101ee4340d4a9ebb962e9331486e417a3835c9adefb9badd2f0c116ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924850,
                    "digest": "sha256:301394875428f05a3ac7068600f0d729f8c7df313e7c9574aec8362194fb4e56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10218007,
                    "digest": "sha256:44f80b9e8049b2a4b26cc100bccded1ae7d0bc8ff2e1fa9fc7e255631328f0af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50327803,
                    "digest": "sha256:08bb57ee492f81d7ea44b47b65fd9782dfb9241e2f5c66bd60aaba1aa5d4fcb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64562470,
                    "digest": "sha256:87e2f76705d661af6f3c8cd771b8836902689932905ac2c4e012443cb5ccf782"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109839157,
                    "digest": "sha256:5d97604aa7bf184ba47d9b897257f7fedb38f8def826d8f245477f7f4562e0d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:02bca9a1e6cb3873ffeb594ad2d9a049dd4ecb6cc2ca1d3d8e87baf497ec15f1"
                }
            ]
        },
        "1.18.1-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6768,
                "digest": "sha256:e517dbf74c078a3c0bfca4c010fd02327e31bbb47e8af6bf501cc12419f2b963"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53633096,
                    "digest": "sha256:83d5dcfea08e6927083bc886bf182fc39d87bb04b54b63002ac0c4c0b9aab682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4938663,
                    "digest": "sha256:45cfa86b7b1aca6d694057e4d42ee1440527f41c00b9e577df729244380c9eba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10656971,
                    "digest": "sha256:5c79b19335f27cc78840bf9159e875322f3252ac06113c73756f9d4fba905f9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54672934,
                    "digest": "sha256:350ecaf08eac09037b05465ab97a1b8f7bc9b7a9b1fcef900dedd7dba9bbcf4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81049848,
                    "digest": "sha256:2298d8d30a9e57d48d1635f7de070fe6c12a7d2cb77e2477ac5f68cb7bc6b8a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135307460,
                    "digest": "sha256:7a89d15871a4a3f93d20a7945e8883416a76c6d5038d4c8ba87a7e888df93925"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2ea1fbf64c156edcbdafbc59517d700afaabeaff528007039dce7ca72ef58def"
                }
            ]
        },
        "1.18.1-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0b1ecc0e28a94ffb9cabcee7e60399eb157785f6141703781390088082b90e8f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:66d916e92b95c29ecbeb3ed220fb6710be6260f7d2b961fc6b11d66fb5980421",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d33de2323e3b8c4de95727602967a5235c5181f4cd98230d706bb504b52f820d",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6762,
                "digest": "sha256:3f09b2d1382f1a3a43ff4637b0f77379c0d10386e39c8cb11bba40a80be3fda4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50436985,
                    "digest": "sha256:85bed84afb9a834cf090b55d2e584abd55b4792d93b750db896f486680638344"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856378,
                    "digest": "sha256:5fdd409f4b2bf3771fac1cbc2df46d1cbb4b800b154cfc33e8e0cd23e67ab3e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997231,
                    "digest": "sha256:fa3069e6cecf9d5e43ace0a925b53849b2fd189ef41883d45d8f2e12213c2c06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843794,
                    "digest": "sha256:4ee16f45eff97cbe98b74c63ca2375b2c6b2592cd765a86df098f731baab13ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68576128,
                    "digest": "sha256:f61268d06b6e2b09530ab1da4c341f31cabeaa606f0a53cc72e30d981e508558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141746859,
                    "digest": "sha256:160a1387dd3ee9c5f1a07651ed304f8b5d8bd3109b48355d979d74b1616e8bba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:25bcdede7adb395ba68b38159f59e69b28bbbab2aad8e2267b0e4e14a50612d0"
                }
            ]
        },
        "1.18.1-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6767,
                "digest": "sha256:6aa9ac7085dd060a9ac8f51ad5641e4e73ada6976563fa60e5a0a56d8381003b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45908143,
                    "digest": "sha256:ca53ad6266ed4ba4323f1553d8b226d0a180384cd290a8361ab19347f6d761fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145008,
                    "digest": "sha256:88557019ac316ca250696b933e42aaa72ec3e8fbf729c5533426c4086c2fdbfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343718,
                    "digest": "sha256:15a4c4d54010e8b79170bb4258d395325738492033d7f8f54b6e0e833848c969"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47357445,
                    "digest": "sha256:982abaa2631ddfdda5b8470dc4b0b57ed3b1d10e77d38dca63de7a440db0a2dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53050318,
                    "digest": "sha256:9adfe4a1b8011cf27580d14cdb151ace6caacd0176b0cb5896ecf89849bd14fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109839194,
                    "digest": "sha256:847de191280a558e28ff532a3194e69242aeb0c1bba9b840cfe83722fb786370"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b3d5d08fcfc5908c34ea1f6b9d6f37b9ff03e3194d1d1f78ddee4566814b209a"
                }
            ]
        },
        "1.18.1-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6770,
                "digest": "sha256:0b0fc9c079f4e5ab78498ca7cfd62484e1aa793698cd76d9823204f865029292"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49227738,
                    "digest": "sha256:b9f330b3a7e234282d632d95bd19a655cf0e06c1a76a51d0f73b9581be8f851b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7719745,
                    "digest": "sha256:8a80651adb7e52d8ecd27d43b9e69ada9ca277071ea09607121d0076de36480b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9767312,
                    "digest": "sha256:a7b38ee622cbfb492ebc3bc598771624fba7ef1830b4e0f9737f2bbf4b6ec0ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174549,
                    "digest": "sha256:fc937997baec7d2d040aba23614db074862008cbdd69b46d2baea31711d58a50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62442163,
                    "digest": "sha256:73b090eb8c7ae946a86bbc93d4d85099da7f1ab6ba7b5b371e9e161ac086916a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135306902,
                    "digest": "sha256:88b05c3003ce146bd2a9260bd23b18215f3fa682c86ac9cb233a2c951cfe17eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:2dc5b0d6ebaa56e634f1f8e49d85fc62f5637e3939f77b52ac98892932fad274"
                }
            ]
        },
        "1.18.1-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:987a14aec45e15749e141eebff7102121f1e80ea834ac692fa40ccb0997dbe98",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:13a6f663eacad6cf94354f90ecbeb86201922661b34b45fddc5f278cb339ebcb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.1-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:987a14aec45e15749e141eebff7102121f1e80ea834ac692fa40ccb0997dbe98",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:13a6f663eacad6cf94354f90ecbeb86201922661b34b45fddc5f278cb339ebcb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.1-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5286,
                "digest": "sha256:f75c5c9c075be9cf14493f4915efafd81c389d38d1fff569f603f715848f0635"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66341387,
                    "digest": "sha256:1bc9e758c51a40cd73027fc05e0d70ddf8e0cf6f06a80a00c5b3da646e7f73ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70736567,
                    "digest": "sha256:6a8e5a603f7099a8db2cd28036730fff1f0e07d4e40d8949cf939eec8c5823c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153206924,
                    "digest": "sha256:c757088ee4e35716a4319777182eeb70b46dbb062095c4c37f37977f9b54ff73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:cc77663f80620e6c29a3e3a6c1cbb8228dba43422e4ed47f000ad86392920399"
                }
            ]
        },
        "1.18.1-1-fips-cbl-mariner1.0-arm64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5278,
                "digest": "sha256:8f0d210ac396dd2fdbf3f67815c164ad440afb95daa729cea841d88796be326c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65053549,
                    "digest": "sha256:055b1e9976930afc92226baf0eb7fa1e3b556546516a565d5e1e022f927b2010"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61618603,
                    "digest": "sha256:df362ef410f9e520102776328d086b96082b65a289faa29dabfb963f1e9c5459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 140603647,
                    "digest": "sha256:b1f370ffdbdea5793e4f120e2f47feb46d95e272466390cba57a09469a50b996"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ecc8f999a4485d6033046464ace3a3d488fea20b80ae5f402fbcbb38472be13d"
                }
            ]
        },
        "1.18.1-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:5b3cab3cb08dca7054fcd10f1a9b219fa185541b0c6ab76c455a1af755045117",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.18.1-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2993,
                "digest": "sha256:875b62babc852b30df5f78beae8e332f36560ad5eeabb274cad7e8355fa48afd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103096169,
                    "digest": "sha256:6fc97003d8b7f593fe071cf3ea64f3ce760cc060f3402bb6b1b849c040e222d5",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:6fc97003d8b7f593fe071cf3ea64f3ce760cc060f3402bb6b1b849c040e222d5"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1032,
                    "digest": "sha256:b4e34e624f3fecc64ca0899e461385e71605eeb1414aae0daddaf6dc7b20828f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1020,
                    "digest": "sha256:463c3fef61b82eb2d9feed77e68f6cdea5131d13eed26844657f2d28c88aa097"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1053,
                    "digest": "sha256:986f2f5b60ca556d1812ee895cffc5bb83aa63ad9f328a7d97d411fc1c09e572"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67713,
                    "digest": "sha256:b5ecceda9921a57b8c3a36189499ef1f59722d0bd86cbb6ddbcd489b27ece0c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1022,
                    "digest": "sha256:1291ebeab022f5173cfcc88bb951d9d718a7104e1e4fdb8bd51b73bbd81bcd64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1073,
                    "digest": "sha256:f1bc2111eb5b952edcb2f43d5a407ddbab2744d4012743939c2cceb757043647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149281270,
                    "digest": "sha256:840bb1a97d7079ec11a4f5159dc68ed4e36e367e7f87de8db5467b16a30eee19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66588,
                    "digest": "sha256:2306fdca85b49aec25036e43e5f10d911c28be939512c77e5dfdcb03f00baab4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1243,
                    "digest": "sha256:d3e947c1d08f6d6eb19e550bd5645e5259d822432c1ca0d02dc2c930e008f5a4"
                }
            ]
        },
        "1.18.1-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:a9d1ae62dc0529cdbf5864be6c6db968d13b283b31ca0616629158ab8a4a7c19",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.18.1-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2995,
                "digest": "sha256:fee1d0f50e48dec157e9ac2d2f0926001b36c8f632497c7ce0c893406af9fdd4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117579416,
                    "digest": "sha256:5ee98801bdad72bc36678d072c89f7dd482fee29086c1d9c8ad6ff0cb5afa385",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:5ee98801bdad72bc36678d072c89f7dd482fee29086c1d9c8ad6ff0cb5afa385"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1137,
                    "digest": "sha256:befb200b9913f2c8c2e116618ecbcc208db3f9494c8fa60219b0ffa988473ffa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1052,
                    "digest": "sha256:f71188aee69712818bd25aa670a532e597805fd254754cf5ec4e1201251d8175"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1099,
                    "digest": "sha256:aa57c1a58f8c80bffd6489ef0b0167a505765d81f364f4eb8d451ec2fc079a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82689,
                    "digest": "sha256:d0c6dd4b27bae0a37e2913da87e60258e9b3939652fde1d3c500e3d91f84ecae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1042,
                    "digest": "sha256:0d915d25489f6f241140bb22fadc7e0f65aaed8fb0642704b2fbebf3f9e34027"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1076,
                    "digest": "sha256:a8af4e5269e64b6ebfc3521aad4d8b5d75d29389366a6b8c03c4b256831aeb3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149295791,
                    "digest": "sha256:a00ee843f098f06ea75c8bbc4682429e6f3e3403dcaccbc0791668c5e96a70f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 91611,
                    "digest": "sha256:4b04d56efffd2e0d1bb015b9af3d6cbb5d7cfa65673c92561c9b93c6fdc663de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1248,
                    "digest": "sha256:e8e136b72a446756a648d5a4f959f345561fec37694fab3cc4adee1e6e0bba4a"
                }
            ]
        },
        "1.18.1-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b3aee4317d2dd3b71f4f39e30593dd4aa4b1db800b49b288a5028c1d8c7ab937",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ee17cb0eb451c62269b9f9df546f822608ad01a8475e5f0196c36e9cc4fbdfc4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e87c4650f978847b12f3ef2edbe919e88ee7e426966b61e3d7d2c7bb87cc464f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6790,
                "digest": "sha256:d23b9524360612bc623b78e01bf25739618877b97ca32744e5a7c99e96fa5a2c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45427434,
                    "digest": "sha256:f5196cdf25181bc7e4411865a2e002932b7b6b0ffce787c04c1bdeaf1f204f20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302268,
                    "digest": "sha256:9bed1e86f01ee95c76d2c8b4385a47ae336e6d293afade9368469d99daa9369f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342835,
                    "digest": "sha256:f44e4bdb3a6c1325cc4d40e585ed7a759127c0c87b0388ec0236b1698827d70d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765440,
                    "digest": "sha256:2f75d131f4060950dd6cc1f580e2fa5504ece8d692113a9cdb0a866637b397d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57646925,
                    "digest": "sha256:a7a633952cac812375ac5688a71a8c8cff3a0ec37f0525333a2d6a00f81b7c1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141749674,
                    "digest": "sha256:0f8ab8397bba21be7db5a77be7a7f3cb24eb016d9d538b3d622420e210aefa36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ac09625c5091423a64de19790b5b599949da4a57230b8be5c588dedceeeff89f"
                }
            ]
        },
        "1.18.1-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6799,
                "digest": "sha256:ecc8318f846ef3c554427d5df78ef8232d9755a0d3821d873857240c5bba9c93"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42150830,
                    "digest": "sha256:ef9cca547ca93783f3168dc26ce42494066c74a8d5b51e766ac90a3fb5ad2931"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9956748,
                    "digest": "sha256:6285962850cf5b230e4a2eb808fd79f78710d9ccf974416423b5f2c7905f2c34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921748,
                    "digest": "sha256:a2b3452ca257fe80d12cd035d9bd535e8ce590e38b76f361fb3ed4a590f29d4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128111,
                    "digest": "sha256:621aa9808b0cdbc996903aa5067dd061c24f2d850a00f404682a1ccb8a7defef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45974950,
                    "digest": "sha256:b4bb4d58ae96590396fadb72de9d9ab66431a728c6e75a2a236dce0e83aa49de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109839193,
                    "digest": "sha256:474fef45208d9eee7a47a1c3ff5500d7859de3b90ad0e7708cb090e214638611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4e47e63a44098af22c5a20020212ea932d0a0b5d065fbcf63013d7199d8b56db"
                }
            ]
        },
        "1.18.1-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6801,
                "digest": "sha256:7ec113abc3e5b1622e8fd0358ab32c9f56985358160691d532daea17e90a6550"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43212018,
                    "digest": "sha256:a41fbedfa4b1547a2b4fea33de48af745d66a94741d3cf344cb2766f0e80211b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217775,
                    "digest": "sha256:6a94d3b1a91a1952461644c0005791faf07bf7c6b042272a89113ec795a493d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874445,
                    "digest": "sha256:dad88c3c2eedd19cb4e591bedf0013f98bd12344b922299e40887a253d50de12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47736126,
                    "digest": "sha256:67f90700f5859b0f6187aad3354827bb2b243385f8e4af17fbfd2f81f4867e1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49039285,
                    "digest": "sha256:82e16490b60782c60a46fd8903f5002e279bb0234f11a9858d45d8b422f8aa94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135307995,
                    "digest": "sha256:581d3ece4356890bceef52e9f8445bf2fdbfe06d55957fe5e52dc93d9b42ee8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:58094c0a96ba432f92b1f8e3c75ee24dbbfb2a22e1581c6b3f7a3f8d49c72b08"
                }
            ]
        },
        "1.18.1-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:25650e572efe87ee87e750b7825620aab00a175b7703437342ae9bbeee013bda",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.18.1-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7253,
                "digest": "sha256:fd22cd7848c2e3e96c0259247c17aa51e380f81e0a25423dbc6cd7d02c82c504"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1718332879,
                    "digest": "sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:4612f6d0b889cad0ed0292fae3a0b0c8a9e49aff6dea8eb049b2386d9b07986f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 997587446,
                    "digest": "sha256:ba8181afd4264392fbbf8df14fb4cddc55fbe085ab000e986b789678bc2bb171",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:ba8181afd4264392fbbf8df14fb4cddc55fbe085ab000e986b789678bc2bb171"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:e4fdc62caae33f2b520c68fc4913807ffc794539f670afd771d2199030eca052"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:2f77d392021470b1374d5da956fdfd33b0eabba0a95f9b0507a2c4b0447d4932"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1282,
                    "digest": "sha256:e76cd7be35582c5726ce4f1f8cb8835c76c990bedd1ad569d16a513e1c125737"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1296,
                    "digest": "sha256:c54c40cca8317cf3780ea04d07d4842b47fbf7504391642379fb4fc7551e684c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1299,
                    "digest": "sha256:fcc5f197e9ef15313ea8e253038c5af3c7a429c37c25c9aaa60737a6d6f54baa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25469189,
                    "digest": "sha256:b3ea82eff0dc13ba14a825d416963f77f068e338f2731fb5669a68530ce88c6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1304,
                    "digest": "sha256:6c3c6c6769ac952e0a40c11b31369ac3ef326f55f324cd507173aa5257ea7bc3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 377773,
                    "digest": "sha256:3a9a46ff96432ae2dafb422cd802c101fd1ca5cf03f87abce50c767282ecfdf5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:98f3d8feee19e47ca83576d1ab94820e41e1a20baa0e455a8091b72d06b310e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149709080,
                    "digest": "sha256:e0a88a045dcd298a25b6c4a0177ec00166d86dfbc16f10b047ddeec8122cce69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1421,
                    "digest": "sha256:09d2725dbb6aff2dad96d5e6357e7099aa52f0b44eaed72f082bebe8c6cdd662"
                }
            ]
        },
        "1.18.1-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:1432b04eccadd4f89183cffa56108a26b6c7675e23ed2eb3c37c7ad3d762c6bd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5066"
                    }
                }
            ]
        },
        "1.18.1-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7241,
                "digest": "sha256:205d295243f79bf3fb042aa1ea97c60bfa4314e27446470c23d65823d9bd3978"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2207761325,
                    "digest": "sha256:76489c4b585ccf3b550f6533659372537c65550cfb470af50efbdf0a4c173c59",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:76489c4b585ccf3b550f6533659372537c65550cfb470af50efbdf0a4c173c59"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1414,
                    "digest": "sha256:cdf0c715efd98bf463812b706a52abf7f668197e274680d8ef8f52430ecee293"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1409,
                    "digest": "sha256:6f0c30e8cfb9d6f907825371a3845d6554c9dffcf23a372d69c489eab4b5e9eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1411,
                    "digest": "sha256:cda0e6a544f6ab2574133d14a7ce66de5efaaec6434f0959e33572b63b51818c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1409,
                    "digest": "sha256:a8a7a9aad544454c7647a662012bde5a102182f36309170694bd832ef32c6b32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1408,
                    "digest": "sha256:715fa4a535ccd4bee732b7cd09c9adaa3270ed0b7386b58e0af6f3e4342eb58c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25448595,
                    "digest": "sha256:0b4d9896027ce41ad129823b0fe7834ad1b976a6f0019d0ffb75b2a92d6afe71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1415,
                    "digest": "sha256:26023327929d3f0bcddca7cb680d2cb9977eb3985f4d12244ec8a5b3371cd799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5980870,
                    "digest": "sha256:14d84d4c1483942164fb553beb38e1acfd8e5fc87beb65cebf0f95711008857e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1378,
                    "digest": "sha256:a818bdf60a98d3a977df3af2a853f2f94211dc4c0bc7cf98e95e1cbdf17bf2cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159932707,
                    "digest": "sha256:ab254cfb322516b327d302f370a8c0f995b9ad39d6e500d77e492d161c4d8033"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1524,
                    "digest": "sha256:1744b66e4e9e761fad942df300cdbd54950c01b26b53128593b51c7c0075d91d"
                }
            ]
        },
        "1.18.1-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:282af8a8d068db0e52bae67cc35ff677f7ac8ed2323237d3f5c8dfde3f6cbff6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.18.1-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7253,
                "digest": "sha256:c7980c011299516a08b55f5a81c4aa22b7f5e326bd590684020de9ab6596aa0b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1251699055,
                    "digest": "sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8f616e6e9eec767c425fd9346648807d1b658d20ff6097be1d955aac69c26642"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 975255801,
                    "digest": "sha256:dccd9e4d14d3d5a6e93f87350b903e117368ada32d711986f779b5a3ef8657cc",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:dccd9e4d14d3d5a6e93f87350b903e117368ada32d711986f779b5a3ef8657cc"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:315dbf5803880bf42502fcdfdf452d06252d6f90f2fb64be820a00063bf89cd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1345,
                    "digest": "sha256:7f30107dc6df70371efe9f3556f88f1172c4aece7edbca2eeb1668e8b16da5f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1324,
                    "digest": "sha256:e0c063400eeb12e22d9fd7612d0c798ea10fc5882dd593b4c472f4d19f6ee00b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1298,
                    "digest": "sha256:616ac39f591db8e821b2cb4857dfa9ab2ca480dfaa64ca12faf5b083191701b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:ce76d900c3e375c757bac7a5204db05d04a44f15bfc4fb0b447d61885257bbee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25723706,
                    "digest": "sha256:6f30a49518fc938f7adc30bd939da39ddcfe4d98bac08d3a104965c7538ec9d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1273,
                    "digest": "sha256:574989490364cc28cf70497610b754445eea9110abf66a1759dc63ba5fbde7a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 609989,
                    "digest": "sha256:b47d07b254c1abc30df32b6d36f273b9b2a01737a69e0044c96322094c98cfc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1276,
                    "digest": "sha256:0509fff40c1b2cef433926c97b3f3e6419abd1fc019549268b8c2348edcefdc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149977662,
                    "digest": "sha256:47c55f44875a76585a332d20ac7477b8ed990f9eee01d59df363c5fe20a99177"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1450,
                    "digest": "sha256:66f5ff2743b177d66565b822ab111b44c54deae167d067b43761a17dd22f72ff"
                }
            ]
        },
        "1.18.1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a52d34b05bf97cd6d84a80d99ff7ebb98c66fdd39034ae959376462363a49fe5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d4517ea98a342964f30f99979def1a1a81dda271bef2ff4bb271c296adbc94ad",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c71e14db5b72afe3aa768b6b7eab394fc927984f2fadc419a1bacb94bc2ff6d7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0b1ecc0e28a94ffb9cabcee7e60399eb157785f6141703781390088082b90e8f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:66d916e92b95c29ecbeb3ed220fb6710be6260f7d2b961fc6b11d66fb5980421",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d33de2323e3b8c4de95727602967a5235c5181f4cd98230d706bb504b52f820d",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:987a14aec45e15749e141eebff7102121f1e80ea834ac692fa40ccb0997dbe98",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:13a6f663eacad6cf94354f90ecbeb86201922661b34b45fddc5f278cb339ebcb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:987a14aec45e15749e141eebff7102121f1e80ea834ac692fa40ccb0997dbe98",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:13a6f663eacad6cf94354f90ecbeb86201922661b34b45fddc5f278cb339ebcb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:5b3cab3cb08dca7054fcd10f1a9b219fa185541b0c6ab76c455a1af755045117",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.18.1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:a9d1ae62dc0529cdbf5864be6c6db968d13b283b31ca0616629158ab8a4a7c19",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.18.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b3aee4317d2dd3b71f4f39e30593dd4aa4b1db800b49b288a5028c1d8c7ab937",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ee17cb0eb451c62269b9f9df546f822608ad01a8475e5f0196c36e9cc4fbdfc4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e87c4650f978847b12f3ef2edbe919e88ee7e426966b61e3d7d2c7bb87cc464f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:25650e572efe87ee87e750b7825620aab00a175b7703437342ae9bbeee013bda",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2803"
                    }
                }
            ]
        },
        "1.18.1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:1432b04eccadd4f89183cffa56108a26b6c7675e23ed2eb3c37c7ad3d762c6bd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5066"
                    }
                }
            ]
        },
        "1.18.1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:282af8a8d068db0e52bae67cc35ff677f7ac8ed2323237d3f5c8dfde3f6cbff6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.643"
                    }
                }
            ]
        },
        "1.18.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:12d6ca811dc7b3c84aa41bee2a9381e0bab8edafdd385ffefc6a03ff38e1ea78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da0a8c2d42dd2ad4855be783ef73cb8d239a04c0853289efe2d7bcd599f9118d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:34927148aad9b6f571374a47ab68058789988b775f61d72f73697d49da2fab77",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.10-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:12d6ca811dc7b3c84aa41bee2a9381e0bab8edafdd385ffefc6a03ff38e1ea78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da0a8c2d42dd2ad4855be783ef73cb8d239a04c0853289efe2d7bcd599f9118d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:34927148aad9b6f571374a47ab68058789988b775f61d72f73697d49da2fab77",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.10-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:12d6ca811dc7b3c84aa41bee2a9381e0bab8edafdd385ffefc6a03ff38e1ea78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da0a8c2d42dd2ad4855be783ef73cb8d239a04c0853289efe2d7bcd599f9118d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:34927148aad9b6f571374a47ab68058789988b775f61d72f73697d49da2fab77",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.10-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6823,
                "digest": "sha256:e6c49f37085b8c32147c4f9528d4e9ca5f0c1498f21bec425f5ef988f60f06d4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55025206,
                    "digest": "sha256:bbeef03cda1f5d6c9e20c310c1c91382a6b0a1a2501c3436b28152f13896f082"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5163370,
                    "digest": "sha256:f049f75f014ee8fec2d4728b203c9cbee0502ce142aec030f874aa28359e25f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10876737,
                    "digest": "sha256:56261d0e6b05ece42650b14830960db5b42a9f23479d868256f91d96869ac0c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54583611,
                    "digest": "sha256:9bd150679dbdb02d9d4df4457d54211d6ee719ca7bc77747a7be4cd99ae03988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85764063,
                    "digest": "sha256:d842f08abcee8e84b45fed6869951bafab3c7512e29c2da9fee0d4a4fd46d308"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142015319,
                    "digest": "sha256:e356f78939fe0144def7b8a03cf6b2cfe98a8697ace86a172abc9a0d462a031c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:7d4550f48da1f4ade7bcef5c8275a0e77fe53fad9f78544af06f1d1b37b47364"
                }
            ]
        },
        "1.18.10-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6827,
                "digest": "sha256:66d3f1bf441ec154714d85ea7d9fd7a6ead40edbf1f400767915c26cee221881"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50190808,
                    "digest": "sha256:d705c97ea3a2300e9dda9a18ff662a98c2811b41147a15d4f4791f475ce8be47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4931090,
                    "digest": "sha256:d40c8c22d251f4b5db1459714e722a41f58f37155eb88da1b4155fd032f90153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217786,
                    "digest": "sha256:97570844854b4122edbc4c60110b4f0690133f761a66c1d6b732b80d4e1b26be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50343979,
                    "digest": "sha256:58a51a81f69b9de7a348ea8adb056e02781fc7587fffc6c2ca9d30983b6fa866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64692118,
                    "digest": "sha256:69a91e09550184fb8405bb4b435f3bae792955712ca92cd092a09c2c59f90d57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110079565,
                    "digest": "sha256:56d790efb5dfc41207ab909b8900792dffdfe8c3ab7f6dd9878b131eab594b10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3df5b7a04a5e88a2a60b48868b1003baa10acb2961041441969ca2edf63a88c6"
                }
            ]
        },
        "1.18.10-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6830,
                "digest": "sha256:56d0503da5b1f812f41407a1d4fe0618f722c605fac74026e37b4a18239127db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53681859,
                    "digest": "sha256:c345c9e441f5f49235768af74b8ab37743652d38958afaa000edd56d7b2f0540"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5149712,
                    "digest": "sha256:7b716680367d1dac0e54c48f75506323e0bb03628542a0fd6db39efeeee9adf5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10873659,
                    "digest": "sha256:0855378f8903bde22cfbcee08cd239678716cf01f24a3fca9478ef4121a84d91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54682717,
                    "digest": "sha256:4bfb8dc93d4197860c2bff47f2c2f280c2dd8ed699e7b3241aa325ecee53c7d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81176749,
                    "digest": "sha256:ac608cd4dd7312c16632b6994bc8e9070c80071cae07062461180bd3d242fbc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109095192,
                    "digest": "sha256:863f39be57f75d560893ed9c24dac57ae97c2d868a051c0c3937bcb1ce3c1179"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:62eb74374f73c29f2ebf557efbe24b6a373198cafb36b119b1b1b9ab9151b721"
                }
            ]
        },
        "1.18.10-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8fb09604b819e4b87293f826fbfe4ea3bb4ccae82de6987dcc06289ecd2a4af4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:79e0ea685e8cbac8e706db87b742f37239d03962eaf4f536fd3f9fc70c1d161f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d08b5059fa50c5482625f364afe801cc77ef3afef72c12ad75d6a68b96000b8b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.10-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6821,
                "digest": "sha256:25e0898c65d64bdde28554a39a0377cf43004637da0429ea9b6de606480c51f9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50448910,
                    "digest": "sha256:ac7f2e1c758675427623d0da4faa88b336c62466c15a98af61efd3f015282f2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7859410,
                    "digest": "sha256:dbcdf7fce05b60278ea57279b4fd04f78778f80a6d64b6f875afc4bde32c2d1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10001385,
                    "digest": "sha256:0ed0c2752d8478245519a7aab5e660053796af3c7ea7b34ad3df855b33ff5502"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51869329,
                    "digest": "sha256:bf01cd4ea334ab5c64bed24016c153dc7c276f552f468e564664e739dac31e09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68628666,
                    "digest": "sha256:d83a001e8a9b31dda2a663115368deee164550521b36b9337bb0ee845381ddd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142014913,
                    "digest": "sha256:5f8bc746e667268858065aa0076e151bcdc2713213f2bab52be32d9dfaaf82fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:fa32f0655e9c4763ecc1e53dd1c6bb61fc63d31e8c6d064d6b2ef1aeaa807430"
                }
            ]
        },
        "1.18.10-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6827,
                "digest": "sha256:f61a47b5f2fdb8a569eb6ba5915d3cc9a7e6c37fdb85401d0f2dcba4ede492a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45915604,
                    "digest": "sha256:1af2e9dc936b1285f4472a18af1e9b913352d31b1238f1c158995d9c15b6024a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7147799,
                    "digest": "sha256:ba37bd2b08543867db0934e29dd6c1476f71509aa0b42f10786733820b6c2008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9349030,
                    "digest": "sha256:cbe84c7428034fbe63e62868f1c420279eda084b4d396cc79161f73a9aeba29c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47397357,
                    "digest": "sha256:8389ce7126cbebf5244cba3ec839cd0c0cf2ff817fcc3f23a3ea989766c31570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53099162,
                    "digest": "sha256:92ca127bc80b034746072726023d18a81f8e1440be7420dce48db400046af3e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110079452,
                    "digest": "sha256:21a4fd04c5979fecd7746f45cae3418d06b722244a7acccecb90a39f8c6fcec1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:3ec66cd4cc76447b5ac67b1d2452528cf55abe834c817639d0728d60e9eb4235"
                }
            ]
        },
        "1.18.10-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6830,
                "digest": "sha256:607d091e88e04050438b09f7c74af736e7275b6a6e814754a7c5e7eaf659a404"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49233802,
                    "digest": "sha256:15639959ffec1b29b8f88b1e1db3ca0574ca52ee28fd8f3ac6d2cbb1c85fb209"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7727435,
                    "digest": "sha256:81ef007f1599a716143291e5dce35505ba1462668b8263c8bc4252f52305fec5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10003598,
                    "digest": "sha256:58deacb177a21829f3def5ff81fe30a25fb59962eb4d1a844f21a22e5cbd148b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52192182,
                    "digest": "sha256:26774fe15380d222e6b902800d590273893d73293509c3ab71a4682b74af442e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62488935,
                    "digest": "sha256:c29643b8219cda479b4f94a26af2855a9a5c086e949bdd1a1c9832101c6935cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109095228,
                    "digest": "sha256:3f74be9b52b2350abd69b78f562b930689bc2b0f0b52412767da03b852d8d0ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:69d55f50cc08deb572d9bf3e776ed3a2e4f23a65e822c68c31fc8745ab62ac14"
                }
            ]
        },
        "1.18.10-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.10-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.10-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5624,
                "digest": "sha256:006b193a252cc4e5b7a300994e9f29a61cade69e0f08b12612d65ea2c20aa8b7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72505333,
                    "digest": "sha256:38e24eae3cd26f1da8006ffde902a375ee15766fab1b4b403474fd3c55b0030e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4465,
                    "digest": "sha256:1afc474e418da22f5dc388bf0dc189a8f85a27632902fe4aef2af30e51b4ca75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72489228,
                    "digest": "sha256:2f16c72d009f924d238418a60f4edfe3b5bbfcd0384af29ab52fc4f13c2f8d3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153588790,
                    "digest": "sha256:1644464e7be9db7f02efd558d9e2548002e8e2ffc0f9a1a1219d94fa567b2f93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:cf199bbbb6e27ebdf7f855793ce50aa18fda3ee91f6dcc5605bf544b73d54a65"
                }
            ]
        },
        "1.18.10-1-fips-cbl-mariner1.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5618,
                "digest": "sha256:4a6906e1986d0c4ec7b6f6630a6e10493fab558e14ff265a77e69bcb7f3b8546"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71437461,
                    "digest": "sha256:3eac7127b909037cd4091c7ff7bbe19e96dbff7fd77e6db7815c1c07d10b5f24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4466,
                    "digest": "sha256:75215263bc18684d238e4b09c0add894e01871375497ce473a263e4d7a1010a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 63461113,
                    "digest": "sha256:51478bd01c7ebca595733055b20bccd8cb22f2d2a311bf929e2b6e618e1f4c6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113954946,
                    "digest": "sha256:bccbc8506437c537f6c5c44c0767a8da55281e5722feb6ab419a10f23773d5e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:db1b97b43892fbc45cab7f601f9be35f45a47652b40f6ce760dc72ad40a92607"
                }
            ]
        },
        "1.18.10-1-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1370,
                    "digest": "sha256:3e900ac2fe49b0fba1157d909a18046714e7f08fd9a60147077d3eb22369c748",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1370,
                    "digest": "sha256:699e04844b340d5ec4b6697e0c10df3bd44f14f3996cefe660e51828a4d09d09",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.10-1-fips-cbl-mariner2.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5627,
                "digest": "sha256:9db1eb79bb69795de57b06a9df632f91b380e286236d01a39a3742cb36ea0c83"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28342661,
                    "digest": "sha256:d4b39c9d6b45c5b620e86e87f8a283489e66ef68ce190a5addc4bafe9a36278b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4460,
                    "digest": "sha256:f6174233e15996c8b64f52c238a3f6be6ac778802b3f861a08c10ab22b0378cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115484905,
                    "digest": "sha256:fbe1ce09066c4324af8b02296eb5ce8f8ef32e0c0cb8fcfa85385717d3a11fb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153589043,
                    "digest": "sha256:c241312315230c2de2213087d160faf5f9a1a6b48c938345ab2f3e1730233276"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:18ee5ee8f2e3dc44f9fc58bb4148463b89b36024ed5e64f4e9517584062dcb26"
                }
            ]
        },
        "1.18.10-1-fips-cbl-mariner2.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5618,
                "digest": "sha256:84d39ba7a815cc9004cad65a07618f942a5fbb005c69529480af4e63c69da280"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26839358,
                    "digest": "sha256:c8c2adef228782941cf6d25a1abe55f05a065f8b97d9065964ed53530c310a5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4463,
                    "digest": "sha256:f2719c3d4b9dd839bbcf98be0daf765e6ae415690ee3514480065d2bff1df420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107109886,
                    "digest": "sha256:c97005076502eca722a99ff90112297edab12c4656f7370b6b81ed883d4849ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113955067,
                    "digest": "sha256:4407b24c244c2d1a658a58113c7168e54123c65b4aaed711aad8f2e00b963b02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:7107af1fd4bab58f77575a56a840be4ab5f10aa5d65ecdccf9ac8314d7595d31"
                }
            ]
        },
        "1.18.10-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:35b2aa156b0060c968385fde88eb6ba121d5c98b671e10f89d37f091009b2a4a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3887"
                    }
                }
            ]
        },
        "1.18.10-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2996,
                "digest": "sha256:138dd5e453a4d2701fc96fdb32e537a7038602488aaca911670f068d966186cc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103271582,
                    "digest": "sha256:fe57e9b1012791391551215e876906b6729bac0a700fc83d788d4fc7066342db",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:fe57e9b1012791391551215e876906b6729bac0a700fc83d788d4fc7066342db"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1045,
                    "digest": "sha256:201b77e913dff55d506b1cb8dc84be3de24bc0b66c135cec7e1cfb62576353c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1023,
                    "digest": "sha256:e0ca5d1fc06fe645ebdd822895c4085615aba6b4cd5e5c6953b608aca46ebc6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:1d3a3235593220ae94d7e4f24b8e7ab2760e396d0979a1c05587cb6774c93bb3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115226,
                    "digest": "sha256:824b22e823208aad3ca9d1d9613551f8dbe78de45445158b1d66a4f161497e11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1027,
                    "digest": "sha256:993a3f6cb8cf0add6018f10c69fe0f601488168a8475b7095dfe5c3c7c9e924b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1044,
                    "digest": "sha256:4376cfa7ec1a88d8738df536a0bf2b5c7e0ff0ddd25bd798fa3e1ce0216b7dad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149629045,
                    "digest": "sha256:bb92970888c328e0047ba6702e05979a7e6e894daec34f9a69e01198df31ae8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 84969,
                    "digest": "sha256:674300a0145d545f5d22e171128f539a7402b381f3e009b9080c6ed0fba56cef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1231,
                    "digest": "sha256:36e5a204821ff98e95ec7f435d25b113cc7200c108a5fde7c238ca9438be9ac9"
                }
            ]
        },
        "1.18.10-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:9ab5718a827391ab21b07ae7bf94e673e8b8a1221c207312fe24c6eb5bbfa36e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.1487"
                    }
                }
            ]
        },
        "1.18.10-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3001,
                "digest": "sha256:39a3546b084e0f87cca9ff2f8c63cdbfa12c62b9fb090ed5e7c9a996e27564b4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 118308467,
                    "digest": "sha256:25550ca2a1c5d341a996152b565fbecf6742f2e123642a941212c6100c3dfb7d",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/nanoserver/blobs/sha256:25550ca2a1c5d341a996152b565fbecf6742f2e123642a941212c6100c3dfb7d"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1074,
                    "digest": "sha256:e5578eabb0059cee46fbcb49fd27d294d06f051347912f68ca4485ffc23b6b01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1065,
                    "digest": "sha256:554e8caacb9036625ea5b1e642b4fe6784a7b09fa8968c5f74aa1b023c8c0706"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1044,
                    "digest": "sha256:fa1c29219c3cd8296b8f9cb9edb1e901920665e6a188ef9cd8643a62a51096b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82781,
                    "digest": "sha256:a1f40de04c51fb42fea68fcd34f466fd55898b7b6186b96b4deb6ed291270946"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:ca3123deb9c7cdde33d07a165b088319152b0d35d6f6652fd5c2798baed7cde7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1099,
                    "digest": "sha256:c237ec330ce2b81214de7b1f496c8d3c8e8817dfe0e643122462dbb3cb027987"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149642179,
                    "digest": "sha256:cfc5db69f50bb472e2a764fb2b4423fbc8ba2ffff16f957693361255380ed64f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104087,
                    "digest": "sha256:3c60cef5180d3c53ba4dddb15727fe5810b0ae322c5b572acb92f00497f71213"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1238,
                    "digest": "sha256:98bd5e1eea2b38f4f32fd3ebeea2343dc378037a97864054d3970d67cc26dd32"
                }
            ]
        },
        "1.18.10-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3009,
                    "digest": "sha256:8b09ae3747c7994ef235361ce49af7834ae370a437d59dd9fe56036fef804f79",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3887"
                    }
                }
            ]
        },
        "1.18.10-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7100,
                "digest": "sha256:37519268187efe4b99ff2041fc38c922b623092bb1e8a0f2ece5df4921e118f3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1660377526,
                    "digest": "sha256:8185ee4ed6467d79d4c69f02fe3902311ba84777802d459dcd99869f603b161f",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8185ee4ed6467d79d4c69f02fe3902311ba84777802d459dcd99869f603b161f"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1290,
                    "digest": "sha256:cc1b4d90342a4db54cd5fda376d0a7cc5566a77a3e782323c3642e15b2ff1c8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1296,
                    "digest": "sha256:691d0938283551a5dd537df55e46c02bc8aa91909018879c76976df9734625ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1293,
                    "digest": "sha256:1263e57c69ed3cc9f7d2a820cd7afe5d9f01c61eb151bef7d6a47c0402f29f98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1323,
                    "digest": "sha256:4c65429382990f8c6f862de569eab4efff2566eabb5f862af6db3537c1151516"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:36d44e67699d6a189aed1cd3d0f1f091153b4ed2782cbcfa68f3c6f76a6a0705"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25502083,
                    "digest": "sha256:1f8dbd58f92452f32b15e4eb9a342ab4ac89cc631bc6b10f9a08e1568dc688ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1291,
                    "digest": "sha256:502b103d60b17fa49c9f1fe68708246ee2f5a082ee21d4304c95282f74283f14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 399261,
                    "digest": "sha256:3a5bd874ad00e3dd864247750c41176ab1c83e8d4e22e1a95fb5b6be3c377526"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1296,
                    "digest": "sha256:a8d2e7d15969c7d2e4acb1045d4d8fc7daf9a351852d1a60e20c3368ca2a4af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150074995,
                    "digest": "sha256:7494a9dcd557756d22a853aac12e9d24567394891f1b1b29ddd9c8e92b49d91b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1448,
                    "digest": "sha256:34ff8b4db7fd101953d5662bbb2071d1c08ea086decab80577f4cb722a770c3a"
                }
            ]
        },
        "1.18.10-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:be54d8c47631c699ddfb3b5637d47948626d662539f7a71a5b22e095e687a529",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5648"
                    }
                }
            ]
        },
        "1.18.10-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7261,
                "digest": "sha256:72054b7b0a0d6f126bf4b5a2804cb0ca677c103e107a9b1a0045e5ec7e955cc3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2214714969,
                    "digest": "sha256:0551f9da606800c9536fad18188c593a5f6451deb9fa29ee4f74ef1aebb38501",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:0551f9da606800c9536fad18188c593a5f6451deb9fa29ee4f74ef1aebb38501"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1416,
                    "digest": "sha256:c2180d5c065fcd269a39eea5ff74d183f9b8fdd1aabdba159aa40453985600cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1421,
                    "digest": "sha256:53d94502c837b7abc2818b3ea2ec28467353bb772ecbeda2eeb36b1a788c157e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1412,
                    "digest": "sha256:3b467f5066ff2893db0059968b1379856bddf63c122d3f02992459a22e20a333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1433,
                    "digest": "sha256:ef51d6e27d641a61f51ba5b53b16e9e7544628df1be57955d28d92a227c5d041"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1413,
                    "digest": "sha256:819207b8f3c6daf9bd551125a880222f277abd0c37ecff11f58649ba73671df8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25429955,
                    "digest": "sha256:ed242ee21122354c7fc16a329500a312c3ba261bb2b6d3378c783629d3118153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419,
                    "digest": "sha256:9e3ab38a247cd117944ff951a14ea5afb9ee4ce845a54d4823d2dd3288dc56dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5951740,
                    "digest": "sha256:2eee83a0dd7cd28e2fc46d9686b7472260fc72da924ae59f3debb705e114d717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1422,
                    "digest": "sha256:ad00d8f106857c5e5bf6707e92268b1eee835e14dbcfc37b84d68ed713ed589e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 160180222,
                    "digest": "sha256:05f6202648433a5176625df656e5c1e239a990bf03a2074618964451703eae42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1570,
                    "digest": "sha256:d24a1949756bd72167c246f44d1c567b31a0cfdf0b51bf520fe66733b4c9cd16"
                }
            ]
        },
        "1.18.10-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3009,
                    "digest": "sha256:12b47c55c7ce667212b40aab9a38e72678ae05628362b6a8b87667919604f9fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.1487"
                    }
                }
            ]
        },
        "1.18.10-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7098,
                "digest": "sha256:83e1e3f400f8e1f50466f27bc7b814220f26357b1ab89f4c99ac1f24679d26cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1347458067,
                    "digest": "sha256:6a0972e4a21b1e21e65ee97fd7f7b548b42f85db2bcb8c941555d9a7111d7e22",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:6a0972e4a21b1e21e65ee97fd7f7b548b42f85db2bcb8c941555d9a7111d7e22"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1294,
                    "digest": "sha256:4035cb944ecdc4b0c39902fc0f52e748c64d9df99b8cd78dd08acff2004edfc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1295,
                    "digest": "sha256:813e434b6cf1e9405c665016fa59ca9de64e39323d88061509a6d7ea9344d9de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1287,
                    "digest": "sha256:36818669f2f7efd8b38ad3d25b87791a1a5778b39a6f8b7e8a2154e751ab0b5d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1328,
                    "digest": "sha256:a27ca32325b205580d33a683138653fddb6c60297430e186d279379dd202adcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1294,
                    "digest": "sha256:fbb0bb243ecc659d96eb004a5a38e9a3e34a7f074f9b34f6f412ecbc5efcbb23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25716076,
                    "digest": "sha256:100db8d5617b955a10b3febb4c87b7954006683ba35e4dbd626a448a99299568"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:79e60029d8c7fc070f0b6280120bbf5229a9b5f94d8f030a98064acfa31adc4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612016,
                    "digest": "sha256:d2c1cb829b1e9d3cd9a00df35dcb3978265cc301c06fa9a65fdf61b7a05de58a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1283,
                    "digest": "sha256:7d8d8eeab11077c2c27b1b2fc8e2acf9734995290b1670a44ed41c9e299f553b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150316423,
                    "digest": "sha256:cde90a4dc2a45947fb4c93c3ec00f8a8370f3cb94d0c2bb71fd1bfd7f3742d44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1426,
                    "digest": "sha256:5d8c2005c3e240b6af40f6ea6a75a9b9046e9503c2fd5189766b14d173830c79"
                }
            ]
        },
        "1.18.10-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:12d6ca811dc7b3c84aa41bee2a9381e0bab8edafdd385ffefc6a03ff38e1ea78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da0a8c2d42dd2ad4855be783ef73cb8d239a04c0853289efe2d7bcd599f9118d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:34927148aad9b6f571374a47ab68058789988b775f61d72f73697d49da2fab77",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8fb09604b819e4b87293f826fbfe4ea3bb4ccae82de6987dcc06289ecd2a4af4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:79e0ea685e8cbac8e706db87b742f37239d03962eaf4f536fd3f9fc70c1d161f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d08b5059fa50c5482625f364afe801cc77ef3afef72c12ad75d6a68b96000b8b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.10-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.10-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:59932a5da7d88d376b79b2ebf781aaed5f8113577dbad18fa8274140e9be9023",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1369,
                    "digest": "sha256:9d46f9c404f8fbf142104f10bda1ebc065a8397e759b2045d8bce0cf6284635d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.10-fips-cbl-mariner2.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1370,
                    "digest": "sha256:3e900ac2fe49b0fba1157d909a18046714e7f08fd9a60147077d3eb22369c748",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1370,
                    "digest": "sha256:699e04844b340d5ec4b6697e0c10df3bd44f14f3996cefe660e51828a4d09d09",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.10-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:35b2aa156b0060c968385fde88eb6ba121d5c98b671e10f89d37f091009b2a4a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3887"
                    }
                }
            ]
        },
        "1.18.10-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2589,
                    "digest": "sha256:9ab5718a827391ab21b07ae7bf94e673e8b8a1221c207312fe24c6eb5bbfa36e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.1487"
                    }
                }
            ]
        },
        "1.18.10-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3009,
                    "digest": "sha256:8b09ae3747c7994ef235361ce49af7834ae370a437d59dd9fe56036fef804f79",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.3887"
                    }
                }
            ]
        },
        "1.18.10-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:be54d8c47631c699ddfb3b5637d47948626d662539f7a71a5b22e095e687a529",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5648"
                    }
                }
            ]
        },
        "1.18.10-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3009,
                    "digest": "sha256:12b47c55c7ce667212b40aab9a38e72678ae05628362b6a8b87667919604f9fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.1487"
                    }
                }
            ]
        },
        "1.18.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c4e0fd0cefb52f7762399ec8b9e6013b75018ee557ab1ebe6082a1b49090f320",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:04ba647b6df9294743ff7dadcb734d4d92493c9a8e73dc155311f85ba2aaca21",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c503cc4db8b047f1f1e6c1f6be1d1050d4b58091d23593e613e27bf1cb14471b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c4e0fd0cefb52f7762399ec8b9e6013b75018ee557ab1ebe6082a1b49090f320",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:04ba647b6df9294743ff7dadcb734d4d92493c9a8e73dc155311f85ba2aaca21",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c503cc4db8b047f1f1e6c1f6be1d1050d4b58091d23593e613e27bf1cb14471b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c4e0fd0cefb52f7762399ec8b9e6013b75018ee557ab1ebe6082a1b49090f320",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:04ba647b6df9294743ff7dadcb734d4d92493c9a8e73dc155311f85ba2aaca21",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c503cc4db8b047f1f1e6c1f6be1d1050d4b58091d23593e613e27bf1cb14471b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-1-bullseye-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6762,
                "digest": "sha256:8d9b93e7c710e1471421ca5f9077ff12e14ac12a2b6329848335b715df114402"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54945622,
                    "digest": "sha256:67e8aa6c8bbc76b1f2bccb3864b0887671833b8667dc1f6c965fcb0eac7e6402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5155721,
                    "digest": "sha256:627e6c1e105548ea4a08354eea581f137cf368d91aeb0ad47dcb706fca54fd8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10875052,
                    "digest": "sha256:0670968926f6461e3135c82ba2c0ad3ebdedc0d0f41b18bda4a1e41104b8be8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54578468,
                    "digest": "sha256:5a8b0e20be4b4a332bc3d90b9903a5f3c0664b440fd9f1d2a1db0d4b7e6e826b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 85629562,
                    "digest": "sha256:884c281928139350b0182553729d874889c13aecb35b0b61b245957af752be7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141772049,
                    "digest": "sha256:6db002aabec4b1699b1b56b23c2c8c7ba5b6aa3b474619ceec6fc0e91e1ec458"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:cdfd9ac133f6c51aaf8f15d352482b0d63a724bf9cc0604a41dbeed613567fb9"
                }
            ]
        },
        "1.18.2-1-bullseye-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6764,
                "digest": "sha256:d7c3448e708c64b492d763076d8ad8227d2584003a26c4bb8965d2b0be83a086"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50134069,
                    "digest": "sha256:ba38f9a6c66968e207a7ada348a2110e3be0ff117e621d9e10ddd7c4becc0d2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4924901,
                    "digest": "sha256:f71423015d7b4f718e54ff1561cc06bb4c8357baedc23b49d25fe99cd4b0ae41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217886,
                    "digest": "sha256:dd8f92194faa0a66e5bd160b229941428f0b0387c6e313e4f1f903c678fbb17e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50329744,
                    "digest": "sha256:c410c75a05c2df4ed485cda22fd35206e0ea4b9fbc9f096b11ed5adc6f83fa1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64581062,
                    "digest": "sha256:f06beda39f222ed6b912f1b2b4d7f2048d50331379e0bfa586e31e42e5ad64ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109863303,
                    "digest": "sha256:0cd89a6f444119e5ee7d90f12054023417632a16a5cb23f0f663719f6d0aa78f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:103e4df4fdc0a26e3b65d5060d6f4fd5521ab25de752b7c103245e94b8f4b434"
                }
            ]
        },
        "1.18.2-1-bullseye-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6769,
                "digest": "sha256:184c639392f9a97bb0dcbcf9d303f2a875e1ac48298f67ca843790b8dcf7c980"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53634337,
                    "digest": "sha256:3a36574378e6cece2dd3a839e1c0220eaccc4063b61d7481d1a19d3990c1f2c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4938615,
                    "digest": "sha256:a61d3345afba43846f3e638752cce2f0d1d47b21cc667ba08b00db10767a4702"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10656992,
                    "digest": "sha256:3e267d6aa58f93a513352a3b46c7addbf9335d7d43bfa4f1df4026d21785181c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54672822,
                    "digest": "sha256:f647907d26b879e0d43f6f4f0807f01e4dbdc034edcecbc988f6033cf401becf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 81067149,
                    "digest": "sha256:0327f485a88081c78454d135ad2b24f0a0af548e90c662ba7c58b96b1246a4fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108861113,
                    "digest": "sha256:63a5102cf94d9a303f36025bfd5c9e469137b5607ee30b59b9ad8b8371fb754c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:5ca8af1db975f467fcc1ecfc1cc2d70335bf58adeec86f9e9ebe9a669741347c"
                }
            ]
        },
        "1.18.2-1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:11926376cbbb7ed5c66cb6b5c5048937b2a8e5960ca93a9704841d2da385a993",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5a476804eefafc96bd05c82002ade5154150f5ecb69cada8167974750654301e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:376c0de048d9c10aa98b0c42619a729e6cde6b194dcb25ee3bee2d99cbbac114",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-1-buster-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6759,
                "digest": "sha256:91c7bcae4741ca1cc1b45ba5927919cf7e078ade79e70a4dd0a1987f7c0d8f60"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50437966,
                    "digest": "sha256:b03a94565ecb6e02edf716307f25a0ea5090e3e2f7acec6a3687b95415378a30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7856436,
                    "digest": "sha256:ae7bcede80b1916d73be58ae0a2af8321770c4ce0c8ada05c39271e292355325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9997259,
                    "digest": "sha256:37471fc83c2dc382a8aec5dc1c1f0f2f8156f4df529cd1aea7647cbaee4b25fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51843657,
                    "digest": "sha256:0162432a49c07aa492d3e1031af58a9a9f9b22acde859829434e5a54d019aa1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68576312,
                    "digest": "sha256:3f0135d8380481410fe3099838a6eccb8b1b800acb9f501bde42848e67160782"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141772074,
                    "digest": "sha256:3ab8774415b716daf68a7ba24819d2d6c7968841999da9718ceacf850d54de0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:199eac021eddbff7dd8ec8eee833b6c2c2f5774b2a4b90ce7e69ffdd5d09ab2d"
                }
            ]
        },
        "1.18.2-1-buster-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6767,
                "digest": "sha256:65946685675765167b2b9302015f248e4b44f8ddf837298fd5edefda95a079af"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45910176,
                    "digest": "sha256:f328f2671b27c760193a9d82808b176a8a7420205e8eb884e1fee20d2ac57ff0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7145025,
                    "digest": "sha256:9e554a91160b4bf86ab199d7a5f5f105c5ffecc37b098c4274d98c264f677799"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343816,
                    "digest": "sha256:8c1b07ef419c0604851908ed718983760891b21a649a1b8758b871522e7d3e48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47359230,
                    "digest": "sha256:398961d3cf225ff82b93bd457012e308b756c455d1dbe1191bca51a54483f1d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53049812,
                    "digest": "sha256:f3e00d737d9490a83959879431b8499fc9b8735c8ce4a1490711bebfe6564bff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109863362,
                    "digest": "sha256:1e2b4992a53e4652f74bcb26f42fac8f33cb49185f1b21aa575e6bf47ee7ba54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:41ca49705e60d3e654787c452116008de490d8855766428d1d696b11abb130c8"
                }
            ]
        },
        "1.18.2-1-buster-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6766,
                "digest": "sha256:b772fdf6856dd654cea75bbb29cbbe15b0d481ed4a537d19f2934ff1e679e95b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49228300,
                    "digest": "sha256:5528d23e3f315103c99c14258e007a025d09bb4fd587c2d8a32d6dbb6047b891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7719789,
                    "digest": "sha256:64b2d66a1dbe5960c6de4181ca3512467d3303dfb9cde3d92ecf7a85111cf68b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9767329,
                    "digest": "sha256:ba9244ac9f9851b43ddc1032930666d339c3a5d9b934e2ca42ecd2e8ef3dd680"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52174787,
                    "digest": "sha256:06885dc77f03f05a5f98ceb35e871f027525d932d32027ed9d4ffb0cbd29786c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 62442178,
                    "digest": "sha256:d6940eddee45a3763ba810ad3e72308415ca7245f54de3eaae28f27a5cdc6ff4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108861213,
                    "digest": "sha256:621d8255dd70423b9be58d56a3ef3a15ea23da152952a8c1b5e5fd22d913e77e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:11451d2d53e3e4c3710e430ccfc668ef8266bb65f4d7f9016c8aa13f36d074e8"
                }
            ]
        },
        "1.18.2-1-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:fb8ccb516abf7e5444a0c26dadcb2d474fe8a0c012f247dfebcf6ebaca0882fc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bb3f5e47d998d1e2979991eb94cdddefd5c224b8b6ed513f32935bd770e71317",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.2-1-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:fb8ccb516abf7e5444a0c26dadcb2d474fe8a0c012f247dfebcf6ebaca0882fc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bb3f5e47d998d1e2979991eb94cdddefd5c224b8b6ed513f32935bd770e71317",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.2-1-fips-cbl-mariner1.0-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5285,
                "digest": "sha256:6d7e9b38aa7f0c626437abca7c197215eccaf0bfa74e0162ab6da5a62c86a62c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66341387,
                    "digest": "sha256:1bc9e758c51a40cd73027fc05e0d70ddf8e0cf6f06a80a00c5b3da646e7f73ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70736625,
                    "digest": "sha256:30418125c5d1492e8c657a96a2593aa6a949af2f55234a80b528afb4b0ab941f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153352075,
                    "digest": "sha256:d99e12171039788118f81098ba6a8f49c79ea2e6b87e48bfc3cb5fa8d9d17463"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:b70a026303bc0cbd0787acfe29ca422003333e1e8049ac368f8957fd1daabf6d"
                }
            ]
        },
        "1.18.2-1-fips-cbl-mariner1.0-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5278,
                "digest": "sha256:65c9b75727bdb5e0af651ee1d6e91b4c7b9db5ebfefddaf2fd5bdfef25cf365e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65053549,
                    "digest": "sha256:055b1e9976930afc92226baf0eb7fa1e3b556546516a565d5e1e022f927b2010"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 61618667,
                    "digest": "sha256:a18cfa91294405d3a79c331e6e0c4715455ecf342f8325350d215f7bc298e2dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113746173,
                    "digest": "sha256:d0a4a8c6d65fcd2a6a358c53dae95c424ede7cc23bac8775462a4929814902c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e8e0a4f0bca239031af03cb804bb1c761647c9ed04803ea5a0b75cfa8a481c23"
                }
            ]
        },
        "1.18.2-1-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0d7cc92b78bf84e49530f749eb0b490b5e01c488bda59d55b9a432106320ff22",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.18.2-1-nanoserver-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2997,
                "digest": "sha256:3a7387dc0775a13841b31454555a203177352d97ed503fa0fa39327c72dd35e7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 103133833,
                    "digest": "sha256:6626f490e738e10ea5e31ff2643e3a8c372e076d9030c77fac37537dbf12b73c",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:6626f490e738e10ea5e31ff2643e3a8c372e076d9030c77fac37537dbf12b73c"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1037,
                    "digest": "sha256:5e770b28c3e6691fb91fd0d42d2226f4a60ced55ea7f8c06291eed8f07dace85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1128,
                    "digest": "sha256:2dc2b6f15beb7937d141a814f9a4810f69b304c27663606f7001a5a37ee74417"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1031,
                    "digest": "sha256:38b6f7ca1287b0f64e106516b2418f6a8a3a2ea5b63af4652cec9b3b7dec21b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70132,
                    "digest": "sha256:9f9ca6a74e775114f6f40ca8c15b29d081657fe81839f6691f322b7abc26b601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1023,
                    "digest": "sha256:89fe9e6b00e0b99e288af5ac7a3cbadf569f4fe6baa5752e110b5acbd64ae827"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1016,
                    "digest": "sha256:0b505db06dbdb9872515d584ac8e9d45744e3a4abd2efac175ead32754b1c724"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149318834,
                    "digest": "sha256:49d13d36d41228c68e14f828da2ee255a1d4139d9101eda61bd1fd975337a904"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 68525,
                    "digest": "sha256:6cb01d6b4005f1ada7542d0b58dbf572991617718e54fe5b6a63a71ea385cffe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1249,
                    "digest": "sha256:3dcb69293e8f66995ecf02a54416dff0c540eed154b839abbd450d8711df8cf4"
                }
            ]
        },
        "1.18.2-1-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:89d15cc25ceb2c6729330a37599c02a10a6397edadd52e2c3dcf2bee8c307a3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.18.2-1-nanoserver-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 2994,
                "digest": "sha256:b627b99c00fb699df74269d116a6540dfd088c91263abdda03b4846a518fc6a3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 117687017,
                    "digest": "sha256:2c74f0842c5a8e9b80b9e2cf64e1ab10a6fa67951f28cff5fee060b88128564c",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:2c74f0842c5a8e9b80b9e2cf64e1ab10a6fa67951f28cff5fee060b88128564c"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:b7c1579f50d9228b7f510e4451140e33564cb04f0e41f89f6bd24037520e136d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1030,
                    "digest": "sha256:f563acd0ebf5616cdbcf580fa0a803412413fd14344be24cda9df7ea38a6a051"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1039,
                    "digest": "sha256:9c513ced883831a8f3a390d21b16232b058d21683927d19242e8a1e2449d7a7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90257,
                    "digest": "sha256:0bd66efb22352dbd861a50075ce337227f85319ae84d342211303a518009c2f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1071,
                    "digest": "sha256:f23c90500132eefec7baf5b069a72a95efca66254ab4925e784fb19630828cda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1043,
                    "digest": "sha256:9afceb27458f2c5d94412245f3291e0733d16adbfa76243b900e476bf66feba9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149336972,
                    "digest": "sha256:f2b20a113564257f7dee5ce63c74996b5fd76e8d2b67b31a5d7f4dcf4dc63905"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92358,
                    "digest": "sha256:a151b01fbcd597dcf8413230d01e48b56b08d1591ca09bc5baee5799d0e313b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1231,
                    "digest": "sha256:45c2455a7f81ffc99cd40ee5560563daae56ba9db13d6e2ac4e4a3217f72d96b"
                }
            ]
        },
        "1.18.2-1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fb4e0b2f63007d7c264bbec14805d1457962717dd9744ef5fc769c782263fed0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:58239787731b368f6726fbc1a70ba7768a17f87afd5f84581f30720c39fda656",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2b4954b5d2a8ac2e0615ceb56a7d33cad2d28cc865b92364249e79ba13e4dbbd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-1-stretch-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6792,
                "digest": "sha256:3e4369fb6a2eec085b1c9c3758fea79e9f2a4514e7fdf481af9f78582e0a37ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45428005,
                    "digest": "sha256:06e39e28714dba08fe310ca1aafb43905427729ecf8e9586f811a7e5062fd09b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11302273,
                    "digest": "sha256:de2141afc44a4cc9b8f9bd9ae1ad4ec8921fdf75b6be9b192b60f1b7f8469919"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4342926,
                    "digest": "sha256:38533702160421fc5a777d84e162c51816a24426e58139f426e8156fef69d7a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49765289,
                    "digest": "sha256:60f25117aaebc0a8e2452e10a973f1d943fca50b033292ded9826449657fddba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57646988,
                    "digest": "sha256:b631ab767df3b82b94fd4f2172e89ae5d320d3651148b6afc6420bbcdc3c8094"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 141772269,
                    "digest": "sha256:89cbcfb88608b8f35183c6146cb3094aaacaa0820662ddfe2a9e6239b83ab145"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:70184edf5a4ece678a64e7fdf544d8c5c70b893393103ce30b775f2b925fc47f"
                }
            ]
        },
        "1.18.2-1-stretch-arm32v7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6797,
                "digest": "sha256:ebb792ad6bfd29bbd1290ad91923ffe517e6987511231aef8681db3a75993010"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42151163,
                    "digest": "sha256:629c5b996bdb9cea71f1d194d7a244d4aba271133bad4f5b88bfe38c4626349a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9956859,
                    "digest": "sha256:9fbf25ac5d0e3ca11a0fb961c2ac0f897f1982389c85b6e31ee0fa63a0293cc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921810,
                    "digest": "sha256:c2a3f9738e27d03b85306ba8927ec41f0ffd375d26fc501906f097e639a1047f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128018,
                    "digest": "sha256:57e17eeba6c7bc95de3a6d3399ff5b2580880dcdd7052a29dae70bb9f332a67b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45975397,
                    "digest": "sha256:89c38151f5e997d4e3a63d02b2a7c58bfa272d5fcf125a3437439872a684edf1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109863233,
                    "digest": "sha256:bf8276aa7a3a50aed058816cc9b2eb010eba8d3e73c4ec6a78bea955edae5810"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:10a57a999af71bb2ba933de826acd35eb4b69d8e4efbe9aa4f12dc5a56097109"
                }
            ]
        },
        "1.18.2-1-stretch-arm64v8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6801,
                "digest": "sha256:dfc74bf54feea60acb0519c8b20d5ba5d3289683ccf24c2cd276398af6044cec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43212478,
                    "digest": "sha256:139065d8f4553df403babda56f830c32aa1f3e57f18d2145a3179468921a4bb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10217776,
                    "digest": "sha256:7d0acfd1725613d968a54b7fbfe1f70f24b8a0dad792ad3cb28349035f7736fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3874525,
                    "digest": "sha256:002c314192ef0350d2ac1d1e49b4fddbc49dbcdc609e56e0e2567ee2dd37f0bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47735546,
                    "digest": "sha256:45a0592b38ee1d873cc3681a7998f4ccbb2745e34ddf1d93c35a1d299949facb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49039347,
                    "digest": "sha256:4f346de5ff52731bae98d9823e5316fc69f7cd61d69f9e1dc4efb23658879b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108861177,
                    "digest": "sha256:127b28f97cf806f8e8000d7b77aaeb1658601ed1572c7a5ea010844b062f3d25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3b427d25c5af9bb72e5613ec9254f2b46765374a945cac62e83c9a97a141dbb4"
                }
            ]
        },
        "1.18.2-1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:2302f9a3bae6107abb22bf4c19a460c89c92e5b5ee13f0a75b85154d44676ac9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.18.2-1-windowsservercore-1809-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7258,
                "digest": "sha256:3bea6d94e189600cec9788a96171f47a87e463f550f5ba771213137b8d0e7ff9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1877166088,
                    "digest": "sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:b111c3320c949bea81612bf4554f1b6592c2f504920b5bf57ba340a1d4d52c93"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 626889777,
                    "digest": "sha256:8b534d64a7c337eb8a23b425e4f598cd3e7407ddf8c7b2f714d1e7f7ed6a04be",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8b534d64a7c337eb8a23b425e4f598cd3e7407ddf8c7b2f714d1e7f7ed6a04be"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:6c05bcd2ddba64b5f2cc0aba592f6648a5ed66c16684d51b75b13e1711f03a66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1292,
                    "digest": "sha256:de574ca1419aba9a044caf26c57abf09833133430418e6ae1ab517fd6c624dfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1271,
                    "digest": "sha256:6588ad9a17daa2ddf6ac9c2fe007fff38a43797fa21cd3d459404c220bcadf40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1288,
                    "digest": "sha256:31d96094d23018da22f470bc1fa2e292982759f4ccb2c464d09c85d98bdbdf5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1268,
                    "digest": "sha256:8fa2d76efb53a827740e6d19d8817b3d65b063fbe2a4eaec09657bfae7558d40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25585911,
                    "digest": "sha256:de03bb0ab075c93b2be5bc4aeb97b57e1200cdfd0845f9f903a682ca949d13f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:05b935482fd2fd8c7a29a34245c2f589d36a380c034d156bc1630ccdfbe52353"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 373959,
                    "digest": "sha256:1c93c93e5d612a114fa6e2ddd490556f280429657ec1cfe36ffcbfbc1269dffc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:335d3da00983977e31130d08c02c7b68172a1989afc341c31568af5bc30864ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149739199,
                    "digest": "sha256:3507db771434e3c755067e6a46ec910e2fbaa8cbb952128c2da3fa253594f2eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1419,
                    "digest": "sha256:3ae388cb4677d143e9b432d573c10548a4b4c0b116e00133a961275c1458c8ad"
                }
            ]
        },
        "1.18.2-1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3403,
                    "digest": "sha256:d87b5239c9c5af3967f9f317f4dea8bd2db62025b22c62dbde8b0fa71d646a24",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.5125"
                    }
                }
            ]
        },
        "1.18.2-1-windowsservercore-ltsc2016-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7258,
                "digest": "sha256:81ca94995aaff0185030e62b189d83ecfe6d2307840bea0e43bf76f94e94afc3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 4069985900,
                    "digest": "sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:3889bb8d808bbae6fa5a33e07093e65c31371bcf9e4c38c21be6b9af52ad1548"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 2208956366,
                    "digest": "sha256:8e90f10d7f367e1134c0a79f47fef5028828d636674e0e3290d85891f9f95d62",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:8e90f10d7f367e1134c0a79f47fef5028828d636674e0e3290d85891f9f95d62"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1415,
                    "digest": "sha256:196d5e1571da3f5bb1e7c7b94e88e8ba6ce9b7618ad74d3261f72847cfaf921b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1394,
                    "digest": "sha256:6e2fbc0a6e6568e82f3f34fbeb95d95143870cba694263945005d15512f81af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1398,
                    "digest": "sha256:38ac1fd23ca340fcd4b5d85e2406ae9b2be959f5cc3e8a5225674d8b81d17e30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1411,
                    "digest": "sha256:1263f617085a4c14d483b42b43e06fe14dc51218fba2f62739a3204d88f0f253"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1416,
                    "digest": "sha256:db182426733f2608c889260eecd7e1a09bae5d6778cfef39d2474db113fbc2fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25428730,
                    "digest": "sha256:e4e67087b5d3ea89afdcd37b6d25cd481ab443dfe24890b23950e844421f2a5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1386,
                    "digest": "sha256:05cbb241324120ecb133e71a80a442e790054be65bae503881907c5bba052f3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5956779,
                    "digest": "sha256:48a0d13a85309c36e32928b3e7e47a1c27bf8ab7cb6ac3b999934218cf35c302"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1342,
                    "digest": "sha256:ba3f4382fb7bd6776f55347d59f4bd35c55913bdcde49d0e4bba044303240ae8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159939468,
                    "digest": "sha256:cf9850e6d83b00693891a7295fa802f2049870eded2cd4d6e7367275256ec38e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1499,
                    "digest": "sha256:c7476de9de354320816ce1827bf516252fbd6250704b8d390e4776f2efad8fa2"
                }
            ]
        },
        "1.18.2-1-windowsservercore-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3401,
                    "digest": "sha256:f426115f186497ea381bb5dc94d2611ad59b8c8e1ad7eae3ee733d33aaee8eb8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        },
        "1.18.2-1-windowsservercore-ltsc2022-amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7255,
                "digest": "sha256:a504d91be959ffeaaba95ab668c3b05806c7816e253aa950eaeee31dba35bd07"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 1436863614,
                    "digest": "sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:97f65a0ec59e643faf84024aa713a9be059322380315fda829756bbbd96d6258"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                    "size": 800671635,
                    "digest": "sha256:12fb50a031bdc8d2b65d86d694a4ed20e937852ed1bd3c433d8f2f60279cecc7",
                    "urls": [
                        "https://mcr.microsoft.com/v2/windows/servercore/blobs/sha256:12fb50a031bdc8d2b65d86d694a4ed20e937852ed1bd3c433d8f2f60279cecc7"
                    ]
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1281,
                    "digest": "sha256:123845c3818c5b436d7b3b51b6acb0adae12fa8c89f8758362bc584447b273e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1298,
                    "digest": "sha256:8ceeb44df7c0e0cbed49fd9bd92f46ec031a37f6e957a31a80f85622e201076d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:d2dd926d32f26799817ef1de79212c26ae5c92c2efb99ad33b4a9435c6fe780f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1318,
                    "digest": "sha256:306f6191099a0c746eab948458ba0530376ccca010e1d995571020b845464cc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1297,
                    "digest": "sha256:3d55816a315e7ed6ecd178606cea59d3961b15232924de62e33ae955bb539b3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25699308,
                    "digest": "sha256:7630a928bf022f9b3ed7d089447c914749fd63d860aa57e3435b69635f5b69a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1271,
                    "digest": "sha256:d4412675a85bef1c22a1ec48b60cc6b6d1e4b7d02df93e126ab79f7bcbaef295"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 586900,
                    "digest": "sha256:2352c002bb2896e3cb7e0839dec0b28226ace92412324ca404532eda9cfbd357"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1279,
                    "digest": "sha256:e497bda74758adbc412e0f967475e3273bc6305bffcd8eb6e53b431d6eceee69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 149987346,
                    "digest": "sha256:988c37f20b67f10c76ab38634ea197b6ff632e7f6a06a91782a4af4dffb4c5de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1430,
                    "digest": "sha256:0f92d71731a6881a25a460682b2ebdba9878038587caf69a4fa3332e34667ef3"
                }
            ]
        },
        "1.18.2-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c4e0fd0cefb52f7762399ec8b9e6013b75018ee557ab1ebe6082a1b49090f320",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:04ba647b6df9294743ff7dadcb734d4d92493c9a8e73dc155311f85ba2aaca21",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c503cc4db8b047f1f1e6c1f6be1d1050d4b58091d23593e613e27bf1cb14471b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:11926376cbbb7ed5c66cb6b5c5048937b2a8e5960ca93a9704841d2da385a993",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5a476804eefafc96bd05c82002ade5154150f5ecb69cada8167974750654301e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:376c0de048d9c10aa98b0c42619a729e6cde6b194dcb25ee3bee2d99cbbac114",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.18.2-fips": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:fb8ccb516abf7e5444a0c26dadcb2d474fe8a0c012f247dfebcf6ebaca0882fc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bb3f5e47d998d1e2979991eb94cdddefd5c224b8b6ed513f32935bd770e71317",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.2-fips-cbl-mariner1.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:fb8ccb516abf7e5444a0c26dadcb2d474fe8a0c012f247dfebcf6ebaca0882fc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1161,
                    "digest": "sha256:bb3f5e47d998d1e2979991eb94cdddefd5c224b8b6ed513f32935bd770e71317",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.18.2-nanoserver-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:0d7cc92b78bf84e49530f749eb0b490b5e01c488bda59d55b9a432106320ff22",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.2928"
                    }
                }
            ]
        },
        "1.18.2-nanoserver-ltsc2022": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2588,
                    "digest": "sha256:89d15cc25ceb2c6729330a37599c02a10a6397edadd52e2c3dcf2bee8c307a3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.707"
                    }
                }
            ]
        }
    },
    "tags": [
        "1",
        "1-bookworm",
        "1-bullseye",
        "1-buster",
        "1-cbl-mariner1.0",
        "1-cbl-mariner2.0",
        "1-fips",
        "1-fips-bookworm",
        "1-fips-bullseye",
        "1-fips-buster",
        "1-fips-cbl-mariner1.0",
        "1-fips-cbl-mariner2.0",
        "1-fips-nanoserver-1809",
        "1-fips-nanoserver-ltsc2022",
        "1-fips-windowsservercore-1809",
        "1-fips-windowsservercore-ltsc2022",
        "1-nanoserver-1809",
        "1-nanoserver-ltsc2022",
        "1-stretch",
        "1-windowsservercore-1809",
        "1-windowsservercore-ltsc2016",
        "1-windowsservercore-ltsc2022",
        "1.16",
        "1.16-buster",
        "1.16-nanoserver-1809",
        "1.16-stretch",
        "1.16-windowsservercore-1809",
        "1.16-windowsservercore-ltsc2016",
        "1.16.14",
        "1.16.14-1",
        "1.16.14-1-buster",
        "1.16.14-1-buster-amd64",
        "1.16.14-1-nanoserver-1809",
        "1.16.14-1-nanoserver-1809-amd64",
        "1.16.14-1-stretch",
        "1.16.14-1-stretch-amd64",
        "1.16.14-1-windowsservercore-1809",
        "1.16.14-1-windowsservercore-1809-amd64",
        "1.16.14-1-windowsservercore-ltsc2016",
        "1.16.14-1-windowsservercore-ltsc2016-amd64",
        "1.16.14-buster",
        "1.16.14-nanoserver-1809",
        "1.16.14-stretch",
        "1.16.14-windowsservercore-1809",
        "1.16.14-windowsservercore-ltsc2016",
        "1.16.15",
        "1.16.15-1",
        "1.16.15-1-buster",
        "1.16.15-1-buster-amd64",
        "1.16.15-1-nanoserver-1809",
        "1.16.15-1-nanoserver-1809-amd64",
        "1.16.15-1-stretch",
        "1.16.15-1-stretch-amd64",
        "1.16.15-1-windowsservercore-1809",
        "1.16.15-1-windowsservercore-1809-amd64",
        "1.16.15-1-windowsservercore-ltsc2016",
        "1.16.15-1-windowsservercore-ltsc2016-amd64",
        "1.16.15-buster",
        "1.16.15-nanoserver-1809",
        "1.16.15-stretch",
        "1.16.15-windowsservercore-1809",
        "1.16.15-windowsservercore-ltsc2016",
        "1.17",
        "1.17-bullseye",
        "1.17-buster",
        "1.17-fips",
        "1.17-fips-cbl-mariner1.0",
        "1.17-fips-cbl-mariner2.0",
        "1.17-nanoserver-1809",
        "1.17-nanoserver-ltsc2022",
        "1.17-stretch",
        "1.17-windowsservercore-1809",
        "1.17-windowsservercore-ltsc2016",
        "1.17-windowsservercore-ltsc2022",
        "1.17.10",
        "1.17.10-1",
        "1.17.10-1-bullseye",
        "1.17.10-1-bullseye-amd64",
        "1.17.10-1-bullseye-arm32v7",
        "1.17.10-1-bullseye-arm64v8",
        "1.17.10-1-buster",
        "1.17.10-1-buster-amd64",
        "1.17.10-1-buster-arm32v7",
        "1.17.10-1-buster-arm64v8",
        "1.17.10-1-fips",
        "1.17.10-1-fips-cbl-mariner1.0",
        "1.17.10-1-fips-cbl-mariner1.0-amd64",
        "1.17.10-1-fips-cbl-mariner1.0-arm64v8",
        "1.17.10-1-nanoserver-1809",
        "1.17.10-1-nanoserver-1809-amd64",
        "1.17.10-1-nanoserver-ltsc2022",
        "1.17.10-1-nanoserver-ltsc2022-amd64",
        "1.17.10-1-stretch",
        "1.17.10-1-stretch-amd64",
        "1.17.10-1-stretch-arm32v7",
        "1.17.10-1-stretch-arm64v8",
        "1.17.10-1-windowsservercore-1809",
        "1.17.10-1-windowsservercore-1809-amd64",
        "1.17.10-1-windowsservercore-ltsc2016",
        "1.17.10-1-windowsservercore-ltsc2016-amd64",
        "1.17.10-1-windowsservercore-ltsc2022",
        "1.17.10-1-windowsservercore-ltsc2022-amd64",
        "1.17.10-bullseye",
        "1.17.10-buster",
        "1.17.10-fips",
        "1.17.10-fips-cbl-mariner1.0",
        "1.17.10-nanoserver-1809",
        "1.17.10-nanoserver-ltsc2022",
        "1.17.10-stretch",
        "1.17.10-windowsservercore-1809",
        "1.17.10-windowsservercore-ltsc2016",
        "1.17.10-windowsservercore-ltsc2022",
        "1.17.11",
        "1.17.11-1",
        "1.17.11-1-bullseye",
        "1.17.11-1-bullseye-amd64",
        "1.17.11-1-bullseye-arm32v7",
        "1.17.11-1-bullseye-arm64v8",
        "1.17.11-1-buster",
        "1.17.11-1-buster-amd64",
        "1.17.11-1-buster-arm32v7",
        "1.17.11-1-buster-arm64v8",
        "1.17.11-1-fips",
        "1.17.11-1-fips-cbl-mariner1.0",
        "1.17.11-1-fips-cbl-mariner1.0-amd64",
        "1.17.11-1-fips-cbl-mariner1.0-arm64v8",
        "1.17.11-1-fips-cbl-mariner2.0",
        "1.17.11-1-fips-cbl-mariner2.0-amd64",
        "1.17.11-1-fips-cbl-mariner2.0-arm64v8",
        "1.17.11-1-nanoserver-1809",
        "1.17.11-1-nanoserver-1809-amd64",
        "1.17.11-1-nanoserver-ltsc2022",
        "1.17.11-1-nanoserver-ltsc2022-amd64",
        "1.17.11-1-stretch",
        "1.17.11-1-stretch-amd64",
        "1.17.11-1-stretch-arm32v7",
        "1.17.11-1-stretch-arm64v8",
        "1.17.11-1-windowsservercore-1809",
        "1.17.11-1-windowsservercore-1809-amd64",
        "1.17.11-1-windowsservercore-ltsc2016",
        "1.17.11-1-windowsservercore-ltsc2016-amd64",
        "1.17.11-1-windowsservercore-ltsc2022",
        "1.17.11-1-windowsservercore-ltsc2022-amd64",
        "1.17.11-bullseye",
        "1.17.11-buster",
        "1.17.11-fips",
        "1.17.11-fips-cbl-mariner1.0",
        "1.17.11-fips-cbl-mariner2.0",
        "1.17.11-nanoserver-1809",
        "1.17.11-nanoserver-ltsc2022",
        "1.17.11-stretch",
        "1.17.11-windowsservercore-1809",
        "1.17.11-windowsservercore-ltsc2016",
        "1.17.11-windowsservercore-ltsc2022",
        "1.17.12",
        "1.17.12-1",
        "1.17.12-1-bullseye",
        "1.17.12-1-bullseye-amd64",
        "1.17.12-1-bullseye-arm32v7",
        "1.17.12-1-bullseye-arm64v8",
        "1.17.12-1-buster",
        "1.17.12-1-buster-amd64",
        "1.17.12-1-buster-arm32v7",
        "1.17.12-1-buster-arm64v8",
        "1.17.12-1-fips",
        "1.17.12-1-fips-cbl-mariner1.0",
        "1.17.12-1-fips-cbl-mariner1.0-amd64",
        "1.17.12-1-fips-cbl-mariner1.0-arm64v8",
        "1.17.12-1-fips-cbl-mariner2.0",
        "1.17.12-1-fips-cbl-mariner2.0-amd64",
        "1.17.12-1-fips-cbl-mariner2.0-arm64v8",
        "1.17.12-1-nanoserver-1809",
        "1.17.12-1-nanoserver-1809-amd64",
        "1.17.12-1-nanoserver-ltsc2022",
        "1.17.12-1-nanoserver-ltsc2022-amd64",
        "1.17.12-1-stretch",
        "1.17.12-1-stretch-amd64",
        "1.17.12-1-stretch-arm32v7",
        "1.17.12-1-stretch-arm64v8",
        "1.17.12-1-windowsservercore-1809",
        "1.17.12-1-windowsservercore-1809-amd64",
        "1.17.12-1-windowsservercore-ltsc2016",
        "1.17.12-1-windowsservercore-ltsc2016-amd64",
        "1.17.12-1-windowsservercore-ltsc2022",
        "1.17.12-1-windowsservercore-ltsc2022-amd64",
        "1.17.12-bullseye",
        "1.17.12-fips",
        "1.17.12-fips-cbl-mariner1.0",
        "1.17.12-fips-cbl-mariner2.0",
        "1.17.12-nanoserver-1809",
        "1.17.12-nanoserver-ltsc2022",
        "1.17.12-stretch",
        "1.17.12-windowsservercore-1809",
        "1.17.12-windowsservercore-ltsc2016",
        "1.17.12-windowsservercore-ltsc2022",
        "1.17.13",
        "1.17.13-1",
        "1.17.13-1-bullseye",
        "1.17.13-1-bullseye-amd64",
        "1.17.13-1-bullseye-arm32v7",
        "1.17.13-1-bullseye-arm64v8",
        "1.17.13-1-buster",
        "1.17.13-1-buster-amd64",
        "1.17.13-1-buster-arm32v7",
        "1.17.13-1-buster-arm64v8",
        "1.17.13-1-fips",
        "1.17.13-1-fips-cbl-mariner1.0",
        "1.17.13-1-fips-cbl-mariner1.0-amd64",
        "1.17.13-1-fips-cbl-mariner1.0-arm64v8",
        "1.17.13-1-fips-cbl-mariner2.0",
        "1.17.13-1-fips-cbl-mariner2.0-amd64",
        "1.17.13-1-fips-cbl-mariner2.0-arm64v8",
        "1.17.13-1-nanoserver-1809",
        "1.17.13-1-nanoserver-1809-amd64",
        "1.17.13-1-nanoserver-ltsc2022",
        "1.17.13-1-nanoserver-ltsc2022-amd64",
        "1.17.13-1-stretch",
        "1.17.13-1-stretch-amd64",
        "1.17.13-1-stretch-arm32v7",
        "1.17.13-1-stretch-arm64v8",
        "1.17.13-1-windowsservercore-1809",
        "1.17.13-1-windowsservercore-1809-amd64",
        "1.17.13-1-windowsservercore-ltsc2016",
        "1.17.13-1-windowsservercore-ltsc2016-amd64",
        "1.17.13-1-windowsservercore-ltsc2022",
        "1.17.13-1-windowsservercore-ltsc2022-amd64",
        "1.17.13-bullseye",
        "1.17.13-buster",
        "1.17.13-fips",
        "1.17.13-fips-cbl-mariner1.0",
        "1.17.13-fips-cbl-mariner2.0",
        "1.17.13-nanoserver-1809",
        "1.17.13-nanoserver-ltsc2022",
        "1.17.13-stretch",
        "1.17.13-windowsservercore-1809",
        "1.17.13-windowsservercore-ltsc2016",
        "1.17.13-windowsservercore-ltsc2022",
        "1.17.6-1-fips",
        "1.17.6-1-fips-cbl-mariner1.0",
        "1.17.6-1-fips-cbl-mariner1.0-amd64",
        "1.17.6-fips",
        "1.17.6-fips-cbl-mariner1.0",
        "1.17.7",
        "1.17.7-1",
        "1.17.7-1-bullseye",
        "1.17.7-1-bullseye-amd64",
        "1.17.7-1-buster",
        "1.17.7-1-buster-amd64",
        "1.17.7-1-fips",
        "1.17.7-1-fips-cbl-mariner1.0",
        "1.17.7-1-fips-cbl-mariner1.0-amd64",
        "1.17.7-1-nanoserver-1809",
        "1.17.7-1-nanoserver-1809-amd64",
        "1.17.7-1-nanoserver-ltsc2022",
        "1.17.7-1-nanoserver-ltsc2022-amd64",
        "1.17.7-1-stretch",
        "1.17.7-1-stretch-amd64",
        "1.17.7-1-windowsservercore-1809",
        "1.17.7-1-windowsservercore-1809-amd64",
        "1.17.7-1-windowsservercore-ltsc2016",
        "1.17.7-1-windowsservercore-ltsc2016-amd64",
        "1.17.7-1-windowsservercore-ltsc2022",
        "1.17.7-1-windowsservercore-ltsc2022-amd64",
        "1.17.7-bullseye",
        "1.17.7-buster",
        "1.17.7-fips",
        "1.17.7-fips-cbl-mariner1.0",
        "1.17.7-nanoserver-1809",
        "1.17.7-nanoserver-ltsc2022",
        "1.17.7-stretch",
        "1.17.7-windowsservercore-1809",
        "1.17.7-windowsservercore-ltsc2016",
        "1.17.7-windowsservercore-ltsc2022",
        "1.17.8",
        "1.17.8-1",
        "1.17.8-1-bullseye",
        "1.17.8-1-bullseye-amd64",
        "1.17.8-1-buster",
        "1.17.8-1-buster-amd64",
        "1.17.8-1-fips",
        "1.17.8-1-fips-cbl-mariner1.0",
        "1.17.8-1-fips-cbl-mariner1.0-amd64",
        "1.17.8-1-nanoserver-1809",
        "1.17.8-1-nanoserver-1809-amd64",
        "1.17.8-1-nanoserver-ltsc2022",
        "1.17.8-1-nanoserver-ltsc2022-amd64",
        "1.17.8-1-stretch",
        "1.17.8-1-stretch-amd64",
        "1.17.8-1-windowsservercore-1809",
        "1.17.8-1-windowsservercore-1809-amd64",
        "1.17.8-1-windowsservercore-ltsc2016",
        "1.17.8-1-windowsservercore-ltsc2016-amd64",
        "1.17.8-1-windowsservercore-ltsc2022",
        "1.17.8-1-windowsservercore-ltsc2022-amd64",
        "1.17.8-2-fips",
        "1.17.8-2-fips-cbl-mariner1.0",
        "1.17.8-2-fips-cbl-mariner1.0-amd64",
        "1.17.8-bullseye",
        "1.17.8-buster",
        "1.17.8-fips",
        "1.17.8-fips-cbl-mariner1.0",
        "1.17.8-nanoserver-1809",
        "1.17.8-nanoserver-ltsc2022",
        "1.17.8-stretch",
        "1.17.8-windowsservercore-1809",
        "1.17.8-windowsservercore-ltsc2016",
        "1.17.8-windowsservercore-ltsc2022",
        "1.17.9",
        "1.17.9-1",
        "1.17.9-1-bullseye",
        "1.17.9-1-bullseye-amd64",
        "1.17.9-1-bullseye-arm32v7",
        "1.17.9-1-bullseye-arm64v8",
        "1.17.9-1-buster",
        "1.17.9-1-buster-amd64",
        "1.17.9-1-buster-arm32v7",
        "1.17.9-1-buster-arm64v8",
        "1.17.9-1-fips",
        "1.17.9-1-fips-cbl-mariner1.0",
        "1.17.9-1-fips-cbl-mariner1.0-amd64",
        "1.17.9-1-fips-cbl-mariner1.0-arm64",
        "1.17.9-1-nanoserver-1809",
        "1.17.9-1-nanoserver-1809-amd64",
        "1.17.9-1-nanoserver-ltsc2022",
        "1.17.9-1-nanoserver-ltsc2022-amd64",
        "1.17.9-1-stretch",
        "1.17.9-1-stretch-amd64",
        "1.17.9-1-stretch-arm32v7",
        "1.17.9-1-stretch-arm64v8",
        "1.17.9-1-windowsservercore-1809",
        "1.17.9-1-windowsservercore-1809-amd64",
        "1.17.9-1-windowsservercore-ltsc2016",
        "1.17.9-1-windowsservercore-ltsc2016-amd64",
        "1.17.9-1-windowsservercore-ltsc2022",
        "1.17.9-1-windowsservercore-ltsc2022-amd64",
        "1.17.9-bullseye",
        "1.17.9-buster",
        "1.17.9-fips",
        "1.17.9-fips-cbl-mariner1.0",
        "1.17.9-nanoserver-1809",
        "1.17.9-nanoserver-ltsc2022",
        "1.17.9-stretch",
        "1.17.9-windowsservercore-1809",
        "1.17.9-windowsservercore-ltsc2016",
        "1.17.9-windowsservercore-ltsc2022",
        "1.18",
        "1.18-bullseye",
        "1.18-buster",
        "1.18-fips",
        "1.18-fips-cbl-mariner1.0",
        "1.18-fips-cbl-mariner2.0",
        "1.18-nanoserver-1809",
        "1.18-nanoserver-ltsc2022",
        "1.18-stretch",
        "1.18-windowsservercore-1809",
        "1.18-windowsservercore-ltsc2016",
        "1.18-windowsservercore-ltsc2022",
        "1.18.0",
        "1.18.0-1",
        "1.18.0-1-bullseye",
        "1.18.0-1-bullseye-amd64",
        "1.18.0-1-buster",
        "1.18.0-1-buster-amd64",
        "1.18.0-1-fips",
        "1.18.0-1-fips-cbl-mariner1.0",
        "1.18.0-1-fips-cbl-mariner1.0-amd64",
        "1.18.0-1-nanoserver-1809",
        "1.18.0-1-nanoserver-1809-amd64",
        "1.18.0-1-nanoserver-ltsc2022",
        "1.18.0-1-nanoserver-ltsc2022-amd64",
        "1.18.0-1-stretch",
        "1.18.0-1-stretch-amd64",
        "1.18.0-1-windowsservercore-1809",
        "1.18.0-1-windowsservercore-1809-amd64",
        "1.18.0-1-windowsservercore-ltsc2016",
        "1.18.0-1-windowsservercore-ltsc2016-amd64",
        "1.18.0-1-windowsservercore-ltsc2022",
        "1.18.0-1-windowsservercore-ltsc2022-amd64",
        "1.18.0-2-fips",
        "1.18.0-2-fips-cbl-mariner1.0",
        "1.18.0-2-fips-cbl-mariner1.0-amd64",
        "1.18.0-bullseye",
        "1.18.0-buster",
        "1.18.0-fips",
        "1.18.0-fips-cbl-mariner1.0",
        "1.18.0-nanoserver-1809",
        "1.18.0-nanoserver-ltsc2022",
        "1.18.0-stretch",
        "1.18.0-windowsservercore-1809",
        "1.18.0-windowsservercore-ltsc2016",
        "1.18.0-windowsservercore-ltsc2022",
        "1.18.1",
        "1.18.1-1",
        "1.18.1-1-bullseye",
        "1.18.1-1-bullseye-amd64",
        "1.18.1-1-bullseye-arm32v7",
        "1.18.1-1-bullseye-arm64v8",
        "1.18.1-1-buster",
        "1.18.1-1-buster-amd64",
        "1.18.1-1-buster-arm32v7",
        "1.18.1-1-buster-arm64v8",
        "1.18.1-1-fips",
        "1.18.1-1-fips-cbl-mariner1.0",
        "1.18.1-1-fips-cbl-mariner1.0-amd64",
        "1.18.1-1-fips-cbl-mariner1.0-arm64",
        "1.18.1-1-nanoserver-1809",
        "1.18.1-1-nanoserver-1809-amd64",
        "1.18.1-1-nanoserver-ltsc2022",
        "1.18.1-1-nanoserver-ltsc2022-amd64",
        "1.18.1-1-stretch",
        "1.18.1-1-stretch-amd64",
        "1.18.1-1-stretch-arm32v7",
        "1.18.1-1-stretch-arm64v8",
        "1.18.1-1-windowsservercore-1809",
        "1.18.1-1-windowsservercore-1809-amd64",
        "1.18.1-1-windowsservercore-ltsc2016",
        "1.18.1-1-windowsservercore-ltsc2016-amd64",
        "1.18.1-1-windowsservercore-ltsc2022",
        "1.18.1-1-windowsservercore-ltsc2022-amd64",
        "1.18.1-bullseye",
        "1.18.1-buster",
        "1.18.1-fips",
        "1.18.1-fips-cbl-mariner1.0",
        "1.18.1-nanoserver-1809",
        "1.18.1-nanoserver-ltsc2022",
        "1.18.1-stretch",
        "1.18.1-windowsservercore-1809",
        "1.18.1-windowsservercore-ltsc2016",
        "1.18.1-windowsservercore-ltsc2022",
        "1.18.10",
        "1.18.10-1",
        "1.18.10-1-bullseye",
        "1.18.10-1-bullseye-amd64",
        "1.18.10-1-bullseye-arm32v7",
        "1.18.10-1-bullseye-arm64v8",
        "1.18.10-1-buster",
        "1.18.10-1-buster-amd64",
        "1.18.10-1-buster-arm32v7",
        "1.18.10-1-buster-arm64v8",
        "1.18.10-1-fips",
        "1.18.10-1-fips-cbl-mariner1.0",
        "1.18.10-1-fips-cbl-mariner1.0-amd64",
        "1.18.10-1-fips-cbl-mariner1.0-arm64v8",
        "1.18.10-1-fips-cbl-mariner2.0",
        "1.18.10-1-fips-cbl-mariner2.0-amd64",
        "1.18.10-1-fips-cbl-mariner2.0-arm64v8",
        "1.18.10-1-nanoserver-1809",
        "1.18.10-1-nanoserver-1809-amd64",
        "1.18.10-1-nanoserver-ltsc2022",
        "1.18.10-1-nanoserver-ltsc2022-amd64",
        "1.18.10-1-windowsservercore-1809",
        "1.18.10-1-windowsservercore-1809-amd64",
        "1.18.10-1-windowsservercore-ltsc2016",
        "1.18.10-1-windowsservercore-ltsc2016-amd64",
        "1.18.10-1-windowsservercore-ltsc2022",
        "1.18.10-1-windowsservercore-ltsc2022-amd64",
        "1.18.10-bullseye",
        "1.18.10-buster",
        "1.18.10-fips",
        "1.18.10-fips-cbl-mariner1.0",
        "1.18.10-fips-cbl-mariner2.0",
        "1.18.10-nanoserver-1809",
        "1.18.10-nanoserver-ltsc2022",
        "1.18.10-windowsservercore-1809",
        "1.18.10-windowsservercore-ltsc2016",
        "1.18.10-windowsservercore-ltsc2022",
        "1.18.2",
        "1.18.2-1",
        "1.18.2-1-bullseye",
        "1.18.2-1-bullseye-amd64",
        "1.18.2-1-bullseye-arm32v7",
        "1.18.2-1-bullseye-arm64v8",
        "1.18.2-1-buster",
        "1.18.2-1-buster-amd64",
        "1.18.2-1-buster-arm32v7",
        "1.18.2-1-buster-arm64v8",
        "1.18.2-1-fips",
        "1.18.2-1-fips-cbl-mariner1.0",
        "1.18.2-1-fips-cbl-mariner1.0-amd64",
        "1.18.2-1-fips-cbl-mariner1.0-arm64v8",
        "1.18.2-1-nanoserver-1809",
        "1.18.2-1-nanoserver-1809-amd64",
        "1.18.2-1-nanoserver-ltsc2022",
        "1.18.2-1-nanoserver-ltsc2022-amd64",
        "1.18.2-1-stretch",
        "1.18.2-1-stretch-amd64",
        "1.18.2-1-stretch-arm32v7",
        "1.18.2-1-stretch-arm64v8",
        "1.18.2-1-windowsservercore-1809",
        "1.18.2-1-windowsservercore-1809-amd64",
        "1.18.2-1-windowsservercore-ltsc2016",
        "1.18.2-1-windowsservercore-ltsc2016-amd64",
        "1.18.2-1-windowsservercore-ltsc2022",
        "1.18.2-1-windowsservercore-ltsc2022-amd64",
        "1.18.2-bullseye",
        "1.18.2-buster",
        "1.18.2-fips",
        "1.18.2-fips-cbl-mariner1.0",
        "1.18.2-nanoserver-1809",
        "1.18.2-nanoserver-ltsc2022"
    ],
    "configs": {
        "1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T21:31:51.666330493Z",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:54:40.695151313Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\tsq \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:54:57.926096306Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-22T21:31:42.755496032Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get upgrade -y; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.015822012Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.666330493Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:d7d4c2f9d26b2dad32b86ed9739919f76ae423f16aa103924c183048810290de",
                    "sha256:8845ab872c1ce04cf64c4755aa585386c7ebe1b7633d977d275d6f2d2146000d",
                    "sha256:f1fe2d23a358ff02c5cf5cb0262a6b29eb7cf7f5b72a6479c4e036118aef6d0f",
                    "sha256:14d8f1def23322431de42c733734be762f948346741b20ad295754703e6c4968",
                    "sha256:3871adf3bac6481bbc69d77f1c167c59f80369af85ae44d3a49f6a5a6f87fff6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-bookworm": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T21:31:51.666330493Z",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:54:40.695151313Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\tsq \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:54:57.926096306Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-22T21:31:42.755496032Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get upgrade -y; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.015822012Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.666330493Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:d7d4c2f9d26b2dad32b86ed9739919f76ae423f16aa103924c183048810290de",
                    "sha256:8845ab872c1ce04cf64c4755aa585386c7ebe1b7633d977d275d6f2d2146000d",
                    "sha256:f1fe2d23a358ff02c5cf5cb0262a6b29eb7cf7f5b72a6479c4e036118aef6d0f",
                    "sha256:14d8f1def23322431de42c733734be762f948346741b20ad295754703e6c4968",
                    "sha256:3871adf3bac6481bbc69d77f1c167c59f80369af85ae44d3a49f6a5a6f87fff6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T21:31:03.983226872Z",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:56:07.613825189Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:56:23.848263079Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-22T21:30:56.942423773Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get upgrade -y; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:03.444198558Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:03.983226872Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:69f16cc74eb02e50db2c5c68b07c587ad1f88dcbc5a8a76a73890540c24feca1",
                    "sha256:71e1aa306a5ac0762bb41f0269f0d721c5eac77c2a6cfe0a09c38958ad7d954c",
                    "sha256:b50dddf58a90567a6aec51f768d9cd46fc92f13c3a00d70225e966ab43ea097c",
                    "sha256:9a30078e8c7ac5a6b7e82eeb11f9a0b41f1368b10689dae82fcbac7a28da923d",
                    "sha256:cdba912e7d1926a5d582d94b569d62e88148ad85aa7e167b61aba41b19cb1ffb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7b1e98dabf552fc154a8fcc9201ca89bd077e7723935db4155ed0153adcb28c5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c8d206374be251ad7f5415c3eebe1dd79adadaf8f2803816cffb3c8e8365aa39",
            "container_config": {
                "Hostname": "c8d206374be2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7b1e98dabf552fc154a8fcc9201ca89bd077e7723935db4155ed0153adcb28c5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-07T17:07:50.606021586Z",
            "docker_version": "20.10.24+azure-1",
            "history": [
                {
                    "created": "2023-05-23T01:20:24.911320406Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d769df745075dbc4cd2c01ca784571a0df008f6b650b895a7f92d3281132807 in / "
                },
                {
                    "created": "2023-05-23T01:20:25.411408124Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T01:50:24.979882581Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-05-23T01:50:48.716283916Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-07T17:07:20.297084643Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-07T17:07:20.995658438Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:21.600054437Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:45.651892013Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230606.2/go.20230606.2.linux-amd64.tar.gz'; \t\t\tsha256='bacc82f5ee5b38f47cde06e965404bcdd1502372e806af0acb9a5bcdc80b7fa1'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230606.2/go.20230606.2.linux-armv6l.tar.gz'; \t\t\tsha256='3122b80f4c9073abb83f83ba0ea569024bac33205fd3a63a3ad4092bc6ae09e9'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230606.2/go.20230606.2.linux-arm64.tar.gz'; \t\t\tsha256='c204b86edfcb1c134a6cf4c803aa5f577dd759cb4266a3bab93ce83ef0c4f4d8'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-06-07T17:07:47.059222778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:48.134763732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:49.554333213Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-06-07T17:07:50.606021586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7e59965a0b4c8c0f57fb5eb9c93735ef658d05243a4947f7c4ab51cfd055b9b",
                    "sha256:9973bce96c7e4544acda064d191bc36ada11fd51dfc5002e31face37a077c3f4",
                    "sha256:4e859b592d91239884c93f0ef7ed3afe72324a9360d61b7e770c147045517035",
                    "sha256:f01b2b9e27c259cc58138d57de01f5de2e6824106c96eb6641da9441175f19dd",
                    "sha256:984779538c6b750763f84c845185ccef718cbdb60d24cc4ac8c5c659cf6c1ef2",
                    "sha256:58fd3409d00692e7cacd66ab035eb14be717a7d459d3958c17d4a455c3c69eb9"
                ]
            }
        },
        "1-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go",
                "OnBuild": null
            },
            "created": "2023-08-02T19:15:28.698738102Z",
            "history": [
                {
                    "created": "2023-07-29T00:53:15.441115902Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-07-29T00:53:17.554842878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-29T00:53:17.672264627Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-07-29T00:53:17.799036537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:14.275376005Z",
                    "created_by": "RUN /bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t; \ttdnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV GOLANG_VERSION=1.19.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230802.5/go.20230802.5.linux-amd64.tar.gz'; \t\t\tsha256='bfea583c76bfa9405c0eb793f4ff3c6555035d6c93931f8fa7f2128c8107498f'; \t\t\t;; \t\t'armv7') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230802.5/go.20230802.5.linux-armv6l.tar.gz'; \t\t\tsha256='620369fe40e7b67bafbc0ff7a1668bf21b8025f4e7205b271bbf91fe86e26926'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230802.5/go.20230802.5.linux-arm64.tar.gz'; \t\t\tsha256='34565108e59f52eba2b4dafd46e4472cebe38678b520d49feda0f2917be4152f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.638506822Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.698738102Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJmaWxlbmFtZSI6IkRvY2tlcmZpbGUifSwic291cmNlcyI6W3sidHlwZSI6ImRvY2tlci1pbWFnZSIsInJlZiI6Im1jci5taWNyb3NvZnQuY29tL2NibC1tYXJpbmVyL2Jhc2UvY29yZToxLjAiLCJwaW4iOiJzaGEyNTY6Y2RjMjJmOTk0NDcxMzc4ZWE0YzI2MjQ4NWIyMDU2OGJiZTE3YzRjNzk0NDZmNGE1YzkxYmRiZGQwODJiNTQ2MSJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d388172310c1ab11d3d454c2c74282faf01e45c203fcee3eaa0e6e6926714ee6",
                    "sha256:bbce43ff71d1bfbfa891eb45d9dc0117e358b9f681f01336b5b56e584ce4408c",
                    "sha256:bedb84f4bee57dc2001a17037bb9326c74e870238343fbde75500d3cadda2bf9",
                    "sha256:d08114dda5e26263c62fcf89cb3cd89dfa9abb70463bf0e31361f89e6c955b23",
                    "sha256:94395a2fc935cfee260785b291348eb1d3a273391d247efd4acebc02be0b79e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go",
                "ArgsEscaped": true
            },
            "created": "2024-05-22T21:31:41.589486432Z",
            "history": [
                {
                    "created": "2024-05-20T19:09:10.730162485Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2024-05-20T19:09:19.394341766Z",
                    "created_by": "ARG EULA=@EULA_FILE@",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-20T19:09:19.394341766Z",
                    "created_by": "COPY EULA-Container.txt . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-20T19:09:19.394341766Z",
                    "created_by": "CMD [\"bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:34.808026507Z",
                    "created_by": "RUN /bin/sh -c set -eux; \ttdnf update -y; \ttdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\t\t\tca-certificates \t\t\t\tgit \t\tshadow-utils \t\tutil-linux \t; \ttdnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:41.09207385Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:41.589486432Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:08f76f424ff0afb9eeeae386967d5f936f6a1bc93ff7a63db64c9eb6cd21f3cf",
                    "sha256:ca8bb87933dc7999f4d83536d4f893afed566f2f8ede167dbc7b981f77e650d7",
                    "sha256:08a569987b7c0ba98af37d07be51ca4c4a7875851f357bc641b2ccd7ff47ddc8",
                    "sha256:40998630c527250e24f2b0fe09da0ed2942843f6b152c517efafb8a4b21abe52",
                    "sha256:5d123cda342be7bdaa432ea1f7755bb6fbee2ce178864f8b7729c49978541afc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1-fips-bookworm": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go",
                    "GOEXPERIMENT=systemcrypto"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T21:31:51.666330493Z",
            "history": [
                {
                    "created": "2024-05-14T01:27:51.0519485Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-14T01:27:51.549080671Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:54:40.695151313Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\tsq \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:54:57.926096306Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-22T21:31:42.755496032Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get upgrade -y; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:49.336939531Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.015822012Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.666330493Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:51.666330493Z",
                    "created_by": "ENV GOEXPERIMENT=systemcrypto",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:d7d4c2f9d26b2dad32b86ed9739919f76ae423f16aa103924c183048810290de",
                    "sha256:8845ab872c1ce04cf64c4755aa585386c7ebe1b7633d977d275d6f2d2146000d",
                    "sha256:f1fe2d23a358ff02c5cf5cb0262a6b29eb7cf7f5b72a6479c4e036118aef6d0f",
                    "sha256:14d8f1def23322431de42c733734be762f948346741b20ad295754703e6c4968",
                    "sha256:3871adf3bac6481bbc69d77f1c167c59f80369af85ae44d3a49f6a5a6f87fff6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-fips-bullseye": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go",
                    "GOEXPERIMENT=systemcrypto"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T21:31:03.983226872Z",
            "history": [
                {
                    "created": "2024-05-14T01:28:14.312373541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-14T01:28:14.866817241Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:56:07.613825189Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:56:23.848263079Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-22T21:30:56.942423773Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get upgrade -y; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:02.628780887Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:03.444198558Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:03.983226872Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:03.983226872Z",
                    "created_by": "ENV GOEXPERIMENT=systemcrypto",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:69f16cc74eb02e50db2c5c68b07c587ad1f88dcbc5a8a76a73890540c24feca1",
                    "sha256:71e1aa306a5ac0762bb41f0269f0d721c5eac77c2a6cfe0a09c38958ad7d954c",
                    "sha256:b50dddf58a90567a6aec51f768d9cd46fc92f13c3a00d70225e966ab43ea097c",
                    "sha256:9a30078e8c7ac5a6b7e82eeb11f9a0b41f1368b10689dae82fcbac7a28da923d",
                    "sha256:cdba912e7d1926a5d582d94b569d62e88148ad85aa7e167b61aba41b19cb1ffb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-fips-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.10",
                    "GOPATH=/go",
                    "GOEXPERIMENT=opensslcrypto"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9808910e6443828aaf1fd76390d5766d653be0cbca1afb48ad9a6c90c5483113",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "171e0dd697c00ca32c19fb47b2106f9153b50c39f8a0991794a9ba51de2ccf7c",
            "container_config": {
                "Hostname": "171e0dd697c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.10",
                    "GOPATH=/go",
                    "GOEXPERIMENT=opensslcrypto"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENV GOEXPERIMENT=opensslcrypto"
                ],
                "Image": "sha256:9808910e6443828aaf1fd76390d5766d653be0cbca1afb48ad9a6c90c5483113",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-07T17:07:51.79051887Z",
            "docker_version": "20.10.24+azure-1",
            "history": [
                {
                    "created": "2023-05-23T01:20:24.911320406Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d769df745075dbc4cd2c01ca784571a0df008f6b650b895a7f92d3281132807 in / "
                },
                {
                    "created": "2023-05-23T01:20:25.411408124Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T01:50:24.979882581Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-05-23T01:50:48.716283916Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-07T17:07:20.297084643Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-07T17:07:20.995658438Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:21.600054437Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:45.651892013Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230606.2/go.20230606.2.linux-amd64.tar.gz'; \t\t\tsha256='bacc82f5ee5b38f47cde06e965404bcdd1502372e806af0acb9a5bcdc80b7fa1'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230606.2/go.20230606.2.linux-armv6l.tar.gz'; \t\t\tsha256='3122b80f4c9073abb83f83ba0ea569024bac33205fd3a63a3ad4092bc6ae09e9'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230606.2/go.20230606.2.linux-arm64.tar.gz'; \t\t\tsha256='c204b86edfcb1c134a6cf4c803aa5f577dd759cb4266a3bab93ce83ef0c4f4d8'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-06-07T17:07:47.059222778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:48.134763732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:49.554333213Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-06-07T17:07:50.606021586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-07T17:07:51.79051887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOEXPERIMENT=opensslcrypto",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7e59965a0b4c8c0f57fb5eb9c93735ef658d05243a4947f7c4ab51cfd055b9b",
                    "sha256:9973bce96c7e4544acda064d191bc36ada11fd51dfc5002e31face37a077c3f4",
                    "sha256:4e859b592d91239884c93f0ef7ed3afe72324a9360d61b7e770c147045517035",
                    "sha256:f01b2b9e27c259cc58138d57de01f5de2e6824106c96eb6641da9441175f19dd",
                    "sha256:984779538c6b750763f84c845185ccef718cbdb60d24cc4ac8c5c659cf6c1ef2",
                    "sha256:58fd3409d00692e7cacd66ab035eb14be717a7d459d3958c17d4a455c3c69eb9"
                ]
            }
        },
        "1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.12",
                    "GOPATH=/go",
                    "GOEXPERIMENT=opensslcrypto"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go",
                "OnBuild": null
            },
            "created": "2023-08-02T19:15:28.698738102Z",
            "history": [
                {
                    "created": "2023-07-29T00:53:15.441115902Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-07-29T00:53:17.554842878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-07-29T00:53:17.672264627Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-07-29T00:53:17.799036537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:14.275376005Z",
                    "created_by": "RUN /bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t; \ttdnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV GOLANG_VERSION=1.19.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230802.5/go.20230802.5.linux-amd64.tar.gz'; \t\t\tsha256='bfea583c76bfa9405c0eb793f4ff3c6555035d6c93931f8fa7f2128c8107498f'; \t\t\t;; \t\t'armv7') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230802.5/go.20230802.5.linux-armv6l.tar.gz'; \t\t\tsha256='620369fe40e7b67bafbc0ff7a1668bf21b8025f4e7205b271bbf91fe86e26926'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.19/20230802.5/go.20230802.5.linux-arm64.tar.gz'; \t\t\tsha256='34565108e59f52eba2b4dafd46e4472cebe38678b520d49feda0f2917be4152f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.21669396Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-02T19:15:28.638506822Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.698738102Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-02T19:15:28.698738102Z",
                    "created_by": "ENV GOEXPERIMENT=opensslcrypto",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJhdHRycyI6eyJidWlsZC1hcmc6RlJPTV9UQUciOiIxLjE5LjEyLTEtY2JsLW1hcmluZXIxLjAtYW1kNjQiLCJidWlsZC1hcmc6UkVQTyI6ImdvbGFuZ2ltYWdlcy5henVyZWNyLmlvL2J1aWxkLXN0YWdpbmcvMjIzNDk4Ny9vc3MvZ28vbWljcm9zb2Z0L2dvbGFuZyIsImZpbGVuYW1lIjoiRG9ja2VyZmlsZSJ9LCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZ29sYW5naW1hZ2VzLmF6dXJlY3IuaW8vYnVpbGQtc3RhZ2luZy8yMjM0OTg3L29zcy9nby9taWNyb3NvZnQvZ29sYW5nOjEuMTkuMTItMS1jYmwtbWFyaW5lcjEuMC1hbWQ2NCJ9XX0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d388172310c1ab11d3d454c2c74282faf01e45c203fcee3eaa0e6e6926714ee6",
                    "sha256:bbce43ff71d1bfbfa891eb45d9dc0117e358b9f681f01336b5b56e584ce4408c",
                    "sha256:bedb84f4bee57dc2001a17037bb9326c74e870238343fbde75500d3cadda2bf9",
                    "sha256:d08114dda5e26263c62fcf89cb3cd89dfa9abb70463bf0e31361f89e6c955b23",
                    "sha256:94395a2fc935cfee260785b291348eb1d3a273391d247efd4acebc02be0b79e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go",
                    "GOEXPERIMENT=systemcrypto"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go",
                "ArgsEscaped": true
            },
            "created": "2024-05-22T21:31:41.589486432Z",
            "history": [
                {
                    "created": "2024-05-20T19:09:10.730162485Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2024-05-20T19:09:19.394341766Z",
                    "created_by": "ARG EULA=@EULA_FILE@",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-20T19:09:19.394341766Z",
                    "created_by": "COPY EULA-Container.txt . # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-20T19:09:19.394341766Z",
                    "created_by": "CMD [\"bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:34.808026507Z",
                    "created_by": "RUN /bin/sh -c set -eux; \ttdnf update -y; \ttdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\t\t\tca-certificates \t\t\t\tgit \t\tshadow-utils \t\tutil-linux \t; \ttdnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV GOLANG_VERSION=1.21.10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T21:31:40.326434301Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:41.09207385Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:41.589486432Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T21:31:41.589486432Z",
                    "created_by": "ENV GOEXPERIMENT=systemcrypto",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:08f76f424ff0afb9eeeae386967d5f936f6a1bc93ff7a63db64c9eb6cd21f3cf",
                    "sha256:ca8bb87933dc7999f4d83536d4f893afed566f2f8ede167dbc7b981f77e650d7",
                    "sha256:08a569987b7c0ba98af37d07be51ca4c4a7875851f357bc641b2ccd7ff47ddc8",
                    "sha256:40998630c527250e24f2b0fe09da0ed2942843f6b152c517efafb8a4b21abe52",
                    "sha256:5d123cda342be7bdaa432ea1f7755bb6fbee2ce178864f8b7729c49978541afc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:efe931dc2489ec5acab46573be2571c9eb909e04eaf4086b26962028df15494a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c3e055a51f8abfa1cf5ec7b89980448a24ec1781a02cbe63d345a7a2683ff764",
            "container_config": {
                "Hostname": "c3e055a51f8a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:efe931dc2489ec5acab46573be2571c9eb909e04eaf4086b26962028df15494a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:22.652617032Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:54.168513525Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:54.885838098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:55.63628885Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:17.723621554Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220801.6/go.20220801.6.linux-amd64.tar.gz'; \t\t\tsha256='aa97f9396634eb61d3142367f397454aa39b5167b91b05e6ecb08f2b599aa69c'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220801.6/go.20220801.6.linux-armv6l.tar.gz'; \t\t\tsha256='e7cd0b09327eb6cf687cdc2db36cb72625c09995a5bf8bec483b2976b3663c85'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220801.6/go.20220801.6.linux-arm64.tar.gz'; \t\t\tsha256='73f663d5426e542a131c5f84869d01d5a825e6870c4aa671c8767ad7562bfe2a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:19.080319999Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:20.145405679Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:21.611582882Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:22.652617032Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:3401b422bec4a7eec5c020178873fe891e11e10028f0d9ea553233a55e026665",
                    "sha256:d91c8901def979b25aa0972a8df7c95c7058b564a8f2f08a3d504f83fbff8afc",
                    "sha256:6c48667bdf13dcbfe1730120ed80ad3ffddcf64f440a29bf516e5275c7e0c6cf"
                ]
            }
        },
        "1.16": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb987ebfaf35476e62fc2605c0e94f33030afdccc379f5be8118eed59d9eb524",
            "container_config": {
                "Hostname": "eb987ebfaf35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:39.451816071Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:10.532874838Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:11.32365828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:11.999711227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:34.620039662Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:35.951460225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:36.988844662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:38.405342079Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:39.451816071Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:43c7c3a92cdc4110abc60c6a9ebb6fd76d9d5a797a9a702a252055863139c902",
                    "sha256:ac0d3659657a555da41c8acc89291faa7d860b4b2b86c0741bfd65393cfd19e6",
                    "sha256:43a3478c487203d562c0753515468ad7e70d6c628c524285e7a09367724d01e2"
                ]
            }
        },
        "1.16.14": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "202b4781e24a3fe3c0e24567bc3a83d0ecfd00bc091e69a162d60c2d6097dbbe",
            "container_config": {
                "Hostname": "202b4781e24a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:07.085147902Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:41.094850419Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:42.071044158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.93189599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:01.049497101Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:02.653573037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.960510997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:05.709014755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:07.085147902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:d0c5f002fe027704c1a71fa7b533cac36b25b212f063293e969041ff77f8c9f2",
                    "sha256:46deb7178b874da8f2095ece60673399f40580547a1445c7b487a0c73b726ec8",
                    "sha256:98aadcc61b62e682a02c91729ec843e191d94c81d586c8eb49d6ce16d6726929"
                ]
            }
        },
        "1.16.14-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "202b4781e24a3fe3c0e24567bc3a83d0ecfd00bc091e69a162d60c2d6097dbbe",
            "container_config": {
                "Hostname": "202b4781e24a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:07.085147902Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:41.094850419Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:42.071044158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.93189599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:01.049497101Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:02.653573037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.960510997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:05.709014755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:07.085147902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:d0c5f002fe027704c1a71fa7b533cac36b25b212f063293e969041ff77f8c9f2",
                    "sha256:46deb7178b874da8f2095ece60673399f40580547a1445c7b487a0c73b726ec8",
                    "sha256:98aadcc61b62e682a02c91729ec843e191d94c81d586c8eb49d6ce16d6726929"
                ]
            }
        },
        "1.16.14-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "202b4781e24a3fe3c0e24567bc3a83d0ecfd00bc091e69a162d60c2d6097dbbe",
            "container_config": {
                "Hostname": "202b4781e24a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:07.085147902Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:41.094850419Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:42.071044158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.93189599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:01.049497101Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:02.653573037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.960510997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:05.709014755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:07.085147902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:d0c5f002fe027704c1a71fa7b533cac36b25b212f063293e969041ff77f8c9f2",
                    "sha256:46deb7178b874da8f2095ece60673399f40580547a1445c7b487a0c73b726ec8",
                    "sha256:98aadcc61b62e682a02c91729ec843e191d94c81d586c8eb49d6ce16d6726929"
                ]
            }
        },
        "1.16.14-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "202b4781e24a3fe3c0e24567bc3a83d0ecfd00bc091e69a162d60c2d6097dbbe",
            "container_config": {
                "Hostname": "202b4781e24a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:07.085147902Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:41.094850419Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:42.071044158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.93189599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:01.049497101Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:02.653573037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.960510997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:05.709014755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:07.085147902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:d0c5f002fe027704c1a71fa7b533cac36b25b212f063293e969041ff77f8c9f2",
                    "sha256:46deb7178b874da8f2095ece60673399f40580547a1445c7b487a0c73b726ec8",
                    "sha256:98aadcc61b62e682a02c91729ec843e191d94c81d586c8eb49d6ce16d6726929"
                ]
            }
        },
        "1.16.14-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.14"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:758f2d03dad6a8f732887ad03431a432fb9ddcd8676fb88b255794a2daa4988a",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "e613a40b3ea616bba24e606aebfb05202f7807ff93482d6f6e1287f03ff1d89b",
            "container_config": {
                "Hostname": "e613a40b3ea6",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.14"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\gopath"
                ],
                "Image": "sha256:758f2d03dad6a8f732887ad03431a432fb9ddcd8676fb88b255794a2daa4988a",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-02-10T21:32:55.715029Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T19:06:51.6699506Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-02-10T21:32:05.8883545Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-02-10T21:32:06.4785286Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\gopath"
                },
                {
                    "created": "2022-02-10T21:32:07.0357187Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-02-10T21:32:09.4921887Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\go\\bin;%PATH%\""
                },
                {
                    "created": "2022-02-10T21:32:10.1848722Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-02-10T21:32:10.8496616Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.16.14"
                },
                {
                    "created": "2022-02-10T21:32:51.878197Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:118b6bfbb6612cf73c35f500c77ea0b51a00cc4eca3182cca63bb0dd9e305fb5 in C:\\go "
                },
                {
                    "created": "2022-02-10T21:32:54.8714881Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-02-10T21:32:55.715029Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\gopath"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d435553b23557d22be11dc59485b5886ead8c1a0f21a038664cd293e8565ad67",
                    "sha256:48740fafd0d631449024728b24abfa595b286ce85b25f0322c1440ab6eed324a",
                    "sha256:0cb019a2904c6dddfb4b7ecbbf4adcde17bb9a8047708a9e1205e37dfad89f5b",
                    "sha256:5733b12d8426a9472bf8821ffd40d837378309170cd85497d029ad67445767c5",
                    "sha256:429e8223e16bc7485d27df65d01c909ca05b035523bcd588b7bf2210967eed51",
                    "sha256:83c878e4f5d38e7b22ec1addb3da112f0539868e76c947207f59027ea601111b",
                    "sha256:30c190445d684a03e90a04d145a4ecb04449f08f65bca0200f4fc0f0ce72c15a",
                    "sha256:742b8484b5795bd3fb86b82960b730a8628281ec81a277732f909e6b98f8fd4e",
                    "sha256:d2636da92752c372d9ca49394e565f6af41b31cf54da8a8a6affbfdb64ccc5b0",
                    "sha256:2c91fcdef133baa93939b6d06668da7179a003d1ba48a1decd44b9df6489a730"
                ]
            }
        },
        "1.16.14-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:55ab159dd93c7b9005e1f218bcc21125cc9182ea3621fae2a11af59c6d53dab2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e8ae7478d28d961e08d0d9da644e74428868e1f82526aedfe94eed86d4bf9b10",
            "container_config": {
                "Hostname": "e8ae7478d28d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:55ab159dd93c7b9005e1f218bcc21125cc9182ea3621fae2a11af59c6d53dab2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.843509417Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:42:44.135666682Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8486e54cd9c7f48cd93b4dc399b71f2053aa61655dcc37e06a9274d4878408a1 in / "
                },
                {
                    "created": "2022-01-26T01:42:44.752281037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:16:54.79260261Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:16:59.915757334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:17:21.479618928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:15.624565027Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:16.379431395Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:17.073003787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.90774952Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:44.233861541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.295313201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.755438991Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.843509417Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d05b8af4c7ce1e4ccbecd4bb29fa4ac82a5fdeee36ef41bc46549678058513e0",
                    "sha256:678c62bc4ece5d1ec0a53289ffff169a9362a43a664bd0062d7fc8c655842e29",
                    "sha256:9aee2e50701e26cd8e5641f20bff8e27f60329e6ba4487dad7e5e99dded75a49",
                    "sha256:76ce09dad18e9acda07ed38d1aec060dbefe5f1277e8768b60a0ac8c13c228c9",
                    "sha256:2bccbf66585c9af1a25d3f2f0561c8c271fae824c32709b068efe03b0418212c",
                    "sha256:a4e159f6cf74afd043e1e2f6e31864734ec0ae5bb79f557d6d142dd33cf42168",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.16.14-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:55ab159dd93c7b9005e1f218bcc21125cc9182ea3621fae2a11af59c6d53dab2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e8ae7478d28d961e08d0d9da644e74428868e1f82526aedfe94eed86d4bf9b10",
            "container_config": {
                "Hostname": "e8ae7478d28d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:55ab159dd93c7b9005e1f218bcc21125cc9182ea3621fae2a11af59c6d53dab2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.843509417Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:42:44.135666682Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8486e54cd9c7f48cd93b4dc399b71f2053aa61655dcc37e06a9274d4878408a1 in / "
                },
                {
                    "created": "2022-01-26T01:42:44.752281037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:16:54.79260261Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:16:59.915757334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:17:21.479618928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:15.624565027Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:16.379431395Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:17.073003787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.90774952Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:44.233861541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.295313201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.755438991Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.843509417Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d05b8af4c7ce1e4ccbecd4bb29fa4ac82a5fdeee36ef41bc46549678058513e0",
                    "sha256:678c62bc4ece5d1ec0a53289ffff169a9362a43a664bd0062d7fc8c655842e29",
                    "sha256:9aee2e50701e26cd8e5641f20bff8e27f60329e6ba4487dad7e5e99dded75a49",
                    "sha256:76ce09dad18e9acda07ed38d1aec060dbefe5f1277e8768b60a0ac8c13c228c9",
                    "sha256:2bccbf66585c9af1a25d3f2f0561c8c271fae824c32709b068efe03b0418212c",
                    "sha256:a4e159f6cf74afd043e1e2f6e31864734ec0ae5bb79f557d6d142dd33cf42168",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.16.14-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.14"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:421571e19e17f3fb661f499936a06e5b2f6418cc0b21d482d663af7c52fdd8b6",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "8cb79addca20ed593bf34efd0d274cd0279391121c6300a22ed749c983933b79",
            "container_config": {
                "Hostname": "8cb79addca20",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.14"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\gopath"
                ],
                "Image": "sha256:421571e19e17f3fb661f499936a06e5b2f6418cc0b21d482d663af7c52fdd8b6",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-02-10T21:32:04.7405837Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-02-02T19:28:56.1792935Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-02-10T21:30:39.3314331Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-02-10T21:30:39.7685478Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-02-10T21:30:40.2355192Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-02-10T21:30:40.6825291Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-02-10T21:30:41.1325376Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-02-10T21:30:54.2833715Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:30:55.1281614Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\gopath"
                },
                {
                    "created": "2022-02-10T21:31:01.9708753Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-02-10T21:31:02.4985463Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.16.14"
                },
                {
                    "created": "2022-02-10T21:32:03.0923058Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '1ae66e1ad62a1dbed3ee83dbdc1e4628cc4524a22865f5883ebb4feb3a62e01f'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:32:04.7405837Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\gopath"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:a5d6634e4d62aadc433b6ecc46630cc65a00bba8d9e77236683ea198e0085434",
                    "sha256:82852597b915ddfba3c5a6a6ee405d74838ccf163d37704bc0f912a72d4fbed1",
                    "sha256:f4ed706228a9c6e3aa4f8d53030bd069c73dc354e1c2610138ab53d8c7d3853e",
                    "sha256:550fcc16f58862c080ba1becbda6f2ccf319e1e15c0d5234a9f44f87a02ee404",
                    "sha256:c85d0ed86d2da6730dfcedab8f0f259f77a73615f2f2f364ea8f74c86c68de44",
                    "sha256:210630d600956641e6c58e78ce3c298398f0080606e02f8cf6c6d1f9df67aafb",
                    "sha256:fd41950317eec57ad91c508bbdcb3920f6a487f8f8bad65aec68ce4941446b4e",
                    "sha256:042193dc4c726dbea6013ad4f4f279cf31a3622a1fa29699d407446fc8ecb41b",
                    "sha256:b29a7140ef7f4f41a1597c5dcc0e9024de1b430c475784883a841040190ba414",
                    "sha256:1518aca0f444f22f070308ca42f6d068c0ac3f4167624939131a21e8caece5ec",
                    "sha256:b3263a251a3dcb2e26509c46fcfd53ccb44728dd3041546a6c61ae457628a3f4",
                    "sha256:72cb1014be4fe5cf6d41f343b5b9d02f7e4ced044153b72c8557822da344c36d"
                ]
            }
        },
        "1.16.14-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.14"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:8e984d98feb8c01b62013623194c1c3b1d6f48a70ae53f077e8729d61dc96e03",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "2ef165a78dda9d33be1f557f3f9ca413474e0cf4d3b52e7ecde4d6c41c924f6c",
            "container_config": {
                "Hostname": "2ef165a78dda",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.14"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\gopath"
                ],
                "Image": "sha256:8e984d98feb8c01b62013623194c1c3b1d6f48a70ae53f077e8729d61dc96e03",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-02-10T22:01:33.33339Z",
            "docker_version": "19.03.14",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-02-02T13:06:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-02-10T21:54:58.2074632Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-02-10T21:55:00.6170446Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-02-10T21:55:02.8347684Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-02-10T21:55:05.2742255Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-02-10T21:55:07.5773784Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-02-10T21:56:14.7990467Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:56:17.8177439Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\gopath"
                },
                {
                    "created": "2022-02-10T21:56:50.3622517Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-02-10T21:56:53.3214103Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.16.14"
                },
                {
                    "created": "2022-02-10T22:01:28.4121231Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '1ae66e1ad62a1dbed3ee83dbdc1e4628cc4524a22865f5883ebb4feb3a62e01f'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T22:01:33.33339Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\gopath"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.4946",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:cdd24dbb83926e4cce1337f5519c910fb307c5bda8f5467ca79eb62250d7ce12",
                    "sha256:f77aefd096a46cb75fadd02d67c9a434a1613988c23752d068dad0950f45dc94",
                    "sha256:335eb1076b01467b505c6b3c082a2cd04ffebfeb50d56be75972f912ca16b9f9",
                    "sha256:9411588bc48cc57468acd1b19ba0a5c38e84f3afcf9b22326e356c0695f278c1",
                    "sha256:3442c3284f5ee47f423b7db50cba5b6cd7ec99e6c28fd2902efe3dda592926bb",
                    "sha256:405f72dee85c6e4c25fe1585db979087f3e4a803db8165437254558141d393b1",
                    "sha256:de916679febd317814a9d252ca0942d9c6654f90c8405b4b3cf75d689079640f",
                    "sha256:44fa0eb4f95d2e5ffd9778c4e738f4521e93b62c89958af037ff84b3158899da",
                    "sha256:764dc3e15a432d3a91b3b3958a35aa8f7d9dd56cb690eaa7c1b03f515155924c",
                    "sha256:7b6560a440bc54617367412d6cea73b060cf0dfe08723ad027acdb610af8c53e",
                    "sha256:cbcec6c4abbdbc0fdb75d7a0bc89fa741d53f6a7d80593fe55c51d082802c5dc",
                    "sha256:9d21d6e9ff7a84cf47c930bb0240e3770fc68eb864ce9f8a8b78b7d933b626b2"
                ]
            }
        },
        "1.16.14-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "202b4781e24a3fe3c0e24567bc3a83d0ecfd00bc091e69a162d60c2d6097dbbe",
            "container_config": {
                "Hostname": "202b4781e24a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7fea673660fddf4cd8860ea4fc1df55ab8e277c969d5ebcbc062e76419d69ec2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:07.085147902Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:41.094850419Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:42.071044158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.93189599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:01.049497101Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:02.653573037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.960510997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:05.709014755Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:07.085147902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:d0c5f002fe027704c1a71fa7b533cac36b25b212f063293e969041ff77f8c9f2",
                    "sha256:46deb7178b874da8f2095ece60673399f40580547a1445c7b487a0c73b726ec8",
                    "sha256:98aadcc61b62e682a02c91729ec843e191d94c81d586c8eb49d6ce16d6726929"
                ]
            }
        },
        "1.16.14-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:55ab159dd93c7b9005e1f218bcc21125cc9182ea3621fae2a11af59c6d53dab2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e8ae7478d28d961e08d0d9da644e74428868e1f82526aedfe94eed86d4bf9b10",
            "container_config": {
                "Hostname": "e8ae7478d28d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:55ab159dd93c7b9005e1f218bcc21125cc9182ea3621fae2a11af59c6d53dab2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.843509417Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:42:44.135666682Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8486e54cd9c7f48cd93b4dc399b71f2053aa61655dcc37e06a9274d4878408a1 in / "
                },
                {
                    "created": "2022-01-26T01:42:44.752281037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:16:54.79260261Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:16:59.915757334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:17:21.479618928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:15.624565027Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:16.379431395Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:17.073003787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.14",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.90774952Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220209.9/go.20220209.9.linux-amd64.tar.gz'; \t\t\tsha256='190381cc3dff2453d3f7eddf74a8fae49b30317d840b78b0086b394a4f5f28fc'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:44.233861541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.295313201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.755438991Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.843509417Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d05b8af4c7ce1e4ccbecd4bb29fa4ac82a5fdeee36ef41bc46549678058513e0",
                    "sha256:678c62bc4ece5d1ec0a53289ffff169a9362a43a664bd0062d7fc8c655842e29",
                    "sha256:9aee2e50701e26cd8e5641f20bff8e27f60329e6ba4487dad7e5e99dded75a49",
                    "sha256:76ce09dad18e9acda07ed38d1aec060dbefe5f1277e8768b60a0ac8c13c228c9",
                    "sha256:2bccbf66585c9af1a25d3f2f0561c8c271fae824c32709b068efe03b0418212c",
                    "sha256:a4e159f6cf74afd043e1e2f6e31864734ec0ae5bb79f557d6d142dd33cf42168",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.16.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16.15-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16.15-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16.15-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16.15-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.15"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:990b472ab52f36de5e54f0344776b63546061132800134e7bd2bf48f539a9003",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "de7bccedccc8a4a0ccf75395ee78cd770c04e67f8da9e9ebfc9518c587f7027e",
            "container_config": {
                "Hostname": "de7bccedccc8",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.15"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\gopath"
                ],
                "Image": "sha256:990b472ab52f36de5e54f0344776b63546061132800134e7bd2bf48f539a9003",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-03-04T01:26:24.0232575Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T19:06:51.6699506Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-03-04T01:25:15.6449767Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-03-04T01:25:16.1157067Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\gopath"
                },
                {
                    "created": "2022-03-04T01:25:16.5527076Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-03-04T01:25:20.6144444Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\go\\bin;%PATH%\""
                },
                {
                    "created": "2022-03-04T01:25:21.0490101Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-03-04T01:25:21.4853703Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.16.15"
                },
                {
                    "created": "2022-03-04T01:26:20.0818739Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:b4dcddee39479ee80ea6a1bc064ee599938cd28aa52bf15813920b02d42b972d in C:\\go "
                },
                {
                    "created": "2022-03-04T01:26:22.8361893Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-03-04T01:26:24.0232575Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\gopath"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d435553b23557d22be11dc59485b5886ead8c1a0f21a038664cd293e8565ad67",
                    "sha256:3db59958bb98e1714436b3c12adb2dd0c5be4103d1f5b0e7a6a6086c05e0110e",
                    "sha256:168415226643f28c257dc912d8f122d180048431fe3f880eae77a453a78b69f1",
                    "sha256:8e27c7e2eddbe73f78d1ccf7a477caf167733e12b680060d71a0eeda2376325e",
                    "sha256:ebea126ace4a04b90063fd5c498b4c9ba98713aebb0e3792390757534e2a5701",
                    "sha256:eb3bdbaeb040b3c0fdeaf3edb10221650883bf41444cbd6617ab57acba1a1f40",
                    "sha256:a92cfc6ceec47d5bab7e0e68e927ee9a4692c2d3148700579c16499a043ef12a",
                    "sha256:2eefd5e4522799c15ed9ea4589660f3a0d483fc569bb34251320bb0217a4131b",
                    "sha256:449b9242cba55c95282ce8bd80d0838120d43987b22c98ddf2f449ccd903a114",
                    "sha256:2df62194546ef0c27ce88581f403cbfa06c828c52a6f7daf6a4da182a6cc078b"
                ]
            }
        },
        "1.16.15-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb987ebfaf35476e62fc2605c0e94f33030afdccc379f5be8118eed59d9eb524",
            "container_config": {
                "Hostname": "eb987ebfaf35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:39.451816071Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:10.532874838Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:11.32365828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:11.999711227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:34.620039662Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:35.951460225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:36.988844662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:38.405342079Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:39.451816071Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:43c7c3a92cdc4110abc60c6a9ebb6fd76d9d5a797a9a702a252055863139c902",
                    "sha256:ac0d3659657a555da41c8acc89291faa7d860b4b2b86c0741bfd65393cfd19e6",
                    "sha256:43a3478c487203d562c0753515468ad7e70d6c628c524285e7a09367724d01e2"
                ]
            }
        },
        "1.16.15-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb987ebfaf35476e62fc2605c0e94f33030afdccc379f5be8118eed59d9eb524",
            "container_config": {
                "Hostname": "eb987ebfaf35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:39.451816071Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:10.532874838Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:11.32365828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:11.999711227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:34.620039662Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:35.951460225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:36.988844662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:38.405342079Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:39.451816071Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:43c7c3a92cdc4110abc60c6a9ebb6fd76d9d5a797a9a702a252055863139c902",
                    "sha256:ac0d3659657a555da41c8acc89291faa7d860b4b2b86c0741bfd65393cfd19e6",
                    "sha256:43a3478c487203d562c0753515468ad7e70d6c628c524285e7a09367724d01e2"
                ]
            }
        },
        "1.16.15-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.15"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:ebd4ef474ee5adb2df1b8005b7cc95f5dd5e0a21b379bcec3cc0a595a5b1ae01",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "ed7f0384c309bf8b30741efbf13713b5565dd5a8e73ebb72bce7ceef847467ce",
            "container_config": {
                "Hostname": "ed7f0384c309",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.15"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\gopath"
                ],
                "Image": "sha256:ebd4ef474ee5adb2df1b8005b7cc95f5dd5e0a21b379bcec3cc0a595a5b1ae01",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-04T01:25:14.0337233Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-02-02T19:28:56.1792935Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-03-04T01:23:11.1093077Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-04T01:23:11.5430249Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-04T01:23:11.9982912Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-04T01:23:12.4379903Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-04T01:23:12.885988Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-04T01:23:44.7314205Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:23:45.1955576Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\gopath"
                },
                {
                    "created": "2022-03-04T01:23:51.4728954Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-04T01:23:51.9858123Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.16.15"
                },
                {
                    "created": "2022-03-04T01:25:12.8036451Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'cb97c4b905d29e5084d9315cb9fe7ea4a764e63081ce3238bff9da6c109a4a68'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:25:14.0337233Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\gopath"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:a5d6634e4d62aadc433b6ecc46630cc65a00bba8d9e77236683ea198e0085434",
                    "sha256:6018a1492e1bdee7047135db45abecd1b247ef9c5b987c5ecee4462ca26245e8",
                    "sha256:279b2d4d9f474271ea2d2b56f7b26a7bbc5dfdf2867fb4eca4cdbeb8dfe1fb31",
                    "sha256:249ce7d9eb4c07f5ae07f06c11c8c0b1c5542fdcce86979ea4b29f990a76c488",
                    "sha256:c9bf1c5d4d2bbeef387fbe708b041abe0043bfff9f12ffec4e344f3c8297896a",
                    "sha256:a129196b6db7f437877219828fa7a7f2378a727c32da277f2c9325daeb0bb636",
                    "sha256:52187d6db10b05932a4c79255f0ac529d9c89ee7fd27ddaf9b26273f8b444fe6",
                    "sha256:f3873978fc21c4fa854c68128a955b8c719ab6f597cb817a81667f74ad217a83",
                    "sha256:f0ed6ba801aa53d66cf50647f38c62b1d78f7590e46cd44fc5e65445c684dac2",
                    "sha256:f842900175e47ae4eed6795bd4793a034ede936a96708e55ff635d102d6debec",
                    "sha256:9f370596531fa2c42cd312540ca008c32322263b782b144885fdeae1867c1e8c",
                    "sha256:0e9b10ee83fab0023ae489a8e3269d09d8e5b18b6e918e3e7c6bc3b303b3a285"
                ]
            }
        },
        "1.16.15-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.15"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:4c09e9df0422ccb62b98478c2f9950865343bcefa376983f3608d71f68d29ba6",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "78af00c3089a3f6faff578ec856cd086868a11b7007eb7d10a9af8b50b105d92",
            "container_config": {
                "Hostname": "78af00c3089a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\gopath",
                    "GOLANG_VERSION=1.16.15"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\gopath"
                ],
                "Image": "sha256:4c09e9df0422ccb62b98478c2f9950865343bcefa376983f3608d71f68d29ba6",
                "Volumes": null,
                "WorkingDir": "C:\\gopath",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-04T01:51:58.7516951Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-02-02T13:06:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-03-04T01:45:07.1212335Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-04T01:45:09.7464156Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-04T01:45:12.433282Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-04T01:45:15.156871Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-04T01:45:18.0085507Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-04T01:46:54.5100908Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:46:57.9425091Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\gopath"
                },
                {
                    "created": "2022-03-04T01:47:34.159893Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-04T01:47:37.4658536Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.16.15"
                },
                {
                    "created": "2022-03-04T01:51:54.5189286Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'cb97c4b905d29e5084d9315cb9fe7ea4a764e63081ce3238bff9da6c109a4a68'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:51:58.7516951Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\gopath"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.4946",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:cdd24dbb83926e4cce1337f5519c910fb307c5bda8f5467ca79eb62250d7ce12",
                    "sha256:c65f154dff7e9c0de257916504856cbfa187c875f34189fa2b053f546e384e79",
                    "sha256:12128b848cd3a2d0f3bbd2c1cae059b5510d80c35f06358019038a645083678e",
                    "sha256:5361e9bf30f1faf80a19fec42015d7babf6c4c5a0c482c1d1e80e321311f4b71",
                    "sha256:b522eba57f83ff320148000b5b7d91167962ca51db9f9d5f76c97ad2b50d8066",
                    "sha256:b99f5ec490d29abb311b82a2d41f80ac2ef974a9e5c22afff1c863324569e3df",
                    "sha256:462c7b86ef6268a681de9f53ba2121c5137d7f1e61e0f8c1e78ecd042872f44c",
                    "sha256:559fbdcc7445c638b8a53547bd159ce70997a68d1a3650db8a0868309bf5aa73",
                    "sha256:2e4ccebbb6bc6ff99ff601659689c22508565328cd8d94dc4f57678f990d4487",
                    "sha256:2b328137c64aaad6a650a241717d4ddf49c6d39d73c7b544453351119e7e74c2",
                    "sha256:23368288d87ed3f9e7e054c9b21798afee38c9dd636547c914e4e4353ac306e5",
                    "sha256:0f792b17757bda1b3ab03a641aed42cf9e2f293579385354bb3ad44a1c903242"
                ]
            }
        },
        "1.16.15-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602cc945a3d86ab64bde2eb04b7ede3d9b91b9355e88ebdcefc32c45f2ae596b",
            "container_config": {
                "Hostname": "602cc945a3d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e21ab2756a115ae7da8e6697059dae3b8cbdbc2087f03fc19298779f922fe6df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:45.804881579Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.961915104Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:21.69939145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:22.636700516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:41.30092171Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:42.53151655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:43.490547167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:44.841364163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:45.804881579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:69302d1c64054d8ebe8256cb7c3a79e34d68232fa3e89f0554cedd41d699bc7c",
                    "sha256:93d2544733840bb7b8d7487ece22072f00f93d6a4bc1f4547eb8316e6bf51eb6",
                    "sha256:39f9a1645b11c6dbb5ebaa1678f0613f21364629460d7279bba835e9a73410c3"
                ]
            }
        },
        "1.16.15-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb987ebfaf35476e62fc2605c0e94f33030afdccc379f5be8118eed59d9eb524",
            "container_config": {
                "Hostname": "eb987ebfaf35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e22bede9b760380fd67d9e444965c12e2105beb41634ecab7f138c7fa8582422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:39.451816071Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:10.532874838Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:11.32365828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:11.999711227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.15",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:34.620039662Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.16/20220303.1/go.20220303.1.linux-amd64.tar.gz'; \t\t\tsha256='7fae02d8b3786d1beb7e9e31640bb452a13c55d41f35009bcc89d9310366cb82'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:35.951460225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:36.988844662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:38.405342079Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:39.451816071Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:43c7c3a92cdc4110abc60c6a9ebb6fd76d9d5a797a9a702a252055863139c902",
                    "sha256:ac0d3659657a555da41c8acc89291faa7d860b4b2b86c0741bfd65393cfd19e6",
                    "sha256:43a3478c487203d562c0753515468ad7e70d6c628c524285e7a09367724d01e2"
                ]
            }
        },
        "1.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "19d39056c56613ca3746e2427e5c72d1f61459d3dc27d0b17645e939f4348828",
            "container_config": {
                "Hostname": "19d39056c566",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:37.138320658Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:20:20.645152261Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d738977543f4afc4c3040c6fca3e3f15388ec3b7263a29a6aa83f9a4bf05fed1 in / "
                },
                {
                    "created": "2022-07-12T01:20:21.203852641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:49:24.449058445Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:49:29.810481633Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:49:47.578413254Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:04.584195938Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:05.411186284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:06.134787812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.8432116Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:33.33451692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.475707624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.025485138Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:37.138320658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86eecfa8066ec2f3b68dbbc2a4b0f1cc4110cbbdf297021043dd947878dbf2a3",
                    "sha256:9791176553792e1d82a0c1a27fd2a9e676cc3c4cbc5dea78f67cfea4dd4a59b6",
                    "sha256:92a02f6117f5bf2913dafdbeda998919d30194af06639cadf52c845657499294",
                    "sha256:4afd7e355699603f4e43405c807e8f4873908b0a4e9d91bd4d822bc47e80426d",
                    "sha256:822db2bc10ab1cec84ec90c9bdbfdaaa0ca90252a3059faaa12f694b37fdbbe5",
                    "sha256:80ac80fd70252a5d891186d839ff1943fc57a4e0459245a27e29084ac1a74957",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c400546624089a42c1ac9661e30ed8b5cd38bbef099b5e557ae5e7db737258b",
            "container_config": {
                "Hostname": "2c4005466240",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:36.529453586Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:07.522743702Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:08.266125666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.802161782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.605698371Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:32.994967744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.048824868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:35.496567519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:36.529453586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:a7c70d4ecd975d83fa9e06b8a3f889f228f244eeb70dd129de8e074b4ff7392f",
                    "sha256:9b6e15b65fb55fea34746f3bc8d293de528fc77bab94f86ccfa3bd5405c87e90",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ee2c650facc5411480a472acb5f1fe4d8f8db806ace6e25bddeb1d9e2759a60f",
            "container_config": {
                "Hostname": "ee2c650facc5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:32.998480662Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:00.576421618Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:01.275901506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:01.870572467Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:28.382502614Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:29.587320566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:30.575518573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.904372638Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:32.998480662Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:cdb03c51bdce5737b5730d67245d09208e98d846893912b3e535dc8947c568ac",
                    "sha256:6e064ddc078753fad316f76a0b7efebdd4afd092ebd5e3b23fa3034d2e243e56",
                    "sha256:2bf04990020bddcd77cdfad5eed7e53cdf97077e25035868daa5382d73a406d3"
                ]
            }
        },
        "1.17.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a0c01de765ee5dbf1b83d761a06b615f2c1f4167a1a34c4af1a6be9d2666073d",
            "container_config": {
                "Hostname": "a0c01de765ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:27.509516388Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:58.973942752Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:59.817699697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:00.70546203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:22.117529259Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:23.562027721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.765388023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:26.353916915Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:27.509516388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:8231b456a6bec0e2d4eb51adfbef6a21be671b7c956f1cdff5362f3f3b3f0a23",
                    "sha256:40c1ffa9aa15f08b31f7ac323ab64687f5b8bfa1eb6ef1c350cdc9b5d2ff4d9c",
                    "sha256:1118485030f5e521f2c2210299eda5cb17e74cdc1cc65a2ead709795041e4fde"
                ]
            }
        },
        "1.17.10-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a0c01de765ee5dbf1b83d761a06b615f2c1f4167a1a34c4af1a6be9d2666073d",
            "container_config": {
                "Hostname": "a0c01de765ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:27.509516388Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:58.973942752Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:59.817699697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:00.70546203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:22.117529259Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:23.562027721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.765388023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:26.353916915Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:27.509516388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:8231b456a6bec0e2d4eb51adfbef6a21be671b7c956f1cdff5362f3f3b3f0a23",
                    "sha256:40c1ffa9aa15f08b31f7ac323ab64687f5b8bfa1eb6ef1c350cdc9b5d2ff4d9c",
                    "sha256:1118485030f5e521f2c2210299eda5cb17e74cdc1cc65a2ead709795041e4fde"
                ]
            }
        },
        "1.17.10-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a0c01de765ee5dbf1b83d761a06b615f2c1f4167a1a34c4af1a6be9d2666073d",
            "container_config": {
                "Hostname": "a0c01de765ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:27.509516388Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:58.973942752Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:59.817699697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:00.70546203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:22.117529259Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:23.562027721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.765388023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:26.353916915Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:27.509516388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:8231b456a6bec0e2d4eb51adfbef6a21be671b7c956f1cdff5362f3f3b3f0a23",
                    "sha256:40c1ffa9aa15f08b31f7ac323ab64687f5b8bfa1eb6ef1c350cdc9b5d2ff4d9c",
                    "sha256:1118485030f5e521f2c2210299eda5cb17e74cdc1cc65a2ead709795041e4fde"
                ]
            }
        },
        "1.17.10-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a0c01de765ee5dbf1b83d761a06b615f2c1f4167a1a34c4af1a6be9d2666073d",
            "container_config": {
                "Hostname": "a0c01de765ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:27.509516388Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:58.973942752Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:59.817699697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:00.70546203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:22.117529259Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:23.562027721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.765388023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:26.353916915Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:27.509516388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:8231b456a6bec0e2d4eb51adfbef6a21be671b7c956f1cdff5362f3f3b3f0a23",
                    "sha256:40c1ffa9aa15f08b31f7ac323ab64687f5b8bfa1eb6ef1c350cdc9b5d2ff4d9c",
                    "sha256:1118485030f5e521f2c2210299eda5cb17e74cdc1cc65a2ead709795041e4fde"
                ]
            }
        },
        "1.17.10-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f07689501359a62f4d6e31e2ad1088a16191743d7193545926cd619143feed71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "99c952787bdb3faa8f4b1c01975f7e8178b866b8f8df1cf0bf4aa625e3bf59aa",
            "container_config": {
                "Hostname": "99c952787bdb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f07689501359a62f4d6e31e2ad1088a16191743d7193545926cd619143feed71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:38:31.8105929Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T01:48:30.377871517Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6545064ea0f75166d59e4d4a2df1e41a3477ae468e558e31f29857336978c0e in / "
                },
                {
                    "created": "2022-05-11T01:48:31.280990215Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T03:21:45.636994835Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T03:21:59.647851327Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T03:22:51.954975669Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:33.304429789Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:41.934179204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:37:52.209230786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:12.110882597Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:22.657332803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:25.323548679Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:29.391270579Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:38:31.8105929Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4e6f331ea0f9e2526d00cb14cca9deb5634b404c564aefaf6cf031bcb631832b",
                    "sha256:c32c0327c8a8dce69b03155c50e10a2bf5e1c2e7eeeb5653ae3cc849638cbc8b",
                    "sha256:93cf61e290e26ff89af3910bf302369c88264a3bba1a6f081e1a92782e637ea5",
                    "sha256:c78e48a3cec0e136cca08b8ede02bbe1b476ae53be4d08c0cd7a4f20286048e8",
                    "sha256:ffbd0a6f840eac1b6fe18a43274f680dff6f78b70a0ba7a304e63b183251ea12",
                    "sha256:e2cd94967bd414dc9344a18df2a8de84a60a35fdc8a06fd4f2fefb14cc00e912",
                    "sha256:e79ad7102e2e189f0391486b58ab506e4c8844c0e769ced4afd2f3bdd3a8d301"
                ]
            },
            "variant": "v7"
        },
        "1.17.10-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7220573c475162958c5063e2671885ca79efe21c306613bfdb6600ff72d6a9a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6bfab41bc8f78e4e2ad840bfd317eea9cb2ce2c51a97b804ddcbfac72f6e5d50",
            "container_config": {
                "Hostname": "6bfab41bc8f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7220573c475162958c5063e2671885ca79efe21c306613bfdb6600ff72d6a9a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:09.50478391Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T00:46:44.101445948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:239aa42118877a929b2fbfc0d5793fee7815289280affa5286de2459385c0679 in / "
                },
                {
                    "created": "2022-05-11T00:46:44.82281499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:25:24.029069155Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:25:29.327490075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:25:48.037534449Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:10.213415282Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:22.627508094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:24.263947721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:49.356641536Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:39:00.443727293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:02.398895942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:07.686720732Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:09.50478391Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a57faaaa949a5ff3624ed1f1ff84a9b56c54bcf7fd9032476beb175005c2767",
                    "sha256:af9f18963b2c40704f106688aa7c396fbc3fc411df5d3c4334695f9bea47791a",
                    "sha256:54f9258101c9f8e308c1cd30d2c08a120bcd19740f7afba2a38f80801e2e1b1d",
                    "sha256:7584b38b3583c97651dc67f4cbd74b4050d02f3b476128abdc5fd6fbb617de6a",
                    "sha256:df4f8696864c7c3861bb02466fb93357443759fa20c05b082774ac876561377e",
                    "sha256:9742b70b604dc64a9c3b54a3fc35b5d7baa9869c6cb3ad0ba92808e9074b0445",
                    "sha256:e3b218de0acce6b7f0147d16844ee85d2f9c856f43fe236b73de875f3cedacb8"
                ]
            },
            "variant": "v8"
        },
        "1.17.10-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:624a0890b44dfe6d36fca3487a37f855ee70d1337009e5f2ec85fe3047b5a0d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "29673849cab06d9c2f296f08f76366825bb25ad4076e49829f97f1af80fa4c5d",
            "container_config": {
                "Hostname": "29673849cab0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:624a0890b44dfe6d36fca3487a37f855ee70d1337009e5f2ec85fe3047b5a0d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:13.875114394Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:26.329235418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54d60144d251caa916ff50606bc2364131d47d6b10ed83d08c81c647ab56cc40 in / "
                },
                {
                    "created": "2022-05-11T01:20:26.817731753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:50:23.11692482Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:50:28.365870038Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:50:43.421251262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:47.195678375Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:48.067756494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:34:48.800579651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:08.224823464Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:09.789447295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:11.013878184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:12.621519283Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:13.875114394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f70b727d55c3bf3e37ab16d9d40bc5f5dd209f01a5514af0146547d3f3eaca60",
                    "sha256:7ae08394a32ad3980fc0863f492f8dc720c5169d94c10ad4fdfefc76b68bf23e",
                    "sha256:58b24c6222e3b3d7fdfebbffbce6c4eb14de8abf92a99710ee5cf2dc76e3204c",
                    "sha256:74f08751ac3feff0f5e89a91b43ec8a6949c90db328bb788695743cc20e0594e",
                    "sha256:3bc2a47ae50e4058dc8daadd5e1caeb2e9604556b63fc12845c4c3f543e5c94f",
                    "sha256:131e4fe73abd42cf5a67b1f6ac0e8d8dd4403a06e3516ea1eb0cbd18ee0b53e6",
                    "sha256:1be4280812a948eaeb1e4fa421c3c383eae062c8424f7c8336b769b68d7bc280"
                ]
            }
        },
        "1.17.10-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:624a0890b44dfe6d36fca3487a37f855ee70d1337009e5f2ec85fe3047b5a0d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "29673849cab06d9c2f296f08f76366825bb25ad4076e49829f97f1af80fa4c5d",
            "container_config": {
                "Hostname": "29673849cab0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:624a0890b44dfe6d36fca3487a37f855ee70d1337009e5f2ec85fe3047b5a0d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:13.875114394Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:26.329235418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54d60144d251caa916ff50606bc2364131d47d6b10ed83d08c81c647ab56cc40 in / "
                },
                {
                    "created": "2022-05-11T01:20:26.817731753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:50:23.11692482Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:50:28.365870038Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:50:43.421251262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:47.195678375Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:48.067756494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:34:48.800579651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:08.224823464Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:09.789447295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:11.013878184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:12.621519283Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:13.875114394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f70b727d55c3bf3e37ab16d9d40bc5f5dd209f01a5514af0146547d3f3eaca60",
                    "sha256:7ae08394a32ad3980fc0863f492f8dc720c5169d94c10ad4fdfefc76b68bf23e",
                    "sha256:58b24c6222e3b3d7fdfebbffbce6c4eb14de8abf92a99710ee5cf2dc76e3204c",
                    "sha256:74f08751ac3feff0f5e89a91b43ec8a6949c90db328bb788695743cc20e0594e",
                    "sha256:3bc2a47ae50e4058dc8daadd5e1caeb2e9604556b63fc12845c4c3f543e5c94f",
                    "sha256:131e4fe73abd42cf5a67b1f6ac0e8d8dd4403a06e3516ea1eb0cbd18ee0b53e6",
                    "sha256:1be4280812a948eaeb1e4fa421c3c383eae062c8424f7c8336b769b68d7bc280"
                ]
            }
        },
        "1.17.10-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7b806ff2d19981109b7913b6faf96eb380fe593dfc34ecd7ebe578c153f8349a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "281d2d27a6140b0972cdc507b7e01b67c1853b12219e80746233031def870b5a",
            "container_config": {
                "Hostname": "281d2d27a614",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7b806ff2d19981109b7913b6faf96eb380fe593dfc34ecd7ebe578c153f8349a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:38:43.107493977Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T01:49:37.505506928Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c75d7f24328b3f84cd700813a0a8ff5af16399f4475d24da9b0a859d584614c in / "
                },
                {
                    "created": "2022-05-11T01:49:38.657365734Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T03:25:27.489264794Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T03:25:40.87973511Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T03:26:30.078495227Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:40.941911203Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:47.15355977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:37:53.361202799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:14.457945725Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:22.796110692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:25.579355269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:34.389427032Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:38:43.107493977Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4f4037da932d1ae2a0c18ed4725bcbc47862ef617fe560a1dfc49ec4c2c8c73b",
                    "sha256:de070f6df096e58a632e62a2c52b975fd5b9191ca2b6c8aba8ebd218579e4d0d",
                    "sha256:1c0b1d482bfb414768729df610127dae9ba6ef2906ba9995c0a786e7072714cb",
                    "sha256:c01b06d07a2296d0cad7d9f2ca97055072044d8be34cf2666996bffa08af637c",
                    "sha256:a7618d6ab9b76bad16980643e94caf710f97f4566b807d88f13c12275be188c4",
                    "sha256:fad9b2f3a4722ce1df66c327b3f781793098c75b49760202fe8f696c6ec5962e",
                    "sha256:a6dacdc3a5d797c25d7a739a701c4c3907278d3bc367aff92edc5ceb8feb0460"
                ]
            },
            "variant": "v7"
        },
        "1.17.10-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a98d8f1d9f02ac0e48e37c44f332914432a93f134b8f4b5668773f3ee5f74d0f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "317c597de91fcb67a22698fd1b1071700bfdab6252743a583c0d13f6850db947",
            "container_config": {
                "Hostname": "317c597de91f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a98d8f1d9f02ac0e48e37c44f332914432a93f134b8f4b5668773f3ee5f74d0f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:09.281098356Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T00:47:11.06561516Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5389b77733b44ebc41850baff3ebfc491726af264a745f108d5f16076a0f04ab in / "
                },
                {
                    "created": "2022-05-11T00:47:11.726718564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:26:53.336816611Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:26:58.881063614Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:27:18.43982007Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:24.787905381Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:27.704637964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:30.986624252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:55.489169646Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:39:00.49538072Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:03.041941037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:07.772509087Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:09.281098356Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eef45e999bd2c0bd45201c404c7e1aeec5ac544c347aec5df6b827555a1ae9a9",
                    "sha256:e02667822538e9da3764196b2ab6a272f697166c37cf7cb720ecab0a94d1a1d2",
                    "sha256:cbd6d1248e0ae5d72aa5c7753618418a0f7a9c10e0c9c0b0ec6eb7bf1b887357",
                    "sha256:3e5c438ddcb14a2aff8c8a549b976c90687a48dad0ed2fbc37568acf6ddbddb4",
                    "sha256:9ac73935c7a580cce50dfeee89b2a430c550f609a6254cbd007c3c4b8262c1d3",
                    "sha256:c73b953222375ecee7d3e2e268a8ea8ea3873fa57e6fdef184263ed5e549849e",
                    "sha256:e3b218de0acce6b7f0147d16844ee85d2f9c856f43fe236b73de875f3cedacb8"
                ]
            },
            "variant": "v8"
        },
        "1.17.10-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "61a46b6633f8cb0dc8e0386aaca0749f80bdf7d780fc335c048f6b680a4fdda1",
            "container_config": {
                "Hostname": "61a46b6633f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:24.193322731Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:39.519854118Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:40.158637795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:40.647673294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:19.669955142Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-amd64.tar.gz'; \t\t\tsha256='36306bf424fa76d87bc9a90f29482dd66b24d1fa72aebad061d02e37e47402e9'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-arm64.tar.gz'; \t\t\tsha256='76dab4b2c74075db074095e71b8d75a6f11187374a542e5e48e7d98ec37c8d4a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:20.917956483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:21.920799979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:23.266739238Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:24.193322731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:4cd35749f1ff55e8ca9b29c0f0e64d20916081dbe1f55af11b21810d27eb92b6",
                    "sha256:c6fe64f80c44ddc5e523f241030478fab3e66e3ef5613c1e94d6433a1b875f26",
                    "sha256:58bb2c86ac06ffd3e43da0e17fa9514890943d0b6ff3a024f58aa19f670cfff4"
                ]
            }
        },
        "1.17.10-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "61a46b6633f8cb0dc8e0386aaca0749f80bdf7d780fc335c048f6b680a4fdda1",
            "container_config": {
                "Hostname": "61a46b6633f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:24.193322731Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:39.519854118Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:40.158637795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:40.647673294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:19.669955142Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-amd64.tar.gz'; \t\t\tsha256='36306bf424fa76d87bc9a90f29482dd66b24d1fa72aebad061d02e37e47402e9'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-arm64.tar.gz'; \t\t\tsha256='76dab4b2c74075db074095e71b8d75a6f11187374a542e5e48e7d98ec37c8d4a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:20.917956483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:21.920799979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:23.266739238Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:24.193322731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:4cd35749f1ff55e8ca9b29c0f0e64d20916081dbe1f55af11b21810d27eb92b6",
                    "sha256:c6fe64f80c44ddc5e523f241030478fab3e66e3ef5613c1e94d6433a1b875f26",
                    "sha256:58bb2c86ac06ffd3e43da0e17fa9514890943d0b6ff3a024f58aa19f670cfff4"
                ]
            }
        },
        "1.17.10-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "61a46b6633f8cb0dc8e0386aaca0749f80bdf7d780fc335c048f6b680a4fdda1",
            "container_config": {
                "Hostname": "61a46b6633f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:24.193322731Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:39.519854118Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:40.158637795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:40.647673294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:19.669955142Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-amd64.tar.gz'; \t\t\tsha256='36306bf424fa76d87bc9a90f29482dd66b24d1fa72aebad061d02e37e47402e9'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-arm64.tar.gz'; \t\t\tsha256='76dab4b2c74075db074095e71b8d75a6f11187374a542e5e48e7d98ec37c8d4a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:20.917956483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:21.920799979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:23.266739238Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:24.193322731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:4cd35749f1ff55e8ca9b29c0f0e64d20916081dbe1f55af11b21810d27eb92b6",
                    "sha256:c6fe64f80c44ddc5e523f241030478fab3e66e3ef5613c1e94d6433a1b875f26",
                    "sha256:58bb2c86ac06ffd3e43da0e17fa9514890943d0b6ff3a024f58aa19f670cfff4"
                ]
            }
        },
        "1.17.10-1-fips-cbl-mariner1.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:01e78d9dd4cd5e39aadd415f201e8639fd9064e20c43f42c6aafdd5aca6acbb2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "44b705cde8bf0354880f8a31861f7d504c9e704358481052918096f51350a997",
            "container_config": {
                "Hostname": "44b705cde8bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:01e78d9dd4cd5e39aadd415f201e8639fd9064e20c43f42c6aafdd5aca6acbb2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:17.301693564Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-03-19T16:55:40.140658887Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:38:27.550001873Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:38:31.413274706Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:38.857145271Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:03.036533899Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-amd64.tar.gz'; \t\t\tsha256='36306bf424fa76d87bc9a90f29482dd66b24d1fa72aebad061d02e37e47402e9'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-arm64.tar.gz'; \t\t\tsha256='76dab4b2c74075db074095e71b8d75a6f11187374a542e5e48e7d98ec37c8d4a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:39:07.768203478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:09.363712293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:14.39378679Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:17.301693564Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0bcd07420e1a5450706e47129cec4ef4d8b84ca7f18a6d2a624b0f85c8352c59",
                    "sha256:fc0a24d938dbd15cee9815abc20c938a0b5d615a5ba5f9cc675d69c4c7baeae4",
                    "sha256:d0e8c06838622199693dadae3025d38b3ed03b214bece988aff46eee80b38e7e",
                    "sha256:c4289c2d789271ae6506b50d06676c4556f5e7b2c3e434ba45038725c5277d1c"
                ]
            }
        },
        "1.17.10-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:029bd07723c794f84b3ed9b57490076bc39135a0e49a3e1c11579a6107ada1ad",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "d8587bd2f7f5636932c938b938ea8e01d952134d092bd3a6c1abc1aaa2aed8c2",
            "container_config": {
                "Hostname": "d8587bd2f7f5",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:029bd07723c794f84b3ed9b57490076bc39135a0e49a3e1c11579a6107ada1ad",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-05-11T17:42:34.136371Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T16:42:43.3779926Z",
                    "created_by": "Apply image 10.0.17763.2928"
                },
                {
                    "created": "2022-05-11T17:41:35.2998825Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-05-11T17:41:36.2766648Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:41:37.2611783Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-05-11T17:41:39.5235158Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-05-11T17:41:40.5069234Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-05-11T17:41:41.5069559Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.10"
                },
                {
                    "created": "2022-05-11T17:42:30.7684566Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:f2c9a1c716c13fee6589588216d626868726b258bbf48d1c498f00d8b1079796 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-05-11T17:42:33.1042039Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-05-11T17:42:34.136371Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2928",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a0d44e5352dcb84bca48b6ee3d30a9ec91b5e6eb6793747e06d2454d360a9338",
                    "sha256:00dd94476a9c46714d2d45634c752ebadfe5528547725aaee2c93971dec4bc09",
                    "sha256:35ed7225b653e0ff66722e46e4c7375f25bcddc59b888a005ab2577742c7c88c",
                    "sha256:397aa131c502d6578a4fc489f0d2e709942b0e8953d316a984665f3db7e2d2e5",
                    "sha256:1f98359f70a178a128e049fd03e9997b2865f834371f7fee754a993843c6a79a",
                    "sha256:59bef9bf0677873cdd192bbe0a2abeb49e65e646cc0ff058af3db6af4ad8e39c",
                    "sha256:68db42ad47e5f4687c62fce155a6f5ab1d00e676a94d0b6bcb1f395edb663fac",
                    "sha256:1d87bed5f0a347aff22bf72d93b33b02cdf2041206f0d7d27e3d3c2c0f10c055",
                    "sha256:0719bdf3c4c75783f50c31a63d4db9aa5f3162ca04e50147427e05f876a5bdec",
                    "sha256:c4f4c81abed07bd267cdcedab59c4ffd75663fb55d479b1f2675baf729b7369c"
                ]
            }
        },
        "1.17.10-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:89e85089bec51fc61ccbdda8075ae9f8bba00a9d2e79c258ca15fea39aacbdd4",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "6e05f9081d679961947c595e41bf5b78502897a3ec5954df2b9069581ffcf954",
            "container_config": {
                "Hostname": "6e05f9081d67",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:89e85089bec51fc61ccbdda8075ae9f8bba00a9d2e79c258ca15fea39aacbdd4",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-05-11T17:45:40.0787404Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T02:37:33.5903831Z",
                    "created_by": "Apply image 10.0.20348.707"
                },
                {
                    "created": "2022-05-11T17:43:20.358965Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-05-11T17:43:21.3200083Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:43:52.2728465Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-05-11T17:43:57.758069Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-05-11T17:43:58.2229557Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-05-11T17:43:59.3930923Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.10"
                },
                {
                    "created": "2022-05-11T17:45:31.2740254Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:f2c9a1c716c13fee6589588216d626868726b258bbf48d1c498f00d8b1079796 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-05-11T17:45:38.4828925Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-05-11T17:45:40.0787404Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.707",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:26085ddda8400952278f21eda4de3abb08e6e2b02afaddd77d1dab2b2a3f7c70",
                    "sha256:e7251f1a61ceba85d6bbf99f64001756354ca86689eaaf0ce458d061c4e7b274",
                    "sha256:cece2fec3fbd0e9cfb61df550e4e5e2e06617bd44971fe906da79bada84fbc2d",
                    "sha256:98768621bc75ca07d1f9203d065f8ee7bb5ff87fc8437c945543344b4622367b",
                    "sha256:fb03873bb30dd70312f1b1ea0a4571f080abb15c942be76bab36227a9a4118f9",
                    "sha256:c4d1793a0ea0346d5fa474326a8f9c37f07e0af6f978e6943bec940bbf655c98",
                    "sha256:fd025c85bb1a04c418800b37d21f22465e0abeeedc2016c6d5b295b1aaddcceb",
                    "sha256:77e8755d2edf12e2ff57cce26c315c10f08d0cbe2aea2f8ba7afb8ada134f12c",
                    "sha256:54793b4259989b9aa4bb8fdb8805fd43971daaa8154d61212793dfb466d9da9a",
                    "sha256:8fd24c6892d4fabdc2795cf76050563cf5f8de9d2e90e2328cb30f69c20af6f0"
                ]
            }
        },
        "1.17.10-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:83ddeb7bba355ad6a95c5519dded131b46bce539f589b58047c5bfc4c7764333",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b953592bbbb0508baa82fe0023aea7cdf092a6a7201a8cf99d7ae25a78cf977",
            "container_config": {
                "Hostname": "3b953592bbbb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:83ddeb7bba355ad6a95c5519dded131b46bce539f589b58047c5bfc4c7764333",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:39.108305615Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:22:05.01919771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00f57642edc8479d50e6470a3509ad679eb9353761912deade33251fb3d9daa8 in / "
                },
                {
                    "created": "2022-05-11T01:22:05.440894091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:53:15.002335304Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:53:19.561223483Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:53:39.189232047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:07.448100775Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:08.429352327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:09.356948515Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.539010122Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:34.397633402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:35.842268024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:37.713873496Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:39.108305615Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:05c492a3d5e99724a697838cea48a423dace2099791aae4c2d7cdc0f61222107",
                    "sha256:6c64c31a187c2b4d67a1f0055f46ef95f65f7cf85ceedf20c59abecd77c8293f",
                    "sha256:5f9553657987b7f7aa1f8797dd5ee18ad45d9f758d2e0420929235ff33a32a08",
                    "sha256:329c9d2dc466b49078e9c71bdc5925632ba8eebcb42bd0439e8bc5e84f238d95",
                    "sha256:711000cd232dc6d58ce0ae56bcfdf6abd5594cb69112844fd5f063483e9603c6",
                    "sha256:2e6aaf7264855f7dca76e337d3395b8b5df07ab600a8673f9c805b1c7afd861e",
                    "sha256:8f0d2a9882c0fdabd869835c2102720aad5d5a7bb0b83d1b510d02006b4e9a39"
                ]
            }
        },
        "1.17.10-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:83ddeb7bba355ad6a95c5519dded131b46bce539f589b58047c5bfc4c7764333",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b953592bbbb0508baa82fe0023aea7cdf092a6a7201a8cf99d7ae25a78cf977",
            "container_config": {
                "Hostname": "3b953592bbbb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:83ddeb7bba355ad6a95c5519dded131b46bce539f589b58047c5bfc4c7764333",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:39.108305615Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:22:05.01919771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00f57642edc8479d50e6470a3509ad679eb9353761912deade33251fb3d9daa8 in / "
                },
                {
                    "created": "2022-05-11T01:22:05.440894091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:53:15.002335304Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:53:19.561223483Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:53:39.189232047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:07.448100775Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:08.429352327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:09.356948515Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.539010122Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:34.397633402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:35.842268024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:37.713873496Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:39.108305615Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:05c492a3d5e99724a697838cea48a423dace2099791aae4c2d7cdc0f61222107",
                    "sha256:6c64c31a187c2b4d67a1f0055f46ef95f65f7cf85ceedf20c59abecd77c8293f",
                    "sha256:5f9553657987b7f7aa1f8797dd5ee18ad45d9f758d2e0420929235ff33a32a08",
                    "sha256:329c9d2dc466b49078e9c71bdc5925632ba8eebcb42bd0439e8bc5e84f238d95",
                    "sha256:711000cd232dc6d58ce0ae56bcfdf6abd5594cb69112844fd5f063483e9603c6",
                    "sha256:2e6aaf7264855f7dca76e337d3395b8b5df07ab600a8673f9c805b1c7afd861e",
                    "sha256:8f0d2a9882c0fdabd869835c2102720aad5d5a7bb0b83d1b510d02006b4e9a39"
                ]
            }
        },
        "1.17.10-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8e1876e0cf8af927bc1fe9f3f75559b49c7d461908ba30ad72e68b0b607a4fa4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0319871a131efff693d33a9b87f68cd665f8c152ece5972580301f0c92f7af63",
            "container_config": {
                "Hostname": "0319871a131e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:8e1876e0cf8af927bc1fe9f3f75559b49c7d461908ba30ad72e68b0b607a4fa4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:38:12.370523438Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T01:54:33.578234352Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c679388ac7a37037465302aea3117354d9746d0c50c056e826b5c8c58aea5138 in / "
                },
                {
                    "created": "2022-05-11T01:54:34.285692569Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T03:33:12.185481273Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T03:33:23.615107937Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T03:34:15.649593593Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:41.217210451Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:42.480632374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:37:44.026834288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:05.355544897Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:07.677343887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:08.935033229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:11.053497456Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:38:12.370523438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1502f13ee9bc6e99ae1e3cd119b52658d783e2be1f6160489d7b38e2329f43c8",
                    "sha256:b0d04ef19bf13b20fcab5e978d3fd8ba3da7567a30e18900c87eb2e59d61d4d5",
                    "sha256:8f0d791b14370f4da45b5b98de1a87346bfb8bec62aee72d268f0b86301e02ff",
                    "sha256:329f8f993bea2109e9a9b958c10b791b01bac6587f08533c7b801bc2e5366583",
                    "sha256:3fd67bf0c30a6a6ddf47fd0021459f1960a3da9c43a3a9fe5393199f28d3a17b",
                    "sha256:cd3115502f45e86f7344f98e32998265912ebb8756e26ad704a6e6ad25abab6c",
                    "sha256:7bfa4512db5fa92ab34d3b1d4467d6d150558c439b42a637bd7969c04775802e"
                ]
            },
            "variant": "v7"
        },
        "1.17.10-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:81708c70c404e85cc8f4b385b7cc81ff13c159ceacdafce489a41e573a894ee5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0ddf086444081df60d3b450352a4077bb616615706c19fc3d8887d269bf2c79f",
            "container_config": {
                "Hostname": "0ddf08644408",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81708c70c404e85cc8f4b385b7cc81ff13c159ceacdafce489a41e573a894ee5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:38:36.151597536Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T00:49:08.429633252Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8949016fba61b18207f5a2309fc974562080c5cc80d1eb82adb35c4fa03f6f05 in / "
                },
                {
                    "created": "2022-05-11T00:49:09.74851696Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:29:58.184124433Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:30:02.821511765Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:30:21.411043564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:58.933473257Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:01.612627479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:04.991511539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:26.446842462Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:28.739140489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:31.025209989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:33.338568545Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:38:36.151597536Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4564104aefa260b6c4a014d61945b9fcb94ad84cd8e532ffcc66966d678151f5",
                    "sha256:c68ab1c74905743444e26581ec294f149d1b6486bcc0fe4b44c3f8101e2424b7",
                    "sha256:09f0edead130ed67b387c2ba0f3f697b5e6713612129af66c2c0b880ff45eb21",
                    "sha256:4e1394fdea0073668e590d7eb0f09e25f8c78f4ae1eeb27a73d923bcdcbbda83",
                    "sha256:1328852de8c5e3566d711d23ebdac6b2c6aed604f5421f98911b41fe101f1b8e",
                    "sha256:ecaab53e56ec872258f8bce17311be4fb8ec54ff65943a305dbdea2aa20e77b2",
                    "sha256:a6dacdc3a5d797c25d7a739a701c4c3907278d3bc367aff92edc5ceb8feb0460"
                ]
            },
            "variant": "v8"
        },
        "1.17.10-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:543f6b18a3912816638b104727429fd2256475a7d23f69f3dfd5cc1957c76745",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "ddcbfbeb052fa043be74439f818fce8d5ddd2521ca8761de0e1603538f7bca2c",
            "container_config": {
                "Hostname": "ddcbfbeb052f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:543f6b18a3912816638b104727429fd2256475a7d23f69f3dfd5cc1957c76745",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-05-11T17:41:34.0557207Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:27:13.2763402Z",
                    "created_by": "Apply image 10.0.17763.2803"
                },
                {
                    "created": "2022-05-05T17:03:24.9634109Z",
                    "created_by": "Install update 10.0.17763.2928"
                },
                {
                    "created": "2022-05-11T17:39:59.7495847Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-05-11T17:40:00.6777589Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-05-11T17:40:01.5954053Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-05-11T17:40:02.5069713Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-05-11T17:40:03.4325581Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-05-11T17:40:21.8501969Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:40:22.815979Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:40:28.16399Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-05-11T17:40:29.062113Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.10"
                },
                {
                    "created": "2022-05-11T17:41:32.6007721Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'b1e3cc5ee327d8c88541a7317ee543f7ed07354d4b91b641166ee3db2160e44a'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:41:34.0557207Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2928",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6fdd6832d95a5f537e0e7d87f2613ea9741ad9c20438b9d5a2697a883c4cd96",
                    "sha256:19d90b2bc7a17e712bc5028ff2b9169219fde003c778add8e96fc55292b63a87",
                    "sha256:6724a0b01cc8ec71a64354a76c90a94f0542d0457d37da97df1f41988ebf1788",
                    "sha256:71b0a34d18faebbb867022af620ab4b74ba104ce5c90cee0b8a0afd01b891449",
                    "sha256:1cda4adfee8a61245c7c0f767f87c0a027ca36310c31161e47f54b58d2ab4388",
                    "sha256:c5968db5ae72655e9c5c3feb76d8ad1b3447ea8098f4127d1b615233ac3a6a4e",
                    "sha256:bd65c2eef305b603f3f44a56cb5adc14078427678ac38c3ea3bd97431110226d",
                    "sha256:61b456c653148f36c278fa646ce4d3aa71c9f4bb008cc69556d6d07b388fb4b7",
                    "sha256:7285803e48b6e402690d26d5b3c6952271a5150d522d4d146800d8adef14c1cc",
                    "sha256:b5a4007ce9d5381c47c6be391d044b314bfa59628f746234cc22aea4595cbb0c",
                    "sha256:2ac437ee5c269bae48decccd76966de2660c4b25cc294c0867a3eadc1c45236d",
                    "sha256:57c475c881da3393fc2cb502aad7f1f7cea1bf6c8ffae1d85d8076663e1def7e",
                    "sha256:d4a6af5c6b8c67b05809fac2496de98d9be20364e66e06f71b03477561436531"
                ]
            }
        },
        "1.17.10-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:a7a9043b2fbabd1bf0cfb0e05e7d19d689addc249ea97e030386ae0c92c99776",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "55a7ce700f2b570a7143cab6a8b5bbf245aff235b64600baffe143f90c636550",
            "container_config": {
                "Hostname": "55a7ce700f2b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:a7a9043b2fbabd1bf0cfb0e05e7d19d689addc249ea97e030386ae0c92c99776",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-05-11T18:04:39.0707304Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T02:36:40.2940142Z",
                    "created_by": "Apply image 10.0.14393.206"
                },
                {
                    "created": "2022-05-05T03:42:13.7748176Z",
                    "created_by": "Install update 10.0.14393.5125"
                },
                {
                    "created": "2022-05-11T17:58:39.2313727Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-05-11T17:58:40.8290609Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-05-11T17:58:42.4004133Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-05-11T17:58:43.9278081Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-05-11T17:58:45.5772841Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-05-11T17:59:47.3293778Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:59:49.5862884Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T18:00:15.5793573Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-05-11T18:00:17.9231869Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.10"
                },
                {
                    "created": "2022-05-11T18:04:35.02372Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'b1e3cc5ee327d8c88541a7317ee543f7ed07354d4b91b641166ee3db2160e44a'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T18:04:39.0707304Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5125",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:9f7d281f701e6f21614d8e0e7bbc08f5650c427949acbc81977689ab82763f30",
                    "sha256:06556758b1e7bf5d0d3fcdcda99323a7a06023e088abe867789290b5641a0495",
                    "sha256:b71d3b65d56184b6e908ed94fbee1cf42629819dc14fc426ee0da22a2d6f83cb",
                    "sha256:97d8b1f857421ed720db3a12da43b2ab9dd08ed4b5f6ada09b2c6048e2746d15",
                    "sha256:61c01e89f8aa3ee660db7145357da658d1188f206739b75956f7ac953b4e3188",
                    "sha256:7a3d42e9376c59bdf181366e300267b5b279139960cc610699c990d8c734ff08",
                    "sha256:82789042c2465b238007d4bad9e620147bf1ce0f52de85735993540d483b27a3",
                    "sha256:2b34d3c45588333b1536fb0d56b4a38773e3df50de9e584f57928c2ebda755fb",
                    "sha256:c20bdc6d03ad9f9bc81570d5a9df69202966f47b8161e27cb3df0fea3475b096",
                    "sha256:725c3520cf2f0f120bfd4edd869b3d1c4c2500f657cb4470b006da67adb1ca85",
                    "sha256:be10fe4d62091280048785316dda5f81d46bb3eebdea13d915f8386495798341",
                    "sha256:1895025ca5363e3fca34c9988326a7eb10e8b5ed3b2768dedfb7f3337680bee2"
                ]
            }
        },
        "1.17.10-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:239244c80e69076a65a794cab01099f029cc440561471f086b251b834cbd5c43",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "15a1bfb607831864ec44d04852237422f4f565d9b2a1d5925f61025e9c317211",
            "container_config": {
                "Hostname": "15a1bfb60783",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.10"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:239244c80e69076a65a794cab01099f029cc440561471f086b251b834cbd5c43",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-05-11T17:43:19.2479399Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:12:09.4542389Z",
                    "created_by": "Apply image 10.0.20348.643"
                },
                {
                    "created": "2022-05-05T03:02:27.4444987Z",
                    "created_by": "Install update 10.0.20348.707"
                },
                {
                    "created": "2022-05-11T17:40:48.7850368Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-05-11T17:40:49.7853238Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-05-11T17:40:50.8194507Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-05-11T17:40:51.8341741Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-05-11T17:40:52.838188Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-05-11T17:41:12.0053409Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:41:13.0889382Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:41:24.1326453Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-05-11T17:41:25.1587896Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.10"
                },
                {
                    "created": "2022-05-11T17:43:17.9040601Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'b1e3cc5ee327d8c88541a7317ee543f7ed07354d4b91b641166ee3db2160e44a'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:43:19.2479399Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.707",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9bda40f596a8f8648c218b23e552acf9498c039eb0a48c222cfcd5a9af9e841",
                    "sha256:c4d2c4780b4ea432c5cced8561e471e767db039680b4ae9fe57ac61d8cc208a8",
                    "sha256:94f232ed270f6eada147324b6e7af0608abc7d026cfe329f8145b05e72efd9eb",
                    "sha256:9f83517dde23dc36cb7000f6a3f0f4600808f3962ef7232d41154f5c8604c20f",
                    "sha256:d12e732b55a99db4e493e0901ea5c8d46f8fcde406191842eaee113976696a7d",
                    "sha256:dd53578ca6ffdc6a08ae4b0acc9332909b8b05454555bfc6bcc20715e14d467b",
                    "sha256:94d74e3b919b40aa7e6728161c9a0bb67acf51a209254214a15eccc69c51a209",
                    "sha256:71d462665c703ddeb331ddf460a6cf03a4c6d80584639a3be38bf82b28f4e0c0",
                    "sha256:1fcfd7e9ca13c3241b8ace63ba1a9a36699cd18f70d485affc4f2ea0f041f335",
                    "sha256:d809aa3083d049854d624058cf1c75948c742da10d2dade9bdab4babe2347eff",
                    "sha256:87634523676c05754d49dfed81a19a12d3cd87325a3770ac7c3d574153ac8878",
                    "sha256:f8dcb617763310ff02f242b3dbe858c888ecaa7aff3b783bc85476db68be5565",
                    "sha256:ee11109bb1d336fd6e27ba62071e6eb4c42724d9a4ee041973c7b2aee7e4a0be"
                ]
            }
        },
        "1.17.10-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a0c01de765ee5dbf1b83d761a06b615f2c1f4167a1a34c4af1a6be9d2666073d",
            "container_config": {
                "Hostname": "a0c01de765ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:aee5ef1bdccea77c99f23f0811347a7083bf2f369c96f211687713d543497920",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:27.509516388Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:58.973942752Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:59.817699697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:00.70546203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:22.117529259Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:23.562027721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.765388023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:26.353916915Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:27.509516388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:8231b456a6bec0e2d4eb51adfbef6a21be671b7c956f1cdff5362f3f3b3f0a23",
                    "sha256:40c1ffa9aa15f08b31f7ac323ab64687f5b8bfa1eb6ef1c350cdc9b5d2ff4d9c",
                    "sha256:1118485030f5e521f2c2210299eda5cb17e74cdc1cc65a2ead709795041e4fde"
                ]
            }
        },
        "1.17.10-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:624a0890b44dfe6d36fca3487a37f855ee70d1337009e5f2ec85fe3047b5a0d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "29673849cab06d9c2f296f08f76366825bb25ad4076e49829f97f1af80fa4c5d",
            "container_config": {
                "Hostname": "29673849cab0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:624a0890b44dfe6d36fca3487a37f855ee70d1337009e5f2ec85fe3047b5a0d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:13.875114394Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:26.329235418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54d60144d251caa916ff50606bc2364131d47d6b10ed83d08c81c647ab56cc40 in / "
                },
                {
                    "created": "2022-05-11T01:20:26.817731753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:50:23.11692482Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:50:28.365870038Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:50:43.421251262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:47.195678375Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:48.067756494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:34:48.800579651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:08.224823464Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:09.789447295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:11.013878184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:12.621519283Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:13.875114394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f70b727d55c3bf3e37ab16d9d40bc5f5dd209f01a5514af0146547d3f3eaca60",
                    "sha256:7ae08394a32ad3980fc0863f492f8dc720c5169d94c10ad4fdfefc76b68bf23e",
                    "sha256:58b24c6222e3b3d7fdfebbffbce6c4eb14de8abf92a99710ee5cf2dc76e3204c",
                    "sha256:74f08751ac3feff0f5e89a91b43ec8a6949c90db328bb788695743cc20e0594e",
                    "sha256:3bc2a47ae50e4058dc8daadd5e1caeb2e9604556b63fc12845c4c3f543e5c94f",
                    "sha256:131e4fe73abd42cf5a67b1f6ac0e8d8dd4403a06e3516ea1eb0cbd18ee0b53e6",
                    "sha256:1be4280812a948eaeb1e4fa421c3c383eae062c8424f7c8336b769b68d7bc280"
                ]
            }
        },
        "1.17.10-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "61a46b6633f8cb0dc8e0386aaca0749f80bdf7d780fc335c048f6b680a4fdda1",
            "container_config": {
                "Hostname": "61a46b6633f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:24.193322731Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:39.519854118Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:40.158637795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:40.647673294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:19.669955142Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-amd64.tar.gz'; \t\t\tsha256='36306bf424fa76d87bc9a90f29482dd66b24d1fa72aebad061d02e37e47402e9'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-arm64.tar.gz'; \t\t\tsha256='76dab4b2c74075db074095e71b8d75a6f11187374a542e5e48e7d98ec37c8d4a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:20.917956483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:21.920799979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:23.266739238Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:24.193322731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:4cd35749f1ff55e8ca9b29c0f0e64d20916081dbe1f55af11b21810d27eb92b6",
                    "sha256:c6fe64f80c44ddc5e523f241030478fab3e66e3ef5613c1e94d6433a1b875f26",
                    "sha256:58bb2c86ac06ffd3e43da0e17fa9514890943d0b6ff3a024f58aa19f670cfff4"
                ]
            }
        },
        "1.17.10-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "61a46b6633f8cb0dc8e0386aaca0749f80bdf7d780fc335c048f6b680a4fdda1",
            "container_config": {
                "Hostname": "61a46b6633f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6205f15a42d9ed24a87530263621dcd0a0a86fad29d71534b1a8b0f6b5c95f1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:24.193322731Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:39.519854118Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:40.158637795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:40.647673294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:19.669955142Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-amd64.tar.gz'; \t\t\tsha256='36306bf424fa76d87bc9a90f29482dd66b24d1fa72aebad061d02e37e47402e9'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220510.5/go.20220510.5.linux-arm64.tar.gz'; \t\t\tsha256='76dab4b2c74075db074095e71b8d75a6f11187374a542e5e48e7d98ec37c8d4a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:20.917956483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:21.920799979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:23.266739238Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:24.193322731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:4cd35749f1ff55e8ca9b29c0f0e64d20916081dbe1f55af11b21810d27eb92b6",
                    "sha256:c6fe64f80c44ddc5e523f241030478fab3e66e3ef5613c1e94d6433a1b875f26",
                    "sha256:58bb2c86ac06ffd3e43da0e17fa9514890943d0b6ff3a024f58aa19f670cfff4"
                ]
            }
        },
        "1.17.10-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:83ddeb7bba355ad6a95c5519dded131b46bce539f589b58047c5bfc4c7764333",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b953592bbbb0508baa82fe0023aea7cdf092a6a7201a8cf99d7ae25a78cf977",
            "container_config": {
                "Hostname": "3b953592bbbb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:83ddeb7bba355ad6a95c5519dded131b46bce539f589b58047c5bfc4c7764333",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:39.108305615Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:22:05.01919771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00f57642edc8479d50e6470a3509ad679eb9353761912deade33251fb3d9daa8 in / "
                },
                {
                    "created": "2022-05-11T01:22:05.440894091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:53:15.002335304Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:53:19.561223483Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:53:39.189232047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:07.448100775Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:08.429352327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:09.356948515Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.10",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.539010122Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-amd64.tar.gz'; \t\t\tsha256='a02c1ccce7c2741334cc21568d7b35e2d7c1ba29ed461b813abc3eb448b24706'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-armv6l.tar.gz'; \t\t\tsha256='b453e7c24e09f3f1297d2622ff3fb85cc3374b324eea8ad267cbde91194bf5c3'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220510.2/go.20220510.2.linux-arm64.tar.gz'; \t\t\tsha256='04cc72e49526f073be32034ad88ecefc363f0fbe61b1c9f564636263386015b7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:34.397633402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:35.842268024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:37.713873496Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:39.108305615Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:05c492a3d5e99724a697838cea48a423dace2099791aae4c2d7cdc0f61222107",
                    "sha256:6c64c31a187c2b4d67a1f0055f46ef95f65f7cf85ceedf20c59abecd77c8293f",
                    "sha256:5f9553657987b7f7aa1f8797dd5ee18ad45d9f758d2e0420929235ff33a32a08",
                    "sha256:329c9d2dc466b49078e9c71bdc5925632ba8eebcb42bd0439e8bc5e84f238d95",
                    "sha256:711000cd232dc6d58ce0ae56bcfdf6abd5594cb69112844fd5f063483e9603c6",
                    "sha256:2e6aaf7264855f7dca76e337d3395b8b5df07ab600a8673f9c805b1c7afd861e",
                    "sha256:8f0d2a9882c0fdabd869835c2102720aad5d5a7bb0b83d1b510d02006b4e9a39"
                ]
            }
        },
        "1.17.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a68d2636803ca7492a58c371b10452022789b40d8a782d5397197d32a88b94e2",
            "container_config": {
                "Hostname": "a68d2636803c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:05.85183508Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:12.062645086Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dd3d4b31d7f1d4062ad0eb2d85dba064cea067b1eb4a8b89a0b593ea90001cdf in / "
                },
                {
                    "created": "2022-05-28T01:20:12.59253565Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:40:40.438417221Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:40:45.818819019Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:41:01.874587144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:31.537376417Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:32.289077189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.942482869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.900579576Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:02.25189041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:03.313564637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:04.779613387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:05.85183508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e7597c345c2eb11bce09b055d7c167c526077d7c65f69a7f3c6150ffe3f557ea",
                    "sha256:7dbadf2b9bd82a7447533776d0c8de6687cfcf241d3aa993ed8a86ad1347c6e0",
                    "sha256:9177197c67d08b25357b0b5ba8f7b944f321970dddbbe93b36cb726e9bdfd678",
                    "sha256:ee509ed6e976cdad5adda963902f78e442ea5fc05f955bd2c2c9026789f84b42",
                    "sha256:8da71e3ccb7d12a9b2504cb167b31af3d23c294ecb7e826f7ccde57913f817b0",
                    "sha256:2641fed85d736f654e69060c2b469de2355a029ac780af9979eae0a294da9ac6",
                    "sha256:0054004ee7a16c544c1587124833dcc75a411e88b19fa7e93e2ec1baa61b9fc9"
                ]
            }
        },
        "1.17.11-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a68d2636803ca7492a58c371b10452022789b40d8a782d5397197d32a88b94e2",
            "container_config": {
                "Hostname": "a68d2636803c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:05.85183508Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:12.062645086Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dd3d4b31d7f1d4062ad0eb2d85dba064cea067b1eb4a8b89a0b593ea90001cdf in / "
                },
                {
                    "created": "2022-05-28T01:20:12.59253565Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:40:40.438417221Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:40:45.818819019Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:41:01.874587144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:31.537376417Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:32.289077189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.942482869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.900579576Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:02.25189041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:03.313564637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:04.779613387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:05.85183508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e7597c345c2eb11bce09b055d7c167c526077d7c65f69a7f3c6150ffe3f557ea",
                    "sha256:7dbadf2b9bd82a7447533776d0c8de6687cfcf241d3aa993ed8a86ad1347c6e0",
                    "sha256:9177197c67d08b25357b0b5ba8f7b944f321970dddbbe93b36cb726e9bdfd678",
                    "sha256:ee509ed6e976cdad5adda963902f78e442ea5fc05f955bd2c2c9026789f84b42",
                    "sha256:8da71e3ccb7d12a9b2504cb167b31af3d23c294ecb7e826f7ccde57913f817b0",
                    "sha256:2641fed85d736f654e69060c2b469de2355a029ac780af9979eae0a294da9ac6",
                    "sha256:0054004ee7a16c544c1587124833dcc75a411e88b19fa7e93e2ec1baa61b9fc9"
                ]
            }
        },
        "1.17.11-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a68d2636803ca7492a58c371b10452022789b40d8a782d5397197d32a88b94e2",
            "container_config": {
                "Hostname": "a68d2636803c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:05.85183508Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:12.062645086Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dd3d4b31d7f1d4062ad0eb2d85dba064cea067b1eb4a8b89a0b593ea90001cdf in / "
                },
                {
                    "created": "2022-05-28T01:20:12.59253565Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:40:40.438417221Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:40:45.818819019Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:41:01.874587144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:31.537376417Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:32.289077189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.942482869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.900579576Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:02.25189041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:03.313564637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:04.779613387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:05.85183508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e7597c345c2eb11bce09b055d7c167c526077d7c65f69a7f3c6150ffe3f557ea",
                    "sha256:7dbadf2b9bd82a7447533776d0c8de6687cfcf241d3aa993ed8a86ad1347c6e0",
                    "sha256:9177197c67d08b25357b0b5ba8f7b944f321970dddbbe93b36cb726e9bdfd678",
                    "sha256:ee509ed6e976cdad5adda963902f78e442ea5fc05f955bd2c2c9026789f84b42",
                    "sha256:8da71e3ccb7d12a9b2504cb167b31af3d23c294ecb7e826f7ccde57913f817b0",
                    "sha256:2641fed85d736f654e69060c2b469de2355a029ac780af9979eae0a294da9ac6",
                    "sha256:0054004ee7a16c544c1587124833dcc75a411e88b19fa7e93e2ec1baa61b9fc9"
                ]
            }
        },
        "1.17.11-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a68d2636803ca7492a58c371b10452022789b40d8a782d5397197d32a88b94e2",
            "container_config": {
                "Hostname": "a68d2636803c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:05.85183508Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:12.062645086Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dd3d4b31d7f1d4062ad0eb2d85dba064cea067b1eb4a8b89a0b593ea90001cdf in / "
                },
                {
                    "created": "2022-05-28T01:20:12.59253565Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:40:40.438417221Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:40:45.818819019Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:41:01.874587144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:31.537376417Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:32.289077189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.942482869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.900579576Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:02.25189041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:03.313564637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:04.779613387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:05.85183508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e7597c345c2eb11bce09b055d7c167c526077d7c65f69a7f3c6150ffe3f557ea",
                    "sha256:7dbadf2b9bd82a7447533776d0c8de6687cfcf241d3aa993ed8a86ad1347c6e0",
                    "sha256:9177197c67d08b25357b0b5ba8f7b944f321970dddbbe93b36cb726e9bdfd678",
                    "sha256:ee509ed6e976cdad5adda963902f78e442ea5fc05f955bd2c2c9026789f84b42",
                    "sha256:8da71e3ccb7d12a9b2504cb167b31af3d23c294ecb7e826f7ccde57913f817b0",
                    "sha256:2641fed85d736f654e69060c2b469de2355a029ac780af9979eae0a294da9ac6",
                    "sha256:0054004ee7a16c544c1587124833dcc75a411e88b19fa7e93e2ec1baa61b9fc9"
                ]
            }
        },
        "1.17.11-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0c37bbe5c9579673b3e5b4a0bfe446b38a600192622b686b72999d0dfbf54825",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dd6b8ade02c7273948c3c853515d1dcaf6f5aa30c957599fad502efd3fc1cd4f",
            "container_config": {
                "Hostname": "dd6b8ade02c7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0c37bbe5c9579673b3e5b4a0bfe446b38a600192622b686b72999d0dfbf54825",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:57.435394884Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-28T00:59:10.336579399Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:faa82773e36b14c218e792730b0264c016864613a8d43cfaa33864075b0ef169 in / "
                },
                {
                    "created": "2022-05-28T00:59:11.353702814Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:42:25.735538433Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:42:39.550917638Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:43:31.348824848Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:28.823687166Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:29.93412383Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:31.127873307Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:49.831138745Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:51.687035698Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:53.076453872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:56.015094765Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:57.435394884Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0687017fa1b674f76db150a3f6bd3d3bde1e3ebcca4e0a82de8be35ad9aa96fc",
                    "sha256:ed7feb88ad9b102e2a451b2a0c7422e024de59921e59d732065935c6c1c22f0f",
                    "sha256:e0000eb57f9a3b564dbead3110843ecd98e74d43d1d1f3f3b14e2d1ad97f6931",
                    "sha256:776a18b133605ca7a86af4288b5590f1d45bb26c0b4f25a265295329b0814535",
                    "sha256:da886859236abefd507a23bb8e039a8fa123a1cd36c53fb3077ff66c64d32c49",
                    "sha256:dba0c30540e4c47c95457b0234dbea458e3a618b043075026bfa4d2e4341c953",
                    "sha256:c2eecc6a508aac51495843112666cc80759f1a34531dc3e212d9bcae2e5a80e0"
                ]
            },
            "variant": "v7"
        },
        "1.17.11-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9c99c42501e9899bdd68f4dbd2325fc98a0e29a0dcfd9277e0a9fee49d08556a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f780acf6de790d831ed14d0183f7b9144a66c442dd995f77509a6e444d12986d",
            "container_config": {
                "Hostname": "f780acf6de79",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9c99c42501e9899bdd68f4dbd2325fc98a0e29a0dcfd9277e0a9fee49d08556a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:36:06.599788063Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-28T00:40:23.797267605Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a78273677555ebe8bac187f491203093eec62fa1c4f65f00ba2cf0cc2230992f in / "
                },
                {
                    "created": "2022-05-28T00:40:24.994098499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:05:20.02230564Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:05:26.203285789Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T11:05:45.699985823Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:39.200539757Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:40.599991378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:42.40454405Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:59.956193782Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:36:01.604535808Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:36:03.156634554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:36:05.159511331Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:36:06.599788063Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b7f722da8591c8589528dabc50d51d22be32e1dd79cf64f200a58162fc949de",
                    "sha256:970c32ef1726b1309c8628d94b19c429bf82f00f1bf733bc50b0dde5081eaee1",
                    "sha256:e834f49798fe8742a26c2a0a48afb18eb27375ff871fe04c2698e923dbddf695",
                    "sha256:8bae846f5c79522c4e5cb74d05a07bee12fa4648a45eb404bf72d3aa63b875ef",
                    "sha256:faf03440077b4ebf2aa4d2ecd424b1e2f94389c4272592e293648afa964aeae7",
                    "sha256:0b41306e9255fdc2efd1f7d876a76bada9d1f6d424257dba914d7b6cbbfcc787",
                    "sha256:b1b45b7db3f494a9609d6f4b7b08b8b22b0cc0b0539ca02ba6f0673247ea91aa"
                ]
            },
            "variant": "v8"
        },
        "1.17.11-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e871d9044e9429ed69f888b9b05bef3415b76cd25e3083bfda0987171fe147c1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26f10152b90650af332da17193b8f53741e595687c79fff5c82dec320a4661dc",
            "container_config": {
                "Hostname": "26f10152b906",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e871d9044e9429ed69f888b9b05bef3415b76cd25e3083bfda0987171fe147c1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:34:05.364142377Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:32.737327065Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c5cde050dbdbd5c7c0d9c723f436d37ab4a8b1a498647a719771eccce99d9cb in / "
                },
                {
                    "created": "2022-05-28T01:20:33.261352775Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:42:00.619183077Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:42:06.02230496Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:42:22.794809262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:33:38.766854201Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:33:39.490152351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:33:40.085981134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:00.779301006Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:02.022887333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:03.002501455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:04.361517337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:34:05.364142377Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f14da82c36e2e3bf6a7aaf7b88aae73135408f79738e5be67a1c8a6d7f6590d3",
                    "sha256:8f534d0617ce604708aedf9d1cc81ae4ab4550d187b30893fe0fa7c189ac3992",
                    "sha256:597ea5af36e632218c502db3a886cd35daa8fd24c80791d93edb14cad1c64b98",
                    "sha256:80d46995af064327f2bc6608be228799df299f52806109350fdedb6dbc417457",
                    "sha256:6211fd692a765c8e11fdeda156746fee4fed0ad9449f16785b68fe25dec66f4d",
                    "sha256:7a09f8f6b57f0f1c94784a139fad969107939adb179108912b23909490f9f1e1",
                    "sha256:066d93e13078d8c95890b888b094169c5b92a14875cb3cd5033e5f0ca5427634"
                ]
            }
        },
        "1.17.11-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e871d9044e9429ed69f888b9b05bef3415b76cd25e3083bfda0987171fe147c1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26f10152b90650af332da17193b8f53741e595687c79fff5c82dec320a4661dc",
            "container_config": {
                "Hostname": "26f10152b906",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e871d9044e9429ed69f888b9b05bef3415b76cd25e3083bfda0987171fe147c1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:34:05.364142377Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:32.737327065Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c5cde050dbdbd5c7c0d9c723f436d37ab4a8b1a498647a719771eccce99d9cb in / "
                },
                {
                    "created": "2022-05-28T01:20:33.261352775Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:42:00.619183077Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:42:06.02230496Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:42:22.794809262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:33:38.766854201Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:33:39.490152351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:33:40.085981134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:00.779301006Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:02.022887333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:03.002501455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:04.361517337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:34:05.364142377Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f14da82c36e2e3bf6a7aaf7b88aae73135408f79738e5be67a1c8a6d7f6590d3",
                    "sha256:8f534d0617ce604708aedf9d1cc81ae4ab4550d187b30893fe0fa7c189ac3992",
                    "sha256:597ea5af36e632218c502db3a886cd35daa8fd24c80791d93edb14cad1c64b98",
                    "sha256:80d46995af064327f2bc6608be228799df299f52806109350fdedb6dbc417457",
                    "sha256:6211fd692a765c8e11fdeda156746fee4fed0ad9449f16785b68fe25dec66f4d",
                    "sha256:7a09f8f6b57f0f1c94784a139fad969107939adb179108912b23909490f9f1e1",
                    "sha256:066d93e13078d8c95890b888b094169c5b92a14875cb3cd5033e5f0ca5427634"
                ]
            }
        },
        "1.17.11-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:78effc37295150d1a6ab21858a058b557bca8ebade0e4c96f81ba01e2d540d77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ec980cbbc0884444cb7b9e4b10cba9a71a697a99014e1a3e16b3909725859ee5",
            "container_config": {
                "Hostname": "ec980cbbc088",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:78effc37295150d1a6ab21858a058b557bca8ebade0e4c96f81ba01e2d540d77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:36:02.158262571Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-28T01:00:18.871282356Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c8ac0c219015f8fbf065e01216d362016d6068cb4e73ea6f0a56893c235a2a7 in / "
                },
                {
                    "created": "2022-05-28T01:00:20.182886355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:46:10.583449321Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:46:24.203192173Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:47:19.062009969Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:33.163892664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:34.658340448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:36.056107851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:54.287160722Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:57.608966565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:58.854543257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:36:00.763589777Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:36:02.158262571Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7f9c9e62708db8b874b6f564302870b223525c1ff656bc5e7e251cd0f474f557",
                    "sha256:9fc2fa10dba125482b7a905c61386299735054eebfc6d6ed9d1c75f5c1e33094",
                    "sha256:506166c0acf1d04b09642ddaef2daede579c8df5bbd1c72c16b75854c952c20c",
                    "sha256:8255eb8655a333b8a33ec977414e1bd53325e5ed9466b92f94f6d07e4988b967",
                    "sha256:e67423130cad0a5e2265094e9611f61142a980f49f8107b3404b755e49b80f0b",
                    "sha256:f4796a8dee1e919ca68dfcae6862cc20ce5cc98fa90cf8c2b5f5be698f25a93e",
                    "sha256:9252e93afc41edb383b0386e108224726b155e0b5c0f86d2e745fc1321b00a52"
                ]
            },
            "variant": "v7"
        },
        "1.17.11-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cf0409d30738ebfcab4ab1c1b219719a07ac5fdcc9318a0c31c395c22b62ea9e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b215a21ae53cc8b8538148394041ab16b421c1d957616142dfd5f2dccbc0d82",
            "container_config": {
                "Hostname": "2b215a21ae53",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cf0409d30738ebfcab4ab1c1b219719a07ac5fdcc9318a0c31c395c22b62ea9e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:36:11.333762204Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-28T00:40:49.710541013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af879be34a7eccc177a3000eb8c45d5207bfbec108caf9be9d11c1a6620c376c in / "
                },
                {
                    "created": "2022-05-28T00:40:51.028754178Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:07:17.927119869Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:07:24.083096227Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T11:07:44.53539968Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:44.836086692Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:46.278816288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:47.27403347Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:36:04.836022772Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:36:06.436195113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:36:07.838480274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:36:09.870986931Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:36:11.333762204Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4159ca02d449452539df9f5c19c765f371ed5cd31b478a09900938a514b18ddf",
                    "sha256:a1d3c2f64131c17ed9543dbc40c34232a60bccaa4f275e14ca94228d031ad767",
                    "sha256:7457064f9b3004f7dfd1e1e520e81867bfed78cabe90f1b54a4c854240b021e7",
                    "sha256:e279551d21dadf2666423d5a1a06b9baabd58efc7ff71be174fda5bfbbe0f9ae",
                    "sha256:339c55dc2aecf6e760a422156e2f0c96470a5ff502249861e457fcb5f1d957f2",
                    "sha256:5e3acabb6382b39abb043e13f5ca62a36ee6aa3f64ef19b5458fcf71b5ffa72e",
                    "sha256:ce4f0f0f66463cdc3ffcfd38738cccb77c6c33350d2d971874c87b92b21e8a56"
                ]
            },
            "variant": "v8"
        },
        "1.17.11-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e18c903061e6607bc4b5620c1e717121dccf8084032364713b2ad1a1146dfd30",
            "container_config": {
                "Hostname": "e18c903061e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:02.028923398Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-01T18:55:58.689927364Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-02T22:34:34.492374307Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-02T22:34:35.349309108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:35.973278368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:56.892775587Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:58.314384932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:59.4315046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.9407196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:02.028923398Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdb8678334ee772da0e397e8cad448055c5377f6dddfc4c9d18cb46ffdfba74a",
                    "sha256:65df094706df622770d751166e5a9932ec5d62b0f80564d674b2214c2d6b8d3e",
                    "sha256:ba6f5b094f6e0135c3b04ded69ba28c2714f579e9f7d6f0a85cb501477a6c4e8",
                    "sha256:94546795258d043923a89b6fbcaf85bda26421fe36bc55347467a85b684f6f8d"
                ]
            }
        },
        "1.17.11-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e18c903061e6607bc4b5620c1e717121dccf8084032364713b2ad1a1146dfd30",
            "container_config": {
                "Hostname": "e18c903061e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:02.028923398Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-01T18:55:58.689927364Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-02T22:34:34.492374307Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-02T22:34:35.349309108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:35.973278368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:56.892775587Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:58.314384932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:59.4315046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.9407196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:02.028923398Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdb8678334ee772da0e397e8cad448055c5377f6dddfc4c9d18cb46ffdfba74a",
                    "sha256:65df094706df622770d751166e5a9932ec5d62b0f80564d674b2214c2d6b8d3e",
                    "sha256:ba6f5b094f6e0135c3b04ded69ba28c2714f579e9f7d6f0a85cb501477a6c4e8",
                    "sha256:94546795258d043923a89b6fbcaf85bda26421fe36bc55347467a85b684f6f8d"
                ]
            }
        },
        "1.17.11-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e18c903061e6607bc4b5620c1e717121dccf8084032364713b2ad1a1146dfd30",
            "container_config": {
                "Hostname": "e18c903061e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:02.028923398Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-01T18:55:58.689927364Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-02T22:34:34.492374307Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-02T22:34:35.349309108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:35.973278368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:56.892775587Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:58.314384932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:59.4315046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.9407196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:02.028923398Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdb8678334ee772da0e397e8cad448055c5377f6dddfc4c9d18cb46ffdfba74a",
                    "sha256:65df094706df622770d751166e5a9932ec5d62b0f80564d674b2214c2d6b8d3e",
                    "sha256:ba6f5b094f6e0135c3b04ded69ba28c2714f579e9f7d6f0a85cb501477a6c4e8",
                    "sha256:94546795258d043923a89b6fbcaf85bda26421fe36bc55347467a85b684f6f8d"
                ]
            }
        },
        "1.17.11-1-fips-cbl-mariner1.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:575983733f805ec97c233aec62f2553a4470a837ea153130f2ddf72d6711fb7e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "50f0952c0d74ef4d34619725930055663e37995c486b4ee0d9a35eeec21b1ee8",
            "container_config": {
                "Hostname": "50f0952c0d74",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:575983733f805ec97c233aec62f2553a4470a837ea153130f2ddf72d6711fb7e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:37:55.60755475Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-01T18:52:51.369365536Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-02T22:37:28.605820582Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-02T22:37:31.153945518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:37:31.959910262Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:37:49.458496463Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:37:50.908790595Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:37:52.468893818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:37:54.408031557Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:37:55.60755475Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9e617955c14290eb89de66e8d5e26700cf14dd540b2387245bf30239bb154a3",
                    "sha256:baa1b421ad35bdf0446e42212960bdf90c4fbd8e98db1ba81bb76c4c8d70ae6b",
                    "sha256:7f41974dccbfc9897867ce2a4bb4622ea51570017ba5b9aff208601f536b6bb4",
                    "sha256:fa302bb7da5aa000c326b5331535bebbdff38c0d85be1d49f568d01b417e6f85"
                ]
            }
        },
        "1.17.11-1-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:64e8fb1bbc138e6feeb7ba4a9bfa145dcfe79f4bc1370cddc96db5544ba4707a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f64ea6b193a48277944bfbc87325bdad6f4d9748f5254befc22ac801c35375a6",
            "container_config": {
                "Hostname": "f64ea6b193a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:64e8fb1bbc138e6feeb7ba4a9bfa145dcfe79f4bc1370cddc96db5544ba4707a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-10T19:58:30.636972702Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-03T22:03:06.539893344Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-10T19:58:03.149793945Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-10T19:58:03.848251671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:04.487959094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:26.181890889Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-10T19:58:27.439996269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:28.390108436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:29.708862429Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-10T19:58:30.636972702Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31bf26746e940f86e4cef2d890b8b90f5d3918137244e7f77e98c2faa2b72c01",
                    "sha256:94ccd37d8e5649b227884183454a7bf232bcd9c918acba6861926a09944fc51d",
                    "sha256:f7524f9a372e9f98ea519ea8c59469ed472786c33cf68d85afc000ecf1aa1910",
                    "sha256:9b2a173381c169ffde7a6f7423b52118eeb75767f27f66a2aa1e732678dee932"
                ]
            }
        },
        "1.17.11-1-fips-cbl-mariner2.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:64e8fb1bbc138e6feeb7ba4a9bfa145dcfe79f4bc1370cddc96db5544ba4707a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f64ea6b193a48277944bfbc87325bdad6f4d9748f5254befc22ac801c35375a6",
            "container_config": {
                "Hostname": "f64ea6b193a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:64e8fb1bbc138e6feeb7ba4a9bfa145dcfe79f4bc1370cddc96db5544ba4707a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-10T19:58:30.636972702Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-03T22:03:06.539893344Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-10T19:58:03.149793945Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-10T19:58:03.848251671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:04.487959094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:26.181890889Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-10T19:58:27.439996269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:28.390108436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:29.708862429Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-10T19:58:30.636972702Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31bf26746e940f86e4cef2d890b8b90f5d3918137244e7f77e98c2faa2b72c01",
                    "sha256:94ccd37d8e5649b227884183454a7bf232bcd9c918acba6861926a09944fc51d",
                    "sha256:f7524f9a372e9f98ea519ea8c59469ed472786c33cf68d85afc000ecf1aa1910",
                    "sha256:9b2a173381c169ffde7a6f7423b52118eeb75767f27f66a2aa1e732678dee932"
                ]
            }
        },
        "1.17.11-1-fips-cbl-mariner2.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:c394174107244594833f31ba2fc88711a3bca9007748cc3336e1afff680f35e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0540af2a5e4682a051c7d7ecc4d5ff6fe1155e5f5959c2434975bc586885870d",
            "container_config": {
                "Hostname": "0540af2a5e46",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c394174107244594833f31ba2fc88711a3bca9007748cc3336e1afff680f35e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-10T20:04:07.465709555Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-03T22:00:38.480623368Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-10T20:02:07.119337319Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-10T20:02:16.947110112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T20:02:26.133069857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T20:03:20.68581978Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-10T20:03:30.969242325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T20:03:39.718884279Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T20:03:56.994228011Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-10T20:04:07.465709555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a31e3581495ea2b3fe3d00d86449533e78da4bbe72bfe80dd3c616dec112899c",
                    "sha256:9261e9c7c9d92e9c103f5589f6ebc47e4da8779af6cd78b2378919b380414a03",
                    "sha256:7faba98213140391ea372612fd2b702fab6496d6c7264b9e5eaf409ed71c8091",
                    "sha256:db5ef14988d9858b1e54023887fa51108c73fe0d74b85eb0dff7d526774a076a"
                ]
            }
        },
        "1.17.11-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:7ecb2102e327ef554402b794723e6da64524686d51773cecf6c965ca0791480c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "d76ba1b9fa8a7cfc9ca7a7e0be052a8d359074679837ac2c19f48a6c202e1b55",
            "container_config": {
                "Hostname": "d76ba1b9fa8a",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:7ecb2102e327ef554402b794723e6da64524686d51773cecf6c965ca0791480c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-06-02T22:35:19.0557338Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T16:42:43.3779926Z",
                    "created_by": "Apply image 10.0.17763.2928"
                },
                {
                    "created": "2022-06-02T22:34:26.7708985Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-06-02T22:34:27.2371248Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-06-02T22:34:27.6742058Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-06-02T22:34:29.0578094Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-06-02T22:34:29.7791335Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-06-02T22:34:30.2849041Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.11"
                },
                {
                    "created": "2022-06-02T22:35:16.7709424Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:5f4ea44118b7c8ee6daae2435afad1b397256063debc764d7337312a08a3b3c5 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-06-02T22:35:18.5200762Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-06-02T22:35:19.0557338Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2928",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a0d44e5352dcb84bca48b6ee3d30a9ec91b5e6eb6793747e06d2454d360a9338",
                    "sha256:b4b4c9dfc8718e260f8c080b922e4f56a0bb508303109b80b2aad754eb595357",
                    "sha256:a5426f5d4e674164908e89c05521d4a753afe583b4441693a3a303cef9fba022",
                    "sha256:23ceb1721755627c7360bd499b1e2ab8ed36a67ca78a21a17c58865d0b58f7ad",
                    "sha256:90a8f2f57571f15e544ed2172350581c9064f0001f75a54b290fa069c2c04b2a",
                    "sha256:449d0c8b0543b8737386ee7ec7207a21a71b3a944043583bf1a598c3cc49af36",
                    "sha256:0db8acb3357e60737bef59658c786d159413dea0a061764127312fc78531b6e2",
                    "sha256:008e00ec0ff62886495d0e6eebaac9b1f05ce1d02da25926f16afe1ca53fce85",
                    "sha256:24d4210a8f13c530c8ddfc1f442a44c82f14e1aa900c731c9cf00c9866ec22ac",
                    "sha256:753c003286d37fab1c60469a3e9faab837a1ee5d55265d722f7d43bc356bd5a2"
                ]
            }
        },
        "1.17.11-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:bbfe49332b51eeb0eeca4b946507c6e0ba9cb51de4617d528960e646ce3e48a7",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "8744a4a7c7922e94baa501a5127bf3405249e20b063dfd4bb019a159bd8e8247",
            "container_config": {
                "Hostname": "8744a4a7c792",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:bbfe49332b51eeb0eeca4b946507c6e0ba9cb51de4617d528960e646ce3e48a7",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-06-02T22:54:22.0920169Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T02:37:33.5903831Z",
                    "created_by": "Apply image 10.0.20348.707"
                },
                {
                    "created": "2022-06-02T22:52:58.2164453Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-06-02T22:52:58.5426611Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-06-02T22:52:58.8353692Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-06-02T22:53:02.8797909Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-06-02T22:53:03.4751922Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-06-02T22:53:03.8661859Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.11"
                },
                {
                    "created": "2022-06-02T22:54:16.0567467Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:5f4ea44118b7c8ee6daae2435afad1b397256063debc764d7337312a08a3b3c5 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-06-02T22:54:21.545632Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-06-02T22:54:22.0920169Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.707",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:26085ddda8400952278f21eda4de3abb08e6e2b02afaddd77d1dab2b2a3f7c70",
                    "sha256:82fbc34245904dabe69e2cba88c1310d542b2507c975a8f1bf7316117ad6d2e0",
                    "sha256:f08505d37d91f7a4ab0106194d0930c314d252820b0a399b1cf9577f578b7bf7",
                    "sha256:3d376106826b4107c814baf3837c5bee9ff93d28ad53dc8a64532a5484281b49",
                    "sha256:0054fe405cf406e862ed4fa163e548044899ab678f22a9527a0629f18c7a5e08",
                    "sha256:2ea71c8fc2340147a1f4d53582a4885100e3892ad5a9927f87329b482a2f14b3",
                    "sha256:9c3f313ad8a2dc4062ec820324a4f68094f5b4d251d39d0294e9d36ec18affea",
                    "sha256:6a2ed0472b5e984982e2bf067367abba1bba534901a9d141b3866fc600006f87",
                    "sha256:2cb96564b26af3615d62f123eb66562d128e9b6dcb187431e9dd1295ac28cca6",
                    "sha256:f35aa75f41ff428a333c1ee99ddb527e6903f6906f015a4206ffe85fc472e1ea"
                ]
            }
        },
        "1.17.11-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:312e8a4a3e97d1cd500bc5e02f1bec13bb819c81cb36fdffdf7116e50def3c92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "36573d46a6567e272fa0fd945613a3afb61bf6457d6b8eace273ee4cbca3cfa8",
            "container_config": {
                "Hostname": "36573d46a656",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:312e8a4a3e97d1cd500bc5e02f1bec13bb819c81cb36fdffdf7116e50def3c92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:34:35.439939362Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:22:09.619243244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba5db69738244d00088ef591ca43fa8b3189e78fba56bc69b70a232e6f04c7e4 in / "
                },
                {
                    "created": "2022-05-28T01:22:10.021237726Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:44:56.361595188Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:45:00.925603259Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:45:19.121869693Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:05.030014032Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:05.834506053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:06.661879105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:30.186880848Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:31.612286619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.757438378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:34.308369773Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:34:35.439939362Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f52e05ae36a391714a4ee9c6ae55720fba5d1c72a74b94782ec330412849a73e",
                    "sha256:928f399cab6be27f5675b19d454a4fa49bdf56b005d4df775722e5e01de2f2eb",
                    "sha256:4010eb7bba90b1fcae77eeb2f2f13f486373654635d270eb07322c8869063bbd",
                    "sha256:a672acde7cce560061631011fdb4a7b1548c7196badc598ef81a0aa45354cb95",
                    "sha256:341b0dbfd0e9179ced2741fbfd7144b6f351f4b6993218b0969e301c4c3f0be0",
                    "sha256:739b0b4e8cdd69d5b8c6e60cfb0a294facc75c5a7b0d45c38003e29471c75d66",
                    "sha256:7f01f022d98767d42c5bddcfc0d00d51e676b4125d0de85bc29e429dbfd975d8"
                ]
            }
        },
        "1.17.11-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:312e8a4a3e97d1cd500bc5e02f1bec13bb819c81cb36fdffdf7116e50def3c92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "36573d46a6567e272fa0fd945613a3afb61bf6457d6b8eace273ee4cbca3cfa8",
            "container_config": {
                "Hostname": "36573d46a656",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:312e8a4a3e97d1cd500bc5e02f1bec13bb819c81cb36fdffdf7116e50def3c92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:34:35.439939362Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:22:09.619243244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba5db69738244d00088ef591ca43fa8b3189e78fba56bc69b70a232e6f04c7e4 in / "
                },
                {
                    "created": "2022-05-28T01:22:10.021237726Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:44:56.361595188Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:45:00.925603259Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:45:19.121869693Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:05.030014032Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:05.834506053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:06.661879105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:30.186880848Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:31.612286619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.757438378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:34.308369773Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:34:35.439939362Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f52e05ae36a391714a4ee9c6ae55720fba5d1c72a74b94782ec330412849a73e",
                    "sha256:928f399cab6be27f5675b19d454a4fa49bdf56b005d4df775722e5e01de2f2eb",
                    "sha256:4010eb7bba90b1fcae77eeb2f2f13f486373654635d270eb07322c8869063bbd",
                    "sha256:a672acde7cce560061631011fdb4a7b1548c7196badc598ef81a0aa45354cb95",
                    "sha256:341b0dbfd0e9179ced2741fbfd7144b6f351f4b6993218b0969e301c4c3f0be0",
                    "sha256:739b0b4e8cdd69d5b8c6e60cfb0a294facc75c5a7b0d45c38003e29471c75d66",
                    "sha256:7f01f022d98767d42c5bddcfc0d00d51e676b4125d0de85bc29e429dbfd975d8"
                ]
            }
        },
        "1.17.11-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:00a0e80b22efb08218f434f992a9807da6c3ca7685f9b7e3419551ff715a31f6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2120012b782ed9b086aa85b04db4e5c9ab65f787bd41235c69c45c09c655e3f",
            "container_config": {
                "Hostname": "e2120012b782",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:00a0e80b22efb08218f434f992a9807da6c3ca7685f9b7e3419551ff715a31f6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:36:00.812439556Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-28T01:05:16.795888889Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f859825c79355490a08b5fd55799cc3eb1643e21abfeebe59a3a4b08e54e3f7f in / "
                },
                {
                    "created": "2022-05-28T01:05:17.729623392Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:54:26.851544371Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:54:38.9489294Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:55:31.496792037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:31.360729624Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:35:32.512258884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:33.616358668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:53.418696517Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:56.073533974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:57.404657149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:59.408172639Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:36:00.812439556Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:793994156cfd83dcea8f03d42400b91ad1fec54dea06af0223ceffdcff53806e",
                    "sha256:e2c920fd9c7528de7927a69d790cb53e586f9156299209df1127bffd2007aeee",
                    "sha256:175818a4b7e234113e60a14f2b013a8a0140c504dc0632362730d6b1ab495f6c",
                    "sha256:ae841a3929a99f6630cd08dac9d3e7e0297237b6971270c99ec0844bfe4301e8",
                    "sha256:4719dd307dd6cf97392988911b8cf9addbfaeaf79f2adc954db43a541d11f96a",
                    "sha256:ad5eeaf9042d44e7d63d85824f6a3148bd92b1d482a6d601802c3f485574b354",
                    "sha256:b828862799b0268a4400f8ed588111f402a5850fa2f897c3514a5cd0eb490aa6"
                ]
            },
            "variant": "v7"
        },
        "1.17.11-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d616befdb31a866e696f1ebca97f4698de7ccd5c41c01428db751f5b90da59b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "483d030cd3b6db4eb4f5620d039bd1c8096b852b3e349fc9ad02fb42b8b611b6",
            "container_config": {
                "Hostname": "483d030cd3b6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d616befdb31a866e696f1ebca97f4698de7ccd5c41c01428db751f5b90da59b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:38:05.602482274Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-28T00:42:45.681916728Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:93d675ee0bc32a88dc4d6c0872276c4678dc31f0b6eb8b936cb823f191bc07f0 in / "
                },
                {
                    "created": "2022-05-28T00:42:46.781163079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:10:55.375257819Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:11:00.682834788Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T11:11:25.18626084Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:37:38.258955277Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:37:39.468043397Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:37:40.407953838Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:37:59.609949401Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:38:01.058660716Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:38:02.320603258Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:38:04.257966372Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:38:05.602482274Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc4abfdee3661d101bdeaae74e9ed88f50e3d1b54eb49f5b46a7653b7d9acef8",
                    "sha256:a163a1500b5826d75209dc3e9da02c118f8b4c5a16d763add78e4361ef4dc2d2",
                    "sha256:bc5a9656da7746af1404e062b3863f4bc22a271451b70209cad0675e91015343",
                    "sha256:57519dc511a8c5241f75ee351afbb837f31d2ef302ed84490ff54083ab7264a7",
                    "sha256:e7220b0f4aabc4125804c28af0e2699880053e5d1832dafa9b1f710a88383372",
                    "sha256:5b016de1eea56f4bffcc432d2b979a9953e6519dc6997b324913f87af3c70d64",
                    "sha256:5647faef035851f7159c8a4231ffb905b218b4ac5af80e0e20bef8d6da801a31"
                ]
            },
            "variant": "v8"
        },
        "1.17.11-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:a4519b66e0f81e13323945b8dfa9c9dcb2e4639d7b986157164684a7baffd942",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "7de9e523fcbfcd808b04685e85b7450f67262fc526e8854ef50280991fdb51ab",
            "container_config": {
                "Hostname": "7de9e523fcbf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:a4519b66e0f81e13323945b8dfa9c9dcb2e4639d7b986157164684a7baffd942",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-06-02T22:34:26.2370412Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:27:13.2763402Z",
                    "created_by": "Apply image 10.0.17763.2803"
                },
                {
                    "created": "2022-05-05T17:03:24.9634109Z",
                    "created_by": "Install update 10.0.17763.2928"
                },
                {
                    "created": "2022-06-02T22:33:05.6683598Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-06-02T22:33:06.1300247Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-06-02T22:33:06.5973267Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-06-02T22:33:07.0907328Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-06-02T22:33:07.5542316Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-06-02T22:33:18.5469921Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-06-02T22:33:19.1505273Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-06-02T22:33:23.8556225Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-06-02T22:33:24.3374543Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.11"
                },
                {
                    "created": "2022-06-02T22:34:25.3632901Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'b253c252bf2fe33619fdc2d12630c8cd0ea2a26bf969b12520e9568747c78d99'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-06-02T22:34:26.2370412Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2928",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6fdd6832d95a5f537e0e7d87f2613ea9741ad9c20438b9d5a2697a883c4cd96",
                    "sha256:19d90b2bc7a17e712bc5028ff2b9169219fde003c778add8e96fc55292b63a87",
                    "sha256:f738de1c617378b65acdc08715dd4847f8c2b661824dad28e0bee6f13a385fd1",
                    "sha256:9c96a5f80d993583709597a5074f75aaf98b2662085044791d644b2139c47ec0",
                    "sha256:0fc3a22b67af193f56963ec827d47c73351888aebcc149f33c671a48043d103a",
                    "sha256:dc1fd5ceb4bc53cbe1625c5c07b9157a3df7622c8a1ac7e53bb95c10f0b6fe79",
                    "sha256:5654a87a867dfc897a56b5e3c28680337fdfc3631d6f1d16619081c651f2d395",
                    "sha256:7dd4bd88c6790c3fa00eba600daa1e538cf252b2532f656fc8c108f8e412bd7f",
                    "sha256:03642c7e4f77289606b2e96c0ff61ab53b476cdc08280c9ed79bb39fd2cbf9fa",
                    "sha256:fc255523140843a420a5c80cfaea46da6ba332013fc1058eec78526e5d558d95",
                    "sha256:ee3ad62a8439a59326c2d06c7d7f58ba825b5c5a0f2188ea2e535377ee1b1912",
                    "sha256:5462cba594203b15c2dabfb5e0ce99feff39da32fca59fd31054ec2c640d25ee",
                    "sha256:ee4266ad61ee23eb74ba93d9483c8fa86bd04e241055071aabdaae0685e6c39c"
                ]
            }
        },
        "1.17.11-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:844a8d5870a62c6133360c8a1283baca00b8309bcc5d8d24f1ca5aab34f82b7f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "53347c7fc3b0ff8d39444f5bd880f255a434016cb1fbfc45e881e94add13b515",
            "container_config": {
                "Hostname": "53347c7fc3b0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:844a8d5870a62c6133360c8a1283baca00b8309bcc5d8d24f1ca5aab34f82b7f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-06-02T22:57:21.9599403Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T02:36:40.2940142Z",
                    "created_by": "Apply image 10.0.14393.206"
                },
                {
                    "created": "2022-05-05T03:42:13.7748176Z",
                    "created_by": "Install update 10.0.14393.5125"
                },
                {
                    "created": "2022-06-02T22:51:16.3871558Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-06-02T22:51:18.2929355Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-06-02T22:51:20.0332709Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-06-02T22:51:21.8331744Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-06-02T22:51:23.7337263Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-06-02T22:52:22.0139731Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-06-02T22:52:24.8549629Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-06-02T22:52:51.3428839Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-06-02T22:52:53.5637317Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.11"
                },
                {
                    "created": "2022-06-02T22:57:18.1842969Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'b253c252bf2fe33619fdc2d12630c8cd0ea2a26bf969b12520e9568747c78d99'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-06-02T22:57:21.9599403Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5125",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:9f7d281f701e6f21614d8e0e7bbc08f5650c427949acbc81977689ab82763f30",
                    "sha256:fb1aac197d77ea3de5f751544b3ccecd7f6ceea3e198bb69681bae88527973fd",
                    "sha256:10283f5b7d72c6dcf4533dbaa0f6a9ed2e13f0e4ae16ce15f6a892523dfb8bdd",
                    "sha256:7876fcf38021aea0c010b6f15677184846006a54a4b3aa90f91723aafeb7e8a6",
                    "sha256:dd922f4e4c1dbd66875aa22b25efc3f2e1ad3bfe8f2288167747f7c3f5be485a",
                    "sha256:69e27d4a34a1cebfb6f1f0ce0e3ff4603676c72056afa9b7b7043ddf780b6f27",
                    "sha256:e8824ad6417da59218bbdc2ddea110883df03004ecfd5b3a5cb6ef87adac9dbf",
                    "sha256:aacef444235ea0e5a9202664552f6b21a53d1f139916d92a374652d76e66e584",
                    "sha256:b2e177f2bf5156ab0c9424d8df6712345e30e3fb8f90c84e8f1c137426ef3942",
                    "sha256:072924e2cbcaf3833859824eda3d300c45f0f977b41cd5161b0579456e21b46c",
                    "sha256:f41f772aa791da01b18c9f9b90377cd80ad09ae390d8c0fa0ae4326f849a178c",
                    "sha256:eee810908aca17037b53e37b80b6f1cac4ec2cc98f8a9d6e616e6e1807942ca4"
                ]
            }
        },
        "1.17.11-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:42f876597ce6e81b44c09e52dcfc30a510658e7c7c4d9317192a3a492feea1b0",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "b95e76a70584049020fd322ba4a086472231464053f47d38f496fb483e64246a",
            "container_config": {
                "Hostname": "b95e76a70584",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.11"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:42f876597ce6e81b44c09e52dcfc30a510658e7c7c4d9317192a3a492feea1b0",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-06-02T22:52:57.7046949Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:12:09.4542389Z",
                    "created_by": "Apply image 10.0.20348.643"
                },
                {
                    "created": "2022-05-05T03:02:27.4444987Z",
                    "created_by": "Install update 10.0.20348.707"
                },
                {
                    "created": "2022-06-02T22:42:24.8165738Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-06-02T22:42:25.3006058Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-06-02T22:42:26.4903618Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-06-02T22:42:27.0042229Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-06-02T22:42:27.4274123Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-06-02T22:50:50.394511Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-06-02T22:50:50.9078527Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-06-02T22:51:01.6798422Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-06-02T22:51:02.1802165Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.11"
                },
                {
                    "created": "2022-06-02T22:52:56.8866176Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'b253c252bf2fe33619fdc2d12630c8cd0ea2a26bf969b12520e9568747c78d99'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-06-02T22:52:57.7046949Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.707",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9bda40f596a8f8648c218b23e552acf9498c039eb0a48c222cfcd5a9af9e841",
                    "sha256:c4d2c4780b4ea432c5cced8561e471e767db039680b4ae9fe57ac61d8cc208a8",
                    "sha256:747f7f78247c6824031902d6eafb67d842ba8a7987a44e0dcfca3101ec9025fd",
                    "sha256:a7301b80071f848d7601bfc3e7a6014ac14a0ff4b772cd16bd1b2f9857e5c4ff",
                    "sha256:bd49c21424e891bc03c457873ea49694c60d86a65e8eb3de12c82a20137be620",
                    "sha256:052418c2c66e1f154199e8f90142ca026733f63690388c4daefb3179a5409f8e",
                    "sha256:7c10c1b4246bd30bf68dca865c62cb41ed7cba82b47c716b1f23e1317ae5fe50",
                    "sha256:0f2eb6fae95c703ef7370748fa450d21bb26413853760cd90c4c1f6593b101bb",
                    "sha256:fe85e6ddeb358821dd1f3b3dcbef3065738857416ec59b8716b875eaeb7dd083",
                    "sha256:ec4db64053812b37e1da4e4b95fe92c90ebc4c9501ffcb87402b8d1fe2fab21d",
                    "sha256:9bc0fc45e44f7738cf7ab1dbec6ba0a18b5f719c14835a21169c48a2cf0f2a25",
                    "sha256:8fe6ee44c703857c2ee3a62f64072e1e7c20393850b70f8d0f2b4d52a0df43ae",
                    "sha256:e896f1e8531d3e63d4d28aee0170d922548d58044301ffd32456ea57286e3944"
                ]
            }
        },
        "1.17.11-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a68d2636803ca7492a58c371b10452022789b40d8a782d5397197d32a88b94e2",
            "container_config": {
                "Hostname": "a68d2636803c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f537c59c9bb96e43cc273101636af51f776a59375f7aac7beb83cf4a0870ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:05.85183508Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:12.062645086Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dd3d4b31d7f1d4062ad0eb2d85dba064cea067b1eb4a8b89a0b593ea90001cdf in / "
                },
                {
                    "created": "2022-05-28T01:20:12.59253565Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:40:40.438417221Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:40:45.818819019Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:41:01.874587144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:31.537376417Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:32.289077189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.942482869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.900579576Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:35:02.25189041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:03.313564637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:04.779613387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:05.85183508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e7597c345c2eb11bce09b055d7c167c526077d7c65f69a7f3c6150ffe3f557ea",
                    "sha256:7dbadf2b9bd82a7447533776d0c8de6687cfcf241d3aa993ed8a86ad1347c6e0",
                    "sha256:9177197c67d08b25357b0b5ba8f7b944f321970dddbbe93b36cb726e9bdfd678",
                    "sha256:ee509ed6e976cdad5adda963902f78e442ea5fc05f955bd2c2c9026789f84b42",
                    "sha256:8da71e3ccb7d12a9b2504cb167b31af3d23c294ecb7e826f7ccde57913f817b0",
                    "sha256:2641fed85d736f654e69060c2b469de2355a029ac780af9979eae0a294da9ac6",
                    "sha256:0054004ee7a16c544c1587124833dcc75a411e88b19fa7e93e2ec1baa61b9fc9"
                ]
            }
        },
        "1.17.11-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e871d9044e9429ed69f888b9b05bef3415b76cd25e3083bfda0987171fe147c1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26f10152b90650af332da17193b8f53741e595687c79fff5c82dec320a4661dc",
            "container_config": {
                "Hostname": "26f10152b906",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e871d9044e9429ed69f888b9b05bef3415b76cd25e3083bfda0987171fe147c1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:34:05.364142377Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:20:32.737327065Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c5cde050dbdbd5c7c0d9c723f436d37ab4a8b1a498647a719771eccce99d9cb in / "
                },
                {
                    "created": "2022-05-28T01:20:33.261352775Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:42:00.619183077Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:42:06.02230496Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:42:22.794809262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:33:38.766854201Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:33:39.490152351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:33:40.085981134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:00.779301006Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:02.022887333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:03.002501455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:04.361517337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:34:05.364142377Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f14da82c36e2e3bf6a7aaf7b88aae73135408f79738e5be67a1c8a6d7f6590d3",
                    "sha256:8f534d0617ce604708aedf9d1cc81ae4ab4550d187b30893fe0fa7c189ac3992",
                    "sha256:597ea5af36e632218c502db3a886cd35daa8fd24c80791d93edb14cad1c64b98",
                    "sha256:80d46995af064327f2bc6608be228799df299f52806109350fdedb6dbc417457",
                    "sha256:6211fd692a765c8e11fdeda156746fee4fed0ad9449f16785b68fe25dec66f4d",
                    "sha256:7a09f8f6b57f0f1c94784a139fad969107939adb179108912b23909490f9f1e1",
                    "sha256:066d93e13078d8c95890b888b094169c5b92a14875cb3cd5033e5f0ca5427634"
                ]
            }
        },
        "1.17.11-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e18c903061e6607bc4b5620c1e717121dccf8084032364713b2ad1a1146dfd30",
            "container_config": {
                "Hostname": "e18c903061e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:02.028923398Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-01T18:55:58.689927364Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-02T22:34:34.492374307Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-02T22:34:35.349309108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:35.973278368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:56.892775587Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:58.314384932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:59.4315046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.9407196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:02.028923398Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdb8678334ee772da0e397e8cad448055c5377f6dddfc4c9d18cb46ffdfba74a",
                    "sha256:65df094706df622770d751166e5a9932ec5d62b0f80564d674b2214c2d6b8d3e",
                    "sha256:ba6f5b094f6e0135c3b04ded69ba28c2714f579e9f7d6f0a85cb501477a6c4e8",
                    "sha256:94546795258d043923a89b6fbcaf85bda26421fe36bc55347467a85b684f6f8d"
                ]
            }
        },
        "1.17.11-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e18c903061e6607bc4b5620c1e717121dccf8084032364713b2ad1a1146dfd30",
            "container_config": {
                "Hostname": "e18c903061e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ba9664bded6f1c07eeb4a3638b567fa5c0fa770f0e7822726a1c6b0f8303ee23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:35:02.028923398Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-01T18:55:58.689927364Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-02T22:34:34.492374307Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-02T22:34:35.349309108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:35.973278368Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:56.892775587Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:58.314384932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:59.4315046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:35:00.9407196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:35:02.028923398Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdb8678334ee772da0e397e8cad448055c5377f6dddfc4c9d18cb46ffdfba74a",
                    "sha256:65df094706df622770d751166e5a9932ec5d62b0f80564d674b2214c2d6b8d3e",
                    "sha256:ba6f5b094f6e0135c3b04ded69ba28c2714f579e9f7d6f0a85cb501477a6c4e8",
                    "sha256:94546795258d043923a89b6fbcaf85bda26421fe36bc55347467a85b684f6f8d"
                ]
            }
        },
        "1.17.11-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:64e8fb1bbc138e6feeb7ba4a9bfa145dcfe79f4bc1370cddc96db5544ba4707a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f64ea6b193a48277944bfbc87325bdad6f4d9748f5254befc22ac801c35375a6",
            "container_config": {
                "Hostname": "f64ea6b193a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:64e8fb1bbc138e6feeb7ba4a9bfa145dcfe79f4bc1370cddc96db5544ba4707a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-10T19:58:30.636972702Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-06-03T22:03:06.539893344Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-06-10T19:58:03.149793945Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-06-10T19:58:03.848251671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:04.487959094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:26.181890889Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-amd64.tar.gz'; \t\t\tsha256='20f5466978a739fb8c6672fedbd47ef1602511367860869915ebbdbdb0ded741'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220602.4/go.20220602.4.linux-arm64.tar.gz'; \t\t\tsha256='c2b392b9fe30ecef3d545b11cb4e7fafcf4c704fccab9e5fe67f7a40fc942e1c'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-10T19:58:27.439996269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:28.390108436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-10T19:58:29.708862429Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-10T19:58:30.636972702Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31bf26746e940f86e4cef2d890b8b90f5d3918137244e7f77e98c2faa2b72c01",
                    "sha256:94ccd37d8e5649b227884183454a7bf232bcd9c918acba6861926a09944fc51d",
                    "sha256:f7524f9a372e9f98ea519ea8c59469ed472786c33cf68d85afc000ecf1aa1910",
                    "sha256:9b2a173381c169ffde7a6f7423b52118eeb75767f27f66a2aa1e732678dee932"
                ]
            }
        },
        "1.17.11-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:312e8a4a3e97d1cd500bc5e02f1bec13bb819c81cb36fdffdf7116e50def3c92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "36573d46a6567e272fa0fd945613a3afb61bf6457d6b8eace273ee4cbca3cfa8",
            "container_config": {
                "Hostname": "36573d46a656",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:312e8a4a3e97d1cd500bc5e02f1bec13bb819c81cb36fdffdf7116e50def3c92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-02T22:34:35.439939362Z",
            "docker_version": "20.10.16+azure-2",
            "history": [
                {
                    "created": "2022-05-28T01:22:09.619243244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ba5db69738244d00088ef591ca43fa8b3189e78fba56bc69b70a232e6f04c7e4 in / "
                },
                {
                    "created": "2022-05-28T01:22:10.021237726Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T02:44:56.361595188Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T02:45:00.925603259Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-28T02:45:19.121869693Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:05.030014032Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-02T22:34:05.834506053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:06.661879105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.11",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:30.186880848Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-amd64.tar.gz'; \t\t\tsha256='3488c2705b3efecea2c424480513fa17c163a2674d6fd7428ecb044351f3c763'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-armv6l.tar.gz'; \t\t\tsha256='ed3b8bfa5bb47302cbfc717298a57bc58a576fb09ae93609d1d705d7fc51d08a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220602.2/go.20220602.2.linux-arm64.tar.gz'; \t\t\tsha256='b165ed5e01e3cdc5551b1484f3acac6dccbe58b37ab30001716c59e3a8e036f7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-02T22:34:31.612286619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:32.757438378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-02T22:34:34.308369773Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-02T22:34:35.439939362Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f52e05ae36a391714a4ee9c6ae55720fba5d1c72a74b94782ec330412849a73e",
                    "sha256:928f399cab6be27f5675b19d454a4fa49bdf56b005d4df775722e5e01de2f2eb",
                    "sha256:4010eb7bba90b1fcae77eeb2f2f13f486373654635d270eb07322c8869063bbd",
                    "sha256:a672acde7cce560061631011fdb4a7b1548c7196badc598ef81a0aa45354cb95",
                    "sha256:341b0dbfd0e9179ced2741fbfd7144b6f351f4b6993218b0969e301c4c3f0be0",
                    "sha256:739b0b4e8cdd69d5b8c6e60cfb0a294facc75c5a7b0d45c38003e29471c75d66",
                    "sha256:7f01f022d98767d42c5bddcfc0d00d51e676b4125d0de85bc29e429dbfd975d8"
                ]
            }
        },
        "1.17.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "54f800c9f970cbbc3f574636c5a95b6075a451daaa770bc68a7dc65d4f323405",
            "container_config": {
                "Hostname": "54f800c9f970",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:53.769946323Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:16.349783238Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:798015650079cb88614ff181a30f9c3d3fde8361c49ae2dec2058d5a3e61f5df in / "
                },
                {
                    "created": "2022-06-23T00:20:16.858125814Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:50:13.918209799Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:50:20.007071884Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:50:35.457013848Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.907355323Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:25.780835158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:26.73486075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:48.158416583Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:49.679108333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:50.891954375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:52.530484465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:53.769946323Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:97d5fec864d84417c057008f153140193d2cc924b545b0c6fec10ae891fb26f9",
                    "sha256:6840c8ff46bd2c0ab4086d311c3e4903639b586c84d4f4ad28d156a2cc749e5f",
                    "sha256:66183893ba248fa10375cfec3e598d7df626b44c7740156e935ce2fcd5589aa7",
                    "sha256:5afd661c6106dfe99ed40c2dd18b8f6ffc5d978fa3302037b513c7a6e366609f",
                    "sha256:bf12e0a391c61255917cda22c5fdf352c8346a38bfccabd453d9c3492c69c696",
                    "sha256:a127e4b23873ddae207793286002113d4e84eccb815355fb158489cd0b755492",
                    "sha256:d856facd418ac8f23bab687ed28e81ecd3b36a4dc02c27db3c39f0b38200380f"
                ]
            }
        },
        "1.17.12-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "54f800c9f970cbbc3f574636c5a95b6075a451daaa770bc68a7dc65d4f323405",
            "container_config": {
                "Hostname": "54f800c9f970",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:53.769946323Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:16.349783238Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:798015650079cb88614ff181a30f9c3d3fde8361c49ae2dec2058d5a3e61f5df in / "
                },
                {
                    "created": "2022-06-23T00:20:16.858125814Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:50:13.918209799Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:50:20.007071884Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:50:35.457013848Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.907355323Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:25.780835158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:26.73486075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:48.158416583Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:49.679108333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:50.891954375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:52.530484465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:53.769946323Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:97d5fec864d84417c057008f153140193d2cc924b545b0c6fec10ae891fb26f9",
                    "sha256:6840c8ff46bd2c0ab4086d311c3e4903639b586c84d4f4ad28d156a2cc749e5f",
                    "sha256:66183893ba248fa10375cfec3e598d7df626b44c7740156e935ce2fcd5589aa7",
                    "sha256:5afd661c6106dfe99ed40c2dd18b8f6ffc5d978fa3302037b513c7a6e366609f",
                    "sha256:bf12e0a391c61255917cda22c5fdf352c8346a38bfccabd453d9c3492c69c696",
                    "sha256:a127e4b23873ddae207793286002113d4e84eccb815355fb158489cd0b755492",
                    "sha256:d856facd418ac8f23bab687ed28e81ecd3b36a4dc02c27db3c39f0b38200380f"
                ]
            }
        },
        "1.17.12-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "54f800c9f970cbbc3f574636c5a95b6075a451daaa770bc68a7dc65d4f323405",
            "container_config": {
                "Hostname": "54f800c9f970",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:53.769946323Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:16.349783238Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:798015650079cb88614ff181a30f9c3d3fde8361c49ae2dec2058d5a3e61f5df in / "
                },
                {
                    "created": "2022-06-23T00:20:16.858125814Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:50:13.918209799Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:50:20.007071884Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:50:35.457013848Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.907355323Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:25.780835158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:26.73486075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:48.158416583Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:49.679108333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:50.891954375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:52.530484465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:53.769946323Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:97d5fec864d84417c057008f153140193d2cc924b545b0c6fec10ae891fb26f9",
                    "sha256:6840c8ff46bd2c0ab4086d311c3e4903639b586c84d4f4ad28d156a2cc749e5f",
                    "sha256:66183893ba248fa10375cfec3e598d7df626b44c7740156e935ce2fcd5589aa7",
                    "sha256:5afd661c6106dfe99ed40c2dd18b8f6ffc5d978fa3302037b513c7a6e366609f",
                    "sha256:bf12e0a391c61255917cda22c5fdf352c8346a38bfccabd453d9c3492c69c696",
                    "sha256:a127e4b23873ddae207793286002113d4e84eccb815355fb158489cd0b755492",
                    "sha256:d856facd418ac8f23bab687ed28e81ecd3b36a4dc02c27db3c39f0b38200380f"
                ]
            }
        },
        "1.17.12-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "54f800c9f970cbbc3f574636c5a95b6075a451daaa770bc68a7dc65d4f323405",
            "container_config": {
                "Hostname": "54f800c9f970",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:53.769946323Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:16.349783238Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:798015650079cb88614ff181a30f9c3d3fde8361c49ae2dec2058d5a3e61f5df in / "
                },
                {
                    "created": "2022-06-23T00:20:16.858125814Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:50:13.918209799Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:50:20.007071884Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:50:35.457013848Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.907355323Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:25.780835158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:26.73486075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:48.158416583Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:49.679108333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:50.891954375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:52.530484465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:53.769946323Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:97d5fec864d84417c057008f153140193d2cc924b545b0c6fec10ae891fb26f9",
                    "sha256:6840c8ff46bd2c0ab4086d311c3e4903639b586c84d4f4ad28d156a2cc749e5f",
                    "sha256:66183893ba248fa10375cfec3e598d7df626b44c7740156e935ce2fcd5589aa7",
                    "sha256:5afd661c6106dfe99ed40c2dd18b8f6ffc5d978fa3302037b513c7a6e366609f",
                    "sha256:bf12e0a391c61255917cda22c5fdf352c8346a38bfccabd453d9c3492c69c696",
                    "sha256:a127e4b23873ddae207793286002113d4e84eccb815355fb158489cd0b755492",
                    "sha256:d856facd418ac8f23bab687ed28e81ecd3b36a4dc02c27db3c39f0b38200380f"
                ]
            }
        },
        "1.17.12-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:081717b0bb3c3e7bb97461849f8cbf107ae63f60a95c3f60fc0550922dd3c6a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1216a1ec66b7a9f79dd04625a9527f36dd544c04797a03494f39fb85702248ce",
            "container_config": {
                "Hostname": "1216a1ec66b7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:081717b0bb3c3e7bb97461849f8cbf107ae63f60a95c3f60fc0550922dd3c6a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:41:47.226234455Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T00:59:08.923213583Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:59a6186285c4849971ea2d4801e6ebc1e4310f5e3dc0f87389f39d1fa8a63c58 in / "
                },
                {
                    "created": "2022-06-23T00:59:10.00410588Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:46:23.047401112Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:46:37.393197186Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:47:31.574708252Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:13.630150485Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:15.233603795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:16.565518041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:39.251200556Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:41:41.345666135Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:43.327942474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:45.729016197Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:41:47.226234455Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5a71ef395762c2aa85c2608a5fb2f2d8e607b3f5b6dcb69dcf21a737e96d9d7f",
                    "sha256:0d0c1e2899795030b1f6c8e2710c3e97d658b21c07130025e4b7bffdca5d99a6",
                    "sha256:8e8c41a6e8d0e9e397d2f6d5c29e387ec32abedd5f2fd4a5aacda8a80a6ab0e3",
                    "sha256:116b26144b44e6e888bbef6b93fd125d1aa5a440df8c760ed3c56213ee272d75",
                    "sha256:dc1fd328c61498c7acdfcb72aa72e977220d23111eecf8bbb7d46a20279b41c4",
                    "sha256:191a94fbce6e8e1891bdcbd01678f83d2a2d32fde7739d0029340f2277c8ab9d",
                    "sha256:84de01c3c0ea348d6ae20191e5323022a6c02b796dcc5a8216e27256ea4a8de6"
                ]
            },
            "variant": "v7"
        },
        "1.17.12-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a143c6c406db98ce468dbb923e7decc9627311fc49fbb1750648e5c0345ccbab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "048b01dec4b82c54bea38739ff94653cf11e85502bbf3ac68ad5650b2720855f",
            "container_config": {
                "Hostname": "048b01dec4b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a143c6c406db98ce468dbb923e7decc9627311fc49fbb1750648e5c0345ccbab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:42:16.034747519Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T00:40:28.603731424Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:64c455af1bb18ff2c202a244e058b6e5ac147b89410ed36edc5e29f4b6f02c5d in / "
                },
                {
                    "created": "2022-06-23T00:40:29.693152565Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:11:27.807394282Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:11:33.389211332Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:11:50.606751593Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:38.4741714Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:40.145746564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:42.025297106Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:06.684272886Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:42:08.750745568Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:11.720142968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:14.463429246Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:42:16.034747519Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:27d8bf01e7ea3c5dd08560d3e0283e5bebfa1b495d882fc159c7c05b10c35661",
                    "sha256:b64abc7f7c86311c9514ce14e1b2a0e521a79298784d0bfe515e8c31a6afeecf",
                    "sha256:ee4fce07791c050971b6f769d0559ba4f3526ecd65c20813f75a4a8a610d4584",
                    "sha256:932814352952c9a5aea8d5dabaf967962d2ac7feea3bc296b3f281a7572230e4",
                    "sha256:f67e35162d8fd4ff7a98d8d723de7e7d6d70c3f053ba93382d79e0fca5904094",
                    "sha256:1357439e967b511afd05c4a4b192657e09cec7cc5a8b536ea3bab2de782f1c2c",
                    "sha256:f70d136135899fed463b0da3fe6dbb82d4105d053581e83d2be5c474db5551b0"
                ]
            },
            "variant": "v8"
        },
        "1.17.12-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:33c73f017ffeb53d6fd549f0b4ea9b8a60a5acc65c34014ed7fe1fea354ea8e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26bb9b6a2f5168a9e160b2bcfd90c83fd055a4596b50acc7e18e55364d77623b",
            "container_config": {
                "Hostname": "26bb9b6a2f51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:33c73f017ffeb53d6fd549f0b4ea9b8a60a5acc65c34014ed7fe1fea354ea8e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:52.612271727Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:36.086835461Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2f32dd3ef1e51a4d2d6dcf55fbf766434df5b3ada802b087d5761f2fa0cdebf5 in / "
                },
                {
                    "created": "2022-06-23T00:20:36.531071233Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:51:33.680800679Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:51:39.061012726Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:51:54.009689321Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:23.626568231Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.443118906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:25.137330493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:47.195408657Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:48.674316484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:49.845224054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:51.425170227Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:52.612271727Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0c8724a82628df0abfb71ff6638d05c4ae8fc682fb25f17362c98a3817ac69ca",
                    "sha256:3abde9518332a9cf24f82b55300e562b988effb9e53dfdbfd3bd4cbdd3cbdab4",
                    "sha256:65d22717bade8e75584ed47489baa2113129307b5356e014665ea99d9c4e66c9",
                    "sha256:261e5d6450d3b582718d9d1722bb6ceb51499515c09ec061f7cebd1405f48063",
                    "sha256:58cc1f22b2653f41788dd16b8446928c59ca7cbc1b8bc55b5e7254f73abdfb33",
                    "sha256:b7449e8e89f75435e149ccfe405d72d9de74db7d6423ee18f5dadbd748abe8fc",
                    "sha256:df6ded3955b9001d66558ee087244e14b4c6746a0123e6bbea6dbc7838ef65a1"
                ]
            }
        },
        "1.17.12-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:33c73f017ffeb53d6fd549f0b4ea9b8a60a5acc65c34014ed7fe1fea354ea8e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26bb9b6a2f5168a9e160b2bcfd90c83fd055a4596b50acc7e18e55364d77623b",
            "container_config": {
                "Hostname": "26bb9b6a2f51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:33c73f017ffeb53d6fd549f0b4ea9b8a60a5acc65c34014ed7fe1fea354ea8e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:52.612271727Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:36.086835461Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2f32dd3ef1e51a4d2d6dcf55fbf766434df5b3ada802b087d5761f2fa0cdebf5 in / "
                },
                {
                    "created": "2022-06-23T00:20:36.531071233Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:51:33.680800679Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:51:39.061012726Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:51:54.009689321Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:23.626568231Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.443118906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:25.137330493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:47.195408657Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:48.674316484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:49.845224054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:51.425170227Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:52.612271727Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0c8724a82628df0abfb71ff6638d05c4ae8fc682fb25f17362c98a3817ac69ca",
                    "sha256:3abde9518332a9cf24f82b55300e562b988effb9e53dfdbfd3bd4cbdd3cbdab4",
                    "sha256:65d22717bade8e75584ed47489baa2113129307b5356e014665ea99d9c4e66c9",
                    "sha256:261e5d6450d3b582718d9d1722bb6ceb51499515c09ec061f7cebd1405f48063",
                    "sha256:58cc1f22b2653f41788dd16b8446928c59ca7cbc1b8bc55b5e7254f73abdfb33",
                    "sha256:b7449e8e89f75435e149ccfe405d72d9de74db7d6423ee18f5dadbd748abe8fc",
                    "sha256:df6ded3955b9001d66558ee087244e14b4c6746a0123e6bbea6dbc7838ef65a1"
                ]
            }
        },
        "1.17.12-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c3be025f170a7768dd0c408470a23bbdaf1bff624ceb3b267fea0969d169e059",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1dcca1ecefe2896d964ba51a3530e18dea2685e2bd2c246af50fffabab37e164",
            "container_config": {
                "Hostname": "1dcca1ecefe2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c3be025f170a7768dd0c408470a23bbdaf1bff624ceb3b267fea0969d169e059",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:42:11.912349102Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T01:00:14.952605631Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b8401862d74ac67a61f764c5dcc54fde231623bf55d2299665eab35dccd25114 in / "
                },
                {
                    "created": "2022-06-23T01:00:15.863940184Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:50:30.174557408Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:50:43.756525786Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:51:32.955458627Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:27.111838042Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:29.178180868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:31.493297105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:56.369917431Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:42:04.336512936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:06.443941031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:09.219361188Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:42:11.912349102Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3185e2f0b74ebdf6e2383aa1b740643d778079e2017233795b4c14867f15f52",
                    "sha256:921a716e1c6def9b3810a978aff5e96a950c08bf434d64a0b0910a1e8f13a486",
                    "sha256:2bb9517ac711c865edb2443df5b18d24dc6d08f5bb2d4da051c4a607b4a59ef5",
                    "sha256:d7439b09a6791ef8b90071d4bb52e342e1c1916c4e0b3735af56b556b37293e7",
                    "sha256:e393d3e53ca87e9e058f6d3f0b1af328058e3ef0790dda3df69717b0fcf4379f",
                    "sha256:678ec983c4677f8d55bb9dde3063b9cd10894ba2ea575c953eb02a12f1862beb",
                    "sha256:488f86011e9d4b1f75e57e499c98e725b791c03e311910ab657b1715932e9468"
                ]
            },
            "variant": "v7"
        },
        "1.17.12-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1a78068403e58ad9419280de4560d04ac0e79dec384a92cb6f0e5a7e61a9938",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "85fe804f5538135e1942d5f4cee7e4961cebb258e844976ec12071913e96b434",
            "container_config": {
                "Hostname": "85fe804f5538",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1a78068403e58ad9419280de4560d04ac0e79dec384a92cb6f0e5a7e61a9938",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:42:20.356391878Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T00:40:54.252047283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5e3c0ffa9f9754a6d77fafd8288e699a70f7f6ff7c5912a065f1c69f1393e99 in / "
                },
                {
                    "created": "2022-06-23T00:40:55.1559031Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:12:47.127484182Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:12:52.142923559Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:13:09.607674918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:43.867572032Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:46.267506559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:47.939471105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:11.416192998Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:42:13.574795404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:15.295012414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:42:18.734123338Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:42:20.356391878Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b5cf0cb0ac63ad192d59141256e560517b998d4d302209908c8a96ecc47c25f4",
                    "sha256:dcfd877816c92846589493bd3ba3c889db624f85097f848bfc1b9eecd18d2e70",
                    "sha256:88a5afc7f4a7db19c34e02d42b0589fea4ef2928c5fde883aa65aaed7caa7361",
                    "sha256:79578d61619954a195fb0af801920e67f5fce6f0e2f3691745170c6d4ee27587",
                    "sha256:8118e041affde34e9a14761781d6c4a2ce778d78159ebb0bd665e8cdef8058b0",
                    "sha256:e76f812661bad4b78cbfec87decef1daea86a0120566cd0c13878cc0251eeaa6",
                    "sha256:bb995e6b1f546a112359d1eef03356d4880c408473cc9095b3df1f39de05423c"
                ]
            },
            "variant": "v8"
        },
        "1.17.12-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43ef75c69bfc0bc3f9dcc8049494ca4e8804f408494e63e4148ba34955826bbb",
            "container_config": {
                "Hostname": "43ef75c69bfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:17:53.218220707Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-16T06:05:14.121767937Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:28.025034565Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:28.732261668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:29.564740876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:48.406682729Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:17:49.735549052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:50.768989276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:52.203566514Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:17:53.218220707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c367d330db3f2d7486b57e2ac0b754efba63fe53d866743ad547112e8bf93ce0",
                    "sha256:66e02afb0a4d90fdb4588d2429dfc77666bd218409b15067bc731ef00431c976",
                    "sha256:bee0ae5af4f2ed18a622dbb9b60668caa33ac27687f751f19a4370b2a6cc0bf6",
                    "sha256:38ca99168052d576452a897a61cf10203a7ed4e68aa3720331a801fb00797dfc"
                ]
            }
        },
        "1.17.12-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43ef75c69bfc0bc3f9dcc8049494ca4e8804f408494e63e4148ba34955826bbb",
            "container_config": {
                "Hostname": "43ef75c69bfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:17:53.218220707Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-16T06:05:14.121767937Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:28.025034565Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:28.732261668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:29.564740876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:48.406682729Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:17:49.735549052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:50.768989276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:52.203566514Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:17:53.218220707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c367d330db3f2d7486b57e2ac0b754efba63fe53d866743ad547112e8bf93ce0",
                    "sha256:66e02afb0a4d90fdb4588d2429dfc77666bd218409b15067bc731ef00431c976",
                    "sha256:bee0ae5af4f2ed18a622dbb9b60668caa33ac27687f751f19a4370b2a6cc0bf6",
                    "sha256:38ca99168052d576452a897a61cf10203a7ed4e68aa3720331a801fb00797dfc"
                ]
            }
        },
        "1.17.12-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43ef75c69bfc0bc3f9dcc8049494ca4e8804f408494e63e4148ba34955826bbb",
            "container_config": {
                "Hostname": "43ef75c69bfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:17:53.218220707Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-16T06:05:14.121767937Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:28.025034565Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:28.732261668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:29.564740876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:48.406682729Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:17:49.735549052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:50.768989276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:52.203566514Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:17:53.218220707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c367d330db3f2d7486b57e2ac0b754efba63fe53d866743ad547112e8bf93ce0",
                    "sha256:66e02afb0a4d90fdb4588d2429dfc77666bd218409b15067bc731ef00431c976",
                    "sha256:bee0ae5af4f2ed18a622dbb9b60668caa33ac27687f751f19a4370b2a6cc0bf6",
                    "sha256:38ca99168052d576452a897a61cf10203a7ed4e68aa3720331a801fb00797dfc"
                ]
            }
        },
        "1.17.12-1-fips-cbl-mariner1.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:450ee1facfdc193ca3f1a1245898a2002db1d29706617894384b72390bfeb747",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "021b34995dc1f028c8a6ceff3aad12c9b5b350a18f9392f7fe913596ee321d1a",
            "container_config": {
                "Hostname": "021b34995dc1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:450ee1facfdc193ca3f1a1245898a2002db1d29706617894384b72390bfeb747",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:20:38.534344861Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-16T06:01:53.622180279Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:19:47.878289379Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:19:49.764238432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:19:52.42049272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:20:17.687548587Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:20:23.880639089Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:20:27.762120863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:20:35.039772029Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:20:38.534344861Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8805433be7ba8bd9f9daa3f59e85e7a9dd166f44ddbda4834e7591edfa0aa65f",
                    "sha256:b44dfb5d04f570c8999a09ea8d79c6fed72b7ec2e9e95f936e8a2924b1e06f2b",
                    "sha256:5fb9ae7328178fabfd7991717dd7ef7438c948c9528616dd333cd90cc5b1d0d1",
                    "sha256:66554a03f369147aa22fbba814505e7d7a82776ee7c3439e27ccfb49f0312f5d"
                ]
            }
        },
        "1.17.12-1-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ce5e19c0a7750dc8753b294b238bdf987c5c5022476608e6c2bbe99c95c124bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05068581a44a4f1938448f319e19015380bf3b2a58861526273f4aaa159e9c57",
            "container_config": {
                "Hostname": "05068581a44a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ce5e19c0a7750dc8753b294b238bdf987c5c5022476608e6c2bbe99c95c124bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:18:24.191434485Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:57.830102795Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:58.423548127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:59.424018692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:20.273253349Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:18:21.365624869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:22.182144068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:23.363188587Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:18:24.191434485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:d32da62c53974027e9f8a6e97ce14d0000e1fe0e5050cd75fcad7fa933f7e60f",
                    "sha256:902a4aaba402cbe70a686f2e02c28f9e2759d0eb24be926223ca01a19fbf4461",
                    "sha256:1e58b9955aa64e61e53dc501f23c6bb9504507ff05f29b62969d957033ee86df"
                ]
            }
        },
        "1.17.12-1-fips-cbl-mariner2.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ce5e19c0a7750dc8753b294b238bdf987c5c5022476608e6c2bbe99c95c124bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05068581a44a4f1938448f319e19015380bf3b2a58861526273f4aaa159e9c57",
            "container_config": {
                "Hostname": "05068581a44a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ce5e19c0a7750dc8753b294b238bdf987c5c5022476608e6c2bbe99c95c124bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:18:24.191434485Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:57.830102795Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:58.423548127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:59.424018692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:20.273253349Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:18:21.365624869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:22.182144068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:23.363188587Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:18:24.191434485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:d32da62c53974027e9f8a6e97ce14d0000e1fe0e5050cd75fcad7fa933f7e60f",
                    "sha256:902a4aaba402cbe70a686f2e02c28f9e2759d0eb24be926223ca01a19fbf4461",
                    "sha256:1e58b9955aa64e61e53dc501f23c6bb9504507ff05f29b62969d957033ee86df"
                ]
            }
        },
        "1.17.12-1-fips-cbl-mariner2.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:151db6fd3719a96eafa083eb7b030ecd62d791130a2bafd0fe18cce0edb89d31",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0160c6aa5052f1dabdc547bae8735fe9096ed2ef3964face2bc0e6fe141898b",
            "container_config": {
                "Hostname": "f0160c6aa505",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:151db6fd3719a96eafa083eb7b030ecd62d791130a2bafd0fe18cce0edb89d31",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:21:52.026254988Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-01T21:07:09.07280569Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:21:16.677087341Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:21:18.173107034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:21:19.035367053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:21:40.404137647Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:21:42.162334307Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:21:45.080775297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:21:50.286498014Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:21:52.026254988Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8c01e238df01b579e7ad38505b8e0f9414e0407c05a5badd2494fea15155d079",
                    "sha256:8ba7ca2a88e5a0a829d226d9ba6f314fbb880b5c9bdb8889a7372b3dbb11451e",
                    "sha256:00fcaae9e8d88d5c2784960b1aae6cd46e5c0aeca4925b9d6541d32fca0b540c",
                    "sha256:65ef0ca2b6751d4332cc6852384caddb90f5c80ef42f74b5569234acd658c3c5"
                ]
            }
        },
        "1.17.12-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:978b78297598b941f04aa6ce582f56f9aa9c0f50c02bf15b8c63e89f7b1f8378",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "33cbaf9c874439ded72235f46d80f175a48d3b9fabdc8324a7cf05b137d58a02",
            "container_config": {
                "Hostname": "33cbaf9c8744",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:978b78297598b941f04aa6ce582f56f9aa9c0f50c02bf15b8c63e89f7b1f8378",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-07-13T01:48:55.2954984Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-07-06T22:15:10.1814044Z",
                    "created_by": "Apply image 10.0.17763.3165"
                },
                {
                    "created": "2022-07-13T01:47:46.92326Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-07-13T01:47:48.1092195Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-07-13T01:47:49.187832Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-07-13T01:47:52.1720016Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-07-13T01:47:53.3368115Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-07-13T01:47:54.5835056Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.12"
                },
                {
                    "created": "2022-07-13T01:48:48.5835038Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:5c6c27bb59dd958591a88275256baa58dd93190d9dea61128d0a4379aa799ffa in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-07-13T01:48:53.6194056Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-07-13T01:48:55.2954984Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.3165",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1147007cf0d1b921afd85be95b93b8a1408b0d883e9724f8d06e5dd6d1d87dc9",
                    "sha256:c10e8ba75333abff32c1ac0304b4ece8e75e45f6dbf6c735a7edef1c63855f97",
                    "sha256:5864b9df2f895beda1cf07f34f7cff7f234527852a3f05effa2b9a8e65e1072b",
                    "sha256:c21b78c0fb0ece25e09bf6f2c834a388f544ef5cf1370aa1d3409d11489a6708",
                    "sha256:afa16bc8df9858b290aae74aa5cd648996368249ee03048a8f08e2e5a89ee331",
                    "sha256:1bd65472962dc39cfda1f67920648c8aa9666fad2e846cf82153a4d6c4c4fcd8",
                    "sha256:1723bd7ab6217c2b037c5f648614a02aa18288224ae627491b9afd2eaa99b32e",
                    "sha256:243bda4fb0a4abe254025290758876b769548d2d6d8860f161340d01c17072ae",
                    "sha256:65da2d5c14d0be45b8730d9a8924b7e835c486c24ab13ec20aa5e005d9232461",
                    "sha256:563fa799743b3ca015c3b4372de21a74ecf861d947d6e2494632ba390045fcd4"
                ]
            }
        },
        "1.17.12-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:8b5d7f5817340d7ee4e0bab56454e3a858c02f3c99cc2dceef2aa044c2682a45",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "67b316b5fd5423a83317949580e7746c0accf62919c4da3ac19cb0e6d69afebc",
            "container_config": {
                "Hostname": "67b316b5fd54",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:8b5d7f5817340d7ee4e0bab56454e3a858c02f3c99cc2dceef2aa044c2682a45",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-07-13T01:47:26.8116569Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-07-04T17:25:17.1474666Z",
                    "created_by": "Apply image 10.0.20348.825"
                },
                {
                    "created": "2022-07-13T01:46:05.1618559Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-07-13T01:46:05.7861814Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-07-13T01:46:06.2120515Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-07-13T01:46:15.3923114Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-07-13T01:46:15.9702441Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-07-13T01:46:16.411278Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.12"
                },
                {
                    "created": "2022-07-13T01:47:21.2981539Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:5c6c27bb59dd958591a88275256baa58dd93190d9dea61128d0a4379aa799ffa in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-07-13T01:47:26.2047914Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-07-13T01:47:26.8116569Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.825",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b4ba8960c294201de1b8445d3fd802e207b75b77238ae5abeec047770227761b",
                    "sha256:e9faf13084d091ab30a6546904fce4b85758db18f975563624c8ac0a55907ee5",
                    "sha256:2b868b172d8054146331b4702df084af0a9de4f3489137dbaacd8aa384f28484",
                    "sha256:2fd3df367c135ddccf470bd7d7dc1da6b18401d3a7d3d2366e9f345ab735eddd",
                    "sha256:8db0f1fa9c1fa27c674ae5081a16f7baecfd126c5202453da0bf6e479f77d069",
                    "sha256:86c77c65f7d7fb146f07958db6951dd3214146c8be536c94ffad9dc685a5ecc0",
                    "sha256:1e8b0e03d18ada7053dde2e5034b09c9e3ce09a7f24123209a4e0400a3da9953",
                    "sha256:11a273d084b94bebc471718008f795f877272fc6edfe583857049b0ab16417d9",
                    "sha256:82998bf3749a64fa30f30876326a61896fcfb724b67e2b235418ee3a577ee9c9",
                    "sha256:0ddbc904f1148748aaddf3d679123a8c12cf8fd3d6f3eb6386843864a4d4bfb7"
                ]
            }
        },
        "1.17.12-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b284b85cea0caebacef3989b3052dd5f4ce88aecc81cfac3243b17ceea510935",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1298f340954183bf856560ad7c569005d1958cdfb62b3107bc62041537902f43",
            "container_config": {
                "Hostname": "1298f3409541",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b284b85cea0caebacef3989b3052dd5f4ce88aecc81cfac3243b17ceea510935",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:40:31.103746651Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:40:02.001346809Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:40:02.844362598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:03.727677707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:25.349748019Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:40:26.906563272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:28.18563586Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:29.852136544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:40:31.103746651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:9883b7671ff137303d48abd8c3202ff34b03c51f440cee2d61b02d7063fe293a",
                    "sha256:25eed9128d63f03199a1ebb827aeeb7c2bf2c06cb87c9a97a2d69ac00d9c7651",
                    "sha256:86aeefbf60de4507fc7059df4cbae7c28014385c028a7290e21f3725f48ae232"
                ]
            }
        },
        "1.17.12-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b284b85cea0caebacef3989b3052dd5f4ce88aecc81cfac3243b17ceea510935",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1298f340954183bf856560ad7c569005d1958cdfb62b3107bc62041537902f43",
            "container_config": {
                "Hostname": "1298f3409541",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b284b85cea0caebacef3989b3052dd5f4ce88aecc81cfac3243b17ceea510935",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:40:31.103746651Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:40:02.001346809Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:40:02.844362598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:03.727677707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:25.349748019Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:40:26.906563272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:28.18563586Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:29.852136544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:40:31.103746651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:9883b7671ff137303d48abd8c3202ff34b03c51f440cee2d61b02d7063fe293a",
                    "sha256:25eed9128d63f03199a1ebb827aeeb7c2bf2c06cb87c9a97a2d69ac00d9c7651",
                    "sha256:86aeefbf60de4507fc7059df4cbae7c28014385c028a7290e21f3725f48ae232"
                ]
            }
        },
        "1.17.12-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:23d4eb918ba6054efbbb08df33a9bb10b05842f45dfc3bcabecc43c383b35d71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6cc71ac9d5fab43928b8b73650c770a526e5481b0559ce71c7884db79689f2c4",
            "container_config": {
                "Hostname": "6cc71ac9d5fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:23d4eb918ba6054efbbb08df33a9bb10b05842f45dfc3bcabecc43c383b35d71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:41:40.437933353Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T01:05:04.860698579Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f45aa06c6a1c011e41ff7e4685f05d91970973768fc88ff3e825c5ac4fd6058 in / "
                },
                {
                    "created": "2022-06-23T01:05:05.860583099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:58:31.089050931Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:58:43.032378667Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:59:36.52617777Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:01.748708571Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:41:03.369862802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:04.515431665Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:28.676289401Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:41:31.350843954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:34.109643901Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:41:38.808340018Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:41:40.437933353Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcf373643da7a7fa026733cc23d26e9315b02f345dc32113a61072dd500d56f5",
                    "sha256:df63453f0cbced9283aa8ff9a1905f92c86a17ed3dc74d3e0e1d5f80b4b7bb3a",
                    "sha256:867ebbcab3918a95bd63f25f87b10745e22d10e2fe84c4c1bdbe5acd33caf405",
                    "sha256:10d67a9607fad862bd53c93a6a7c8e46166e895e2c04346a9f37b48fa0bf5d03",
                    "sha256:7c2a22a870ec09099f20f1180a82cdd428bb370fbce8efa1915c29dd321db3fa",
                    "sha256:4b773509b6cddbb8e67bf973bf0033b4e11bfac5e02e412fd36ba30b90e39e16",
                    "sha256:0f2d51ac41b079f48bf702a0edc725ab673d71e6490cf52a0a5df5359306cf65"
                ]
            },
            "variant": "v7"
        },
        "1.17.12-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b291493ea8a6eb66fd038f71a01e1bade8e75a68d7ba245ae55a764a4bfdbaed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a8ab4c6f571d1e36bd74bb2e49b1d799e15e035de99d154ce10631b9ab97d7a",
            "container_config": {
                "Hostname": "8a8ab4c6f571",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b291493ea8a6eb66fd038f71a01e1bade8e75a68d7ba245ae55a764a4bfdbaed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:46:17.224114113Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T00:42:45.082860306Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d8b1da94fcec5d068e3e6465fac70cce404c331bb52e30a5bf7cbd950baa5fe in / "
                },
                {
                    "created": "2022-06-23T00:42:45.897823754Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:15:56.978732246Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:16:01.851854497Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:16:21.28038999Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:44:37.801411625Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:44:46.026026034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:44:53.244815035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:45:41.042571321Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:45:48.848359606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:45:56.269915469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:46:08.839767759Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:46:17.224114113Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d796fa548097cef349c3c59fd49c2e9a603eabca13d312e9d19c26b6420dab1",
                    "sha256:09a30e15ff852b08d62cd20066edfea325f96a43efc559ddd1c1bac42fc18011",
                    "sha256:37870137c560743bda497a61f80278abed959ef065c85e737ea525e3296cb453",
                    "sha256:c2eea412e5b65116453a14496f0365ba7f2edc676e56f069994c0f1f5878b2e4",
                    "sha256:d670091025c6d9d22ba66e56e422538a6eeb17b5073fbbe49266621e2ef36e67",
                    "sha256:85a6d410f21ac922ebcef08ba205c92a6a57c01a37a13d06a8da8e1a17b9207d",
                    "sha256:65def31097b34715788f5f7bca5aba8720838695b250daf21f52b190b4f410ae"
                ]
            },
            "variant": "v8"
        },
        "1.17.12-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:d30a0db56e85376f03de3406f0be99b216043406e06bca9b798690b758ba641d",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "f76c43912dbc76c297c10a71db1c59173db2b51617316a4e12e923f772406a68",
            "container_config": {
                "Hostname": "f76c43912dbc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:d30a0db56e85376f03de3406f0be99b216043406e06bca9b798690b758ba641d",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-07-13T01:47:45.6410815Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:27:13.2763402Z",
                    "created_by": "Apply image 10.0.17763.2803"
                },
                {
                    "created": "2022-07-06T22:37:15.1504938Z",
                    "created_by": "Install update 10.0.17763.3165"
                },
                {
                    "created": "2022-07-13T01:46:03.5475121Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-07-13T01:46:04.6658693Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-07-13T01:46:05.795951Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-07-13T01:46:06.9103219Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-07-13T01:46:08.0245031Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-07-13T01:46:28.0376636Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-07-13T01:46:29.244794Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-07-13T01:46:35.2854841Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-07-13T01:46:36.3298542Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.12"
                },
                {
                    "created": "2022-07-13T01:47:43.8290215Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '8d59c3c4a3b5449914299a9b31b53d63706ec56cb82750fe374cc0945ade24e8'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-07-13T01:47:45.6410815Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.3165",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6fdd6832d95a5f537e0e7d87f2613ea9741ad9c20438b9d5a2697a883c4cd96",
                    "sha256:5e610cf6f2545f0e6ff64a4e2dee049427c80892d8b3d5ac0440664f0624b5ed",
                    "sha256:ebe23ec0f2e0d8b137dc466a2be57b83b68cd1f663603d90429120faf7c62f18",
                    "sha256:cfc8dab8efb62ba5e47944b4d35f925f90ad43ead931e982be7f6f610cb70fc0",
                    "sha256:d07fd6679d759ffdac1b306ce8da5981ddc3ec844fbb4e80865eaae811ead3c7",
                    "sha256:1a976d0c69d00d6c7cf14de6b3f9ce23be73c2f5029fbac1dfe48103ede1bd4a",
                    "sha256:8b2e2b5ccb315993d49cf9ca1c567e6703a8393673ab58d686fbba3098ec7987",
                    "sha256:3158e9c07afeca6a856b5bdca2f9dd9e8fb6e000fc9c21b9778743eb3f5b09a3",
                    "sha256:41c779a87422d9e75efd2af93085a0cd3670fe41d72ccdea623efdcb17888136",
                    "sha256:264f85a1907f20c0b88211f1c1120075b6acd61f9f3e8d49521b185de76943bf",
                    "sha256:9d76e8cf58d94ce3c6cadfea2343f8ee546715a81e2c20e9f97637ec92272e78",
                    "sha256:e33297b118a6877aa748160c1974198e45406f37406a0085a42f73bccb5db63d",
                    "sha256:3fbe5e233fd92a8dfd348f92b8984906b53d0e88e134446c20bbb735a8c6f263"
                ]
            }
        },
        "1.17.12-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:53434c2093cae42e0644406ce3dbc936868e376277d87e3a4945033df6195fdf",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "0fb24a10aa4d274ecb32f1f301fac639aeffabd9cc1c8c5e0b11c0d323e012c1",
            "container_config": {
                "Hostname": "0fb24a10aa4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:53434c2093cae42e0644406ce3dbc936868e376277d87e3a4945033df6195fdf",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-07-13T02:10:16.2850286Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-07-05T07:26:40.4472455Z",
                    "created_by": "Apply image 10.0.14393.206"
                },
                {
                    "created": "2022-07-05T08:33:50.3924482Z",
                    "created_by": "Install update 10.0.14393.5246"
                },
                {
                    "created": "2022-07-13T02:02:11.8030968Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-07-13T02:02:14.1806895Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-07-13T02:02:16.322441Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-07-13T02:02:18.4563129Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-07-13T02:02:20.7953656Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-07-13T02:04:46.1961928Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-07-13T02:04:51.2271638Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-07-13T02:05:22.295812Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-07-13T02:05:25.1064559Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.12"
                },
                {
                    "created": "2022-07-13T02:10:12.1335125Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '8d59c3c4a3b5449914299a9b31b53d63706ec56cb82750fe374cc0945ade24e8'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-07-13T02:10:16.2850286Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5246",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:94ce506bdcf2545f50f7b45be1696456a85a860477607a3f0686d3af6f05159e",
                    "sha256:7f249a3c488e94b8ee413dd1c15b5c3db0d70c64f3614c4ecc3fae1a55e72dce",
                    "sha256:84560d60e83478996bbff447c4714c52b79b06e480e67a15080cd3dd39882411",
                    "sha256:c9c24c3a8006576d718511ae3317ed562576e0dc0ab9ae8692cbbced14bd79bc",
                    "sha256:865853ebee6c20a86e0ea93f224267ba53815df3054673ae457d5ca8ccb9619c",
                    "sha256:1a35d47a26bddfa9cd79b34978a57c26a8f4b1b5d5d2f943dba7b6ec267a6a34",
                    "sha256:3e8ea01f0c4ed9abc823a99bf64176ae3fa642abda4e76bb80f2e5cced0c0e41",
                    "sha256:2b5333bffce6de325a00057fe7c65c4cee866b1838ff8579e23d3aec17f6987a",
                    "sha256:f95321388f1960ab25fdaa7e77a468382538a4cf160b9a96fec898cf39f66388",
                    "sha256:cf1fad026cdbfc92f4aa1ca18e65ff33aa23c53168afc4e3b65170d8ac2e0a31",
                    "sha256:d1761e22804797b59592f3abe901463c6a5e3f7b07bdbb7e18867ed5e538e90d",
                    "sha256:d1fba9f339e496671180f1304666337a5975027db7d015b82be533370b4db0e0"
                ]
            }
        },
        "1.17.12-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:4f4b2b4ddafd32121959d4e59a4cffdff3c5bb9dfba61c819bdbc53028827966",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "4f1cbbf7e996f8d2f48bffae6414d40f6bae6010de8a748fc92421694da045ac",
            "container_config": {
                "Hostname": "4f1cbbf7e996",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.12"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:4f4b2b4ddafd32121959d4e59a4cffdff3c5bb9dfba61c819bdbc53028827966",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-07-13T01:46:04.0438901Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:12:09.4542389Z",
                    "created_by": "Apply image 10.0.20348.643"
                },
                {
                    "created": "2022-07-04T17:46:55.3505291Z",
                    "created_by": "Install update 10.0.20348.825"
                },
                {
                    "created": "2022-07-13T01:42:53.9103097Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-07-13T01:42:54.4004939Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-07-13T01:42:54.9239395Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-07-13T01:42:55.4611152Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-07-13T01:42:55.9749159Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-07-13T01:43:37.1201378Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-07-13T01:43:37.7385657Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-07-13T01:43:48.2970061Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-07-13T01:43:48.8165063Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.12"
                },
                {
                    "created": "2022-07-13T01:46:02.9234547Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '8d59c3c4a3b5449914299a9b31b53d63706ec56cb82750fe374cc0945ade24e8'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-07-13T01:46:04.0438901Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.825",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9bda40f596a8f8648c218b23e552acf9498c039eb0a48c222cfcd5a9af9e841",
                    "sha256:f6337a87e50e98cc6c9c17cfdbfef4c60a73567050d6dd3fa158e5042bbfabc8",
                    "sha256:b1dc1653c2431b7ece836bbd95299badba0d797e5c23da01edcca27510cf4d61",
                    "sha256:71fa644c53f3ba375810e10f9e1bdd0b0de663e224ad7b22d7f56d55582a3f07",
                    "sha256:0a94c18693786ee1c229c0b08972f5583ca1132d84adcdd352ba37a180871801",
                    "sha256:d3a74507ed174860cc843c8ab1a8a762fdf5727fed5a78e2d8cac08324646223",
                    "sha256:18f91cdc9dceb75412550a58ed1b5607a503912869c65726fe9cde9477c21a00",
                    "sha256:9457179cd8dbf93471f215466998082381a7ade7f656345384dc0c8c75f4a3ea",
                    "sha256:83feec3eefc10c6a41383f123d92006289e906a6ada8210591e52f41087a5f08",
                    "sha256:3e60ae6ebe43ef6d2d98cbeb81426a712084f69276fa4a63eae296d4367e1444",
                    "sha256:0aac7c10c61d76a564366d0e6b615a22f6fa5c3b20d8879569cbaea38e4d0ab5",
                    "sha256:f1d4f8972dc0cf811f792d4f07e3e4ca5b0c9a0d5d3ea8b7f106dd0fdd9e21d3",
                    "sha256:994958e90a2164ce80c182bbf71358a47c0b38ff2928d3058824e72a97ee015c"
                ]
            }
        },
        "1.17.12-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "54f800c9f970cbbc3f574636c5a95b6075a451daaa770bc68a7dc65d4f323405",
            "container_config": {
                "Hostname": "54f800c9f970",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0264c7458272960c5b20c408ec9d77162fa510c1cdab6ce1ce39fe7328cfde8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:39:53.769946323Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:20:16.349783238Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:798015650079cb88614ff181a30f9c3d3fde8361c49ae2dec2058d5a3e61f5df in / "
                },
                {
                    "created": "2022-06-23T00:20:16.858125814Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:50:13.918209799Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:50:20.007071884Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:50:35.457013848Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:24.907355323Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:39:25.780835158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:26.73486075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:48.158416583Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:39:49.679108333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:50.891954375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:39:52.530484465Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:39:53.769946323Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:97d5fec864d84417c057008f153140193d2cc924b545b0c6fec10ae891fb26f9",
                    "sha256:6840c8ff46bd2c0ab4086d311c3e4903639b586c84d4f4ad28d156a2cc749e5f",
                    "sha256:66183893ba248fa10375cfec3e598d7df626b44c7740156e935ce2fcd5589aa7",
                    "sha256:5afd661c6106dfe99ed40c2dd18b8f6ffc5d978fa3302037b513c7a6e366609f",
                    "sha256:bf12e0a391c61255917cda22c5fdf352c8346a38bfccabd453d9c3492c69c696",
                    "sha256:a127e4b23873ddae207793286002113d4e84eccb815355fb158489cd0b755492",
                    "sha256:d856facd418ac8f23bab687ed28e81ecd3b36a4dc02c27db3c39f0b38200380f"
                ]
            }
        },
        "1.17.12-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43ef75c69bfc0bc3f9dcc8049494ca4e8804f408494e63e4148ba34955826bbb",
            "container_config": {
                "Hostname": "43ef75c69bfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:17:53.218220707Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-16T06:05:14.121767937Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:28.025034565Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:28.732261668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:29.564740876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:48.406682729Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:17:49.735549052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:50.768989276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:52.203566514Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:17:53.218220707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c367d330db3f2d7486b57e2ac0b754efba63fe53d866743ad547112e8bf93ce0",
                    "sha256:66e02afb0a4d90fdb4588d2429dfc77666bd218409b15067bc731ef00431c976",
                    "sha256:bee0ae5af4f2ed18a622dbb9b60668caa33ac27687f751f19a4370b2a6cc0bf6",
                    "sha256:38ca99168052d576452a897a61cf10203a7ed4e68aa3720331a801fb00797dfc"
                ]
            }
        },
        "1.17.12-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43ef75c69bfc0bc3f9dcc8049494ca4e8804f408494e63e4148ba34955826bbb",
            "container_config": {
                "Hostname": "43ef75c69bfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bc18114b31560e7c2f2aca1d1ff26d4c298d6f06516c7b1a1768cc61837de540",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:17:53.218220707Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-16T06:05:14.121767937Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:28.025034565Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:28.732261668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:29.564740876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:48.406682729Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:17:49.735549052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:50.768989276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:52.203566514Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:17:53.218220707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c367d330db3f2d7486b57e2ac0b754efba63fe53d866743ad547112e8bf93ce0",
                    "sha256:66e02afb0a4d90fdb4588d2429dfc77666bd218409b15067bc731ef00431c976",
                    "sha256:bee0ae5af4f2ed18a622dbb9b60668caa33ac27687f751f19a4370b2a6cc0bf6",
                    "sha256:38ca99168052d576452a897a61cf10203a7ed4e68aa3720331a801fb00797dfc"
                ]
            }
        },
        "1.17.12-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ce5e19c0a7750dc8753b294b238bdf987c5c5022476608e6c2bbe99c95c124bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05068581a44a4f1938448f319e19015380bf3b2a58861526273f4aaa159e9c57",
            "container_config": {
                "Hostname": "05068581a44a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ce5e19c0a7750dc8753b294b238bdf987c5c5022476608e6c2bbe99c95c124bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T21:18:24.191434485Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-07-13T21:17:57.830102795Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-07-13T21:17:58.423548127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:17:59.424018692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:20.273253349Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-amd64.tar.gz'; \t\t\tsha256='5a5e7584a06ba17ef069d936c45803408ef6191e25a7ad097bab7e2949dc24ce'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220713.6/go.20220713.6.linux-arm64.tar.gz'; \t\t\tsha256='6107047c8d356cd9487c7f6fd722ba7a51a6a8157e104253daa025dd44d0c6f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T21:18:21.365624869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:22.182144068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T21:18:23.363188587Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T21:18:24.191434485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:d32da62c53974027e9f8a6e97ce14d0000e1fe0e5050cd75fcad7fa933f7e60f",
                    "sha256:902a4aaba402cbe70a686f2e02c28f9e2759d0eb24be926223ca01a19fbf4461",
                    "sha256:1e58b9955aa64e61e53dc501f23c6bb9504507ff05f29b62969d957033ee86df"
                ]
            }
        },
        "1.17.12-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b284b85cea0caebacef3989b3052dd5f4ce88aecc81cfac3243b17ceea510935",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1298f340954183bf856560ad7c569005d1958cdfb62b3107bc62041537902f43",
            "container_config": {
                "Hostname": "1298f3409541",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b284b85cea0caebacef3989b3052dd5f4ce88aecc81cfac3243b17ceea510935",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-13T01:40:31.103746651Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:40:02.001346809Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-13T01:40:02.844362598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:03.727677707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.12",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:25.349748019Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-amd64.tar.gz'; \t\t\tsha256='239655400ace0862d10d1b9acbf61f685f639069031b41b0945d60f66b900aa8'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-armv6l.tar.gz'; \t\t\tsha256='2421369e3c944c1daec54b5d159c613296867356754fb54c6a34df34c4ed4116'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220712.4/go.20220712.4.linux-arm64.tar.gz'; \t\t\tsha256='a0e770681730e98beb962f712c065cb01223518f13a4002e7acbde6b92b1d9f4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-07-13T01:40:26.906563272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:28.18563586Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-13T01:40:29.852136544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-07-13T01:40:31.103746651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:9883b7671ff137303d48abd8c3202ff34b03c51f440cee2d61b02d7063fe293a",
                    "sha256:25eed9128d63f03199a1ebb827aeeb7c2bf2c06cb87c9a97a2d69ac00d9c7651",
                    "sha256:86aeefbf60de4507fc7059df4cbae7c28014385c028a7290e21f3725f48ae232"
                ]
            }
        },
        "1.17.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17.13-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17.13-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17.13-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17.13-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9750685e4d02bd61b1c04d6b859fc94e13b47c2a32a0108c7a74ea36f0cefd34",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "906ae66fa70fb3026146ce79411fc4a3c89ca775d72bb89b497e1eae3ad35c59",
            "container_config": {
                "Hostname": "906ae66fa70f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9750685e4d02bd61b1c04d6b859fc94e13b47c2a32a0108c7a74ea36f0cefd34",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:24:29.171516197Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-12T00:59:16.537031528Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:72ef8362158fcd45f10c6fa2dc3ea411e81f700ecb92faf37cb6dc1887756f9d in / "
                },
                {
                    "created": "2022-07-12T00:59:17.472770661Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T13:25:53.290825934Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-28T13:26:02.63523581Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-28T13:26:37.583608035Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:24:10.902989102Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:24:11.539571916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:24:12.565901088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:24:24.817626575Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:24:25.933763632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:24:26.886642541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:24:28.273422484Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:24:29.171516197Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:71d489ff0a74e386d2ef80695ac815a2bbf823e9f19c049098a62a2b98724cd2",
                    "sha256:63850759b10590f6bc56689c270e6439d7fb5c75e7b5a392afa74b679d26ddd2",
                    "sha256:ff96d50d8a1aeb2d7bf99d5191fa1dc1f5bfe259bf2cb4aead92a9ecf36c6ff6",
                    "sha256:46fc787d4086a3d3ca7989976c6816e377e399007a1d52e5c89421084c4ea736",
                    "sha256:4b20c7cce7295af487f98aa851de9550ae96e0c872eb77bf99dc0dac92eb704a",
                    "sha256:3ba326df14b79dff3ba04c14daa40633f0aa2cd9525b872cf5d67dd48aa36bcc",
                    "sha256:ed2954b52381960e2f081637f063dab34fd0f4ca3762866a7e00d8911926bf85"
                ]
            },
            "variant": "v7"
        },
        "1.17.13-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2ae395c164b77683d00aa9d15b0b9d19746e8cc6c4535cfdb8ecada05f9a52c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "437903eec94447bbe9f92df03a815c9c2a7ebbcbb014e67b0891234a1b573b59",
            "container_config": {
                "Hostname": "437903eec944",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2ae395c164b77683d00aa9d15b0b9d19746e8cc6c4535cfdb8ecada05f9a52c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:30:13.321983933Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-12T00:40:18.258475965Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2dcc013bca5a420cad3b6a1ac61f52ea58a29ae05fe282078a744979c0e1a89e in / "
                },
                {
                    "created": "2022-07-12T00:40:19.596247221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:33:32.889011249Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:33:38.096561815Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:33:56.983170946Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:53.392222712Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:54.274607078Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:55.053110246Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:30:07.599117793Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:30:09.118862887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:30:10.341194596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:30:12.086960785Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:30:13.321983933Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6cbd89bf334ffd281cde94aeb0053eb40a12b47a0cfb09746d3cbdffb29c929f",
                    "sha256:3ba6d6ab020fc7de625a4615a055a7160ebc3dbe6483cf0f1f8a9ef2b1216090",
                    "sha256:0f6fc5ef1c8fe0253b0750f2f1d204deed813259c58377352fffa4a597de8b53",
                    "sha256:b92d889aacfde120d54ff710eddefe8b4c15d64281347c2efbfa4b81626d7c5d",
                    "sha256:3ddae947bf6243952bdb361ab90c373b24ff908ce4b2144266a2ba8ba608aa67",
                    "sha256:fc6b9d6a555239d59a624687b4f5196faf4650360866e2613ed2124bce48c37e",
                    "sha256:c06c7bbf005df0d3a558c6d9e98e7e3f6bff95cde096ba31898375e0bb0ff908"
                ]
            },
            "variant": "v8"
        },
        "1.17.13-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "19d39056c56613ca3746e2427e5c72d1f61459d3dc27d0b17645e939f4348828",
            "container_config": {
                "Hostname": "19d39056c566",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:37.138320658Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:20:20.645152261Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d738977543f4afc4c3040c6fca3e3f15388ec3b7263a29a6aa83f9a4bf05fed1 in / "
                },
                {
                    "created": "2022-07-12T01:20:21.203852641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:49:24.449058445Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:49:29.810481633Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:49:47.578413254Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:04.584195938Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:05.411186284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:06.134787812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.8432116Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:33.33451692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.475707624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.025485138Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:37.138320658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86eecfa8066ec2f3b68dbbc2a4b0f1cc4110cbbdf297021043dd947878dbf2a3",
                    "sha256:9791176553792e1d82a0c1a27fd2a9e676cc3c4cbc5dea78f67cfea4dd4a59b6",
                    "sha256:92a02f6117f5bf2913dafdbeda998919d30194af06639cadf52c845657499294",
                    "sha256:4afd7e355699603f4e43405c807e8f4873908b0a4e9d91bd4d822bc47e80426d",
                    "sha256:822db2bc10ab1cec84ec90c9bdbfdaaa0ca90252a3059faaa12f694b37fdbbe5",
                    "sha256:80ac80fd70252a5d891186d839ff1943fc57a4e0459245a27e29084ac1a74957",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17.13-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "19d39056c56613ca3746e2427e5c72d1f61459d3dc27d0b17645e939f4348828",
            "container_config": {
                "Hostname": "19d39056c566",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:37.138320658Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:20:20.645152261Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d738977543f4afc4c3040c6fca3e3f15388ec3b7263a29a6aa83f9a4bf05fed1 in / "
                },
                {
                    "created": "2022-07-12T01:20:21.203852641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:49:24.449058445Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:49:29.810481633Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:49:47.578413254Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:04.584195938Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:05.411186284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:06.134787812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.8432116Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:33.33451692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.475707624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.025485138Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:37.138320658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86eecfa8066ec2f3b68dbbc2a4b0f1cc4110cbbdf297021043dd947878dbf2a3",
                    "sha256:9791176553792e1d82a0c1a27fd2a9e676cc3c4cbc5dea78f67cfea4dd4a59b6",
                    "sha256:92a02f6117f5bf2913dafdbeda998919d30194af06639cadf52c845657499294",
                    "sha256:4afd7e355699603f4e43405c807e8f4873908b0a4e9d91bd4d822bc47e80426d",
                    "sha256:822db2bc10ab1cec84ec90c9bdbfdaaa0ca90252a3059faaa12f694b37fdbbe5",
                    "sha256:80ac80fd70252a5d891186d839ff1943fc57a4e0459245a27e29084ac1a74957",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17.13-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d6a4ced872170caeb8f32b14216d45f3cb7783ce28de60cb0af6ba11a2f025f9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3574c8a91a42129eef036a46aa9ab6ed0e27f26c5f935eec666c9b9c6d84eec5",
            "container_config": {
                "Hostname": "3574c8a91a42",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d6a4ced872170caeb8f32b14216d45f3cb7783ce28de60cb0af6ba11a2f025f9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:29:29.67044787Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-12T01:00:25.10900088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8795228d7a914d37160bb846066961f7c4c5f5da1452e6ae888a2a766cd8739f in / "
                },
                {
                    "created": "2022-07-12T01:00:26.159112673Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T13:28:23.876257022Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-28T13:28:32.728915643Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-28T13:29:08.574195949Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:11.024328344Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:11.624042727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:12.617750019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:25.516409271Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:29:26.628025009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:27.505716952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:28.781297582Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:29:29.67044787Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7941b8ec8761b6a6c4a7c764301060446bce8c9ce1d3df31d649e1a9be88b078",
                    "sha256:4874d87669e8a44ecbda6b9909397512ab8f4e2794d4fc5061a2928613c420c3",
                    "sha256:3801c39798a7e1ab7edc7ddf6885e2990309352f74bec842317af89e46e10587",
                    "sha256:b29d7d99dc8489c31fee1f3a34842beade182d72d10c5f27302147c23ded079f",
                    "sha256:1574c094bcb89eaec69243a1c6d39b4baed257754f5b6b731a7c689881da14f3",
                    "sha256:030807fd245a09d1fa221ee82389a24904c5e71f657fb8ba1babf75be56465b5",
                    "sha256:b052cd8b5baea8259a68c04fb046d8ac04f6cf0a64e9223fdc3e4c26b1b7cae6"
                ]
            },
            "variant": "v7"
        },
        "1.17.13-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1c22ec79cd2df7ec7b9abd02c2b26a27609b51799dab3fb381c92e8d99face38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3d43b6da31040b019482e7e6b56c59a1c22552e1786b0828d0193d5076e121cd",
            "container_config": {
                "Hostname": "3d43b6da3104",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1c22ec79cd2df7ec7b9abd02c2b26a27609b51799dab3fb381c92e8d99face38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:29:48.510272447Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-12T00:40:46.312977653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea39534c5e9a548d7938f6b0e2459383caaf3906f3cc5eafe8bf66053b19f2d5 in / "
                },
                {
                    "created": "2022-07-12T00:40:47.480083337Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:34:53.420891773Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:34:58.494793089Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:35:18.318081179Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:29.379185757Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:30.01443299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:30.576763816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:44.226679554Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:29:45.366334228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:46.271721571Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:47.59829907Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:29:48.510272447Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d1e255b3a14c93752b815022b09bee99c2e5d3767239634cb5ab2fa768138b11",
                    "sha256:f690eb02a296d68b2ac637102964c9e5cb81946c7749e516277c65f40c3788ec",
                    "sha256:421fbb6828ce22109179b7a033cbf72263139180d2de80b024cb35791cb3dfcd",
                    "sha256:3f1d621771c64836918a9b0be6be02702c403ed64dd105269d924c48003a9cf4",
                    "sha256:3b5ab4944026fc0f26762881333097b48175862694b3c4170501e891a274083b",
                    "sha256:7de3acb631a7c6134a29457e389afa3597303b35addb92de065b16d92eb988be",
                    "sha256:c196fe89d7d31e7f16e18576e0b22fce221379a7bc98f52c976bb3f005d8b572"
                ]
            },
            "variant": "v8"
        },
        "1.17.13-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17.13-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17.13-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17.13-1-fips-cbl-mariner1.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:91f9e06508007ce9037ed1e9513e20f0145daa746bdc8d45dd0eedda4a2a9b9c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c195ae7631c8775509838285bf1a9643b026040927d16c77e2eb72c87855055",
            "container_config": {
                "Hostname": "2c195ae7631c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:91f9e06508007ce9037ed1e9513e20f0145daa746bdc8d45dd0eedda4a2a9b9c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:20:14.725938245Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-22T22:07:03.703640927Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:19:55.455853349Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:19:56.576923613Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:19:57.14327237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:20:09.357290396Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:20:10.8146631Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:20:11.903703543Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:20:13.525344751Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:20:14.725938245Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:40d5d0fffb828b4d839ff882af0702ace5fb7c2d4c5f703ad5a2b999216b4b65",
                    "sha256:212d317b849dff207125435d0de7142647762739cffbbc6ac779ddcf45c1f064",
                    "sha256:1f6d87c869a11f7d44648d2649343f90f7c09885415d626a6b407de90b91ed28",
                    "sha256:26247e46aad78e0e4b2e7b3e3cd3362a2c28b7a21a11ee23fb7c670098a6b375"
                ]
            }
        },
        "1.17.13-1-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c400546624089a42c1ac9661e30ed8b5cd38bbef099b5e557ae5e7db737258b",
            "container_config": {
                "Hostname": "2c4005466240",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:36.529453586Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:07.522743702Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:08.266125666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.802161782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.605698371Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:32.994967744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.048824868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:35.496567519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:36.529453586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:a7c70d4ecd975d83fa9e06b8a3f889f228f244eeb70dd129de8e074b4ff7392f",
                    "sha256:9b6e15b65fb55fea34746f3bc8d293de528fc77bab94f86ccfa3bd5405c87e90",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17.13-1-fips-cbl-mariner2.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c400546624089a42c1ac9661e30ed8b5cd38bbef099b5e557ae5e7db737258b",
            "container_config": {
                "Hostname": "2c4005466240",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:36.529453586Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:07.522743702Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:08.266125666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.802161782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.605698371Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:32.994967744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.048824868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:35.496567519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:36.529453586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:a7c70d4ecd975d83fa9e06b8a3f889f228f244eeb70dd129de8e074b4ff7392f",
                    "sha256:9b6e15b65fb55fea34746f3bc8d293de528fc77bab94f86ccfa3bd5405c87e90",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17.13-1-fips-cbl-mariner2.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:884b86a1ca6c4072afb5994c4f198983261fb0c9f77e1ca8a96dbbf322a925e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c898d5e20b337b95be035f56d791cf4550384c94cb74a428c9a5c6488494b060",
            "container_config": {
                "Hostname": "c898d5e20b33",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:884b86a1ca6c4072afb5994c4f198983261fb0c9f77e1ca8a96dbbf322a925e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:30:11.359621604Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-07-01T21:07:09.07280569Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:29:49.88513842Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:29:50.540748526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:51.416376343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:30:06.462472841Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:30:07.777723608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:30:08.627257564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:30:10.246533835Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:30:11.359621604Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8c01e238df01b579e7ad38505b8e0f9414e0407c05a5badd2494fea15155d079",
                    "sha256:b11f1c019cca16308ac3e271862d659d78fed97db0f4e82de19c5e764a1811a9",
                    "sha256:c364f61808dde5d1a9432c628b76497330bf3043c48bd9f378988906bd7ad1d0",
                    "sha256:289896182e8932961a492fd5407a2c98e136076de350fd100c9cbb4797478872"
                ]
            }
        },
        "1.17.13-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:2e8585e2ed6e5c8b1225af8bef2ef6948dc525a5c05a551c3c81d4e7a0f9981f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "05e57716484961a336c27b1ae720adc800239c333ff95d687159571986c8f2b6",
            "container_config": {
                "Hostname": "05e577164849",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:2e8585e2ed6e5c8b1225af8bef2ef6948dc525a5c05a551c3c81d4e7a0f9981f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-08-01T21:24:30.4693832Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-07-06T22:15:10.1814044Z",
                    "created_by": "Apply image 10.0.17763.3165"
                },
                {
                    "created": "2022-08-01T21:23:18.5864442Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-08-01T21:23:19.5693496Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-08-01T21:23:20.2406719Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-08-01T21:23:22.7333467Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-08-01T21:23:23.3182105Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-08-01T21:23:23.8182526Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.13"
                },
                {
                    "created": "2022-08-01T21:24:22.4128037Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:7e32575facdbc5f6b363ebbf23062286e56ebe7058bb28f8c5090577ca9929f6 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-08-01T21:24:28.4507829Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-08-01T21:24:30.4693832Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.3165",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1147007cf0d1b921afd85be95b93b8a1408b0d883e9724f8d06e5dd6d1d87dc9",
                    "sha256:f15573524177fa4b0ee2d9af443a831dfe8417a658ce69748546394c3db03e68",
                    "sha256:93e4fa69707139bcd383edac3f20398afca94842ac40d93f0c0d6e4b0ec2cc04",
                    "sha256:0eabb88c660c11589a2f447b8b1ae5af442ccea481ac13c0abfbe6ba135d84d9",
                    "sha256:86aac0fd14cf131d8d68391d53a873d3b97eae056e458ee989c13020728ca34a",
                    "sha256:d420b3a224b5c77f0daa35ccc6666b02f99a590c313f990a9b72df170927fc68",
                    "sha256:150067db9a5e73a8856b9cf92bb04886402b697e78a7d212c1eec46c75a7c2da",
                    "sha256:6c5fc3fbc3f2a402488b96c224a2a1febe6f2f12f51db5f3811f1079813595da",
                    "sha256:4afda6ebd8dcaf02206b6c4ca2c17ce307264625ae426f31c7e4c51bc1824a6d",
                    "sha256:60534b1f2a0a9adb7da571635027d71b14289c94125381e3740e1f15662c4646"
                ]
            }
        },
        "1.17.13-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:1588ad3ffba35e606d887a30a861dfe5022fd763a53cbac46171dca49caddd32",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "90ac996d651698f1897f88f61dcbda54caef954645126ff75af81b626a09b608",
            "container_config": {
                "Hostname": "90ac996d6516",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:1588ad3ffba35e606d887a30a861dfe5022fd763a53cbac46171dca49caddd32",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-08-01T21:21:18.0761889Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-07-04T17:25:17.1474666Z",
                    "created_by": "Apply image 10.0.20348.825"
                },
                {
                    "created": "2022-08-01T21:19:50.114002Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-08-01T21:19:50.743402Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-08-01T21:19:51.6021435Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-08-01T21:20:02.8068693Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-08-01T21:20:03.3700152Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-08-01T21:20:04.0517048Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.13"
                },
                {
                    "created": "2022-08-01T21:21:09.6265781Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:7e32575facdbc5f6b363ebbf23062286e56ebe7058bb28f8c5090577ca9929f6 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-08-01T21:21:16.4128782Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-08-01T21:21:18.0761889Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.825",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b4ba8960c294201de1b8445d3fd802e207b75b77238ae5abeec047770227761b",
                    "sha256:8ed35a8299e23de6a0f6a13e6a6cef11a12c24b5e9acef459bddda18ba03893b",
                    "sha256:55fa40d1677e23df5648be891f4dbc0af20a5c49368602548122e758d2d61ef1",
                    "sha256:fde8595a552315ecb8267988e9aeccaec70b475364134c27a352fa5515d192dc",
                    "sha256:047470f6b95858331b9b862e5c95e4826875a2acf2ddc871b4ec31cc0b8cecb4",
                    "sha256:47a748350a104b78072d7fd4ee99404370e27db79893fc35a5bb8ff12a2e1391",
                    "sha256:8aff5f6eee3025c82f308da223df5e488d29ad1bd4546282ffd526fdf20bf8fa",
                    "sha256:9ec20689f49b88e0b710a05818a37197b25f037364a891ebe062d7047444c4c7",
                    "sha256:5caf4c98698a79037e4cf97e83f514761412c6794fdcf77ae0ac2794124cefcf",
                    "sha256:87ccc964623a36930c421515b475eb463135684b283a71b208baa34e611f9d3e"
                ]
            }
        },
        "1.17.13-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ee2c650facc5411480a472acb5f1fe4d8f8db806ace6e25bddeb1d9e2759a60f",
            "container_config": {
                "Hostname": "ee2c650facc5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:32.998480662Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:00.576421618Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:01.275901506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:01.870572467Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:28.382502614Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:29.587320566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:30.575518573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.904372638Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:32.998480662Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:cdb03c51bdce5737b5730d67245d09208e98d846893912b3e535dc8947c568ac",
                    "sha256:6e064ddc078753fad316f76a0b7efebdd4afd092ebd5e3b23fa3034d2e243e56",
                    "sha256:2bf04990020bddcd77cdfad5eed7e53cdf97077e25035868daa5382d73a406d3"
                ]
            }
        },
        "1.17.13-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ee2c650facc5411480a472acb5f1fe4d8f8db806ace6e25bddeb1d9e2759a60f",
            "container_config": {
                "Hostname": "ee2c650facc5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:32.998480662Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:00.576421618Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:01.275901506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:01.870572467Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:28.382502614Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:29.587320566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:30.575518573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.904372638Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:32.998480662Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:cdb03c51bdce5737b5730d67245d09208e98d846893912b3e535dc8947c568ac",
                    "sha256:6e064ddc078753fad316f76a0b7efebdd4afd092ebd5e3b23fa3034d2e243e56",
                    "sha256:2bf04990020bddcd77cdfad5eed7e53cdf97077e25035868daa5382d73a406d3"
                ]
            }
        },
        "1.17.13-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7b88748e84c15863e59f901ba9579db1b74a795b2f194fd7f364e532460e1800",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6872fca5b0f3546f1a0ffd9387355286d021361d2cba5da339db22b3f9514d19",
            "container_config": {
                "Hostname": "6872fca5b0f3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7b88748e84c15863e59f901ba9579db1b74a795b2f194fd7f364e532460e1800",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:29:51.924375441Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T01:05:04.860698579Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f45aa06c6a1c011e41ff7e4685f05d91970973768fc88ff3e825c5ac4fd6058 in / "
                },
                {
                    "created": "2022-06-23T01:05:05.860583099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:58:31.089050931Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:58:43.032378667Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:59:36.52617777Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:29.656172989Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:30.325424662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:30.916967776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:45.606364341Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:29:47.015278279Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:48.464010101Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:50.170532228Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:29:51.924375441Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcf373643da7a7fa026733cc23d26e9315b02f345dc32113a61072dd500d56f5",
                    "sha256:df63453f0cbced9283aa8ff9a1905f92c86a17ed3dc74d3e0e1d5f80b4b7bb3a",
                    "sha256:867ebbcab3918a95bd63f25f87b10745e22d10e2fe84c4c1bdbe5acd33caf405",
                    "sha256:10d67a9607fad862bd53c93a6a7c8e46166e895e2c04346a9f37b48fa0bf5d03",
                    "sha256:b75cd4b7bfb0f531f4ab7e154725db1cf9b6d429e3661f256f4a1642d31c6e96",
                    "sha256:25ede7a6fab48a2c7c1c45cb9ce30053c05b938b8a98481cb3366f814bee6c84",
                    "sha256:f4f134af0bb0144977ffb8babd0b9d131c4e3871f01141c948e838297041ddd5"
                ]
            },
            "variant": "v7"
        },
        "1.17.13-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:44de6dbc3cb7d24458cf3bef750a078301bbfab86a4f0f7ab78a39f8000e9236",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "707e1d06d24aa368ff04138f58ced06696383b000c413e41b09b360a9fa9eddc",
            "container_config": {
                "Hostname": "707e1d06d24a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:44de6dbc3cb7d24458cf3bef750a078301bbfab86a4f0f7ab78a39f8000e9236",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:29:57.254217029Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-06-23T00:42:45.082860306Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d8b1da94fcec5d068e3e6465fac70cce404c331bb52e30a5bf7cbd950baa5fe in / "
                },
                {
                    "created": "2022-06-23T00:42:45.897823754Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:15:56.978732246Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:16:01.851854497Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:16:21.28038999Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:37.068915685Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:29:37.711866732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:38.543846047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:52.902846693Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:29:54.028745658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:54.950777728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:29:56.313816466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:29:57.254217029Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d796fa548097cef349c3c59fd49c2e9a603eabca13d312e9d19c26b6420dab1",
                    "sha256:09a30e15ff852b08d62cd20066edfea325f96a43efc559ddd1c1bac42fc18011",
                    "sha256:37870137c560743bda497a61f80278abed959ef065c85e737ea525e3296cb453",
                    "sha256:c2eea412e5b65116453a14496f0365ba7f2edc676e56f069994c0f1f5878b2e4",
                    "sha256:33d7b1e938829693843bf65765523905ce2f0733ee58b629bcfe6a24a0730951",
                    "sha256:c60bc95dfe9461530c53273fb1a5ea84b58ba5c56717d196b5d456f7382263ed",
                    "sha256:49ab5014a22f7aeced65206a82432e47393f4ca5f9487c56ca8f47cf97016c6d"
                ]
            },
            "variant": "v8"
        },
        "1.17.13-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:dc46074dcf46ae7d3f0ee12e41dd1497014768aecbb51f4f2f40aa32df8bf8eb",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "60ee7578b3767e9bf55da09861305d8266d03e27b89e29f9742bbd6db760d234",
            "container_config": {
                "Hostname": "60ee7578b376",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:dc46074dcf46ae7d3f0ee12e41dd1497014768aecbb51f4f2f40aa32df8bf8eb",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-08-01T21:23:17.3942035Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:27:13.2763402Z",
                    "created_by": "Apply image 10.0.17763.2803"
                },
                {
                    "created": "2022-07-06T22:37:15.1504938Z",
                    "created_by": "Install update 10.0.17763.3165"
                },
                {
                    "created": "2022-08-01T21:21:20.863023Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-08-01T21:21:22.0195164Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-08-01T21:21:23.416131Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-08-01T21:21:24.1494582Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-08-01T21:21:25.1771711Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-08-01T21:21:48.7014204Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-08-01T21:21:49.9419559Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-08-01T21:21:59.3061907Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-08-01T21:22:01.3221885Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.13"
                },
                {
                    "created": "2022-08-01T21:23:15.9164992Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '98ba12b93cdf1260ccc2b12c035ceb2204c07d94ff82bdddf0e8ff1c02f37533'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-08-01T21:23:17.3942035Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.3165",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6fdd6832d95a5f537e0e7d87f2613ea9741ad9c20438b9d5a2697a883c4cd96",
                    "sha256:5e610cf6f2545f0e6ff64a4e2dee049427c80892d8b3d5ac0440664f0624b5ed",
                    "sha256:6dfa7f7650c92aec3abe8e60faf896ac370b9fcc8c99bd6cbc18c3f01891f4ef",
                    "sha256:ff2869cacf77e7d345ddea6c2edecc0e6b0e00079f7fb3377bc1fcd1d2c1d456",
                    "sha256:3640ad3ca957d4e577c335896c46dbce14f72e9f4b8ebde55de871eea339d9f5",
                    "sha256:d76d3676559d274d9daac3e96178e00a6385681d573a023dc35cddf420958e46",
                    "sha256:adb1c587331283b818bde522958619f5d7a5f947ffd2e8c4c4f5de808face866",
                    "sha256:a5b721b0aefed4bc8d33b33d936ea23b1e22fb38da8d958b5dea1d12b97435e8",
                    "sha256:2d819f723bccbf14147fa512256219a6dff50379ac72e63c0e66e66263b201f8",
                    "sha256:aa4fd75c7d1972d24fbd839b58b3c210bd959f8e69967b5461834cf321304776",
                    "sha256:09a4fa40dd746af120e00dfbb8ea764df759dac2c7559963c1f5d1996be76170",
                    "sha256:c2163035f27944b79d0205db976e43afc5ed5f74bdc898a784d72bcfcaae6abc",
                    "sha256:cdc3302c65cb1a73df2f78937a1ac8565791433e59ddf3b255da33b467dc8e3a"
                ]
            }
        },
        "1.17.13-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:6ba8f903c70bac7af1a4e3dbc4c90bf9b7e1b2828a43d01a8e0d46ce51289387",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "09ec1196bf5e62b48b89ce57e9d69e364957f4e5d5105d245afd75ace937af4f",
            "container_config": {
                "Hostname": "09ec1196bf5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:6ba8f903c70bac7af1a4e3dbc4c90bf9b7e1b2828a43d01a8e0d46ce51289387",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-08-01T21:38:40.0816159Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-07-05T07:26:40.4472455Z",
                    "created_by": "Apply image 10.0.14393.206"
                },
                {
                    "created": "2022-07-05T08:33:50.3924482Z",
                    "created_by": "Install update 10.0.14393.5246"
                },
                {
                    "created": "2022-08-01T21:31:55.541622Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-08-01T21:31:57.810283Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-08-01T21:32:00.0828228Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-08-01T21:32:02.6356597Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-08-01T21:32:04.8076191Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-08-01T21:33:35.5560709Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-08-01T21:33:38.8212407Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-08-01T21:34:04.8252223Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-08-01T21:34:07.7406045Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.13"
                },
                {
                    "created": "2022-08-01T21:38:35.4567109Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '98ba12b93cdf1260ccc2b12c035ceb2204c07d94ff82bdddf0e8ff1c02f37533'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-08-01T21:38:40.0816159Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5246",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:94ce506bdcf2545f50f7b45be1696456a85a860477607a3f0686d3af6f05159e",
                    "sha256:0a77b9a373d599705c670d658a04da546310e55f7562c6351c033ae47ded0d20",
                    "sha256:62e9953ce74ebdade5633855b689745b0c873ffe674a18859e0c7abb37afda33",
                    "sha256:dc4ed8a1b20812a142b9891549fc810b6b8cfba70cafe234805e542c3d1ec54a",
                    "sha256:f30f5e5568645556a8e9db8891917d445010fbf6a5ece742a2bc490362adc57b",
                    "sha256:b20d94cfda38e0d186214c984d48b7a663248bd3398603f08b92ac77d13c550d",
                    "sha256:f602f0d3f97b36422ce527276ac7613274729c4f64877dc90f80ec5767dfa171",
                    "sha256:57d60ffb1fc097c446c6b586099389c9d3be33795a6a7d214e0b216ea0ba11ee",
                    "sha256:d7fb2109f9e19a8b3a9f0a92a9b32e54605fcb1e5cecb2e6b8b071b4b1975067",
                    "sha256:cda64a5676c44947c91c0387629f2ae1641fe8ee8ec2009764a6a13f65ae31a4",
                    "sha256:ee4e133fe9931964de9b9a306747371277f5e9adfc16a34c48d407d41981b62b",
                    "sha256:4182ed89f56074f03f13bf9b75820a927d347e9c8976af5296e8f94140ca4970"
                ]
            }
        },
        "1.17.13-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:d350b1cc0073477c6eaeebe4ec85e2f80d1f3e963a66818ba7c3c03493cda435",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "65fe4d7493e5942d5564d1e527e941d06d14db1611195b83bda8fdbc1fb99505",
            "container_config": {
                "Hostname": "65fe4d7493e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.13"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:d350b1cc0073477c6eaeebe4ec85e2f80d1f3e963a66818ba7c3c03493cda435",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-08-01T21:19:48.321284Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:12:09.4542389Z",
                    "created_by": "Apply image 10.0.20348.643"
                },
                {
                    "created": "2022-07-04T17:46:55.3505291Z",
                    "created_by": "Install update 10.0.20348.825"
                },
                {
                    "created": "2022-08-01T21:16:08.6226277Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-08-01T21:16:09.2753576Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-08-01T21:16:10.0370848Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-08-01T21:16:10.7415399Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-08-01T21:16:11.3833619Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-08-01T21:17:00.0670045Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-08-01T21:17:00.9275323Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-08-01T21:17:12.7642639Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-08-01T21:17:13.3879643Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.13"
                },
                {
                    "created": "2022-08-01T21:19:47.1276057Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '98ba12b93cdf1260ccc2b12c035ceb2204c07d94ff82bdddf0e8ff1c02f37533'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-08-01T21:19:48.321284Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.825",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9bda40f596a8f8648c218b23e552acf9498c039eb0a48c222cfcd5a9af9e841",
                    "sha256:f6337a87e50e98cc6c9c17cfdbfef4c60a73567050d6dd3fa158e5042bbfabc8",
                    "sha256:c43b0917ace428b6924972d5d823fd02841b658b4174f51e410f580518e874d4",
                    "sha256:3fb158b081a49adbddff063a9b9fae81e9aa33fe5cf60f9b9ec61ad1f54a0d4b",
                    "sha256:876b1384b731608676b81fe203b9c9f567540fdedb7038d67fef2d7caf32cc69",
                    "sha256:de83b4305597f4346afdc86a5affe61a1f1bf7ec463de87dfed6ba56b12829fa",
                    "sha256:46eca3df7c4b394ebdddbee509c806f907d83d3c0b025f6cba2ba99ed73fb060",
                    "sha256:2ffeed1323f695b20744dec1dbe47e136d974447e4e3b9cceeea55bc6fdf1f51",
                    "sha256:e6613305a854165b5da9be442da97648a1826869e801a03e22ffca701e5a790b",
                    "sha256:2fcbf87839eb197b3853afc6c025004831ca944fa9f443ebe03e889983b7f2b6",
                    "sha256:4a3d6f4d269ea40e0d12b24ac9c62c4e4c15a6d49958a9aae61a8d54a85c6d0d",
                    "sha256:1d230cb2942cc99ea285f1a7c00ba1bb1239e56aab24fc17d91e6e2fd0f7e845",
                    "sha256:079bfc6380374887f620f03fda74075ce0aeff669b54119559b68103218f5ff3"
                ]
            }
        },
        "1.17.13-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2264e67d79e48096d311d89a2ba8772345462fe396f4da6519497d0e4abe67bc",
            "container_config": {
                "Hostname": "2264e67d79e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9f81f157dbe49feb4de1c24a22d0d7cebd2fd6ef48f77eecab6b46b84a2597",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:10.749369181Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:19:57.867799329Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3451708ab45bc1bcfc1ebb2075d3af16767477cbeb79334959e0d1ff02b0864b in / "
                },
                {
                    "created": "2022-07-12T01:19:58.564045815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:48:04.526066337Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:48:10.045273385Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:48:25.670957051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.168373633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:45.906626389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:46.63082114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:05.957651512Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:07.252358612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.308021796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:09.709853427Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:10.749369181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bdeef4a08f393fcbfa9e33e9abd8912a34d8f83dbae73e97564ca77fb01999b",
                    "sha256:36cd374265f4eb8b2e944c88934e0b1b75e02b244d62b8c9c0dd84239f0ee136",
                    "sha256:9be7f4e74e718ca2b7a8fca364478cdc4c45bb50595412706a4d42eacf511842",
                    "sha256:7372faf8e6039e95daa0c10e9fd183a6000bc77febda0961fa1ada875d8b1d27",
                    "sha256:c4805e5e6e046b066d7c9c14448e6af1313f8f269ca57baddb8b57bd8d0f8c8b",
                    "sha256:c30686198298801a96390f383ad14b7d6db0069668ca5d71754c15c0d7baa7a2",
                    "sha256:09409b05363adc70bfc8d3b7ccbec9d09abb2136cf17d3e86c7ae7c300f7e875"
                ]
            }
        },
        "1.17.13-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "19d39056c56613ca3746e2427e5c72d1f61459d3dc27d0b17645e939f4348828",
            "container_config": {
                "Hostname": "19d39056c566",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c35d3440bb167f81195f12e7ec5e6d1fa8b02be263f7eb9809420a5ea6414914",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:37.138320658Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-12T01:20:20.645152261Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d738977543f4afc4c3040c6fca3e3f15388ec3b7263a29a6aa83f9a4bf05fed1 in / "
                },
                {
                    "created": "2022-07-12T01:20:21.203852641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:49:24.449058445Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:49:29.810481633Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:49:47.578413254Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:04.584195938Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:05.411186284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:06.134787812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.8432116Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:33.33451692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.475707624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.025485138Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:37.138320658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86eecfa8066ec2f3b68dbbc2a4b0f1cc4110cbbdf297021043dd947878dbf2a3",
                    "sha256:9791176553792e1d82a0c1a27fd2a9e676cc3c4cbc5dea78f67cfea4dd4a59b6",
                    "sha256:92a02f6117f5bf2913dafdbeda998919d30194af06639cadf52c845657499294",
                    "sha256:4afd7e355699603f4e43405c807e8f4873908b0a4e9d91bd4d822bc47e80426d",
                    "sha256:822db2bc10ab1cec84ec90c9bdbfdaaa0ca90252a3059faaa12f694b37fdbbe5",
                    "sha256:80ac80fd70252a5d891186d839ff1943fc57a4e0459245a27e29084ac1a74957",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17.13-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17.13-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6db46fa06d18477c09e1c55d88a23a14c73c46d5077811b82065866281ec707f",
            "container_config": {
                "Hostname": "6db46fa06d18",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e147686ce3eae035f3f21ff7c56fc9bc90779e8980caa2750d355cc3d06fa50b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:13:04.103717255Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-22T22:09:53.362053375Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:34.699289477Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:35.479081596Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:36.111960641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:58.86836206Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:13:00.335937696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:01.511766789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:13:03.026503341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:13:04.103717255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a02526977d8e54d3a14188385f50000f916d59ac33af8bc11840c9732757c301",
                    "sha256:5eced2745173d00528eb065e09f725dafa6640473beb3337d041249f07ac3219",
                    "sha256:a4dbaf598a15c808e30c01c0845dcb58aaa8421d8657138d46849ff0d708d737",
                    "sha256:acac759d6849e4c4cc5d01ad7f6576551140c895fea7db58652c24da9222ac66"
                ]
            }
        },
        "1.17.13-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c400546624089a42c1ac9661e30ed8b5cd38bbef099b5e557ae5e7db737258b",
            "container_config": {
                "Hostname": "2c4005466240",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0f07dcbbccbc6f0e83d3555c3c8d08d0751f02ae6cb83c47d3a9f58d1247c0c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:36.529453586Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-07-01T21:35:23.240538946Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-08-01T21:12:07.522743702Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-08-01T21:12:08.266125666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:08.802161782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.605698371Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-amd64.tar.gz'; \t\t\tsha256='1df52caf11804a63503c92bc4977ff77fa2b13638e9831728306702f14cbb112'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220801.10/go.20220801.10.linux-arm64.tar.gz'; \t\t\tsha256='59c7c3e6f6229908102ed722d51fdd10f241501c3c3258a41fafd382eb1c70c4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:32.994967744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:34.048824868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:35.496567519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:36.529453586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5b3b31ff051f9796c800a07534df8398951f0a6d97811f509b30f89b11f0b56c",
                    "sha256:a7c70d4ecd975d83fa9e06b8a3f889f228f244eeb70dd129de8e074b4ff7392f",
                    "sha256:9b6e15b65fb55fea34746f3bc8d293de528fc77bab94f86ccfa3bd5405c87e90",
                    "sha256:ca3a93b2f1ad7b23a18ece42852617b2189b882a3597ac72edb2c176465fee92"
                ]
            }
        },
        "1.17.13-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ee2c650facc5411480a472acb5f1fe4d8f8db806ace6e25bddeb1d9e2759a60f",
            "container_config": {
                "Hostname": "ee2c650facc5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c25457f0f3cf08e0a95f75f4024bd4f6d5359aac3c0199c1547f73cfbf4924af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:32.998480662Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:00.576421618Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:12:01.275901506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:01.870572467Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.13",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:28.382502614Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-amd64.tar.gz'; \t\t\tsha256='947d2a72150879caee2d1b70115ff30f6e55218f278ff2c4a6e264e9d65c8f3e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-armv6l.tar.gz'; \t\t\tsha256='a1de287d3505b7b5afe8044ef6303342e98dad1f64e58f4f178113bfc0ce5ff7'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220801.4/go.20220801.4.linux-arm64.tar.gz'; \t\t\tsha256='dab409229e15a2d3c60badb666e970057ddcfdf4dc942da5b3d9bfc7c3c9e8f5'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:29.587320566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:30.575518573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:31.904372638Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:32.998480662Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:cdb03c51bdce5737b5730d67245d09208e98d846893912b3e535dc8947c568ac",
                    "sha256:6e064ddc078753fad316f76a0b7efebdd4afd092ebd5e3b23fa3034d2e243e56",
                    "sha256:2bf04990020bddcd77cdfad5eed7e53cdf97077e25035868daa5382d73a406d3"
                ]
            }
        },
        "1.17.6-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c78dfcbe97e4ecaf09b2282ef41ada16dfb3ea67c7a5de2b7c64134c5241cd10",
            "container_config": {
                "Hostname": "c78dfcbe97e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:57.176123438Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-10T21:31:32.946586677Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-10T21:31:33.596831012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:34.495276182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:52.947386808Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220131.4/go.20220131.4.linux-amd64.tar.gz'; \t\t\tsha256='7fb05af800e2af224bcf03e5bf9d89cece7ff486a26aea85a8fe198c14781aa0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:54.125154856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:55.014358209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:56.28918216Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:57.176123438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:15d0365b5d7997cabe9f982f46676dc1e4982941d6b0dfdd4e530ca81d08a006",
                    "sha256:043e803c5eb3fe27353083037e26bd1a4690728967848e6b5630ca548c6f349a",
                    "sha256:6d3214c371acdfde72facc254b08922c257a5e3a9ac430f8b30cb31650ddbc9a"
                ]
            }
        },
        "1.17.6-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c78dfcbe97e4ecaf09b2282ef41ada16dfb3ea67c7a5de2b7c64134c5241cd10",
            "container_config": {
                "Hostname": "c78dfcbe97e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:57.176123438Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-10T21:31:32.946586677Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-10T21:31:33.596831012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:34.495276182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:52.947386808Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220131.4/go.20220131.4.linux-amd64.tar.gz'; \t\t\tsha256='7fb05af800e2af224bcf03e5bf9d89cece7ff486a26aea85a8fe198c14781aa0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:54.125154856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:55.014358209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:56.28918216Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:57.176123438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:15d0365b5d7997cabe9f982f46676dc1e4982941d6b0dfdd4e530ca81d08a006",
                    "sha256:043e803c5eb3fe27353083037e26bd1a4690728967848e6b5630ca548c6f349a",
                    "sha256:6d3214c371acdfde72facc254b08922c257a5e3a9ac430f8b30cb31650ddbc9a"
                ]
            }
        },
        "1.17.6-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c78dfcbe97e4ecaf09b2282ef41ada16dfb3ea67c7a5de2b7c64134c5241cd10",
            "container_config": {
                "Hostname": "c78dfcbe97e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:57.176123438Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-10T21:31:32.946586677Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-10T21:31:33.596831012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:34.495276182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:52.947386808Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220131.4/go.20220131.4.linux-amd64.tar.gz'; \t\t\tsha256='7fb05af800e2af224bcf03e5bf9d89cece7ff486a26aea85a8fe198c14781aa0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:54.125154856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:55.014358209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:56.28918216Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:57.176123438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:15d0365b5d7997cabe9f982f46676dc1e4982941d6b0dfdd4e530ca81d08a006",
                    "sha256:043e803c5eb3fe27353083037e26bd1a4690728967848e6b5630ca548c6f349a",
                    "sha256:6d3214c371acdfde72facc254b08922c257a5e3a9ac430f8b30cb31650ddbc9a"
                ]
            }
        },
        "1.17.6-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c78dfcbe97e4ecaf09b2282ef41ada16dfb3ea67c7a5de2b7c64134c5241cd10",
            "container_config": {
                "Hostname": "c78dfcbe97e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:57.176123438Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-10T21:31:32.946586677Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-10T21:31:33.596831012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:34.495276182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:52.947386808Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220131.4/go.20220131.4.linux-amd64.tar.gz'; \t\t\tsha256='7fb05af800e2af224bcf03e5bf9d89cece7ff486a26aea85a8fe198c14781aa0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:54.125154856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:55.014358209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:56.28918216Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:57.176123438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:15d0365b5d7997cabe9f982f46676dc1e4982941d6b0dfdd4e530ca81d08a006",
                    "sha256:043e803c5eb3fe27353083037e26bd1a4690728967848e6b5630ca548c6f349a",
                    "sha256:6d3214c371acdfde72facc254b08922c257a5e3a9ac430f8b30cb31650ddbc9a"
                ]
            }
        },
        "1.17.6-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c78dfcbe97e4ecaf09b2282ef41ada16dfb3ea67c7a5de2b7c64134c5241cd10",
            "container_config": {
                "Hostname": "c78dfcbe97e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43b094c0cb0a3524087719a7d6abc6ff3af771b00a16b4ff703e4b67b4a609ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:57.176123438Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-10T21:31:32.946586677Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-10T21:31:33.596831012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:34.495276182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:52.947386808Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220131.4/go.20220131.4.linux-amd64.tar.gz'; \t\t\tsha256='7fb05af800e2af224bcf03e5bf9d89cece7ff486a26aea85a8fe198c14781aa0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:54.125154856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:55.014358209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:56.28918216Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:57.176123438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:15d0365b5d7997cabe9f982f46676dc1e4982941d6b0dfdd4e530ca81d08a006",
                    "sha256:043e803c5eb3fe27353083037e26bd1a4690728967848e6b5630ca548c6f349a",
                    "sha256:6d3214c371acdfde72facc254b08922c257a5e3a9ac430f8b30cb31650ddbc9a"
                ]
            }
        },
        "1.17.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "72dc71a99c06fd60820e5184cac3e1f4f5b3753f6e5042484414c74240b1e620",
            "container_config": {
                "Hostname": "72dc71a99c06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.346679333Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:22.311876099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cca7f8e4abcd8309501cad216ff33a28932386ded66461a7591c0fdf2c859d3 in / "
                },
                {
                    "created": "2022-01-26T01:40:23.006065148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:11:57.043128495Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:12:03.659727969Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:12:22.981984194Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:21.377896011Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:22.092173452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:22.706682806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.666859601Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:43.90895208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.002767839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.342859286Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.346679333Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b0f2f2f52795d31dd1107e7ac81adca6aa51769f6ec4e23f745e373ae588995",
                    "sha256:6398d5cccd2cc2c5989fc2021b9519eb5270bc8e09148b83818d0c1e10c69b98",
                    "sha256:bed676ceab7ad31ef6668df4b1d025e32744ca8ea6b7618d25cf318863f21fe8",
                    "sha256:613ab28cf833881e95b4ee02829114c33e9cd98ae2f10a8e46a48e6d88d410e2",
                    "sha256:429f6e331d0d4c4fb0a8c6c86b8ed7117c2217bb29f2dc2b5a499ebe99cf9c38",
                    "sha256:4f7c9be874e651fd76f058c27f8bb17749ffa016881507b287d569c762450b5f",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.17.7-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "72dc71a99c06fd60820e5184cac3e1f4f5b3753f6e5042484414c74240b1e620",
            "container_config": {
                "Hostname": "72dc71a99c06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.346679333Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:22.311876099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cca7f8e4abcd8309501cad216ff33a28932386ded66461a7591c0fdf2c859d3 in / "
                },
                {
                    "created": "2022-01-26T01:40:23.006065148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:11:57.043128495Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:12:03.659727969Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:12:22.981984194Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:21.377896011Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:22.092173452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:22.706682806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.666859601Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:43.90895208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.002767839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.342859286Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.346679333Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b0f2f2f52795d31dd1107e7ac81adca6aa51769f6ec4e23f745e373ae588995",
                    "sha256:6398d5cccd2cc2c5989fc2021b9519eb5270bc8e09148b83818d0c1e10c69b98",
                    "sha256:bed676ceab7ad31ef6668df4b1d025e32744ca8ea6b7618d25cf318863f21fe8",
                    "sha256:613ab28cf833881e95b4ee02829114c33e9cd98ae2f10a8e46a48e6d88d410e2",
                    "sha256:429f6e331d0d4c4fb0a8c6c86b8ed7117c2217bb29f2dc2b5a499ebe99cf9c38",
                    "sha256:4f7c9be874e651fd76f058c27f8bb17749ffa016881507b287d569c762450b5f",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.17.7-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "72dc71a99c06fd60820e5184cac3e1f4f5b3753f6e5042484414c74240b1e620",
            "container_config": {
                "Hostname": "72dc71a99c06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.346679333Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:22.311876099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cca7f8e4abcd8309501cad216ff33a28932386ded66461a7591c0fdf2c859d3 in / "
                },
                {
                    "created": "2022-01-26T01:40:23.006065148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:11:57.043128495Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:12:03.659727969Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:12:22.981984194Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:21.377896011Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:22.092173452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:22.706682806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.666859601Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:43.90895208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.002767839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.342859286Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.346679333Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b0f2f2f52795d31dd1107e7ac81adca6aa51769f6ec4e23f745e373ae588995",
                    "sha256:6398d5cccd2cc2c5989fc2021b9519eb5270bc8e09148b83818d0c1e10c69b98",
                    "sha256:bed676ceab7ad31ef6668df4b1d025e32744ca8ea6b7618d25cf318863f21fe8",
                    "sha256:613ab28cf833881e95b4ee02829114c33e9cd98ae2f10a8e46a48e6d88d410e2",
                    "sha256:429f6e331d0d4c4fb0a8c6c86b8ed7117c2217bb29f2dc2b5a499ebe99cf9c38",
                    "sha256:4f7c9be874e651fd76f058c27f8bb17749ffa016881507b287d569c762450b5f",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.17.7-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "72dc71a99c06fd60820e5184cac3e1f4f5b3753f6e5042484414c74240b1e620",
            "container_config": {
                "Hostname": "72dc71a99c06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.346679333Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:22.311876099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cca7f8e4abcd8309501cad216ff33a28932386ded66461a7591c0fdf2c859d3 in / "
                },
                {
                    "created": "2022-01-26T01:40:23.006065148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:11:57.043128495Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:12:03.659727969Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:12:22.981984194Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:21.377896011Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:22.092173452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:22.706682806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.666859601Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:43.90895208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.002767839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.342859286Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.346679333Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b0f2f2f52795d31dd1107e7ac81adca6aa51769f6ec4e23f745e373ae588995",
                    "sha256:6398d5cccd2cc2c5989fc2021b9519eb5270bc8e09148b83818d0c1e10c69b98",
                    "sha256:bed676ceab7ad31ef6668df4b1d025e32744ca8ea6b7618d25cf318863f21fe8",
                    "sha256:613ab28cf833881e95b4ee02829114c33e9cd98ae2f10a8e46a48e6d88d410e2",
                    "sha256:429f6e331d0d4c4fb0a8c6c86b8ed7117c2217bb29f2dc2b5a499ebe99cf9c38",
                    "sha256:4f7c9be874e651fd76f058c27f8bb17749ffa016881507b287d569c762450b5f",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.17.7-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:dd4daf9e2643fa33106fc688644cde43a470246106eae409e45d85bb036707da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05a725a6fc3953bf2a49d2c331c6e761a86dc9513e946f9735b8aa8f7f4e500b",
            "container_config": {
                "Hostname": "05a725a6fc39",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dd4daf9e2643fa33106fc688644cde43a470246106eae409e45d85bb036707da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:04.506525675Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:39.69613255Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:40.420016182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:41.13212452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:59.733558609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:01.046372504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:02.080234933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.484591639Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:04.506525675Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:39670b3e9707bf9c8f5d98c88f2b12c571c28c1e11b65576b07cc01e3fad6553",
                    "sha256:d540e3595b02fc72375f609203b7658819dc21c867d78132a9823432a1b6a3f3",
                    "sha256:28d38381772c9892b64c921a94b1ddcf7c675aa0690dd3a1b51425b9903a0663"
                ]
            }
        },
        "1.17.7-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:dd4daf9e2643fa33106fc688644cde43a470246106eae409e45d85bb036707da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05a725a6fc3953bf2a49d2c331c6e761a86dc9513e946f9735b8aa8f7f4e500b",
            "container_config": {
                "Hostname": "05a725a6fc39",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dd4daf9e2643fa33106fc688644cde43a470246106eae409e45d85bb036707da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:04.506525675Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:39.69613255Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:40.420016182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:41.13212452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:59.733558609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:01.046372504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:02.080234933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.484591639Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:04.506525675Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:39670b3e9707bf9c8f5d98c88f2b12c571c28c1e11b65576b07cc01e3fad6553",
                    "sha256:d540e3595b02fc72375f609203b7658819dc21c867d78132a9823432a1b6a3f3",
                    "sha256:28d38381772c9892b64c921a94b1ddcf7c675aa0690dd3a1b51425b9903a0663"
                ]
            }
        },
        "1.17.7-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4442c1d98bf0bea7a24f477563ad36e9412049409599b29d21874aaa36df831",
            "container_config": {
                "Hostname": "f4442c1d98bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-16T21:30:50.585820633Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-16T21:30:25.218532145Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-16T21:30:25.819282315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:26.480953085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:46.575099069Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220216.3/go.20220216.3.linux-amd64.tar.gz'; \t\t\tsha256='416eb5c5b81d5802a6f5baeec8c3abcacae438da81a026d00129d72852a6760f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-16T21:30:47.684619855Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:48.539807742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:49.723006402Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-16T21:30:50.585820633Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:0691e4fbba890a058d027ef5c00d2c5cf7d1eda50dddf70993429a5b08de8487",
                    "sha256:93f0056cd37f87f75c4359e1a8b58aeeef4cd313773888310883bda7e639e4da",
                    "sha256:6c1f49e3eaa666c77dc65452e44bb3d7c866aa8f52161440b996599c9c6ab8a6"
                ]
            }
        },
        "1.17.7-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4442c1d98bf0bea7a24f477563ad36e9412049409599b29d21874aaa36df831",
            "container_config": {
                "Hostname": "f4442c1d98bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-16T21:30:50.585820633Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-16T21:30:25.218532145Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-16T21:30:25.819282315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:26.480953085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:46.575099069Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220216.3/go.20220216.3.linux-amd64.tar.gz'; \t\t\tsha256='416eb5c5b81d5802a6f5baeec8c3abcacae438da81a026d00129d72852a6760f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-16T21:30:47.684619855Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:48.539807742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:49.723006402Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-16T21:30:50.585820633Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:0691e4fbba890a058d027ef5c00d2c5cf7d1eda50dddf70993429a5b08de8487",
                    "sha256:93f0056cd37f87f75c4359e1a8b58aeeef4cd313773888310883bda7e639e4da",
                    "sha256:6c1f49e3eaa666c77dc65452e44bb3d7c866aa8f52161440b996599c9c6ab8a6"
                ]
            }
        },
        "1.17.7-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4442c1d98bf0bea7a24f477563ad36e9412049409599b29d21874aaa36df831",
            "container_config": {
                "Hostname": "f4442c1d98bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-16T21:30:50.585820633Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-16T21:30:25.218532145Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-16T21:30:25.819282315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:26.480953085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:46.575099069Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220216.3/go.20220216.3.linux-amd64.tar.gz'; \t\t\tsha256='416eb5c5b81d5802a6f5baeec8c3abcacae438da81a026d00129d72852a6760f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-16T21:30:47.684619855Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:48.539807742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:49.723006402Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-16T21:30:50.585820633Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:0691e4fbba890a058d027ef5c00d2c5cf7d1eda50dddf70993429a5b08de8487",
                    "sha256:93f0056cd37f87f75c4359e1a8b58aeeef4cd313773888310883bda7e639e4da",
                    "sha256:6c1f49e3eaa666c77dc65452e44bb3d7c866aa8f52161440b996599c9c6ab8a6"
                ]
            }
        },
        "1.17.7-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:d17aa3400fcf6914ec7c445e546ec3cc0a56fd96e9112248dc63025d3ffd9b3d",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "409236d491ee17010582b63d4ea323f757dab4bc60cf0e81ea78fd331d0a6159",
            "container_config": {
                "Hostname": "409236d491ee",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:d17aa3400fcf6914ec7c445e546ec3cc0a56fd96e9112248dc63025d3ffd9b3d",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-02-10T21:38:00.0890791Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T19:06:51.6699506Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-02-10T21:36:58.7981756Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-02-10T21:36:59.3402934Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-02-10T21:36:59.889092Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-02-10T21:37:02.0940523Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-02-10T21:37:02.6765557Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-02-10T21:37:03.1907573Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.7"
                },
                {
                    "created": "2022-02-10T21:37:55.4195541Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:15508debe9fd224e4f157ec0c9a0361320eb6879b8e5d0804c7d59e3e6d3e12d in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-02-10T21:37:58.9073028Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-02-10T21:38:00.0890791Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d435553b23557d22be11dc59485b5886ead8c1a0f21a038664cd293e8565ad67",
                    "sha256:07539ad870db80f4536f8ad4687ba7926f3ecc197ca242dfca4fce0b78d05010",
                    "sha256:741cbfa5a83fa22f911eb3a56be7762cf43c3352c5869d4d3c6a795e356daae6",
                    "sha256:3530c3ad9dfeaae0da79b903236864ce7f81054920804fad141d55d32a053eca",
                    "sha256:e9ac78157f9455eef4af325c155366f0aa3fb1ca52d4070e77cf347850bdea92",
                    "sha256:c51401ee42eb37596c9ff5ed63c0b72a0e68cbf47b1b228703c79d0bc9f44281",
                    "sha256:722bddd180be9e7e05787bbd399ad448aaaa81d85cc7b5c64982a9f4aa05db77",
                    "sha256:78682c331471564c0091372387299a4d701e612a04903deb62dd99c1070ca592",
                    "sha256:aa766ad827c4675cacfae3e9781c3f760d4ecd0a8387b4dde1e7c46af1aac999",
                    "sha256:a00ac123ac5e04bfcbd6b8277275860fda8d94ba1d415402ce0bc4cbfb2d043c"
                ]
            }
        },
        "1.17.7-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:2d064a5d6a7166a91c14ab67a0aee148485a31c936a32da54f3824970bac786b",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "52bfb0a20cccf56502e5767f4eb651a71a04eef96908c6e62fc2a3926155624b",
            "container_config": {
                "Hostname": "52bfb0a20ccc",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:2d064a5d6a7166a91c14ab67a0aee148485a31c936a32da54f3824970bac786b",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-02-10T21:35:16.5389646Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-01T02:25:40.3240154Z",
                    "created_by": "Apply image ltsc2022-amd64"
                },
                {
                    "created": "2022-02-10T21:33:32.7216078Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-02-10T21:33:34.551623Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-02-10T21:33:36.7262883Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-02-10T21:33:42.5571625Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-02-10T21:33:43.7290494Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-02-10T21:33:44.8608322Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.7"
                },
                {
                    "created": "2022-02-10T21:35:10.2843792Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:15508debe9fd224e4f157ec0c9a0361320eb6879b8e5d0804c7d59e3e6d3e12d in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-02-10T21:35:15.8500401Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-02-10T21:35:16.5389646Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.524",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3729709af4d6ed6f7165e959345fb81075fac679ef7d2bdb41cea46371dd4f8c",
                    "sha256:bb9113597ad2b397003ac9fba3d22dbc73bd71ed0fa13ebb457c8ac49f41dff5",
                    "sha256:1f6834eb49942d265f1e1956824721766c892a68530b733bbe31fc8bbb065ab7",
                    "sha256:ef40daaa3ad9e19a2eddb57a9f443de8ff8c6df1ec40f33b17979fa81db4b593",
                    "sha256:df073be322119dc5dad208ee009083ad535f58c2c96a5819f94d4fbde5a3330a",
                    "sha256:d3e45e0a4864f0b440cc15d0ce70a64b765fc466e45369efb8d4ba6d3c583d27",
                    "sha256:2e22079a7dab8e5dd4d21bcac5864a367d9569d7a7a3169e4c7f935904e6d1bb",
                    "sha256:9ea7dd471200a71863f6039774ae219c194bb1c9d6b8d046c3da8c428ae20876",
                    "sha256:f9aadd068004e0dba7dbda938edc0c9d93d9c0e2ae63034e6902004da5e82378",
                    "sha256:cd138fd6a4201a7566fe806f432f3770990cb22cbfe8861362764ddba73afc91"
                ]
            }
        },
        "1.17.7-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a37f3478e2e5d1f30a07d8f50b5d452994043381eab9107f5af677ed079d9ced",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9061219d8a7b642dc2e5c2c36dd71671be487103a4545ecfc9ee1622f4bb93a9",
            "container_config": {
                "Hostname": "9061219d8a7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a37f3478e2e5d1f30a07d8f50b5d452994043381eab9107f5af677ed079d9ced",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:37.787059707Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:42:44.135666682Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8486e54cd9c7f48cd93b4dc399b71f2053aa61655dcc37e06a9274d4878408a1 in / "
                },
                {
                    "created": "2022-01-26T01:42:44.752281037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:16:54.79260261Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:16:59.915757334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:17:21.479618928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:07.319839492Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:08.04948392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:08.693886329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:33.076967907Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:34.376598125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:35.398820473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:36.76467935Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:37.787059707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d05b8af4c7ce1e4ccbecd4bb29fa4ac82a5fdeee36ef41bc46549678058513e0",
                    "sha256:678c62bc4ece5d1ec0a53289ffff169a9362a43a664bd0062d7fc8c655842e29",
                    "sha256:9aee2e50701e26cd8e5641f20bff8e27f60329e6ba4487dad7e5e99dded75a49",
                    "sha256:76ce09dad18e9acda07ed38d1aec060dbefe5f1277e8768b60a0ac8c13c228c9",
                    "sha256:e0d8a36ab7d79690aa1dc4f2b4f9782d4634aa36ff9b17596c95239fc57d0fc5",
                    "sha256:421109e99a2633faea32e225a7b822277f2e1b6d606dab00e6ef0c2f0d4a8e6f",
                    "sha256:38815582e753ea1ea3c257dca9982be3028ba75d9b210884a6830f0ac4e241cc"
                ]
            }
        },
        "1.17.7-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a37f3478e2e5d1f30a07d8f50b5d452994043381eab9107f5af677ed079d9ced",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9061219d8a7b642dc2e5c2c36dd71671be487103a4545ecfc9ee1622f4bb93a9",
            "container_config": {
                "Hostname": "9061219d8a7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a37f3478e2e5d1f30a07d8f50b5d452994043381eab9107f5af677ed079d9ced",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:37.787059707Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:42:44.135666682Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8486e54cd9c7f48cd93b4dc399b71f2053aa61655dcc37e06a9274d4878408a1 in / "
                },
                {
                    "created": "2022-01-26T01:42:44.752281037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:16:54.79260261Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:16:59.915757334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:17:21.479618928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:07.319839492Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:08.04948392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:08.693886329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:33.076967907Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:34.376598125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:35.398820473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:36.76467935Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:37.787059707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d05b8af4c7ce1e4ccbecd4bb29fa4ac82a5fdeee36ef41bc46549678058513e0",
                    "sha256:678c62bc4ece5d1ec0a53289ffff169a9362a43a664bd0062d7fc8c655842e29",
                    "sha256:9aee2e50701e26cd8e5641f20bff8e27f60329e6ba4487dad7e5e99dded75a49",
                    "sha256:76ce09dad18e9acda07ed38d1aec060dbefe5f1277e8768b60a0ac8c13c228c9",
                    "sha256:e0d8a36ab7d79690aa1dc4f2b4f9782d4634aa36ff9b17596c95239fc57d0fc5",
                    "sha256:421109e99a2633faea32e225a7b822277f2e1b6d606dab00e6ef0c2f0d4a8e6f",
                    "sha256:38815582e753ea1ea3c257dca9982be3028ba75d9b210884a6830f0ac4e241cc"
                ]
            }
        },
        "1.17.7-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:e7c33e875cd5bfd9c87f2a3fdeec19590c6f987896656e25eb7f3e42db5ee096",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "9f8671ef82f87b322aef8d690e8ae1f42d4abc6f17a4a769af1c727a38ef9808",
            "container_config": {
                "Hostname": "9f8671ef82f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:e7c33e875cd5bfd9c87f2a3fdeec19590c6f987896656e25eb7f3e42db5ee096",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-02-10T21:36:57.672483Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-02-02T19:28:56.1792935Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-02-10T21:35:09.0650663Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-02-10T21:35:10.2441778Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-02-10T21:35:11.0074424Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-02-10T21:35:11.5265403Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-02-10T21:35:12.1549337Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-02-10T21:35:37.1703929Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:35:37.6815739Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-02-10T21:35:43.8428989Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-02-10T21:35:44.3710484Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.7"
                },
                {
                    "created": "2022-02-10T21:36:56.3621032Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '68a1224869c8840787fe59f9b7a96aa05fba284a218f7380209c7d979c0a2bc9'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:36:57.672483Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:a5d6634e4d62aadc433b6ecc46630cc65a00bba8d9e77236683ea198e0085434",
                    "sha256:175659b30ae6cbc4661968de551703cc0256c14283b150ee582390f3daa57fa9",
                    "sha256:5d42a769d139ed94d131e1cbcd50ed1c820629f2edd6750a1ce691dd3d402ffa",
                    "sha256:fc2f654a33578efd65f2be223581a8308c0bbc329c1da98761d9095cf2c100e6",
                    "sha256:b0deb5d71c482b5d2a7a45a28ffbcf84da775bbbf8bcd6bab783e0e00c8476cf",
                    "sha256:e0c03ee53013eba87fb473fe77a92460611d0e6c5aaa55136822db197d65d180",
                    "sha256:5762116d8edf8d464fc0e1aa2245cfae1d63c2bf2c724e19c407b1d14509c5db",
                    "sha256:d1284c75a6f0ce50010cd83db73f6072124b03d3fc73f127286f661e13319190",
                    "sha256:a81f4ba23a9df2f61c91c7029fedb40580bb80524f64e4bf8564d6d4e3478dda",
                    "sha256:2b394782aba7ca544d1c24b16908800c9c5b282c0643d17230db7e1714e9f726",
                    "sha256:7128d7edd4dcbabe3c55c85d070883df06a89f478420d2a7d35fbd25bcb3cf2c",
                    "sha256:91d12f1f083a616b40e888c5742fe6273f7832a331847257ce38b36623f7c159"
                ]
            }
        },
        "1.17.7-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:4ee999c5a1337f1de41281f20c4dfea2b1b42b046b6c20192d67eaa3f9a150e7",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "0ed6423c0c0050e338e03202f2f793f5a80131126714f4f5825e18e7d836c612",
            "container_config": {
                "Hostname": "0ed6423c0c00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:4ee999c5a1337f1de41281f20c4dfea2b1b42b046b6c20192d67eaa3f9a150e7",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-02-10T22:02:35.7935661Z",
            "docker_version": "19.03.14",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-02-02T13:06:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-02-10T21:55:32.678119Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-02-10T21:55:35.2153355Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-02-10T21:55:37.3404301Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-02-10T21:55:39.7225905Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-02-10T21:55:42.3016951Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-02-10T21:56:58.1703642Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:57:01.6363281Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-02-10T21:57:34.0724466Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-02-10T21:57:37.0149731Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.7"
                },
                {
                    "created": "2022-02-10T22:02:31.3936483Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '68a1224869c8840787fe59f9b7a96aa05fba284a218f7380209c7d979c0a2bc9'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T22:02:35.7935661Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.4946",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:cdd24dbb83926e4cce1337f5519c910fb307c5bda8f5467ca79eb62250d7ce12",
                    "sha256:2c9c7d1b5d243c411b487d0c326c76cc02a99acfde4f328ea6e18f09914a4b00",
                    "sha256:9fc610629309bbad25ac0172d18866d5f0a909ceb790b58baf3d75e27c80ec38",
                    "sha256:eb1a6ac89d6cf48237a803a88308526edd36b6272e7c8d639f1b5060ed8b1f11",
                    "sha256:222b813e01d013e4be04dd03ed82a2f1638904a68ee1297a6ee3661037a05d0c",
                    "sha256:2bb153b662380c043014926ad242b25e9255a993157ae945fa62b009b26d523d",
                    "sha256:3792c338a57020a9bf2492376e9414dbcbd6c6920689247af15040fb799ab18b",
                    "sha256:83ed3503a2b1604798c3384c7cfcc1f3d6c7e6ff4e3f7426e0098f1bc22e3e4b",
                    "sha256:1a0584d1780b50278642316d8108cdd1120346883def188c907eb9672b2be0f2",
                    "sha256:ad37cf6e8857e13a6590fb2922ffdfd4a22bad80c89f360c7f02c5af0cc29c7c",
                    "sha256:ad7b0602a2a2e55a1a4ef97d30cb5501bfc19564aef45d5e2bf0c89eb6df6f25",
                    "sha256:896b5315784fa812cb41d89f2191d1d8c1328f86a8b6c74e1c886436e72cd054"
                ]
            }
        },
        "1.17.7-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:53827ff11dbcf49d299f0e8704a064a4fc4a439837d234c570d7ba1f9e64c7fb",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "87c136a5393dcacab1ac191794fda12f297ae1f6a99307cf77fbcf7170017fed",
            "container_config": {
                "Hostname": "87c136a5393d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.7"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:53827ff11dbcf49d299f0e8704a064a4fc4a439837d234c570d7ba1f9e64c7fb",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-02-10T21:33:30.3175526Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-05-08T09:40:24.683Z",
                    "created_by": "Apply image 2022-RTM-amd64"
                },
                {
                    "created": "2022-02-01T02:49:40.7445309Z",
                    "created_by": "Install update ltsc2022-amd64"
                },
                {
                    "created": "2022-02-10T21:30:53.6203562Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-02-10T21:30:54.1975571Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-02-10T21:30:54.8743262Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-02-10T21:30:55.4215641Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-02-10T21:30:55.9800428Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-02-10T21:31:14.8920776Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:31:15.5794559Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-02-10T21:31:26.1425921Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-02-10T21:31:26.7334729Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.7"
                },
                {
                    "created": "2022-02-10T21:33:29.1719286Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '68a1224869c8840787fe59f9b7a96aa05fba284a218f7380209c7d979c0a2bc9'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-02-10T21:33:30.3175526Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.524",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c18686406f96b263d986714a2d88add06ea9ddbb3e52fb936222711da7d9d395",
                    "sha256:cb035f935452c8233f98f5a56fc0c75ba0a227b76ffcad91b1adc223bfe52973",
                    "sha256:fce998d2de722d3ab5e1434acaeab128bb2db2da5bc4a6a09a6ec70e87f9cd7b",
                    "sha256:393435d318536b1d27513f5f0e00a563f4b49a84caab8a88b70fcc001931b887",
                    "sha256:250eab74a5337318e0ef08532695d40113fee2875bde0c6497040fba54b08c7d",
                    "sha256:14e0faa9f0dcd9aea69b9261696047fab8fc10d767786ef64ccee9f59a82cbfc",
                    "sha256:d554d08f3424a0120d53e9623b9c2ba9c1163862594937be15aea9a62cde8e2a",
                    "sha256:2c4f8aa9f443c01134dc8c269781e2cd965b48d4b623cabeb8a026fb50e32540",
                    "sha256:14cca6563086043b50964a18ce9e13b68c5946f17c9998a44799149e57a500ec",
                    "sha256:55cc1562161d06bcda076d2146848c9d142f7d728919d8f9c7bf267290874a5a",
                    "sha256:eec8fd1a0d30fced9fe5204baa49f3c750bcdef3ef71a08025f041374c1540b4",
                    "sha256:666318630013b994a0234f57d0c96c500054221334466709668d3de418b8e0e1",
                    "sha256:13b44cf66f80d17e8e8c4094e04fcf7fe1dfdb6b268cc0e5080707721be8c7be"
                ]
            }
        },
        "1.17.7-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "72dc71a99c06fd60820e5184cac3e1f4f5b3753f6e5042484414c74240b1e620",
            "container_config": {
                "Hostname": "72dc71a99c06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b5323658d4f0d8e419f076d57db497160abee0e6516c4d2e214c80cd13b46f92",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:47.346679333Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:22.311876099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cca7f8e4abcd8309501cad216ff33a28932386ded66461a7591c0fdf2c859d3 in / "
                },
                {
                    "created": "2022-01-26T01:40:23.006065148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:11:57.043128495Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:12:03.659727969Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:12:22.981984194Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:21.377896011Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:22.092173452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:22.706682806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:42.666859601Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:43.90895208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:45.002767839Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:46.342859286Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:47.346679333Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b0f2f2f52795d31dd1107e7ac81adca6aa51769f6ec4e23f745e373ae588995",
                    "sha256:6398d5cccd2cc2c5989fc2021b9519eb5270bc8e09148b83818d0c1e10c69b98",
                    "sha256:bed676ceab7ad31ef6668df4b1d025e32744ca8ea6b7618d25cf318863f21fe8",
                    "sha256:613ab28cf833881e95b4ee02829114c33e9cd98ae2f10a8e46a48e6d88d410e2",
                    "sha256:429f6e331d0d4c4fb0a8c6c86b8ed7117c2217bb29f2dc2b5a499ebe99cf9c38",
                    "sha256:4f7c9be874e651fd76f058c27f8bb17749ffa016881507b287d569c762450b5f",
                    "sha256:96c47bb22c0511943ce0e2c31e7fd09b86f4fe255680b8ad066596d881813cb4"
                ]
            }
        },
        "1.17.7-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:dd4daf9e2643fa33106fc688644cde43a470246106eae409e45d85bb036707da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05a725a6fc3953bf2a49d2c331c6e761a86dc9513e946f9735b8aa8f7f4e500b",
            "container_config": {
                "Hostname": "05a725a6fc39",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dd4daf9e2643fa33106fc688644cde43a470246106eae409e45d85bb036707da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:32:04.506525675Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:40:47.606302615Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a290acee3581e1e9c42c0a37b53086a8f070cb0730179be81a6ba24a620b6ee4 in / "
                },
                {
                    "created": "2022-01-26T01:40:47.914021193Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:13:31.642800636Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:13:37.912815334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:13:56.187887577Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:39.69613255Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:40.420016182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:41.13212452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:59.733558609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:32:01.046372504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:02.080234933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:32:03.484591639Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:32:04.506525675Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b14cb48b3aebbc58396d0b3c2d0880fd9c002c56bb7453af3ddfe6e119c06df2",
                    "sha256:a1215953fc643d723e95cb4318d6b71ed3a1820bcec60782f12d6fc75652f897",
                    "sha256:b20560b6a21c419a4c07e09c134aeef59c10ac888b506fd1ef60f51368dc4815",
                    "sha256:330a6fb3364f480f39cd43c7f53241fd77600a9da4a165bc951286403cc9c1b0",
                    "sha256:39670b3e9707bf9c8f5d98c88f2b12c571c28c1e11b65576b07cc01e3fad6553",
                    "sha256:d540e3595b02fc72375f609203b7658819dc21c867d78132a9823432a1b6a3f3",
                    "sha256:28d38381772c9892b64c921a94b1ddcf7c675aa0690dd3a1b51425b9903a0663"
                ]
            }
        },
        "1.17.7-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4442c1d98bf0bea7a24f477563ad36e9412049409599b29d21874aaa36df831",
            "container_config": {
                "Hostname": "f4442c1d98bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-16T21:30:50.585820633Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-16T21:30:25.218532145Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-16T21:30:25.819282315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:26.480953085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:46.575099069Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220216.3/go.20220216.3.linux-amd64.tar.gz'; \t\t\tsha256='416eb5c5b81d5802a6f5baeec8c3abcacae438da81a026d00129d72852a6760f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-16T21:30:47.684619855Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:48.539807742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:49.723006402Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-16T21:30:50.585820633Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:0691e4fbba890a058d027ef5c00d2c5cf7d1eda50dddf70993429a5b08de8487",
                    "sha256:93f0056cd37f87f75c4359e1a8b58aeeef4cd313773888310883bda7e639e4da",
                    "sha256:6c1f49e3eaa666c77dc65452e44bb3d7c866aa8f52161440b996599c9c6ab8a6"
                ]
            }
        },
        "1.17.7-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4442c1d98bf0bea7a24f477563ad36e9412049409599b29d21874aaa36df831",
            "container_config": {
                "Hostname": "f4442c1d98bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:81e3df85e30d390c8f933ed225b647b8034bf7f7ec13dcbe7d6f6c4f3e36bb04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-16T21:30:50.585820633Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-02-01T21:15:51.519360697Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-02-16T21:30:25.218532145Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-02-16T21:30:25.819282315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:26.480953085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:46.575099069Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220216.3/go.20220216.3.linux-amd64.tar.gz'; \t\t\tsha256='416eb5c5b81d5802a6f5baeec8c3abcacae438da81a026d00129d72852a6760f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-16T21:30:47.684619855Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:48.539807742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-16T21:30:49.723006402Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-16T21:30:50.585820633Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e19a204ba2a42ce5a5f50aba24b6cd92c7cc644a8b66b137ce460bc532e1d54e",
                    "sha256:0691e4fbba890a058d027ef5c00d2c5cf7d1eda50dddf70993429a5b08de8487",
                    "sha256:93f0056cd37f87f75c4359e1a8b58aeeef4cd313773888310883bda7e639e4da",
                    "sha256:6c1f49e3eaa666c77dc65452e44bb3d7c866aa8f52161440b996599c9c6ab8a6"
                ]
            }
        },
        "1.17.7-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a37f3478e2e5d1f30a07d8f50b5d452994043381eab9107f5af677ed079d9ced",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9061219d8a7b642dc2e5c2c36dd71671be487103a4545ecfc9ee1622f4bb93a9",
            "container_config": {
                "Hostname": "9061219d8a7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a37f3478e2e5d1f30a07d8f50b5d452994043381eab9107f5af677ed079d9ced",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-02-10T21:31:37.787059707Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-26T01:42:44.135666682Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8486e54cd9c7f48cd93b4dc399b71f2053aa61655dcc37e06a9274d4878408a1 in / "
                },
                {
                    "created": "2022-01-26T01:42:44.752281037Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T02:16:54.79260261Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-01-26T02:16:59.915757334Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-01-26T02:17:21.479618928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:07.319839492Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-02-10T21:31:08.04948392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:08.693886329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:33.076967907Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220210.1/go.20220210.1.linux-amd64.tar.gz'; \t\t\tsha256='3e8fc2d4e412f927fae92feb6077c94e223732bd627b8d0919f9bdb67dd0f012'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-02-10T21:31:34.376598125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:35.398820473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-10T21:31:36.76467935Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-02-10T21:31:37.787059707Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d05b8af4c7ce1e4ccbecd4bb29fa4ac82a5fdeee36ef41bc46549678058513e0",
                    "sha256:678c62bc4ece5d1ec0a53289ffff169a9362a43a664bd0062d7fc8c655842e29",
                    "sha256:9aee2e50701e26cd8e5641f20bff8e27f60329e6ba4487dad7e5e99dded75a49",
                    "sha256:76ce09dad18e9acda07ed38d1aec060dbefe5f1277e8768b60a0ac8c13c228c9",
                    "sha256:e0d8a36ab7d79690aa1dc4f2b4f9782d4634aa36ff9b17596c95239fc57d0fc5",
                    "sha256:421109e99a2633faea32e225a7b822277f2e1b6d606dab00e6ef0c2f0d4a8e6f",
                    "sha256:38815582e753ea1ea3c257dca9982be3028ba75d9b210884a6830f0ac4e241cc"
                ]
            }
        },
        "1.17.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c6439d91adb8fb45e0f4f515c1a36ecabc82390fe9da4569d97f1915d8f6891",
            "container_config": {
                "Hostname": "8c6439d91adb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:25.594152809Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.000337101Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.698795821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:01.61106021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.311620856Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:22.486393666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:23.417530584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:24.659729749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:25.594152809Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:69d2d6b6c2abce77b559e550cd3efdff2e5b0bce9e33b4f8cd1a70a4bd7fc8e5",
                    "sha256:7e075613750f944481c33aeb06c6adf987f875180acbf56a6665930762e61c7d",
                    "sha256:2a6b834c755a928352e8d01966d21312b9faa17b4de61810c6fb9dc5d34ecbf1"
                ]
            }
        },
        "1.17.8-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c6439d91adb8fb45e0f4f515c1a36ecabc82390fe9da4569d97f1915d8f6891",
            "container_config": {
                "Hostname": "8c6439d91adb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:25.594152809Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.000337101Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.698795821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:01.61106021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.311620856Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:22.486393666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:23.417530584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:24.659729749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:25.594152809Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:69d2d6b6c2abce77b559e550cd3efdff2e5b0bce9e33b4f8cd1a70a4bd7fc8e5",
                    "sha256:7e075613750f944481c33aeb06c6adf987f875180acbf56a6665930762e61c7d",
                    "sha256:2a6b834c755a928352e8d01966d21312b9faa17b4de61810c6fb9dc5d34ecbf1"
                ]
            }
        },
        "1.17.8-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c6439d91adb8fb45e0f4f515c1a36ecabc82390fe9da4569d97f1915d8f6891",
            "container_config": {
                "Hostname": "8c6439d91adb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:25.594152809Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.000337101Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.698795821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:01.61106021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.311620856Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:22.486393666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:23.417530584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:24.659729749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:25.594152809Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:69d2d6b6c2abce77b559e550cd3efdff2e5b0bce9e33b4f8cd1a70a4bd7fc8e5",
                    "sha256:7e075613750f944481c33aeb06c6adf987f875180acbf56a6665930762e61c7d",
                    "sha256:2a6b834c755a928352e8d01966d21312b9faa17b4de61810c6fb9dc5d34ecbf1"
                ]
            }
        },
        "1.17.8-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c6439d91adb8fb45e0f4f515c1a36ecabc82390fe9da4569d97f1915d8f6891",
            "container_config": {
                "Hostname": "8c6439d91adb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:25.594152809Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.000337101Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.698795821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:01.61106021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.311620856Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:22.486393666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:23.417530584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:24.659729749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:25.594152809Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:69d2d6b6c2abce77b559e550cd3efdff2e5b0bce9e33b4f8cd1a70a4bd7fc8e5",
                    "sha256:7e075613750f944481c33aeb06c6adf987f875180acbf56a6665930762e61c7d",
                    "sha256:2a6b834c755a928352e8d01966d21312b9faa17b4de61810c6fb9dc5d34ecbf1"
                ]
            }
        },
        "1.17.8-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2ced7d880d998ccd62f14bb41cce1326f781e5aeebdfb2ab12b735ddc837bc22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "165abe797d1613ebb8f64db185944a89b3eb7e86868d4dcd3709b8d1cbefab51",
            "container_config": {
                "Hostname": "165abe797d16",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2ced7d880d998ccd62f14bb41cce1326f781e5aeebdfb2ab12b735ddc837bc22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:53.585533545Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:24.125565039Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:24.894010255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:25.682014599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:48.539311231Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:49.883850941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:50.968807582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:52.451575782Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:53.585533545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:ec11096e999f4033f024530575440ee9f5554057e6317522e84b4939c06f10bf",
                    "sha256:56b81f5fffe8a7bf92790ab38a067371dc03028735570f662b9ad4304070e3cd",
                    "sha256:d308d7d542edaa14ec9ad088ea4dbe07c956429f75c82ee3e12b1e6360b640dc"
                ]
            }
        },
        "1.17.8-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2ced7d880d998ccd62f14bb41cce1326f781e5aeebdfb2ab12b735ddc837bc22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "165abe797d1613ebb8f64db185944a89b3eb7e86868d4dcd3709b8d1cbefab51",
            "container_config": {
                "Hostname": "165abe797d16",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2ced7d880d998ccd62f14bb41cce1326f781e5aeebdfb2ab12b735ddc837bc22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:53.585533545Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:24.125565039Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:24.894010255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:25.682014599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:48.539311231Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:49.883850941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:50.968807582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:52.451575782Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:53.585533545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:ec11096e999f4033f024530575440ee9f5554057e6317522e84b4939c06f10bf",
                    "sha256:56b81f5fffe8a7bf92790ab38a067371dc03028735570f662b9ad4304070e3cd",
                    "sha256:d308d7d542edaa14ec9ad088ea4dbe07c956429f75c82ee3e12b1e6360b640dc"
                ]
            }
        },
        "1.17.8-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:74e0393e95eae07cd6ece008b74e28640fb5f8910d3ca10428a2158c9a0f15e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f48e4460857454d3dae1cdf8eab6cfff6e8247868563c3bf2186e3104cd6c2d1",
            "container_config": {
                "Hostname": "f48e44608574",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:74e0393e95eae07cd6ece008b74e28640fb5f8910d3ca10428a2158c9a0f15e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-08T00:00:52.497656733Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:05:55.545277185Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-08T00:00:27.246016262Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-08T00:00:27.865176463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:28.487044848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:48.455438491Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220307.3/go.20220307.3.linux-amd64.tar.gz'; \t\t\tsha256='6877d8a8f0a640b239ab3193e1327a18d38e557a896ac66d21c1f8ef56cff763'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-08T00:00:49.60949779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:50.475299861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:51.643746158Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-08T00:00:52.497656733Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e04d6d3735733ced573ccbf0f50b7a67e39d249176436b12b131393bdf7c53c2",
                    "sha256:9e6931ba74f6c3a9fa20bb3c0d27b4566b1684c0c35a25acde3b7a2a9d784f00",
                    "sha256:eb7101f120f93539c8fb0b2a0df9801647475f131a937862e23a243e38cac20b",
                    "sha256:48695e5eee666728bc7cb41fc46c0c8d9dd0379508b947009272b8b3ce47262e"
                ]
            }
        },
        "1.17.8-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:74e0393e95eae07cd6ece008b74e28640fb5f8910d3ca10428a2158c9a0f15e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f48e4460857454d3dae1cdf8eab6cfff6e8247868563c3bf2186e3104cd6c2d1",
            "container_config": {
                "Hostname": "f48e44608574",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:74e0393e95eae07cd6ece008b74e28640fb5f8910d3ca10428a2158c9a0f15e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-08T00:00:52.497656733Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:05:55.545277185Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-08T00:00:27.246016262Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-08T00:00:27.865176463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:28.487044848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:48.455438491Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220307.3/go.20220307.3.linux-amd64.tar.gz'; \t\t\tsha256='6877d8a8f0a640b239ab3193e1327a18d38e557a896ac66d21c1f8ef56cff763'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-08T00:00:49.60949779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:50.475299861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:51.643746158Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-08T00:00:52.497656733Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e04d6d3735733ced573ccbf0f50b7a67e39d249176436b12b131393bdf7c53c2",
                    "sha256:9e6931ba74f6c3a9fa20bb3c0d27b4566b1684c0c35a25acde3b7a2a9d784f00",
                    "sha256:eb7101f120f93539c8fb0b2a0df9801647475f131a937862e23a243e38cac20b",
                    "sha256:48695e5eee666728bc7cb41fc46c0c8d9dd0379508b947009272b8b3ce47262e"
                ]
            }
        },
        "1.17.8-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:74e0393e95eae07cd6ece008b74e28640fb5f8910d3ca10428a2158c9a0f15e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f48e4460857454d3dae1cdf8eab6cfff6e8247868563c3bf2186e3104cd6c2d1",
            "container_config": {
                "Hostname": "f48e44608574",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:74e0393e95eae07cd6ece008b74e28640fb5f8910d3ca10428a2158c9a0f15e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-08T00:00:52.497656733Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:05:55.545277185Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-08T00:00:27.246016262Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-08T00:00:27.865176463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:28.487044848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:48.455438491Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220307.3/go.20220307.3.linux-amd64.tar.gz'; \t\t\tsha256='6877d8a8f0a640b239ab3193e1327a18d38e557a896ac66d21c1f8ef56cff763'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-08T00:00:49.60949779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:50.475299861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-08T00:00:51.643746158Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-08T00:00:52.497656733Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e04d6d3735733ced573ccbf0f50b7a67e39d249176436b12b131393bdf7c53c2",
                    "sha256:9e6931ba74f6c3a9fa20bb3c0d27b4566b1684c0c35a25acde3b7a2a9d784f00",
                    "sha256:eb7101f120f93539c8fb0b2a0df9801647475f131a937862e23a243e38cac20b",
                    "sha256:48695e5eee666728bc7cb41fc46c0c8d9dd0379508b947009272b8b3ce47262e"
                ]
            }
        },
        "1.17.8-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:943190954cabf1fbbd53b0b8870d5a58c45f15c37b075e3f7434b27b78cf8b9e",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "7aed4655f5ece3d063de0e236ef9a484efcf4d07d977f4f703887987032dafe2",
            "container_config": {
                "Hostname": "7aed4655f5ec",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:943190954cabf1fbbd53b0b8870d5a58c45f15c37b075e3f7434b27b78cf8b9e",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-03-04T01:26:32.5994835Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2022-02-02T19:06:51.6699506Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-03-04T01:25:19.6835421Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-03-04T01:25:20.4313773Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-04T01:25:20.9203766Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-03-04T01:25:25.0782544Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-03-04T01:25:25.4531683Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-03-04T01:25:25.8531933Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.8"
                },
                {
                    "created": "2022-03-04T01:26:28.8447462Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:c1b2b41f9bd0cf45514e4913667fbfec646efe338e01a5486764689218d83ba3 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-03-04T01:26:31.5918231Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-03-04T01:26:32.5994835Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d435553b23557d22be11dc59485b5886ead8c1a0f21a038664cd293e8565ad67",
                    "sha256:edffd0969ae0c816618b006f9f04d8d232de9a6bc8c4910db9d1ea1746846462",
                    "sha256:11d156c8d106a5d9f12838771cdf4e5f077d1c7a18949d01c12ef9237f1f2883",
                    "sha256:5ffb2ce450ec66eb4a289129b172369061e0e81149cb13eea8598e47efca94aa",
                    "sha256:4beef6a52ab325476b0982db26f3b7d7fa1955ab27b78445105bf707c096b009",
                    "sha256:5f91de6dfd94afef369bd4996f8455eaea3bf3b944b2bc4baa9518c1d92cd545",
                    "sha256:27d0d1d9366d81d47926b0f98449929c5004fe7b58b5866a84539f1c5098609b",
                    "sha256:50a09fc141943fa9a2f3655f8130d6ed6650f3d7a194e6aa1f011fb7c08aa0bb",
                    "sha256:74770ef564995f2a9e619926974c643d2aa91d4f78807524551ec15ac90afbd3",
                    "sha256:62f8bfef189d321dd154fb4984d0d94e4a82cc66153ac93fd97a06bdce6c53c2"
                ]
            }
        },
        "1.17.8-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:4212f782618eaebdb312ba5615ade08a1127154b53613fd494fee99d7924b7e6",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "d3dd78c2ce6d4887a15378aa5dfe55f4a5a4593b5d73ca33dbf1c9b63fb3ee7b",
            "container_config": {
                "Hostname": "d3dd78c2ce6d",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:4212f782618eaebdb312ba5615ade08a1127154b53613fd494fee99d7924b7e6",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-03-04T01:25:49.0498992Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-02-01T02:25:40.3240154Z",
                    "created_by": "Apply image ltsc2022-amd64"
                },
                {
                    "created": "2022-03-04T01:24:21.2426326Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-03-04T01:24:21.8352049Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-04T01:24:22.3701401Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-03-04T01:24:25.5865102Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-03-04T01:24:26.2466149Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-03-04T01:24:26.7215963Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.8"
                },
                {
                    "created": "2022-03-04T01:25:41.7649799Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:c1b2b41f9bd0cf45514e4913667fbfec646efe338e01a5486764689218d83ba3 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-03-04T01:25:47.8708119Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-03-04T01:25:49.0498992Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.524",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3729709af4d6ed6f7165e959345fb81075fac679ef7d2bdb41cea46371dd4f8c",
                    "sha256:482ec72ab653bdc153c5626d92a0e464127ebab9e4de2b905314ea458a27a671",
                    "sha256:213212c0e8227de2faa5c44758eeb6abc952714d43b85581c3c4b0bd2c2438b9",
                    "sha256:7ac3a488380128bb3c49399f30534e53c9e666f7c2be57d61bfc4fd80fb235ee",
                    "sha256:0f2f15cc4c5f3963ea8a38debfe9aa674e7a2281fbae010dd5aba0073c8ddd23",
                    "sha256:c6c1cee5b38037e5ea80cd96778efe97de823d430b110aacca2614ea379e363f",
                    "sha256:c162e77b8c022f4612a1a00bea17ef51e7ebe3a24062b07ee7b1ccb933c4e907",
                    "sha256:c0685882a4e533dd9ddee4c76a4841a3f5b5216a0122940e72eb4e842ef03e68",
                    "sha256:757b9817e40078aed9db6d7fe348cd0448c2b75b6742c0c52496a81958606bde",
                    "sha256:05f5eb719df5119d4a23c3d0ecdf98b021dcba9461b71bbcfa71d5684ae3baef"
                ]
            }
        },
        "1.17.8-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4d9c94560db970e7e702c1b42bc5e537dd7e0baa15dcd91b1ec408f276f5274d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "672b9157f63edd0b483f35ca6fb9d74f296561d7a2b028ee02507801d76d62b8",
            "container_config": {
                "Hostname": "672b9157f63e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4d9c94560db970e7e702c1b42bc5e537dd7e0baa15dcd91b1ec408f276f5274d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:56.036224471Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.066281029Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.772224237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.633454724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:51.367745232Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:52.688548696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:53.700155925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:55.022236277Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:56.036224471Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:4fb3aa525ed9ccb427904d8d219c4aa01eb19eacc9fbc1e2363467de9c1e7357",
                    "sha256:3f325ac0e7c4913893eff58b0674970d3c0df33a943e0ca5f78d47a3820c03f8",
                    "sha256:89305fc62c4d92526304180da0084ed896c11a27e7afe0fad772cd5868702c00"
                ]
            }
        },
        "1.17.8-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4d9c94560db970e7e702c1b42bc5e537dd7e0baa15dcd91b1ec408f276f5274d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "672b9157f63edd0b483f35ca6fb9d74f296561d7a2b028ee02507801d76d62b8",
            "container_config": {
                "Hostname": "672b9157f63e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4d9c94560db970e7e702c1b42bc5e537dd7e0baa15dcd91b1ec408f276f5274d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:56.036224471Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.066281029Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.772224237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.633454724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:51.367745232Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:52.688548696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:53.700155925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:55.022236277Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:56.036224471Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:4fb3aa525ed9ccb427904d8d219c4aa01eb19eacc9fbc1e2363467de9c1e7357",
                    "sha256:3f325ac0e7c4913893eff58b0674970d3c0df33a943e0ca5f78d47a3820c03f8",
                    "sha256:89305fc62c4d92526304180da0084ed896c11a27e7afe0fad772cd5868702c00"
                ]
            }
        },
        "1.17.8-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:31f6abd2ce6a22f8ca69fd2014fd92c5dab9ce24269ffc576ec34e18e3509e3c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "f17de6e06dc9f8ab957c1e3147526944667504418ce269fcd030cf8aa6bcf787",
            "container_config": {
                "Hostname": "f17de6e06dc9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:31f6abd2ce6a22f8ca69fd2014fd92c5dab9ce24269ffc576ec34e18e3509e3c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-04T01:25:18.4385851Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-02-02T19:28:56.1792935Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-03-04T01:23:04.3253149Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-04T01:23:04.8006825Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-04T01:23:05.411602Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-04T01:23:05.9111462Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-04T01:23:06.3620373Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-04T01:23:40.5272769Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:23:41.2736443Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-04T01:23:47.614921Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-04T01:23:48.3822576Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.8"
                },
                {
                    "created": "2022-03-04T01:25:17.2656559Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '3f376538245436da78193101863751c502da489e29317acaf18bdb0d2852d654'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:25:18.4385851Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2565",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:a5d6634e4d62aadc433b6ecc46630cc65a00bba8d9e77236683ea198e0085434",
                    "sha256:97b4e708ee2efd8cc89483156ca97c8f24c79d3c9dec82005cdda87b6f0a4346",
                    "sha256:23f5766cef6ff521dfd2e6c89ee134299fbc7ebafff1aa734c2f17803cbb4d7d",
                    "sha256:2e86dd4130359d4f38519377499d740dedc50a5cd4b0d04c017a28f20af7a860",
                    "sha256:2771ea60ec856fd024dc68020f6f387088dfe6c97efa265ec32e7a87d822a712",
                    "sha256:881257633ec3395763171890a0f408c4ee186ceb4e6eb24806fbba1905c42914",
                    "sha256:d5c94f6444f8adf8800e6e32618033ab5e5badbac4dc78498fcbadc0e87fac4a",
                    "sha256:a1f217ba3d0177ebd55d1793c0a57fb037fed68a42e7476c51f644f950de93b9",
                    "sha256:2996de4e3ee8603aff58e3b545c6cbcb47a1a7472d6c0006467ad3e5011058af",
                    "sha256:318fd1478b6072306f949be872ec11ece0020e4caf0d6b0963000b2de5c7fc93",
                    "sha256:9160a559e6a14efc0c4f833b5b256aac6c74b6674cebd1f48a75819cff5eccda",
                    "sha256:5fccc109d4769f17135f5d4cc96df6e8f6f9a1082004cd5f20c37ecf738c8a6b"
                ]
            }
        },
        "1.17.8-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:c802b9dc7b4c12823adff545fc6874b969064c457f7c13ddd08501dd1296f504",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "a7b2ef8dcff1f01af1b523499fa29ccb008aecf1c756567dd28b38df7829884a",
            "container_config": {
                "Hostname": "a7b2ef8dcff1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:c802b9dc7b4c12823adff545fc6874b969064c457f7c13ddd08501dd1296f504",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-04T04:11:30.0200181Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-02-02T13:06:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-03-04T04:03:50.8529413Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-04T04:03:53.3367861Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-04T04:03:55.7936562Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-04T04:03:58.4158685Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-04T04:04:01.1474366Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-04T04:05:33.5244858Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T04:05:36.9906156Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-04T04:06:10.2605845Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-04T04:06:13.4111203Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.8"
                },
                {
                    "created": "2022-03-04T04:11:25.5061033Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '3f376538245436da78193101863751c502da489e29317acaf18bdb0d2852d654'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T04:11:30.0200181Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.4946",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:cdd24dbb83926e4cce1337f5519c910fb307c5bda8f5467ca79eb62250d7ce12",
                    "sha256:9f38fd1fea9aeb73a19338588a27877a891c3194ba3869ffb87701a9793e61a7",
                    "sha256:f002d464613347cc8fc906915dd9e2e82658fed729e7dc0624288ec6d8d59d21",
                    "sha256:3a9f399365d4ffa5038392b8118d5b35c68b24ebf17a92bd00ed8b22c1e8fae6",
                    "sha256:edc7f55d55d6d974940a73c43d1fc9c8031bbbb1b6d00f6f02cb1eafa79959e1",
                    "sha256:930f8f4b97129bdc22cf3cbeb871ca739350fa186cc7ed0e2a2ec4076ef5e44a",
                    "sha256:f42d788c32c8bd65eb45282d08843558b574abe5077022fde0293049cbe63995",
                    "sha256:fa12a7fc3de2148ac54aa7ba41d2a442f9ba23bad987040019b70506fc05c04a",
                    "sha256:15cde32572b31339d87247a75ba1193a1ba6729191127a6ca1898ce9b23e7c4a",
                    "sha256:b5316a2f93218148074cc6c9a0d2a0b93d70939b6688ce6ffa977a6e481ac215",
                    "sha256:02c6ec8ed371a754725150418239b05ca14a7026088015ff3ff444de6965dfc3",
                    "sha256:bc2b091aa8e6a2b4badf4903e2c350e95a4431596267717354fbec84022567c1"
                ]
            }
        },
        "1.17.8-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:561c71a02db8ad920482aa2549604b7c83b55442a61d1ed5ef03d5933f649e98",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "d0dbeae1684e7cceb94eaf3528d31752c2ce0d219447237889267dc08a82f229",
            "container_config": {
                "Hostname": "d0dbeae1684e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.8"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:561c71a02db8ad920482aa2549604b7c83b55442a61d1ed5ef03d5933f649e98",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-04T01:24:19.9688185Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2021-05-08T09:40:24.683Z",
                    "created_by": "Apply image 2022-RTM-amd64"
                },
                {
                    "created": "2022-02-01T02:49:40.7445309Z",
                    "created_by": "Install update ltsc2022-amd64"
                },
                {
                    "created": "2022-03-04T01:21:26.3995506Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-04T01:21:27.3192652Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-04T01:21:27.8895875Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-04T01:21:28.5147627Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-04T01:21:29.1719579Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-04T01:21:50.8780395Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:21:51.61647Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-04T01:22:02.3734315Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-04T01:22:03.1593584Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.8"
                },
                {
                    "created": "2022-03-04T01:24:18.7959296Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '3f376538245436da78193101863751c502da489e29317acaf18bdb0d2852d654'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-04T01:24:19.9688185Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.524",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c18686406f96b263d986714a2d88add06ea9ddbb3e52fb936222711da7d9d395",
                    "sha256:cb035f935452c8233f98f5a56fc0c75ba0a227b76ffcad91b1adc223bfe52973",
                    "sha256:7ef568dda781473d18b9cc62f5b92dd52582a85038d3abc75583ebe7cad74965",
                    "sha256:7820d88ae328a5b01a54b0a1137a0218b874617b3745b8e507230694d258f3b5",
                    "sha256:4630fb38d7c55e8996b8c5d9dd688a33240163b9e44be600ad31ba6352282062",
                    "sha256:0661b85c941d348df796a37b4ec256aadff94050729a5f652e87d37f3c4f220f",
                    "sha256:0ff91b69eb39a94eee3904b7be4774b80214b1199b0f252b08b73c23c22f89bc",
                    "sha256:6edfc8ebfdb5f618d5d1250d43863004e69de7de55485edabb70808c7811ea73",
                    "sha256:af1bf642d1433428ae0c7c3c092db7e3605ffa50afe28145e55d550e5cceed4d",
                    "sha256:e059a5da7d56422edaae450c99ee38cffea726703a4db455f9360b8c33e49885",
                    "sha256:686735594058be1b47584488be6af4a7065fd76888edda2c8ffff81198ce20fa",
                    "sha256:a8431f0ab5dda49421478006d995ae18383095b9a5fa2177c0e6590ef71a6ca6",
                    "sha256:1870aaafaf49b718270411ed19f04c8c2672366db9a13d422af493c5e081fa0f"
                ]
            }
        },
        "1.17.8-2-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9c6469a79564d749c54ab418f4de5b3985f96b52e46ac070ac5da96e1a351e4",
            "container_config": {
                "Hostname": "a9c6469a7956",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:31:58.459467836Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:32.405038789Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:33.034426703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:33.525834428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.204102022Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220329.6/go.20220329.6.linux-amd64.tar.gz'; \t\t\tsha256='661b1d3d3d2b1a2d8d151a85c6972c0995ce18098639b8f72668f6b587834ad4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:31:55.336578635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:56.200719559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:57.592603891Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:31:58.459467836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:3fd8c5f4a1c001585435aeea82635751456027a3a03df58f3f8ef0bede1fad67",
                    "sha256:c466d93293cefa134a2d74932e729a214a720fa804a1a9f82983cb1a70acb455",
                    "sha256:8cf59650044e662a0d36d6f226c4568a40fafe4a6b90a7e7df03433a12e19b00"
                ]
            }
        },
        "1.17.8-2-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9c6469a79564d749c54ab418f4de5b3985f96b52e46ac070ac5da96e1a351e4",
            "container_config": {
                "Hostname": "a9c6469a7956",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:31:58.459467836Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:32.405038789Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:33.034426703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:33.525834428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.204102022Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220329.6/go.20220329.6.linux-amd64.tar.gz'; \t\t\tsha256='661b1d3d3d2b1a2d8d151a85c6972c0995ce18098639b8f72668f6b587834ad4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:31:55.336578635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:56.200719559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:57.592603891Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:31:58.459467836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:3fd8c5f4a1c001585435aeea82635751456027a3a03df58f3f8ef0bede1fad67",
                    "sha256:c466d93293cefa134a2d74932e729a214a720fa804a1a9f82983cb1a70acb455",
                    "sha256:8cf59650044e662a0d36d6f226c4568a40fafe4a6b90a7e7df03433a12e19b00"
                ]
            }
        },
        "1.17.8-2-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9c6469a79564d749c54ab418f4de5b3985f96b52e46ac070ac5da96e1a351e4",
            "container_config": {
                "Hostname": "a9c6469a7956",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:31:58.459467836Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:32.405038789Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:33.034426703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:33.525834428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.204102022Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220329.6/go.20220329.6.linux-amd64.tar.gz'; \t\t\tsha256='661b1d3d3d2b1a2d8d151a85c6972c0995ce18098639b8f72668f6b587834ad4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:31:55.336578635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:56.200719559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:57.592603891Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:31:58.459467836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:3fd8c5f4a1c001585435aeea82635751456027a3a03df58f3f8ef0bede1fad67",
                    "sha256:c466d93293cefa134a2d74932e729a214a720fa804a1a9f82983cb1a70acb455",
                    "sha256:8cf59650044e662a0d36d6f226c4568a40fafe4a6b90a7e7df03433a12e19b00"
                ]
            }
        },
        "1.17.8-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c6439d91adb8fb45e0f4f515c1a36ecabc82390fe9da4569d97f1915d8f6891",
            "container_config": {
                "Hostname": "8c6439d91adb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:086e57a964b723dbf7974e994c57ffd4267bf5828ada2014a3723d15e230e840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:25.594152809Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.000337101Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:00.698795821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:01.61106021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.311620856Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:22.486393666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:23.417530584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:24.659729749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:25.594152809Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:69d2d6b6c2abce77b559e550cd3efdff2e5b0bce9e33b4f8cd1a70a4bd7fc8e5",
                    "sha256:7e075613750f944481c33aeb06c6adf987f875180acbf56a6665930762e61c7d",
                    "sha256:2a6b834c755a928352e8d01966d21312b9faa17b4de61810c6fb9dc5d34ecbf1"
                ]
            }
        },
        "1.17.8-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2ced7d880d998ccd62f14bb41cce1326f781e5aeebdfb2ab12b735ddc837bc22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "165abe797d1613ebb8f64db185944a89b3eb7e86868d4dcd3709b8d1cbefab51",
            "container_config": {
                "Hostname": "165abe797d16",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2ced7d880d998ccd62f14bb41cce1326f781e5aeebdfb2ab12b735ddc837bc22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:53.585533545Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:24.125565039Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:24.894010255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:25.682014599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:48.539311231Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:49.883850941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:50.968807582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:52.451575782Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:53.585533545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:ec11096e999f4033f024530575440ee9f5554057e6317522e84b4939c06f10bf",
                    "sha256:56b81f5fffe8a7bf92790ab38a067371dc03028735570f662b9ad4304070e3cd",
                    "sha256:d308d7d542edaa14ec9ad088ea4dbe07c956429f75c82ee3e12b1e6360b640dc"
                ]
            }
        },
        "1.17.8-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9c6469a79564d749c54ab418f4de5b3985f96b52e46ac070ac5da96e1a351e4",
            "container_config": {
                "Hostname": "a9c6469a7956",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:31:58.459467836Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:32.405038789Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:33.034426703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:33.525834428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.204102022Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220329.6/go.20220329.6.linux-amd64.tar.gz'; \t\t\tsha256='661b1d3d3d2b1a2d8d151a85c6972c0995ce18098639b8f72668f6b587834ad4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:31:55.336578635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:56.200719559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:57.592603891Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:31:58.459467836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:3fd8c5f4a1c001585435aeea82635751456027a3a03df58f3f8ef0bede1fad67",
                    "sha256:c466d93293cefa134a2d74932e729a214a720fa804a1a9f82983cb1a70acb455",
                    "sha256:8cf59650044e662a0d36d6f226c4568a40fafe4a6b90a7e7df03433a12e19b00"
                ]
            }
        },
        "1.17.8-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9c6469a79564d749c54ab418f4de5b3985f96b52e46ac070ac5da96e1a351e4",
            "container_config": {
                "Hostname": "a9c6469a7956",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d92cfee96a634d47250291dcc3c660ea371c3a01d9e709fc7842eda6377011e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:31:58.459467836Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:32.405038789Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:33.034426703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:33.525834428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.204102022Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220329.6/go.20220329.6.linux-amd64.tar.gz'; \t\t\tsha256='661b1d3d3d2b1a2d8d151a85c6972c0995ce18098639b8f72668f6b587834ad4'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:31:55.336578635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:56.200719559Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:57.592603891Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:31:58.459467836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:3fd8c5f4a1c001585435aeea82635751456027a3a03df58f3f8ef0bede1fad67",
                    "sha256:c466d93293cefa134a2d74932e729a214a720fa804a1a9f82983cb1a70acb455",
                    "sha256:8cf59650044e662a0d36d6f226c4568a40fafe4a6b90a7e7df03433a12e19b00"
                ]
            }
        },
        "1.17.8-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4d9c94560db970e7e702c1b42bc5e537dd7e0baa15dcd91b1ec408f276f5274d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "672b9157f63edd0b483f35ca6fb9d74f296561d7a2b028ee02507801d76d62b8",
            "container_config": {
                "Hostname": "672b9157f63e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4d9c94560db970e7e702c1b42bc5e537dd7e0baa15dcd91b1ec408f276f5274d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-04T01:21:56.036224471Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.066281029Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-04T01:21:20.772224237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:21.633454724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:51.367745232Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220303.3/go.20220303.3.linux-amd64.tar.gz'; \t\t\tsha256='fa8a829cf00f9370ba2032335700e3d65e1c58b0ff5bea1cd72145d2d1a51631'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-04T01:21:52.688548696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:53.700155925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-04T01:21:55.022236277Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-04T01:21:56.036224471Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:4fb3aa525ed9ccb427904d8d219c4aa01eb19eacc9fbc1e2363467de9c1e7357",
                    "sha256:3f325ac0e7c4913893eff58b0674970d3c0df33a943e0ca5f78d47a3820c03f8",
                    "sha256:89305fc62c4d92526304180da0084ed896c11a27e7afe0fad772cd5868702c00"
                ]
            }
        },
        "1.17.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59f4ed6c0ae9c9c568bd93d2d74a99aa0fb32cfec7fe82c839844d231baf87ec",
            "container_config": {
                "Hostname": "59f4ed6c0ae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:09.549099842Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:43.521040478Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:44.248460549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:44.907274193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:04.684484653Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:05.965131911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:07.044650424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:08.460541793Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:09.549099842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a20abb5bb252d05e53bf0e75ca18f5a82ad1e07240872c2d48077a4c06ec9f77",
                    "sha256:2b7eb6de8e145b3f154ec450991025cde217ab017f882223f5b503c96b68ef83",
                    "sha256:4df83e61c60791323d7918de1a322657d16373007b5f321e23f197758b15d9e4"
                ]
            }
        },
        "1.17.9-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59f4ed6c0ae9c9c568bd93d2d74a99aa0fb32cfec7fe82c839844d231baf87ec",
            "container_config": {
                "Hostname": "59f4ed6c0ae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:09.549099842Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:43.521040478Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:44.248460549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:44.907274193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:04.684484653Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:05.965131911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:07.044650424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:08.460541793Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:09.549099842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a20abb5bb252d05e53bf0e75ca18f5a82ad1e07240872c2d48077a4c06ec9f77",
                    "sha256:2b7eb6de8e145b3f154ec450991025cde217ab017f882223f5b503c96b68ef83",
                    "sha256:4df83e61c60791323d7918de1a322657d16373007b5f321e23f197758b15d9e4"
                ]
            }
        },
        "1.17.9-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59f4ed6c0ae9c9c568bd93d2d74a99aa0fb32cfec7fe82c839844d231baf87ec",
            "container_config": {
                "Hostname": "59f4ed6c0ae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:09.549099842Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:43.521040478Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:44.248460549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:44.907274193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:04.684484653Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:05.965131911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:07.044650424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:08.460541793Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:09.549099842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a20abb5bb252d05e53bf0e75ca18f5a82ad1e07240872c2d48077a4c06ec9f77",
                    "sha256:2b7eb6de8e145b3f154ec450991025cde217ab017f882223f5b503c96b68ef83",
                    "sha256:4df83e61c60791323d7918de1a322657d16373007b5f321e23f197758b15d9e4"
                ]
            }
        },
        "1.17.9-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59f4ed6c0ae9c9c568bd93d2d74a99aa0fb32cfec7fe82c839844d231baf87ec",
            "container_config": {
                "Hostname": "59f4ed6c0ae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:09.549099842Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:43.521040478Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:44.248460549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:44.907274193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:04.684484653Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:05.965131911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:07.044650424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:08.460541793Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:09.549099842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a20abb5bb252d05e53bf0e75ca18f5a82ad1e07240872c2d48077a4c06ec9f77",
                    "sha256:2b7eb6de8e145b3f154ec450991025cde217ab017f882223f5b503c96b68ef83",
                    "sha256:4df83e61c60791323d7918de1a322657d16373007b5f321e23f197758b15d9e4"
                ]
            }
        },
        "1.17.9-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b268b0ca70732b44d0aec5d8c742dba30fe88fcba66d25c3a61717c301d29151",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1b0614f47940d8b6116c97ed4276288dbad15c324ad383574ca5c196ba7a200a",
            "container_config": {
                "Hostname": "1b0614f47940",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b268b0ca70732b44d0aec5d8c742dba30fe88fcba66d25c3a61717c301d29151",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:11:30.127286847Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T13:26:39.325923462Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1c05c50014bbd32a4cf1edd085996a8c62abc3c8969b64d2355475827a07475e in / "
                },
                {
                    "created": "2022-04-20T13:26:40.283473033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T20:06:56.176453303Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T20:07:09.797424Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T20:07:58.466284041Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:11:02.756840764Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:11:04.064540935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:05.615708689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:23.176156576Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:11:25.516056417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:26.774024239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:28.809326742Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:11:30.127286847Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ffdde41c2394222d07f76bf0fd9839281484d89274b879ed0851ffafef2f9f49",
                    "sha256:d0933b8570824176b3c03d0bec8d0f603af2ad72ee85c28d3c9aed29c16e549e",
                    "sha256:561f34cd176d77d3274c5318caec1e68b58c49df0e53e3e41e105cb66727d9cb",
                    "sha256:b973cfd359b9e605be7c0ef8a9d756a11c85f258398bb82bdd226117ba77978f",
                    "sha256:ce4dd1e26d74c45c3f8999dd948024e894a67129d28fc836bc8c977a29e65151",
                    "sha256:9c3dfe4eeb4a85d06f555261ca12b1fe74284850d8651c45316981453e78bb89",
                    "sha256:072bef51e1fa63a805c2b341acc846916ad2987a2ff8814ba4e1a63def589e35"
                ]
            },
            "variant": "v7"
        },
        "1.17.9-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4f4fba24b17ce95428c4f85fa575597c708f91905d310f9df5dd73e4535f6cfa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3ad32d6bbabf63af4685a5d5b982f5691e9756e8aff655b923b3e9a83f6c0f3b",
            "container_config": {
                "Hostname": "3ad32d6bbabf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4f4fba24b17ce95428c4f85fa575597c708f91905d310f9df5dd73e4535f6cfa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:17:06.928702017Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T04:28:55.330633836Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece192802cbdaf1a141d04f0c2e90cfd3479e5e3e82c6a00206970684494cf48 in / "
                },
                {
                    "created": "2022-04-20T04:28:56.053467905Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:44:07.141404836Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:44:12.588244362Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:44:33.128036283Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:31.884924975Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:35.21761825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:36.271299518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:57.618003774Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:17:01.020946803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:03.424500355Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:05.560872579Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:17:06.928702017Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b4fb74f35a958a3807325c144b2be2f3353b81354e049a7db9cfd5ae83a0dce",
                    "sha256:545989329635d777ed840566c04ad359c95859d23b0660715ca53a3ca473b9f9",
                    "sha256:cd328c815fcb1150998765feef6a138f9f08b5d67bf457ea12196131834c153f",
                    "sha256:2668e627912e1993b0acd6b40b0caa64c601852dd4d10a1700c4668d8e73651f",
                    "sha256:20ac5b6b6dd980a4bdde8dfc4bb682b82ef7a33d3ac20433d86b90753c1fb072",
                    "sha256:b3bd4f061f8a499851f53fdb02ed57f247e2812251457c6fa6ef09e4917f7854",
                    "sha256:6daa6e15296ce914658a2924095eef83229d10de48a926f3b961d531a5259c81"
                ]
            },
            "variant": "v8"
        },
        "1.17.9-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f637d4c10dd6b06d8dca31606476faa4dffedf74e61818e880aa7d825f91ffa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1d64c12ccb59f5110b93a5dc1d2c45de6ffad0966e19b8a6ffd48a36e0453585",
            "container_config": {
                "Hostname": "1d64c12ccb59",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f637d4c10dd6b06d8dca31606476faa4dffedf74e61818e880aa7d825f91ffa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:15.31663337Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:37.180912862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7c5789fb822bda2652d7addee832c5a3d71733f0f94f97d89b0c5570c0840829 in / "
                },
                {
                    "created": "2022-04-20T04:43:37.732864614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:59:01.964685664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:59:07.088636152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:59:22.097083802Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:47.795288143Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:48.472560943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:08:49.089659315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:10.737412032Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:12.03907708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:13.012381858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:14.334852623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:15.31663337Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9fd5db9c9a6470a6c668ade7fa1faf299b734be4f20fef105ec719ac161cee4",
                    "sha256:5d253e59e5233a8eeebb8acdf660c9a5dff6f064656a00fe856e45cd091be47f",
                    "sha256:85fe0038088133c12b3556a09e7817998e2043b1dc73630561a0d446d969f755",
                    "sha256:957a6eed8d1f1779b315b725c58f42fa20dd6bd59dbea586bf05b9dd32f1d3f2",
                    "sha256:324316bc1fc6e0b581fc0bc0e214e3dddadde292182c8fee12fb09dab3d8acf8",
                    "sha256:068c341d9f755d043b3b345d4caff4a5a8ee7cf0aa65265678026019a59e33c8",
                    "sha256:3907aec4deccb4fcfc9ee4b49d5ba6d8e892cff5fdbc6e854ba3175c5371cf51"
                ]
            }
        },
        "1.17.9-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f637d4c10dd6b06d8dca31606476faa4dffedf74e61818e880aa7d825f91ffa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1d64c12ccb59f5110b93a5dc1d2c45de6ffad0966e19b8a6ffd48a36e0453585",
            "container_config": {
                "Hostname": "1d64c12ccb59",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f637d4c10dd6b06d8dca31606476faa4dffedf74e61818e880aa7d825f91ffa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:15.31663337Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:37.180912862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7c5789fb822bda2652d7addee832c5a3d71733f0f94f97d89b0c5570c0840829 in / "
                },
                {
                    "created": "2022-04-20T04:43:37.732864614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:59:01.964685664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:59:07.088636152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:59:22.097083802Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:47.795288143Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:48.472560943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:08:49.089659315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:10.737412032Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:12.03907708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:13.012381858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:14.334852623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:15.31663337Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9fd5db9c9a6470a6c668ade7fa1faf299b734be4f20fef105ec719ac161cee4",
                    "sha256:5d253e59e5233a8eeebb8acdf660c9a5dff6f064656a00fe856e45cd091be47f",
                    "sha256:85fe0038088133c12b3556a09e7817998e2043b1dc73630561a0d446d969f755",
                    "sha256:957a6eed8d1f1779b315b725c58f42fa20dd6bd59dbea586bf05b9dd32f1d3f2",
                    "sha256:324316bc1fc6e0b581fc0bc0e214e3dddadde292182c8fee12fb09dab3d8acf8",
                    "sha256:068c341d9f755d043b3b345d4caff4a5a8ee7cf0aa65265678026019a59e33c8",
                    "sha256:3907aec4deccb4fcfc9ee4b49d5ba6d8e892cff5fdbc6e854ba3175c5371cf51"
                ]
            }
        },
        "1.17.9-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5e618848b391ed8baf6debab3513bad082424526497c28d186f68599eec22e0a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "264a1e408867364f06e6ebb51eb2a514933119af986711a8f8b2038110751747",
            "container_config": {
                "Hostname": "264a1e408867",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5e618848b391ed8baf6debab3513bad082424526497c28d186f68599eec22e0a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:12:37.152610248Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T13:27:49.665913345Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fbbe7a4ec12b0fdfa82879ff73d49ba760c5b6cc47b4c8ecabe64f7e8f4e6340 in / "
                },
                {
                    "created": "2022-04-20T13:27:50.651260428Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T20:10:28.140470103Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T20:10:41.054326297Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T20:11:27.35293581Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:12:09.344536735Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:12:10.59122897Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:12:12.340294977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:12:30.398426471Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:12:32.417737867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:12:33.646658354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:12:35.694694807Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:12:37.152610248Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19b90bbbe309c310a1ee088d6021635fdce2aeac504597b6d56bb8fb1fdbec43",
                    "sha256:8b4c259322ffdcd041ddbecfa259421284df3f96c474963bdd365be5f7614a8d",
                    "sha256:320cd6889ce1969aafd47c175531215399d532a26a9a3702d160a717a5feeb52",
                    "sha256:1b7a8dd5163832ef7dfcdbe23466bec6a2d933570802d69ab90eaca353310eca",
                    "sha256:e09f29528888e081b3c2fff50f94f91315e3c0934e268897c085b1845ac6dd38",
                    "sha256:bd650d5618b3d73843094d5442543dcc90447cfb171a0aeba848645bd306984f",
                    "sha256:aab85e1adf13f7c2453932ca080564cd3ce7478b7eb4edcda6c3ce5fdf987e1a"
                ]
            },
            "variant": "v7"
        },
        "1.17.9-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0a50bbc6fee16185dc6099bae43aa72c92c6908a61aa0fe6744e19603f34e62",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "939a1d530f5300df33222d3aec05c8c677878c3ff840750ee5557b89eea0afc8",
            "container_config": {
                "Hostname": "939a1d530f53",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0a50bbc6fee16185dc6099bae43aa72c92c6908a61aa0fe6744e19603f34e62",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:16:55.947553299Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T04:29:22.258099938Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5286ff5db23c42ac6a437e8f2f9ef01b6ee6e523d7866c752428d54f177c7108 in / "
                },
                {
                    "created": "2022-04-20T04:29:22.958170346Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:45:29.444427424Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:45:34.921881538Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:45:56.473530272Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:23.340351593Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:25.162991609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:26.658195605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:47.745186347Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:16:50.501572842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:51.803076177Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:54.263112511Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:16:55.947553299Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6641916ea13bd0a3d2f3d74510060afd0f3be110b92e495a942044dbbe7d086e",
                    "sha256:2201a0a7e83ae841cc3ad9a7c01b9929e18aa1d983c1504d012cafbcf6ea6d76",
                    "sha256:948cdb04f6a6d95bfeb8f967f3431d7c02e504733f4abf12fbb0f2ea6bf84740",
                    "sha256:faada0974668bf3e490a06e569be0e2ac0f03d1e7574fa61bc4839f2874ae6e4",
                    "sha256:3ee0a211c16ee13f2e7e630aed8f32ac2284eee0373cb67dfb96a90193cde1e7",
                    "sha256:db7a5d5cd58e1ac92dc375c121ddb4ba479941cd395cd27f26485395d4d3b882",
                    "sha256:0ecefaabb3a0534a8cec973b6be40b87c1d879b814e67be844fa14710a7a10ff"
                ]
            },
            "variant": "v8"
        },
        "1.17.9-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08819d9d73710b3cd278d104507019b0bb333eaa77004a119f4853ed8ee8d2ea",
            "container_config": {
                "Hostname": "08819d9d7371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:21:52.159833983Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:27.049789707Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:27.674171449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:28.481853453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:48.098243246Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-amd64.tar.gz'; \t\t\tsha256='97dbef56d8fd0928eafc7f2762f2dca07a05c0de44ca5434778aba8ab91c456f'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-arm64.tar.gz'; \t\t\tsha256='6fccfc0515bcf3cc138b0888cb99bf066a62571bbd0ba4b09da242564e659dc7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:21:49.227928974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:50.09050119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:51.289918334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:21:52.159833983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:8ca8737fb4314757b70fe4e89fb8569d3dde60fd5de42796863137aa158dbb5f",
                    "sha256:f307dfbda31da668ba6d750e09809ce8c26582f2e395e53d2f1c7244e31dbf13",
                    "sha256:0078c2510832aa26715e08e482238c8b984ca1578e246a83e83d1870946456f8"
                ]
            }
        },
        "1.17.9-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08819d9d73710b3cd278d104507019b0bb333eaa77004a119f4853ed8ee8d2ea",
            "container_config": {
                "Hostname": "08819d9d7371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:21:52.159833983Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:27.049789707Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:27.674171449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:28.481853453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:48.098243246Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-amd64.tar.gz'; \t\t\tsha256='97dbef56d8fd0928eafc7f2762f2dca07a05c0de44ca5434778aba8ab91c456f'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-arm64.tar.gz'; \t\t\tsha256='6fccfc0515bcf3cc138b0888cb99bf066a62571bbd0ba4b09da242564e659dc7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:21:49.227928974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:50.09050119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:51.289918334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:21:52.159833983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:8ca8737fb4314757b70fe4e89fb8569d3dde60fd5de42796863137aa158dbb5f",
                    "sha256:f307dfbda31da668ba6d750e09809ce8c26582f2e395e53d2f1c7244e31dbf13",
                    "sha256:0078c2510832aa26715e08e482238c8b984ca1578e246a83e83d1870946456f8"
                ]
            }
        },
        "1.17.9-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08819d9d73710b3cd278d104507019b0bb333eaa77004a119f4853ed8ee8d2ea",
            "container_config": {
                "Hostname": "08819d9d7371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:21:52.159833983Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:27.049789707Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:27.674171449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:28.481853453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:48.098243246Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-amd64.tar.gz'; \t\t\tsha256='97dbef56d8fd0928eafc7f2762f2dca07a05c0de44ca5434778aba8ab91c456f'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-arm64.tar.gz'; \t\t\tsha256='6fccfc0515bcf3cc138b0888cb99bf066a62571bbd0ba4b09da242564e659dc7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:21:49.227928974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:50.09050119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:51.289918334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:21:52.159833983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:8ca8737fb4314757b70fe4e89fb8569d3dde60fd5de42796863137aa158dbb5f",
                    "sha256:f307dfbda31da668ba6d750e09809ce8c26582f2e395e53d2f1c7244e31dbf13",
                    "sha256:0078c2510832aa26715e08e482238c8b984ca1578e246a83e83d1870946456f8"
                ]
            }
        },
        "1.17.9-1-fips-cbl-mariner1.0-arm64": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:5a526339892257efd79ba4d74e7d960ea8cbaa90779f300507042fec91b1c9a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d428d2d76d1a3043b2d29d575b07cbe1311df8d2173ef124dfea3db47f35297d",
            "container_config": {
                "Hostname": "d428d2d76d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5a526339892257efd79ba4d74e7d960ea8cbaa90779f300507042fec91b1c9a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:27:02.266596559Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-03-19T16:55:40.140658887Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:26:20.169713723Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:26:21.408955343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:26:22.521831278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:26:54.892588761Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-amd64.tar.gz'; \t\t\tsha256='97dbef56d8fd0928eafc7f2762f2dca07a05c0de44ca5434778aba8ab91c456f'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-arm64.tar.gz'; \t\t\tsha256='6fccfc0515bcf3cc138b0888cb99bf066a62571bbd0ba4b09da242564e659dc7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:26:57.030744691Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:26:58.400937653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:27:00.807902629Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:27:02.266596559Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0bcd07420e1a5450706e47129cec4ef4d8b84ca7f18a6d2a624b0f85c8352c59",
                    "sha256:2fe14a8e21e925affa7b763b3675aef70e1279d886ae2f7f0254e085d22f1e3c",
                    "sha256:a766bda690446fb5289651c446b84e3dc2c5bbf725cd37cc1fd2abf9ea56fb87",
                    "sha256:eefb09c9b90970c9654bb1ceb8139ba22c5b54b291f0398ea5f9620eedc53d2d"
                ]
            }
        },
        "1.17.9-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:f41da85877e1f55f6a4a067de220ccbe4b8129dd59edc5c04c36c64cfb8fd683",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "bbe6d017e73f79e6a1995caceb9f05df1c7ea98789bf9a727a03cdcbd5da325b",
            "container_config": {
                "Hostname": "bbe6d017e73f",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:f41da85877e1f55f6a4a067de220ccbe4b8129dd59edc5c04c36c64cfb8fd683",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-04-26T16:11:50.1079388Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-04T10:52:49.0709247Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-04-26T16:10:33.6656842Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-04-26T16:10:34.8596963Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:10:35.8257296Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-04-26T16:10:40.1742716Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-04-26T16:10:41.0893383Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-04-26T16:10:42.0929179Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.9"
                },
                {
                    "created": "2022-04-26T16:11:46.6298535Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:06975ff0eda615f4c018173cfd0e7b1295c1326796ee6e8f2cdf52eaf2411fd3 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-04-26T16:11:49.0227526Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-04-26T16:11:50.1079388Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2803",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3da6ad2633b175b0d7f574117a3672f8cf3d2322eb89904ed9d5c36e0447e64",
                    "sha256:429a5610d58bb589d4733bb9153d0ba3e68b4977d743ed3623e1bfaf6354a3d5",
                    "sha256:885ca97d7c40b137c81e8ef6e9b875ad328adcf2da9097c75f2ed079620d6ad7",
                    "sha256:67852f3689eee8b2243ddbb32e3dedde9c0327a0cb1c28152ffa90f127b10b92",
                    "sha256:7b697d4269bad0d765734c6370e876b776156547d612268e43109734fcbec412",
                    "sha256:ab9ce34e65c62d591f70c86e84fec1423e5c76ea4ff5f0285d27e276354514b7",
                    "sha256:7236bdc8afeb8a8a4ddc73a889b20cb82552193281e34fb6aa2ffb84a5e8e034",
                    "sha256:f41fd9eaed675377e57400f938f5e9dec7f8b193add4172a10f9a7cca59ff4e5",
                    "sha256:dd55146ed5cdcd971ff953c9b457a7f1b9bb9874304ed2a11a25e69971140a85",
                    "sha256:153fbcc7b6653c71622ab9b0d8399aed679783a838542e0f26214d7b57f3c391"
                ]
            }
        },
        "1.17.9-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:dfcc781c371f08b929f62addeae5b6a80c1306cb808c8d97b90c0d20070fec65",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "72ff4a94fca58b1c8675df03763f6a5116ea4b11f440c0a7d990d2bf5cfcec7e",
            "container_config": {
                "Hostname": "72ff4a94fca5",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:dfcc781c371f08b929f62addeae5b6a80c1306cb808c8d97b90c0d20070fec65",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-04-26T16:13:37.7450123Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-03T05:29:07.0465742Z",
                    "created_by": "Apply image ltsc2022-amd64"
                },
                {
                    "created": "2022-04-26T16:12:13.8062812Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-04-26T16:12:14.789944Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:12:15.7345463Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-04-26T16:12:22.4458949Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-04-26T16:12:23.6228486Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-04-26T16:12:24.5879968Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.17.9"
                },
                {
                    "created": "2022-04-26T16:13:31.0504075Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:06975ff0eda615f4c018173cfd0e7b1295c1326796ee6e8f2cdf52eaf2411fd3 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-04-26T16:13:36.591114Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-04-26T16:13:37.7450123Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.643",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fccd45c64ccd39b01024e6df23e112d76c503571bf19a9bd60fba0bb484fb7e3",
                    "sha256:b0b526575249bf91b1d996ec041d7422d50256f5f91d5606f545a9baa3d82f65",
                    "sha256:20b0bf89ec146289c0792f6460c1ac0762b842e40bc2fa02d39329af5150c02e",
                    "sha256:729d80ccdf0b4f0ee1f4f6077a8b7201f8b49225baf4798d69ad539313ee171d",
                    "sha256:48276503c9cef929ff8c7404bd74a2bc940571298dff8659f151041af2406c78",
                    "sha256:28299d2c7119340ad784f9ac856c05e51909c58217e1778b0dd6b84842ea14e9",
                    "sha256:e8956fd358604bfb237ce81eda7160b6dd62568e5176a4c16aae7a5d94ca84c4",
                    "sha256:cc109b7603b0b4f89929260c2d7b693dfb220ae26e24069d6926994d2e9a82cd",
                    "sha256:29dd005ad9c6b76c90c51eb6ed257c827e29bdd80249a0b287685c7fa3e03322",
                    "sha256:9e44e9214f5e51fad40b60c97d2c1bdaf0e6c0c7243e16a6348d35d52b6851a4"
                ]
            }
        },
        "1.17.9-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:55c76a2baab475a02c7b99de15638c3a414df5423fad1855bcaeb8771deb1b97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fd3d1e35f72e41acfb1c9dc32b19b4bd634d9db6d0af9696792fc5ddf45ceb45",
            "container_config": {
                "Hostname": "fd3d1e35f72e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:55c76a2baab475a02c7b99de15638c3a414df5423fad1855bcaeb8771deb1b97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:02.344024088Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:45:14.972655722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ed691b65385dede44a92f9de9e1428af431197c66461aa0f9c61e2f7c8bade5 in / "
                },
                {
                    "created": "2022-04-20T04:45:15.54694057Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T07:01:39.096504391Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T07:01:43.28086204Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T07:02:01.604480891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:34.850038063Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:35.545264417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:36.144473342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:57.655959049Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:58.940196147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:59.986068957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:01.367548361Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:02.344024088Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f4dc9775f33d9f80dff490ce6f9b38c36dbbec4c1951662e8a2e7dab6d6001f",
                    "sha256:f8323fb3a55ca67fca978090eb30481a2e6a3fa43f9abe6785a9b27604400cb0",
                    "sha256:f6c2459e20599295aafb91d5ce2a54d1e81f778fff9d13ef1d8a8532385d5ae2",
                    "sha256:f35deb8d96fc57e36d66e1e90d19a67da3cfa9e18c4abe620131bf71a45df923",
                    "sha256:bb270c5f91c835ecedbcbdda2147bd66e5de80fe61120c290120398826e13639",
                    "sha256:0f7b134c36c14ba889dce1388307d3b578e8e211f659d1e18e4461a6db0aa0d4",
                    "sha256:d0b01d21f4700ec5259ad9e8f3765808daf401eacc4951e076d6ac2efd5f01df"
                ]
            }
        },
        "1.17.9-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:55c76a2baab475a02c7b99de15638c3a414df5423fad1855bcaeb8771deb1b97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fd3d1e35f72e41acfb1c9dc32b19b4bd634d9db6d0af9696792fc5ddf45ceb45",
            "container_config": {
                "Hostname": "fd3d1e35f72e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:55c76a2baab475a02c7b99de15638c3a414df5423fad1855bcaeb8771deb1b97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:02.344024088Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:45:14.972655722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ed691b65385dede44a92f9de9e1428af431197c66461aa0f9c61e2f7c8bade5 in / "
                },
                {
                    "created": "2022-04-20T04:45:15.54694057Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T07:01:39.096504391Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T07:01:43.28086204Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T07:02:01.604480891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:34.850038063Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:35.545264417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:36.144473342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:57.655959049Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:58.940196147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:59.986068957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:01.367548361Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:02.344024088Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f4dc9775f33d9f80dff490ce6f9b38c36dbbec4c1951662e8a2e7dab6d6001f",
                    "sha256:f8323fb3a55ca67fca978090eb30481a2e6a3fa43f9abe6785a9b27604400cb0",
                    "sha256:f6c2459e20599295aafb91d5ce2a54d1e81f778fff9d13ef1d8a8532385d5ae2",
                    "sha256:f35deb8d96fc57e36d66e1e90d19a67da3cfa9e18c4abe620131bf71a45df923",
                    "sha256:bb270c5f91c835ecedbcbdda2147bd66e5de80fe61120c290120398826e13639",
                    "sha256:0f7b134c36c14ba889dce1388307d3b578e8e211f659d1e18e4461a6db0aa0d4",
                    "sha256:d0b01d21f4700ec5259ad9e8f3765808daf401eacc4951e076d6ac2efd5f01df"
                ]
            }
        },
        "1.17.9-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a8c1657ffef67beb88aab38487b09199f364b0567257a1e7375a080d49c9f289",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "32408d89e12268c6fbeedd30cd327d10bab3b5e8d7663a0d3161035a2ddc0f52",
            "container_config": {
                "Hostname": "32408d89e122",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a8c1657ffef67beb88aab38487b09199f364b0567257a1e7375a080d49c9f289",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:11:42.883163556Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T13:33:15.393492888Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d237e5cd139706988e7bbc50ae542898a9b1fa1539f00322f21a71714975ccd8 in / "
                },
                {
                    "created": "2022-04-20T13:33:16.331807982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T20:17:39.410552555Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T20:17:50.375880411Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T20:18:44.347342759Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:11:12.964775538Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:11:14.369367869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:15.378365985Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:36.180567405Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:11:38.021995214Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:39.326972008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:11:41.470710835Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:11:42.883163556Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b5ba0132861977a1665ed8766640dbabc8ec5184d2704efda73a5468a323d1",
                    "sha256:e52411dadecdfdcbf2279394fd21c91f75076ddbf528678204777af0e4fdd004",
                    "sha256:952036bb3ee88d70300a77bfc3c4648ce1ac0c3fa881b883ccf6befa393aecab",
                    "sha256:bcf9ec9b83fae709b73f364eaccf188025ca185bc3798dff306ae554a63ae71e",
                    "sha256:0c672437c7419d445f579ad8e0327c9ba3b4e64bc9649a983151d96985362131",
                    "sha256:48bf201c34cfa9a895d53eb04d98d543f77805fc9a4dfc6390f0d86a183f5f43",
                    "sha256:49a8995482fd9c58ea0ea6bdb34387c7140032d372f676278cb57d95f7e2cadc"
                ]
            },
            "variant": "v7"
        },
        "1.17.9-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1cf06b097c5a33792a378d6377d53aac4c78c9bf2642dfa18a745042ceb84987",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8d73da260eb0f17dc3c786a5cae7d70a698ec42992eaef41cd5c0455cd8fbaba",
            "container_config": {
                "Hostname": "8d73da260eb0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1cf06b097c5a33792a378d6377d53aac4c78c9bf2642dfa18a745042ceb84987",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:17:04.75599556Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T04:31:19.607562351Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:73f1db8536438ca891f4b507a569e6c561364db0f05914ebea9d3fa97e1bf837 in / "
                },
                {
                    "created": "2022-04-20T04:31:20.240600943Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:48:35.733807382Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:48:40.368324238Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:49:00.221624411Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:23.193849639Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:27.679042183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:29.103892228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:52.93234544Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:16:56.799085411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:59.363362247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:02.375841094Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:17:04.75599556Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d5bb7390153ec2789794f897e2774e3fd18c58e639ad71364d363390ef7454b3",
                    "sha256:abe5ee099fc9bd696817d390ee34e2d12aef7c68b4df57dbaa51de84199fa390",
                    "sha256:35e626ec2072191d9284de1334a1476f7d9b8abd1ae1337cfde5160f5f19a50f",
                    "sha256:7a5ddcc261adf2a2a85c1219d05818c6ec52b10af6fd6f2e7cb59e1c0adac2d1",
                    "sha256:b0d515867fb6a4deddefe7a3461f2b8175acd041694753e28ee3c7151a1edaf9",
                    "sha256:3139d52cef030ae77bf031d66b5bc85cbea4553db0aa4ca5156d8e3bcaa7289b",
                    "sha256:ec72dc6a126a9f2d258d17bd1bf7c834fe1383f39d7f9858f08e6eefc9618d2f"
                ]
            },
            "variant": "v8"
        },
        "1.17.9-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:8a909dbf4fdb51bca8d4779c71c1e87591278d9501ba70a8d8bd6954063f57da",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "28195ebbde5cdc54bb44dd91c7797506d653633ec55b957b6d0ea5d9bbc20842",
            "container_config": {
                "Hostname": "28195ebbde5c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:8a909dbf4fdb51bca8d4779c71c1e87591278d9501ba70a8d8bd6954063f57da",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-04-26T16:10:32.4725464Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-04-04T11:20:25.3756058Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-04-26T16:08:18.6897065Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-04-26T16:08:19.5725914Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-04-26T16:08:20.452891Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-04-26T16:08:21.3580635Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-04-26T16:08:22.3309643Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-04-26T16:08:53.7386241Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:08:54.6535119Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:09:00.2598317Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-04-26T16:09:01.1703844Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.9"
                },
                {
                    "created": "2022-04-26T16:10:31.2162589Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'dac299d353e8963ea0d0019064b0861ef4cb938ef5ec6a77a2a5da6e0aa1700b'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:10:32.4725464Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2803",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:c6723851d2c1b7e940bc2fb928eaeee12e52f984cb692a07b09d9829e2dc8893",
                    "sha256:2f0f17f3b721df63bae350a080fc99d55ac05821f0d381ac57dc58f416b7eeda",
                    "sha256:09d96b36797a8d5282683da73e70866a04e95d833be70cc815185fa9f0df6470",
                    "sha256:85f1c6eb9acca20c375eb47f81b30893b2cbe7bf2d51b83b02d2a9ce12803b90",
                    "sha256:fa1645aa8c30882b584055f4d9dd092eb39d84acf0ea771a03fe9ba073a4df3e",
                    "sha256:978228d1150f433db38b2c178ebdfefa44323544757aa18766c9fe09f0e315b3",
                    "sha256:80a6af299b2c4f6169e4582b7a6641008a2fbf8ef185325e92a0869a3db14471",
                    "sha256:fc55efd2a5f244666e026e3bcaa03f15de1d00d2b9ddf877e16df9d1c0f7b89a",
                    "sha256:7dbe88ed78ab2de10fbb8f5e16e67ca0f2a749c259748fe3bba9368c0dddc69e",
                    "sha256:4fec12c06d4d6e448def3a5e8158a5ed805f056e79602e172e437c4bf79a1b69",
                    "sha256:93e3c776af13d755087f264d210be3ffe76137c35e583fcbf6c264cd94ce4c8d",
                    "sha256:fa5cafa115c1cc3ce8a53117d22dcb51efd758f5562521e1af2cdefcc2a9845c"
                ]
            }
        },
        "1.17.9-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:bddda2330bb8146f3d966fc5241ac6c5c1243fd4b72794528af4b51669b1c57c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "31ba73ba62f7532f99a3ec2a66be5eba5456bbd6ab9b02bbc5e4823018c546f3",
            "container_config": {
                "Hostname": "31ba73ba62f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:bddda2330bb8146f3d966fc5241ac6c5c1243fd4b72794528af4b51669b1c57c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-04-26T16:38:06.5010598Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-04-03T10:04:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-04-26T16:31:04.9582485Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-04-26T16:31:06.9143796Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-04-26T16:31:08.9495967Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-04-26T16:31:10.8793455Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-04-26T16:31:12.929241Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-04-26T16:32:20.8021776Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:32:23.4009028Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:32:49.2584461Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-04-26T16:32:51.784913Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.9"
                },
                {
                    "created": "2022-04-26T16:38:02.0653061Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'dac299d353e8963ea0d0019064b0861ef4cb938ef5ec6a77a2a5da6e0aa1700b'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:38:06.5010598Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5066",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:fe48cee89971abac42eedb9110b61867659df00fc5b0b90dd91d6e19f704d935",
                    "sha256:f17021d4ac2332bc9fcddbd6cc2f5a3bfe3a527f5ca70ad2237a8e781fadf183",
                    "sha256:1214c7e3cde6e23ac6186547cc223664b0e04573233ba1d79f17fb45b11d1bd1",
                    "sha256:5383e4eacd298d691e03ae661ff01f88e8e1dbe76993c2a54fbc227a8f23d2d9",
                    "sha256:e17893f784ca59d78df8bef1971c3fc23ce82ba03af343af8edf6da519c3b4a4",
                    "sha256:17891b2f6e269075eac401a8fcd891ecceddaaa319eac188b74cad9ff6f85893",
                    "sha256:406cf7baa2d34a6e1375cd06e392d1cab1bcdaabe2ace6e962cefaa5ec87b129",
                    "sha256:d73f2dbf447e920bca5ce5038c65672673c65f5b0c085ca808d7bf101f2ce998",
                    "sha256:bf06f67bed5408a4b52075c0813d3c322df88d3639db2ed3c8c6f3a188cb01e3",
                    "sha256:70c8e75944653be2537f8acb53b5a940075142184d78640763585c6cb9d2beab",
                    "sha256:2b069de29a76f5df3440df393392d8d94491b856e3a5a8bed873fbfa22b06703",
                    "sha256:1093e78aebfbc05cdff79f0eadd521df330ab0c76a0eacb2f4c9f1bdc32dab4d"
                ]
            }
        },
        "1.17.9-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:6ed7a39dec503aee915fe3ee41261288944d028c5a4c9a0f641428011e6be813",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "4209f00a9415be2845ad3c347defdb64a0d0afb450ebf454b2c9cbf348231d14",
            "container_config": {
                "Hostname": "4209f00a9415",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.17.9"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:6ed7a39dec503aee915fe3ee41261288944d028c5a4c9a0f641428011e6be813",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-04-26T16:12:12.6944778Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2021-05-08T09:40:24.683Z",
                    "created_by": "Apply image 2022-RTM-amd64"
                },
                {
                    "created": "2022-04-03T05:50:25.2004372Z",
                    "created_by": "Install update ltsc2022-amd64"
                },
                {
                    "created": "2022-04-26T16:09:19.5684998Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-04-26T16:09:20.588967Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-04-26T16:09:21.6238135Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-04-26T16:09:22.6388072Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-04-26T16:09:23.6727184Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-04-26T16:09:55.3810763Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:09:56.5203162Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:10:07.3824304Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-04-26T16:10:14.4102476Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.17.9"
                },
                {
                    "created": "2022-04-26T16:12:11.3510615Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'dac299d353e8963ea0d0019064b0861ef4cb938ef5ec6a77a2a5da6e0aa1700b'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:12:12.6944778Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.643",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c18686406f96b263d986714a2d88add06ea9ddbb3e52fb936222711da7d9d395",
                    "sha256:46db113248e4cc0550303d4e834438cfcb7d97c5601550b4c5cbd7604596fda8",
                    "sha256:10c24b68ac0252c2e679acd75eb8a009e8a01acf18753e69eade51131d09372e",
                    "sha256:a5ef7471cd1eb2209b6a78970c7278425a9e5c6ffffb3cc3b8957071d856fe83",
                    "sha256:0a50010ba4f4c3fd31469c430b8762b1f23b8ec463bc4c685da2a49df7bc616c",
                    "sha256:bcfbb2d26961672d8ddb4489923adc6a2875c80ecde5d56411768b7d6e12bd1d",
                    "sha256:12a2082a17c1842bf8374d8b21f4b372d8c85e8b81a5e1abe9e83b6f4f965089",
                    "sha256:e2d1c50c74f9462a21f8efba1692333fbf37ca1e1f858f027552a34f35c26cff",
                    "sha256:e9f0a0f13ed76b94aa307850866a86d18ef422d44f1ff9d3d4f4f613f09e311f",
                    "sha256:234b32ea00e75dc2953776ff0710005a3fb7b74f424a4b24cd8cd116e684e7bb",
                    "sha256:002d51ae5825c092ee85e614d6fb00d13373e356cae55e9ac843c9c4fdca81e3",
                    "sha256:4d7683988575673f5663ce88197f04936ded08cfe0df76730c4bd514125ca063",
                    "sha256:8427f31198c332dc0c7829a1a8e252384bd85245af6e59da178c1927081e0b00"
                ]
            }
        },
        "1.17.9-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59f4ed6c0ae9c9c568bd93d2d74a99aa0fb32cfec7fe82c839844d231baf87ec",
            "container_config": {
                "Hostname": "59f4ed6c0ae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cffcbf8512605865f9a53a5d8db05a06f69e87e330b9477290d94cf2299581ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:09.549099842Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:43.521040478Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:44.248460549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:44.907274193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:04.684484653Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:05.965131911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:07.044650424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:08.460541793Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:09.549099842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a20abb5bb252d05e53bf0e75ca18f5a82ad1e07240872c2d48077a4c06ec9f77",
                    "sha256:2b7eb6de8e145b3f154ec450991025cde217ab017f882223f5b503c96b68ef83",
                    "sha256:4df83e61c60791323d7918de1a322657d16373007b5f321e23f197758b15d9e4"
                ]
            }
        },
        "1.17.9-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5f637d4c10dd6b06d8dca31606476faa4dffedf74e61818e880aa7d825f91ffa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1d64c12ccb59f5110b93a5dc1d2c45de6ffad0966e19b8a6ffd48a36e0453585",
            "container_config": {
                "Hostname": "1d64c12ccb59",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5f637d4c10dd6b06d8dca31606476faa4dffedf74e61818e880aa7d825f91ffa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:15.31663337Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:37.180912862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7c5789fb822bda2652d7addee832c5a3d71733f0f94f97d89b0c5570c0840829 in / "
                },
                {
                    "created": "2022-04-20T04:43:37.732864614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:59:01.964685664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:59:07.088636152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:59:22.097083802Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:47.795288143Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:48.472560943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:08:49.089659315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:10.737412032Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:12.03907708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:13.012381858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:14.334852623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:15.31663337Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9fd5db9c9a6470a6c668ade7fa1faf299b734be4f20fef105ec719ac161cee4",
                    "sha256:5d253e59e5233a8eeebb8acdf660c9a5dff6f064656a00fe856e45cd091be47f",
                    "sha256:85fe0038088133c12b3556a09e7817998e2043b1dc73630561a0d446d969f755",
                    "sha256:957a6eed8d1f1779b315b725c58f42fa20dd6bd59dbea586bf05b9dd32f1d3f2",
                    "sha256:324316bc1fc6e0b581fc0bc0e214e3dddadde292182c8fee12fb09dab3d8acf8",
                    "sha256:068c341d9f755d043b3b345d4caff4a5a8ee7cf0aa65265678026019a59e33c8",
                    "sha256:3907aec4deccb4fcfc9ee4b49d5ba6d8e892cff5fdbc6e854ba3175c5371cf51"
                ]
            }
        },
        "1.17.9-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08819d9d73710b3cd278d104507019b0bb333eaa77004a119f4853ed8ee8d2ea",
            "container_config": {
                "Hostname": "08819d9d7371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:21:52.159833983Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:27.049789707Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:27.674171449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:28.481853453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:48.098243246Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-amd64.tar.gz'; \t\t\tsha256='97dbef56d8fd0928eafc7f2762f2dca07a05c0de44ca5434778aba8ab91c456f'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-arm64.tar.gz'; \t\t\tsha256='6fccfc0515bcf3cc138b0888cb99bf066a62571bbd0ba4b09da242564e659dc7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:21:49.227928974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:50.09050119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:51.289918334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:21:52.159833983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:8ca8737fb4314757b70fe4e89fb8569d3dde60fd5de42796863137aa158dbb5f",
                    "sha256:f307dfbda31da668ba6d750e09809ce8c26582f2e395e53d2f1c7244e31dbf13",
                    "sha256:0078c2510832aa26715e08e482238c8b984ca1578e246a83e83d1870946456f8"
                ]
            }
        },
        "1.17.9-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08819d9d73710b3cd278d104507019b0bb333eaa77004a119f4853ed8ee8d2ea",
            "container_config": {
                "Hostname": "08819d9d7371",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e0a2479c479a59b6658b23f0b63d79cd3d2fc1400adc1eb32ba98bb7b174b018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:21:52.159833983Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:27.049789707Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:27.674171449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:28.481853453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:48.098243246Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-amd64.tar.gz'; \t\t\tsha256='97dbef56d8fd0928eafc7f2762f2dca07a05c0de44ca5434778aba8ab91c456f'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.17/20220414.4/go.20220414.4.linux-arm64.tar.gz'; \t\t\tsha256='6fccfc0515bcf3cc138b0888cb99bf066a62571bbd0ba4b09da242564e659dc7'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:21:49.227928974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:50.09050119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:51.289918334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:21:52.159833983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:8ca8737fb4314757b70fe4e89fb8569d3dde60fd5de42796863137aa158dbb5f",
                    "sha256:f307dfbda31da668ba6d750e09809ce8c26582f2e395e53d2f1c7244e31dbf13",
                    "sha256:0078c2510832aa26715e08e482238c8b984ca1578e246a83e83d1870946456f8"
                ]
            }
        },
        "1.17.9-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:55c76a2baab475a02c7b99de15638c3a414df5423fad1855bcaeb8771deb1b97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fd3d1e35f72e41acfb1c9dc32b19b4bd634d9db6d0af9696792fc5ddf45ceb45",
            "container_config": {
                "Hostname": "fd3d1e35f72e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:55c76a2baab475a02c7b99de15638c3a414df5423fad1855bcaeb8771deb1b97",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:02.344024088Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:45:14.972655722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ed691b65385dede44a92f9de9e1428af431197c66461aa0f9c61e2f7c8bade5 in / "
                },
                {
                    "created": "2022-04-20T04:45:15.54694057Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T07:01:39.096504391Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T07:01:43.28086204Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T07:02:01.604480891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:34.850038063Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:35.545264417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:36.144473342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.9",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:57.655959049Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-amd64.tar.gz'; \t\t\tsha256='54af8ed5c858365fb424a8cd1fa258a209e334699a6f88c051784bf06df11676'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220420.3/go.20220420.3.linux-armv6l.tar.gz'; \t\t\tsha256='7447167ba3ea6d062d2fab5841d874e7c3710070f6b0f85d9c48f1943833e22e'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.17/20220412.2/go.20220412.2.linux-arm64.tar.gz'; \t\t\tsha256='d5aa78c1316bbb5c0638da9624f698aada990628e2321716b0b289084a1c08aa'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:58.940196147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:59.986068957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:01.367548361Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:02.344024088Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f4dc9775f33d9f80dff490ce6f9b38c36dbbec4c1951662e8a2e7dab6d6001f",
                    "sha256:f8323fb3a55ca67fca978090eb30481a2e6a3fa43f9abe6785a9b27604400cb0",
                    "sha256:f6c2459e20599295aafb91d5ce2a54d1e81f778fff9d13ef1d8a8532385d5ae2",
                    "sha256:f35deb8d96fc57e36d66e1e90d19a67da3cfa9e18c4abe620131bf71a45df923",
                    "sha256:bb270c5f91c835ecedbcbdda2147bd66e5de80fe61120c290120398826e13639",
                    "sha256:0f7b134c36c14ba889dce1388307d3b578e8e211f659d1e18e4461a6db0aa0d4",
                    "sha256:d0b01d21f4700ec5259ad9e8f3765808daf401eacc4951e076d6ac2efd5f01df"
                ]
            }
        },
        "1.18": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7dd50934e7650cf092d110c0e42d268060370f153a8ff3185ba86a308c33245f",
            "container_config": {
                "Hostname": "7dd50934e765",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:31.941337005Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:54.999052854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4bf66d4081da52e8b692fcff96aad84d3e68bda4f62e870e8f4803153c70e24c in / "
                },
                {
                    "created": "2023-01-11T02:34:55.608587219Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:05:46.913895834Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:05:53.202838137Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:06:14.113219128Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:03.545395441Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:04.308353632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:04.962829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:26.699237461Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:28.169181523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:29.312262747Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:30.824334333Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:31.941337005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:083aacb889b3fc7c21c3c680a541f50b467ec7d7de97a48e43122d9a34219788",
                    "sha256:b7392dc587490663dce94a350036df4060e5536400b1cf55d833e955bb36869b",
                    "sha256:d5ce45249ce15069660d16956c4b7dd4e74e8b6a7e88283ed30f45aa37b15af3",
                    "sha256:132e6b0c0edd2062fe1b4a1dc10196b7b442cbc3b8bcc0c183397cbb641ff950",
                    "sha256:a6da2a1a9d18fa228e93292251a2210c496e5aad0254e20c4935fd74007f58f6",
                    "sha256:aad741d414f1188ffab6eeec7c09c86abf2327863638d6548bc416cb4f248eb9",
                    "sha256:fcc33d8a4ce54405db084bc0dd7b0a2a9c56ed56778f91d79ef07cf2f9c5ca00"
                ]
            }
        },
        "1.18-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2a8f146e1118468d558bdc273a09dc76fe211b3367e45d364a14f10a2fd8b29",
            "container_config": {
                "Hostname": "e2a8f146e111",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.236601209Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-02-01T21:29:08.402527949Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-02-01T21:29:13.317172696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T21:29:15.000863502Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-02-01T21:29:15.428594979Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:40.321264108Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:41.094452826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:41.608260427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:03.910331555Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.431563453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:06.577262206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.116283314Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.236601209Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:71080a118de881605e8a53fde3d9a857c7237bc2941343e7cfadbe772c50713c",
                    "sha256:778fe95ef71bdd8904c0945c1f986a059ca618a6c8809558a0562285686acbad",
                    "sha256:4b410f1700d7637dd81cfd7b19a28512ca643fcc83cd5cbe293cbfa8ba2f8f67",
                    "sha256:0cdb2d5851e09d752fc6397bac42b2581037a47ec8e8ebb1aec81131511fd8f4",
                    "sha256:6dfd5f0e6bbb87ac48c3f836d8a71932c03902cbee7fb188245e4ebc5c8458b2"
                ]
            }
        },
        "1.18-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:efe931dc2489ec5acab46573be2571c9eb909e04eaf4086b26962028df15494a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c3e055a51f8abfa1cf5ec7b89980448a24ec1781a02cbe63d345a7a2683ff764",
            "container_config": {
                "Hostname": "c3e055a51f8a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:efe931dc2489ec5acab46573be2571c9eb909e04eaf4086b26962028df15494a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-01T21:12:22.652617032Z",
            "docker_version": "20.10.17+azure-1",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:54.168513525Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-01T21:11:54.885838098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:11:55.63628885Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:17.723621554Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220801.6/go.20220801.6.linux-amd64.tar.gz'; \t\t\tsha256='aa97f9396634eb61d3142367f397454aa39b5167b91b05e6ecb08f2b599aa69c'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220801.6/go.20220801.6.linux-armv6l.tar.gz'; \t\t\tsha256='e7cd0b09327eb6cf687cdc2db36cb72625c09995a5bf8bec483b2976b3663c85'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220801.6/go.20220801.6.linux-arm64.tar.gz'; \t\t\tsha256='73f663d5426e542a131c5f84869d01d5a825e6870c4aa671c8767ad7562bfe2a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-01T21:12:19.080319999Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:20.145405679Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-01T21:12:21.611582882Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-01T21:12:22.652617032Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:3401b422bec4a7eec5c020178873fe891e11e10028f0d9ea553233a55e026665",
                    "sha256:d91c8901def979b25aa0972a8df7c95c7058b564a8f2f08a3d504f83fbff8afc",
                    "sha256:6c48667bdf13dcbfe1730120ed80ad3ffddcf64f440a29bf516e5275c7e0c6cf"
                ]
            }
        },
        "1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "438163a6db5a549a4b0f9ad94c51ec107176ca7f2243a330e91f1365ca2ef3f1",
            "container_config": {
                "Hostname": "438163a6db5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:37.789120714Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.054273714Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.942283705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:04.78635614Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:31.926419202Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:33.539748381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:34.822305874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:36.506504292Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:37.789120714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:04c173f031c603cf3b2bb5a6bdb3cc673dbd54377d89e8b0ec4185cf243ae605",
                    "sha256:5ef1e91ecab567ab96134165d91a3ccc0a30ea02b8b04ef66cb0b98a4f90cffd",
                    "sha256:7a08d5a706e21f156af2bff1c13ec9ab399618d7eaebb87d3b1c11aec4804716"
                ]
            }
        },
        "1.18.0-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "438163a6db5a549a4b0f9ad94c51ec107176ca7f2243a330e91f1365ca2ef3f1",
            "container_config": {
                "Hostname": "438163a6db5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:37.789120714Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.054273714Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.942283705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:04.78635614Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:31.926419202Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:33.539748381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:34.822305874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:36.506504292Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:37.789120714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:04c173f031c603cf3b2bb5a6bdb3cc673dbd54377d89e8b0ec4185cf243ae605",
                    "sha256:5ef1e91ecab567ab96134165d91a3ccc0a30ea02b8b04ef66cb0b98a4f90cffd",
                    "sha256:7a08d5a706e21f156af2bff1c13ec9ab399618d7eaebb87d3b1c11aec4804716"
                ]
            }
        },
        "1.18.0-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "438163a6db5a549a4b0f9ad94c51ec107176ca7f2243a330e91f1365ca2ef3f1",
            "container_config": {
                "Hostname": "438163a6db5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:37.789120714Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.054273714Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.942283705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:04.78635614Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:31.926419202Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:33.539748381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:34.822305874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:36.506504292Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:37.789120714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:04c173f031c603cf3b2bb5a6bdb3cc673dbd54377d89e8b0ec4185cf243ae605",
                    "sha256:5ef1e91ecab567ab96134165d91a3ccc0a30ea02b8b04ef66cb0b98a4f90cffd",
                    "sha256:7a08d5a706e21f156af2bff1c13ec9ab399618d7eaebb87d3b1c11aec4804716"
                ]
            }
        },
        "1.18.0-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "438163a6db5a549a4b0f9ad94c51ec107176ca7f2243a330e91f1365ca2ef3f1",
            "container_config": {
                "Hostname": "438163a6db5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:37.789120714Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.054273714Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.942283705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:04.78635614Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:31.926419202Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:33.539748381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:34.822305874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:36.506504292Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:37.789120714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:04c173f031c603cf3b2bb5a6bdb3cc673dbd54377d89e8b0ec4185cf243ae605",
                    "sha256:5ef1e91ecab567ab96134165d91a3ccc0a30ea02b8b04ef66cb0b98a4f90cffd",
                    "sha256:7a08d5a706e21f156af2bff1c13ec9ab399618d7eaebb87d3b1c11aec4804716"
                ]
            }
        },
        "1.18.0-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1871af0652d0174dcd03b54509b7b15d4f4c95d2b86b604b4442abccd8bca6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5d3e1fbffd11b8e3f7821f884e03add91c0ce287718d89a8f804a21d7251059",
            "container_config": {
                "Hostname": "b5d3e1fbffd1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1871af0652d0174dcd03b54509b7b15d4f4c95d2b86b604b4442abccd8bca6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:32:15.330754489Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:44.597656244Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:45.316931966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:45.951822336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:10.439389867Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:32:11.79289701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:12.858993936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:14.259770608Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:32:15.330754489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:b370150b04c02ceefd8b7e55953254780f0ec3cf01dc2705adb57b46a7add83d",
                    "sha256:8922e4886a34fe6019109f2e6447cf1c21d6c5a66514ed9a5fab31f1eb171203",
                    "sha256:e3b84fdb8ae79df652688d3c9ef5d6286b5d55f8da65a7661d8bb3704548a976"
                ]
            }
        },
        "1.18.0-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1871af0652d0174dcd03b54509b7b15d4f4c95d2b86b604b4442abccd8bca6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5d3e1fbffd11b8e3f7821f884e03add91c0ce287718d89a8f804a21d7251059",
            "container_config": {
                "Hostname": "b5d3e1fbffd1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1871af0652d0174dcd03b54509b7b15d4f4c95d2b86b604b4442abccd8bca6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:32:15.330754489Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:44.597656244Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:45.316931966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:45.951822336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:10.439389867Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:32:11.79289701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:12.858993936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:14.259770608Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:32:15.330754489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:b370150b04c02ceefd8b7e55953254780f0ec3cf01dc2705adb57b46a7add83d",
                    "sha256:8922e4886a34fe6019109f2e6447cf1c21d6c5a66514ed9a5fab31f1eb171203",
                    "sha256:e3b84fdb8ae79df652688d3c9ef5d6286b5d55f8da65a7661d8bb3704548a976"
                ]
            }
        },
        "1.18.0-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:3dc6c83ba08c88e785febdf1616557e364651de7bb92da43b998ac7c5d91aa41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "592a9d657164ffdca0c1d636a381a408b292385fb81500b4f989a14fe337bd58",
            "container_config": {
                "Hostname": "592a9d657164",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3dc6c83ba08c88e785febdf1616557e364651de7bb92da43b998ac7c5d91aa41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:32:21.213659979Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-11T02:03:48.805620362Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-17T18:31:52.654930767Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-17T18:31:53.29933685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:53.792761484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:16.717393641Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220316.2/go.20220316.2.linux-amd64.tar.gz'; \t\t\tsha256='5a9074b309dbaa30faff98f1fcffd4488c39e4cb1398832908bbd4b57ef92873'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:32:17.953392906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:18.911884661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:20.26633466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:32:21.213659979Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c13b7eb255aac9c6989c8c078f4a0a0d774ce7f03be6f732d3f65206080f9ec",
                    "sha256:186dedb98df37aeb3bce0fccb12bdcd593faa76f8df48c838f6575f9acbbf412",
                    "sha256:5802e3299d30520dc89b00372ce15bca2a43491a4d1a0d2d40dd4d3fee8faae6",
                    "sha256:12225e00cd1a850b41be6776e4ce17b0d76bff7536199c4454b9bef4933c1a63"
                ]
            }
        },
        "1.18.0-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:3dc6c83ba08c88e785febdf1616557e364651de7bb92da43b998ac7c5d91aa41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "592a9d657164ffdca0c1d636a381a408b292385fb81500b4f989a14fe337bd58",
            "container_config": {
                "Hostname": "592a9d657164",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3dc6c83ba08c88e785febdf1616557e364651de7bb92da43b998ac7c5d91aa41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:32:21.213659979Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-11T02:03:48.805620362Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-17T18:31:52.654930767Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-17T18:31:53.29933685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:53.792761484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:16.717393641Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220316.2/go.20220316.2.linux-amd64.tar.gz'; \t\t\tsha256='5a9074b309dbaa30faff98f1fcffd4488c39e4cb1398832908bbd4b57ef92873'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:32:17.953392906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:18.911884661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:20.26633466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:32:21.213659979Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c13b7eb255aac9c6989c8c078f4a0a0d774ce7f03be6f732d3f65206080f9ec",
                    "sha256:186dedb98df37aeb3bce0fccb12bdcd593faa76f8df48c838f6575f9acbbf412",
                    "sha256:5802e3299d30520dc89b00372ce15bca2a43491a4d1a0d2d40dd4d3fee8faae6",
                    "sha256:12225e00cd1a850b41be6776e4ce17b0d76bff7536199c4454b9bef4933c1a63"
                ]
            }
        },
        "1.18.0-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:3dc6c83ba08c88e785febdf1616557e364651de7bb92da43b998ac7c5d91aa41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "592a9d657164ffdca0c1d636a381a408b292385fb81500b4f989a14fe337bd58",
            "container_config": {
                "Hostname": "592a9d657164",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3dc6c83ba08c88e785febdf1616557e364651de7bb92da43b998ac7c5d91aa41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:32:21.213659979Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-11T02:03:48.805620362Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-17T18:31:52.654930767Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-17T18:31:53.29933685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:53.792761484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:16.717393641Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220316.2/go.20220316.2.linux-amd64.tar.gz'; \t\t\tsha256='5a9074b309dbaa30faff98f1fcffd4488c39e4cb1398832908bbd4b57ef92873'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:32:17.953392906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:18.911884661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:20.26633466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:32:21.213659979Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c13b7eb255aac9c6989c8c078f4a0a0d774ce7f03be6f732d3f65206080f9ec",
                    "sha256:186dedb98df37aeb3bce0fccb12bdcd593faa76f8df48c838f6575f9acbbf412",
                    "sha256:5802e3299d30520dc89b00372ce15bca2a43491a4d1a0d2d40dd4d3fee8faae6",
                    "sha256:12225e00cd1a850b41be6776e4ce17b0d76bff7536199c4454b9bef4933c1a63"
                ]
            }
        },
        "1.18.0-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:b0ff7a00f9add40283c027a1a0992faed219f5f1a57242d1804906b64ceb10f2",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "bb825174d4270ddaf9f265a6ce04eb01bd99fcf1b6d306ab9547121bb4aba365",
            "container_config": {
                "Hostname": "bb825174d427",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:b0ff7a00f9add40283c027a1a0992faed219f5f1a57242d1804906b64ceb10f2",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-03-17T18:34:40.5119342Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-03-03T14:36:26.6483632Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-03-17T18:33:17.2771182Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-03-17T18:33:18.5650885Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-17T18:33:19.8203979Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-03-17T18:33:22.3253641Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-03-17T18:33:23.4026201Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-03-17T18:33:24.4799414Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.0"
                },
                {
                    "created": "2022-03-17T18:34:35.3990825Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:6df435d1854109663edf30dd0d42b1d36b8c96078791aa687882e597d289b8fd in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-03-17T18:34:38.8538562Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-03-17T18:34:40.5119342Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2686",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:890ca91e64c5bee832a2750a8c94632f74c6aeb154d1cf0b7ada191df86b1f5d",
                    "sha256:b7a201c8cf0562d1ceb011e914e24e8be99ea272728c79cbf69ac0030e305fc6",
                    "sha256:be87997e00372c4201b1cc0d24eef73884b75982b48a3b343e1d3804177c9584",
                    "sha256:a4b064a6c9c8444dc62255dd27aee6065473d14afac281d7048ea9887eb82bef",
                    "sha256:f5540dff566d495276a93a5af72cc7b539c608e96fbc01837d45b1f86e295846",
                    "sha256:17ce5b44146efe562f0c145d3586a844e2a648e2be2688cf3e72c955a3f30568",
                    "sha256:6a9dd659f0c9a502d65664a9fcf631ca05b1685ece1c87fceb4a04e8b568e790",
                    "sha256:6439d51fd5a5a50c0e0ad150ef10f0cc2029e45cd858204057e1890607ea01bf",
                    "sha256:0e87fa1ed84b2c832a3aafe54ecd9062be2d3f93116aa260305d8c2341be8b92",
                    "sha256:31096624359652205f5f131af89d8ee9b878e8c3ea391e776ca246922c1d45a3"
                ]
            }
        },
        "1.18.0-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:c4539dc2e8f94de03a102eba4108b35570b6a2c05c6c11d12744c776270ee61c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "495af6d83399921a2fee4fdfc7433ca88aed9aaab54c81d3000c87e36cd75cfa",
            "container_config": {
                "Hostname": "495af6d83399",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:c4539dc2e8f94de03a102eba4108b35570b6a2c05c6c11d12744c776270ee61c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-03-17T18:35:48.1382564Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-03-03T04:50:34.6790408Z",
                    "created_by": "Apply image ltsc2022-amd64"
                },
                {
                    "created": "2022-03-17T18:34:16.8909271Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-03-17T18:34:17.2966471Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-17T18:34:17.6577557Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-03-17T18:34:21.826476Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-03-17T18:34:22.362629Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-03-17T18:34:22.7366837Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.0"
                },
                {
                    "created": "2022-03-17T18:35:41.6329901Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:6df435d1854109663edf30dd0d42b1d36b8c96078791aa687882e597d289b8fd in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-03-17T18:35:47.5241762Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-03-17T18:35:48.1382564Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.587",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:26b29cd071abbd8962942eece4c71678ea677065f761a5e8ab62613929906175",
                    "sha256:da8a899b29e2188514a1fb670bbe3f6c7d915240badcc6797804d6e0835ce769",
                    "sha256:2f92cab250440ade6da06e9715ea443796a0f0efa1c961453bd16188d9cb3d12",
                    "sha256:59066da5af16d9fe7ca4b5610a34b896abf52a72523d51fa193f0747bd9171d7",
                    "sha256:655e7b806fa96c119ee71302599533517ece6cafef08c0e2506feb864e7d7606",
                    "sha256:5e016ff2a65f59fffe00dd3deff016d5427616f0c7313017c7c389aca0c1b80c",
                    "sha256:2a51dea2e7d5955c9d34ece6bc8d785ff140a297b9e7a615fd1aa2eca81c6be4",
                    "sha256:a989a5fbf53d625b700ca62e634c725b035741b5974a65da89733e705fc03d69",
                    "sha256:c5ceca3d35f39d7eddcdd8a9777e16f36c51cad56a5f911545da18df43eee656",
                    "sha256:465bd4a1423dd207165474671b6f22e720a14ff6bd83687bf10c65a9b6ed5c34"
                ]
            }
        },
        "1.18.0-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d244976505102883b187325fb0942c9d411660e1c62aed58834e444205ac11d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8cc798c6c972d4851d184f7e2a6a4ad877ff2d65b24ef9b7f7c7d6598eae4a89",
            "container_config": {
                "Hostname": "8cc798c6c972",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d244976505102883b187325fb0942c9d411660e1c62aed58834e444205ac11d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:30.221550024Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:00.362823769Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:01.181889473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:01.874122284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:24.606260829Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:26.190861251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:27.402786198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:28.962476559Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:30.221550024Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:7c8548828a416e66d7a761b032cd970226edacb4c99210f9fc95fd3e5a0973fd",
                    "sha256:fd6164eb67518cc20b0521a731d1f734e94357b9ea025fe2f7b2c284203e1b8c",
                    "sha256:308e48d4eee0b927cefd75713c1661aa67c16612ae5d436e267c2d00532583e8"
                ]
            }
        },
        "1.18.0-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d244976505102883b187325fb0942c9d411660e1c62aed58834e444205ac11d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8cc798c6c972d4851d184f7e2a6a4ad877ff2d65b24ef9b7f7c7d6598eae4a89",
            "container_config": {
                "Hostname": "8cc798c6c972",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d244976505102883b187325fb0942c9d411660e1c62aed58834e444205ac11d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:30.221550024Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:00.362823769Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:01.181889473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:01.874122284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:24.606260829Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:26.190861251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:27.402786198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:28.962476559Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:30.221550024Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:7c8548828a416e66d7a761b032cd970226edacb4c99210f9fc95fd3e5a0973fd",
                    "sha256:fd6164eb67518cc20b0521a731d1f734e94357b9ea025fe2f7b2c284203e1b8c",
                    "sha256:308e48d4eee0b927cefd75713c1661aa67c16612ae5d436e267c2d00532583e8"
                ]
            }
        },
        "1.18.0-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:b9f498428af1fd921303aaee2253f57407d20903b98ecc45cbd7a2be0122ea7e",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "21999091dba119913264b849612f2ac8857992980b29463fba9f2b1a8dc86823",
            "container_config": {
                "Hostname": "21999091dba1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:b9f498428af1fd921303aaee2253f57407d20903b98ecc45cbd7a2be0122ea7e",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-17T18:33:14.8969634Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-03-03T15:05:04.3038326Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-03-17T18:30:37.2198246Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-17T18:30:38.4497786Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-17T18:30:39.5785955Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-17T18:30:40.7228157Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-17T18:30:41.8972407Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-17T18:31:19.2049681Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-17T18:31:20.4208494Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-17T18:31:26.850237Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-17T18:31:28.026777Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.0"
                },
                {
                    "created": "2022-03-17T18:33:13.1514108Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '5100de35f79dcb259aa01121b75b4d019869aebc9bc959a8c8873f8865f1ff59'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-17T18:33:14.8969634Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2686",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:1606439f0b6884b953ed17ab355b0e8c583ea5e17f176e1d220728735b9d57d4",
                    "sha256:74e0e7d84d598171ba0f40fba23be9a4c8e5b05317efbcf80f945b4afcc99f06",
                    "sha256:cfaca7c679af265ce85a79d4ffb01757b41b89bfffbf3fc2e188e2b06f97d5db",
                    "sha256:deff03b9f7d78dcec1c600ee6cd137c52693e444f185060529c99583c33c754a",
                    "sha256:2755c34474834b8457126e3e31217c061a4a39d08b5dcae5ef92bf0214937968",
                    "sha256:ca0a77c0818b0a2f2ef05babc6383ea37c076c2d5c0c90a2f9cbb6bacd799996",
                    "sha256:8ec15d15e09d0abd0a0967dea9715a78556a19ce3508753cdf15cae33205f8ca",
                    "sha256:3eccbc33b24704b8737a411041b6f409fb5f86ad7edf16546897d958a6d81953",
                    "sha256:0f65e117147c04aa1e868860635fb450a75d82033fae30a63f887f47e219a6c8",
                    "sha256:c642ae6b2294fd3d5bfe05c5e6d48a3784f06d4d44b373917aa6b17d98ac21b1",
                    "sha256:7482a923853af7c9f851a5c1eb9e40437e56d8a3a4a650cc9cfa1d568ab5d57e",
                    "sha256:97d1d8a72d77594f2aa3a2023ee745a9c5abe3cbbaf43f1dd6df24a2067da3a5"
                ]
            }
        },
        "1.18.0-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:7ddc2f9c72e47a092317614df52a6ebc2dfea227f89aec76c82625b2f26fc50d",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "399c384a44ef009383886528186a768e6e2ed07b50cb6479b633232c2d30bd50",
            "container_config": {
                "Hostname": "399c384a44ef",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:7ddc2f9c72e47a092317614df52a6ebc2dfea227f89aec76c82625b2f26fc50d",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-17T18:56:10.84834Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-03-05T03:39:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-03-17T18:49:59.7599818Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-17T18:50:01.8951911Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-17T18:50:03.9349417Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-17T18:50:05.9350089Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-17T18:50:07.9116529Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-17T18:51:19.6592536Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-17T18:51:22.4184157Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-17T18:51:46.153419Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-17T18:51:48.8078001Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.0"
                },
                {
                    "created": "2022-03-17T18:56:06.6801953Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '5100de35f79dcb259aa01121b75b4d019869aebc9bc959a8c8873f8865f1ff59'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-17T18:56:10.84834Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5006",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:6a4e94d540b80d4167011a3d1e8611180e627343ae797d5dee83ecaeb2deca8e",
                    "sha256:82c05c38ddb940061a0fee204b919c277e89675eaa1d84d5c737b0335170e95a",
                    "sha256:cfe0c69dca90ceacbe3290a5b3c25867d29392b016eb313d596bc1ac55ecd43a",
                    "sha256:bb5028c0a60c73f967de76529780503c12a1874adfe08029bd4f9d99c2f0c7e6",
                    "sha256:46181615cf96e33a2cf8fc19e5ce4ed0b2d2d780652bb3acd1d5be8d6db679cb",
                    "sha256:1e2c1323254e9bbee2dcc67119aa9791630981dd611c38d385dcb46665d8e131",
                    "sha256:f14d7ce5c51f829bbbcb3977dd4fb665e42725f5d28119a262342ad17b28fe6c",
                    "sha256:0bd75f959bbe1a29d1f16d0be61ddf4158e201daa68d0739a13c5adc53d0ba84",
                    "sha256:bd55f884e40146f9f6eee590a7e4c6de39b3009c86e102ef9980c651214cd57c",
                    "sha256:7620d28a31b2d275f0ac93ffc928613558e563a30642426c21c2c687b31890f7",
                    "sha256:853a3328943ca404d55268cd07235b28afa2dda129985c643f254c3aef9f808f",
                    "sha256:d9ac5d4debc983703015e67a9ccb6059b3ffc66fb3ffaeb27758c48991728668"
                ]
            }
        },
        "1.18.0-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:96306d620fe4f65e49e083af2f0b718066f4a77629f4fdc1c3d2037eb0980560",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "cd19d67136daaa0b9be035c3675ecadb020f5b9bf6d0f3c19d083d6e38ea53fa",
            "container_config": {
                "Hostname": "cd19d67136da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.0"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:96306d620fe4f65e49e083af2f0b718066f4a77629f4fdc1c3d2037eb0980560",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-03-17T18:34:14.8702299Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2021-05-08T09:40:24.683Z",
                    "created_by": "Apply image 2022-RTM-amd64"
                },
                {
                    "created": "2022-03-03T05:02:11.985581Z",
                    "created_by": "Install update ltsc2022-amd64"
                },
                {
                    "created": "2022-03-17T18:31:10.6320295Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-03-17T18:31:11.153719Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-03-17T18:31:11.7066006Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-03-17T18:31:12.2355861Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-03-17T18:31:12.738856Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-03-17T18:31:33.7852091Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-17T18:31:34.5042891Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-03-17T18:31:46.64155Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-03-17T18:31:47.1880417Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.0"
                },
                {
                    "created": "2022-03-17T18:34:13.537676Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '5100de35f79dcb259aa01121b75b4d019869aebc9bc959a8c8873f8865f1ff59'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-03-17T18:34:14.8702299Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.587",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c18686406f96b263d986714a2d88add06ea9ddbb3e52fb936222711da7d9d395",
                    "sha256:f1a26aed9f4a25c7450c1b634701c5b5ff9b60c46ed101a2167abbe57f68b141",
                    "sha256:2e242305e2712ce22ab735c31a55c45d6511c6c3f250502f0b326325c7ce7367",
                    "sha256:813d829069b79022614abe356fbd11d1dab6539bc5cedac32860b48b6d132b9c",
                    "sha256:7c398d2ffd346f2425b7e3d3ecc0ae27257965045e345f64bb6ce391cdbe14ab",
                    "sha256:c608a3d9f53bddb80832020f7d5d491350c9aff74da604df78406cb122cf2c3e",
                    "sha256:d8b87a5142c87284078c661be31faedfadddc37b8a038122b5bd23952098694f",
                    "sha256:f084ccb989899f98112105a7834d3855db8c327ee0db9d2dc653738aa2ccf758",
                    "sha256:11d707910629cbb316d63852aad7717c893922934f65ffa59b0e596c1a61c9be",
                    "sha256:f19f519af021d748f9cd0abe351f1cdb1bf0037eef63812b8379c996e9ba19a3",
                    "sha256:45502ec3a2fccb42581d2b91cf4c60c775277e44c1949dc351a0c053aec9171a",
                    "sha256:d090020c674d0ce3ae8dcd9e4d1422d7a83039a699a45b2858067f453466d8c1",
                    "sha256:9450debd83229e8d5ea169e082aba4655b4a77520e451021ef22573c74d57fbf"
                ]
            }
        },
        "1.18.0-2-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "108e59d21a1792430eaf4e8fabcfee498b45943d997265a64ceadd5b7a2bfea1",
            "container_config": {
                "Hostname": "108e59d21a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:32:21.41911833Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:53.584667047Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:54.171575162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.637308267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:17.29104955Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220329.7/go.20220329.7.linux-amd64.tar.gz'; \t\t\tsha256='3ea93d412f30297866d60bc728278197ea9c9ee8671167f1b207782af9e9e7f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:32:18.441760237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:19.318223319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:20.539171626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:32:21.41911833Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:f8c774b23b77ec5ffa1ab9d010ed22ef4813b3198aa94c01bdf7de32f7141aac",
                    "sha256:ebd20e856cc589a5af0959d5b65f28385c78270967f9000a68a38d8887cf9bf7",
                    "sha256:53943743439fa6bedc4eb49421c349d51801aec8332b558b0d8db642ba94d0c5"
                ]
            }
        },
        "1.18.0-2-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "108e59d21a1792430eaf4e8fabcfee498b45943d997265a64ceadd5b7a2bfea1",
            "container_config": {
                "Hostname": "108e59d21a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:32:21.41911833Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:53.584667047Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:54.171575162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.637308267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:17.29104955Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220329.7/go.20220329.7.linux-amd64.tar.gz'; \t\t\tsha256='3ea93d412f30297866d60bc728278197ea9c9ee8671167f1b207782af9e9e7f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:32:18.441760237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:19.318223319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:20.539171626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:32:21.41911833Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:f8c774b23b77ec5ffa1ab9d010ed22ef4813b3198aa94c01bdf7de32f7141aac",
                    "sha256:ebd20e856cc589a5af0959d5b65f28385c78270967f9000a68a38d8887cf9bf7",
                    "sha256:53943743439fa6bedc4eb49421c349d51801aec8332b558b0d8db642ba94d0c5"
                ]
            }
        },
        "1.18.0-2-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "108e59d21a1792430eaf4e8fabcfee498b45943d997265a64ceadd5b7a2bfea1",
            "container_config": {
                "Hostname": "108e59d21a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:32:21.41911833Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:53.584667047Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:54.171575162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.637308267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:17.29104955Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220329.7/go.20220329.7.linux-amd64.tar.gz'; \t\t\tsha256='3ea93d412f30297866d60bc728278197ea9c9ee8671167f1b207782af9e9e7f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:32:18.441760237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:19.318223319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:20.539171626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:32:21.41911833Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:f8c774b23b77ec5ffa1ab9d010ed22ef4813b3198aa94c01bdf7de32f7141aac",
                    "sha256:ebd20e856cc589a5af0959d5b65f28385c78270967f9000a68a38d8887cf9bf7",
                    "sha256:53943743439fa6bedc4eb49421c349d51801aec8332b558b0d8db642ba94d0c5"
                ]
            }
        },
        "1.18.0-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "438163a6db5a549a4b0f9ad94c51ec107176ca7f2243a330e91f1365ca2ef3f1",
            "container_config": {
                "Hostname": "438163a6db5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cd2ba517b9b17cf5658583e19d9b9d65642b88104661f023a9e59fbde17e1b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:37.789120714Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:15.223116269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c4db2a9644ee3029a8e9cca58350efef660c3167e59b91f2bee9c303e592664 in / "
                },
                {
                    "created": "2022-03-01T02:13:15.66141909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:25:59.186625638Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:26:07.562013445Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:26:30.039901037Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.054273714Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:03.942283705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:04.78635614Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:31.926419202Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:33.539748381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:34.822305874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:36.506504292Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:37.789120714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:89fda00479fc0fe3bf2c411d92432001870e9dad42ddd0c53715ab77ac4f2a97",
                    "sha256:26d5108b2cba762ee9b91c30670091458a0c32b02132620b7f844085af596e22",
                    "sha256:48144a6f44ae89c578bd705dba2ebdb2a086b36215affa5659b854308fa22e4b",
                    "sha256:e3f84a8cee1f3e6a38a463251eb05b87a444dec565a7331217c145e9ef4dd192",
                    "sha256:04c173f031c603cf3b2bb5a6bdb3cc673dbd54377d89e8b0ec4185cf243ae605",
                    "sha256:5ef1e91ecab567ab96134165d91a3ccc0a30ea02b8b04ef66cb0b98a4f90cffd",
                    "sha256:7a08d5a706e21f156af2bff1c13ec9ab399618d7eaebb87d3b1c11aec4804716"
                ]
            }
        },
        "1.18.0-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1871af0652d0174dcd03b54509b7b15d4f4c95d2b86b604b4442abccd8bca6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5d3e1fbffd11b8e3f7821f884e03add91c0ce287718d89a8f804a21d7251059",
            "container_config": {
                "Hostname": "b5d3e1fbffd1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1871af0652d0174dcd03b54509b7b15d4f4c95d2b86b604b4442abccd8bca6c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:32:15.330754489Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:27:54.889597795Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:28:02.840504487Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:28:26.377901564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:44.597656244Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:45.316931966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:45.951822336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:10.439389867Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:32:11.79289701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:12.858993936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:32:14.259770608Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:32:15.330754489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:40572195ea84107da63bcc041ac8a34300227a1ca8d08cc2086f843db5dec0be",
                    "sha256:8d3476a529178138ab0dcabfd58c06f93cd5d268bc9fe9775ab7f398fdfe98d5",
                    "sha256:821bf63717208552a06f009b8def3d41c64c8cf78f6307853794e0a58d7be9a2",
                    "sha256:b370150b04c02ceefd8b7e55953254780f0ec3cf01dc2705adb57b46a7add83d",
                    "sha256:8922e4886a34fe6019109f2e6447cf1c21d6c5a66514ed9a5fab31f1eb171203",
                    "sha256:e3b84fdb8ae79df652688d3c9ef5d6286b5d55f8da65a7661d8bb3704548a976"
                ]
            }
        },
        "1.18.0-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "108e59d21a1792430eaf4e8fabcfee498b45943d997265a64ceadd5b7a2bfea1",
            "container_config": {
                "Hostname": "108e59d21a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:32:21.41911833Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:53.584667047Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:54.171575162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.637308267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:17.29104955Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220329.7/go.20220329.7.linux-amd64.tar.gz'; \t\t\tsha256='3ea93d412f30297866d60bc728278197ea9c9ee8671167f1b207782af9e9e7f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:32:18.441760237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:19.318223319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:20.539171626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:32:21.41911833Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:f8c774b23b77ec5ffa1ab9d010ed22ef4813b3198aa94c01bdf7de32f7141aac",
                    "sha256:ebd20e856cc589a5af0959d5b65f28385c78270967f9000a68a38d8887cf9bf7",
                    "sha256:53943743439fa6bedc4eb49421c349d51801aec8332b558b0d8db642ba94d0c5"
                ]
            }
        },
        "1.18.0-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "108e59d21a1792430eaf4e8fabcfee498b45943d997265a64ceadd5b7a2bfea1",
            "container_config": {
                "Hostname": "108e59d21a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:97a8f8b71ec0be86391d6ebd94f9ace8885a379d6b0f920c3f860eb2b441f8bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-30T16:32:21.41911833Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-03-30T16:31:53.584667047Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-03-30T16:31:54.171575162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:31:54.637308267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:17.29104955Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220329.7/go.20220329.7.linux-amd64.tar.gz'; \t\t\tsha256='3ea93d412f30297866d60bc728278197ea9c9ee8671167f1b207782af9e9e7f6'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-30T16:32:18.441760237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:19.318223319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-30T16:32:20.539171626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-30T16:32:21.41911833Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:f8c774b23b77ec5ffa1ab9d010ed22ef4813b3198aa94c01bdf7de32f7141aac",
                    "sha256:ebd20e856cc589a5af0959d5b65f28385c78270967f9000a68a38d8887cf9bf7",
                    "sha256:53943743439fa6bedc4eb49421c349d51801aec8332b558b0d8db642ba94d0c5"
                ]
            }
        },
        "1.18.0-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d244976505102883b187325fb0942c9d411660e1c62aed58834e444205ac11d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8cc798c6c972d4851d184f7e2a6a4ad877ff2d65b24ef9b7f7c7d6598eae4a89",
            "container_config": {
                "Hostname": "8cc798c6c972",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.0",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d244976505102883b187325fb0942c9d411660e1c62aed58834e444205ac11d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-17T18:31:30.221550024Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-01T02:15:54.270098332Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23c8493cef4b2584f2526f870645f80d71b4572c29b49a264cea842d2aa2ee28 in / "
                },
                {
                    "created": "2022-03-01T02:15:54.654780641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T06:31:35.529390345Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T06:31:41.789369506Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-03-01T06:32:06.671106923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:00.362823769Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-17T18:31:01.181889473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:01.874122284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:24.606260829Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220315.1/go.20220315.1.linux-amd64.tar.gz'; \t\t\tsha256='b5ed9d893fb12934daf41edea40b15c4b43533761665d8c61a00d666c8d341ef'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-03-17T18:31:26.190861251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:27.402786198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-17T18:31:28.962476559Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-03-17T18:31:30.221550024Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:36194ba100b48be318a3f447a994f7e62c98617382dc376433442716e93ee299",
                    "sha256:730850f5aed3caf39efd76154b63e9a9340c743c5afca70d98fddc6be8a5d0fa",
                    "sha256:31b60e2ffe65b4d300fd7db693b509edea798c660f0ef3f094fef3a43efa504e",
                    "sha256:7a5fc1973038c0c2221a0c83b5d314ffdc6ab5d898a4783d1ce0194f88fd86f1",
                    "sha256:7c8548828a416e66d7a761b032cd970226edacb4c99210f9fc95fd3e5a0973fd",
                    "sha256:fd6164eb67518cc20b0521a731d1f734e94357b9ea025fe2f7b2c284203e1b8c",
                    "sha256:308e48d4eee0b927cefd75713c1661aa67c16612ae5d436e267c2d00532583e8"
                ]
            }
        },
        "1.18.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9ce7c91d7b842244acc69e2660ca4f8bc0206b21cd92f6a65ff79e1c3b5a450",
            "container_config": {
                "Hostname": "c9ce7c91d7b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:18.908221522Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:48.460719047Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:49.325512068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:50.062880589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:13.412801178Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:14.945384432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:16.119415302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:17.686818845Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:18.908221522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a63e2cd7b2fe0c1817deb42905a571be86f3791049f1b2dacc8cd9c8bedb5134",
                    "sha256:1fd91c7d8b9a39e98209cae749d32eb08da54d6baa77567bb12f3ff2178e5c5b",
                    "sha256:009faad48bdba540dbd9b485b2e27db2573eae78dc3f774faa9e2102db97fe5f"
                ]
            }
        },
        "1.18.1-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9ce7c91d7b842244acc69e2660ca4f8bc0206b21cd92f6a65ff79e1c3b5a450",
            "container_config": {
                "Hostname": "c9ce7c91d7b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:18.908221522Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:48.460719047Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:49.325512068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:50.062880589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:13.412801178Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:14.945384432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:16.119415302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:17.686818845Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:18.908221522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a63e2cd7b2fe0c1817deb42905a571be86f3791049f1b2dacc8cd9c8bedb5134",
                    "sha256:1fd91c7d8b9a39e98209cae749d32eb08da54d6baa77567bb12f3ff2178e5c5b",
                    "sha256:009faad48bdba540dbd9b485b2e27db2573eae78dc3f774faa9e2102db97fe5f"
                ]
            }
        },
        "1.18.1-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9ce7c91d7b842244acc69e2660ca4f8bc0206b21cd92f6a65ff79e1c3b5a450",
            "container_config": {
                "Hostname": "c9ce7c91d7b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:18.908221522Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:48.460719047Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:49.325512068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:50.062880589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:13.412801178Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:14.945384432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:16.119415302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:17.686818845Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:18.908221522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a63e2cd7b2fe0c1817deb42905a571be86f3791049f1b2dacc8cd9c8bedb5134",
                    "sha256:1fd91c7d8b9a39e98209cae749d32eb08da54d6baa77567bb12f3ff2178e5c5b",
                    "sha256:009faad48bdba540dbd9b485b2e27db2573eae78dc3f774faa9e2102db97fe5f"
                ]
            }
        },
        "1.18.1-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9ce7c91d7b842244acc69e2660ca4f8bc0206b21cd92f6a65ff79e1c3b5a450",
            "container_config": {
                "Hostname": "c9ce7c91d7b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:18.908221522Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:48.460719047Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:49.325512068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:50.062880589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:13.412801178Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:14.945384432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:16.119415302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:17.686818845Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:18.908221522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a63e2cd7b2fe0c1817deb42905a571be86f3791049f1b2dacc8cd9c8bedb5134",
                    "sha256:1fd91c7d8b9a39e98209cae749d32eb08da54d6baa77567bb12f3ff2178e5c5b",
                    "sha256:009faad48bdba540dbd9b485b2e27db2573eae78dc3f774faa9e2102db97fe5f"
                ]
            }
        },
        "1.18.1-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2a71f30320228ad883413ac214bc92da16695d6c44889bc6d706d41789690b61",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a56555b2bf36225089a8500d85304b9fe0252da7531d72bdaa1c5ed720e2be1",
            "container_config": {
                "Hostname": "6a56555b2bf3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2a71f30320228ad883413ac214bc92da16695d6c44889bc6d706d41789690b61",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:17:33.173661101Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T13:26:39.325923462Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1c05c50014bbd32a4cf1edd085996a8c62abc3c8969b64d2355475827a07475e in / "
                },
                {
                    "created": "2022-04-20T13:26:40.283473033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T20:06:56.176453303Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T20:07:09.797424Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T20:07:58.466284041Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:58.132752195Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:17:00.11049789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:02.662312783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:24.144228524Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:17:26.198932445Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:27.575992744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:30.400708904Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:17:33.173661101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ffdde41c2394222d07f76bf0fd9839281484d89274b879ed0851ffafef2f9f49",
                    "sha256:d0933b8570824176b3c03d0bec8d0f603af2ad72ee85c28d3c9aed29c16e549e",
                    "sha256:561f34cd176d77d3274c5318caec1e68b58c49df0e53e3e41e105cb66727d9cb",
                    "sha256:b973cfd359b9e605be7c0ef8a9d756a11c85f258398bb82bdd226117ba77978f",
                    "sha256:8bc66291129b9d7954e09eee414b8e612bd29db852883415f2e5dd4a417a3fa9",
                    "sha256:31c9023629362510bce5c988507fe62dce88c02d95b10967599d5e5c99e7d942",
                    "sha256:2c85a619434e068e8823603c892d156d540828c8808c0bcf3af83eef119758a3"
                ]
            },
            "variant": "v7"
        },
        "1.18.1-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:eecb2d04a50987482779c0579c26f404d04383a0898c8d047c9fc60810453d47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c2719336fcd292ba0488ee93cbae2855a737015c5512634fa3e9190e5d1d3076",
            "container_config": {
                "Hostname": "c2719336fcd2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:eecb2d04a50987482779c0579c26f404d04383a0898c8d047c9fc60810453d47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:17:15.67574907Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T04:28:55.330633836Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ece192802cbdaf1a141d04f0c2e90cfd3479e5e3e82c6a00206970684494cf48 in / "
                },
                {
                    "created": "2022-04-20T04:28:56.053467905Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:44:07.141404836Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:44:12.588244362Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:44:33.128036283Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:42.331295465Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:43.732936954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:45.407321291Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:08.078729446Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:17:10.678729261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:12.117753771Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:14.167160957Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:17:15.67574907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b4fb74f35a958a3807325c144b2be2f3353b81354e049a7db9cfd5ae83a0dce",
                    "sha256:545989329635d777ed840566c04ad359c95859d23b0660715ca53a3ca473b9f9",
                    "sha256:cd328c815fcb1150998765feef6a138f9f08b5d67bf457ea12196131834c153f",
                    "sha256:2668e627912e1993b0acd6b40b0caa64c601852dd4d10a1700c4668d8e73651f",
                    "sha256:c5d462cb73b1a11d6724661567987211e6a2daebbafd4534b82a76c0bae6e359",
                    "sha256:cb15f2ab2b06ca89d816453387c93f73818a4b071dc16d5423d948f273e2b759",
                    "sha256:b6df80df895aabdac3d691184e422666c140e3f2e95f22996c766a51c99c0881"
                ]
            },
            "variant": "v8"
        },
        "1.18.1-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1ee494989471d778e24da54de9e11fa322a7e0c174ef602743705d22d76b0c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80239ca917c09f4e346283f0a9c085aa6e3da4fcc4335f22c3ea2a56874bf2ca",
            "container_config": {
                "Hostname": "80239ca917c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1ee494989471d778e24da54de9e11fa322a7e0c174ef602743705d22d76b0c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:57.522240221Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:37.180912862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7c5789fb822bda2652d7addee832c5a3d71733f0f94f97d89b0c5570c0840829 in / "
                },
                {
                    "created": "2022-04-20T04:43:37.732864614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:59:01.964685664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:59:07.088636152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:59:22.097083802Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:31.658414581Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:32.326950583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:32.908045371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:52.999140937Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:54.204311944Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:55.19768983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:56.533614568Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:57.522240221Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9fd5db9c9a6470a6c668ade7fa1faf299b734be4f20fef105ec719ac161cee4",
                    "sha256:5d253e59e5233a8eeebb8acdf660c9a5dff6f064656a00fe856e45cd091be47f",
                    "sha256:85fe0038088133c12b3556a09e7817998e2043b1dc73630561a0d446d969f755",
                    "sha256:957a6eed8d1f1779b315b725c58f42fa20dd6bd59dbea586bf05b9dd32f1d3f2",
                    "sha256:6226a31c933943741d69c02669145934d6ef559643adabdf64fb463048c448ee",
                    "sha256:9129b70559168121e633f968c2d197c75b91232f79ce86a36b44e72151bd6263",
                    "sha256:77cbc16effadbc8a357367d6f376dcbeb7da7c26da6d59f582d5199a4e745e35"
                ]
            }
        },
        "1.18.1-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1ee494989471d778e24da54de9e11fa322a7e0c174ef602743705d22d76b0c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80239ca917c09f4e346283f0a9c085aa6e3da4fcc4335f22c3ea2a56874bf2ca",
            "container_config": {
                "Hostname": "80239ca917c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1ee494989471d778e24da54de9e11fa322a7e0c174ef602743705d22d76b0c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:57.522240221Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:37.180912862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7c5789fb822bda2652d7addee832c5a3d71733f0f94f97d89b0c5570c0840829 in / "
                },
                {
                    "created": "2022-04-20T04:43:37.732864614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:59:01.964685664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:59:07.088636152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:59:22.097083802Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:31.658414581Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:32.326950583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:32.908045371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:52.999140937Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:54.204311944Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:55.19768983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:56.533614568Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:57.522240221Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9fd5db9c9a6470a6c668ade7fa1faf299b734be4f20fef105ec719ac161cee4",
                    "sha256:5d253e59e5233a8eeebb8acdf660c9a5dff6f064656a00fe856e45cd091be47f",
                    "sha256:85fe0038088133c12b3556a09e7817998e2043b1dc73630561a0d446d969f755",
                    "sha256:957a6eed8d1f1779b315b725c58f42fa20dd6bd59dbea586bf05b9dd32f1d3f2",
                    "sha256:6226a31c933943741d69c02669145934d6ef559643adabdf64fb463048c448ee",
                    "sha256:9129b70559168121e633f968c2d197c75b91232f79ce86a36b44e72151bd6263",
                    "sha256:77cbc16effadbc8a357367d6f376dcbeb7da7c26da6d59f582d5199a4e745e35"
                ]
            }
        },
        "1.18.1-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3e009e1075e92d75c1bf039dbc896065a8eb0e1cb439df0fc89c0b15dd6d01cb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8d3d7201c17ada9b68e4dc1b4ccf1f0517f512da4df5d819470eb8c086896420",
            "container_config": {
                "Hostname": "8d3d7201c17a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3e009e1075e92d75c1bf039dbc896065a8eb0e1cb439df0fc89c0b15dd6d01cb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:16:15.294042972Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T13:27:49.665913345Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fbbe7a4ec12b0fdfa82879ff73d49ba760c5b6cc47b4c8ecabe64f7e8f4e6340 in / "
                },
                {
                    "created": "2022-04-20T13:27:50.651260428Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T20:10:28.140470103Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T20:10:41.054326297Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T20:11:27.35293581Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:15:42.577892434Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:15:45.673910724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:15:48.226659505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:07.922024515Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:16:10.125531748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:11.632843719Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:13.732230144Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:16:15.294042972Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:19b90bbbe309c310a1ee088d6021635fdce2aeac504597b6d56bb8fb1fdbec43",
                    "sha256:8b4c259322ffdcd041ddbecfa259421284df3f96c474963bdd365be5f7614a8d",
                    "sha256:320cd6889ce1969aafd47c175531215399d532a26a9a3702d160a717a5feeb52",
                    "sha256:1b7a8dd5163832ef7dfcdbe23466bec6a2d933570802d69ab90eaca353310eca",
                    "sha256:ff82e8a5101314f7147188b279d1ca8acc097c7b07c5e76e20ab1e421de62849",
                    "sha256:2685f11a9684a8d24e91331c9cdbb9820ae4f6aa6fed1b0da60f86f6052b35d3",
                    "sha256:d6cc8d1a6f1a4d5489a3550c79c5ffa3cfc53030a2164e3728f1bc8fb1ae067f"
                ]
            },
            "variant": "v7"
        },
        "1.18.1-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4bdfa378de3e09751b08d9fed138daeedd9dbf745a272f0a3030487508844b5d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8652822f183a96584ef89fb89b2c6f9d6cd52d78c28761996f05042a9c06f9fe",
            "container_config": {
                "Hostname": "8652822f183a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4bdfa378de3e09751b08d9fed138daeedd9dbf745a272f0a3030487508844b5d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:18:11.694718526Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T04:29:22.258099938Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5286ff5db23c42ac6a437e8f2f9ef01b6ee6e523d7866c752428d54f177c7108 in / "
                },
                {
                    "created": "2022-04-20T04:29:22.958170346Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:45:29.444427424Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:45:34.921881538Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:45:56.473530272Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:17:36.615247438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:17:38.009738715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:17:39.602999711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:18:02.263405593Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:18:06.100885729Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:18:07.711256253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:18:10.198067369Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:18:11.694718526Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6641916ea13bd0a3d2f3d74510060afd0f3be110b92e495a942044dbbe7d086e",
                    "sha256:2201a0a7e83ae841cc3ad9a7c01b9929e18aa1d983c1504d012cafbcf6ea6d76",
                    "sha256:948cdb04f6a6d95bfeb8f967f3431d7c02e504733f4abf12fbb0f2ea6bf84740",
                    "sha256:faada0974668bf3e490a06e569be0e2ac0f03d1e7574fa61bc4839f2874ae6e4",
                    "sha256:6fdf1e61a004058492048f791dd4906a9b35ac1d3cfa5a08144e04393ca15ebe",
                    "sha256:1d407300b4cc6c3149305c6711bac3696689fc3d6dd3d17b28350ee07f87fd6b",
                    "sha256:785905a867bd6a55d963d4032c148bcd84f2464ed944b62f84feff90d340d6da"
                ]
            },
            "variant": "v8"
        },
        "1.18.1-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5830660d2d1ad4b68a62f5a615a2e725d9634946b1a326d8d6a30b6472f64f2e",
            "container_config": {
                "Hostname": "5830660d2d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:22:08.271902057Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:37.115539748Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:37.833093282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:38.556888209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:03.362460521Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-amd64.tar.gz'; \t\t\tsha256='7b28ca61502d7034c32e0a03ecde15847db4ad323c2be88a14f3f6ffc065bff7'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-arm64.tar.gz'; \t\t\tsha256='cb253fa9ec98bab0901b54ec031f3e985e3376c637c43d78ef56388af64e7f9f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:22:04.730771521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:05.793838313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:07.217408375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:22:08.271902057Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:c37b05e0d38436798256266a7d1cd32d4147900bca1d285b5a6bc095783c01a3",
                    "sha256:40e1d98db85607512279aaebfeea777ad48753920f1dfe8293d4395725ceb60f",
                    "sha256:40845ff9f0130e7705b2697861288102cf9ec5148b2b74ed726758e4efa10ae5"
                ]
            }
        },
        "1.18.1-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5830660d2d1ad4b68a62f5a615a2e725d9634946b1a326d8d6a30b6472f64f2e",
            "container_config": {
                "Hostname": "5830660d2d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:22:08.271902057Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:37.115539748Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:37.833093282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:38.556888209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:03.362460521Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-amd64.tar.gz'; \t\t\tsha256='7b28ca61502d7034c32e0a03ecde15847db4ad323c2be88a14f3f6ffc065bff7'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-arm64.tar.gz'; \t\t\tsha256='cb253fa9ec98bab0901b54ec031f3e985e3376c637c43d78ef56388af64e7f9f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:22:04.730771521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:05.793838313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:07.217408375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:22:08.271902057Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:c37b05e0d38436798256266a7d1cd32d4147900bca1d285b5a6bc095783c01a3",
                    "sha256:40e1d98db85607512279aaebfeea777ad48753920f1dfe8293d4395725ceb60f",
                    "sha256:40845ff9f0130e7705b2697861288102cf9ec5148b2b74ed726758e4efa10ae5"
                ]
            }
        },
        "1.18.1-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5830660d2d1ad4b68a62f5a615a2e725d9634946b1a326d8d6a30b6472f64f2e",
            "container_config": {
                "Hostname": "5830660d2d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:22:08.271902057Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:37.115539748Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:37.833093282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:38.556888209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:03.362460521Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-amd64.tar.gz'; \t\t\tsha256='7b28ca61502d7034c32e0a03ecde15847db4ad323c2be88a14f3f6ffc065bff7'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-arm64.tar.gz'; \t\t\tsha256='cb253fa9ec98bab0901b54ec031f3e985e3376c637c43d78ef56388af64e7f9f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:22:04.730771521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:05.793838313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:07.217408375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:22:08.271902057Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:c37b05e0d38436798256266a7d1cd32d4147900bca1d285b5a6bc095783c01a3",
                    "sha256:40e1d98db85607512279aaebfeea777ad48753920f1dfe8293d4395725ceb60f",
                    "sha256:40845ff9f0130e7705b2697861288102cf9ec5148b2b74ed726758e4efa10ae5"
                ]
            }
        },
        "1.18.1-1-fips-cbl-mariner1.0-arm64": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:94ec64e49acbad42933dee9e62ef9f10890fd3f4cee5e0832097a392c6c909b2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "09df219a0e2fb40e4d7fbbedd14fc95a0835214a819d4fbcd0b7b934d201e684",
            "container_config": {
                "Hostname": "09df219a0e2f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:94ec64e49acbad42933dee9e62ef9f10890fd3f4cee5e0832097a392c6c909b2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:25:33.349794926Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-03-19T16:55:40.140658887Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:25:00.999970491Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:25:01.997301917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:25:02.840569446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:25:26.590516724Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-amd64.tar.gz'; \t\t\tsha256='7b28ca61502d7034c32e0a03ecde15847db4ad323c2be88a14f3f6ffc065bff7'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-arm64.tar.gz'; \t\t\tsha256='cb253fa9ec98bab0901b54ec031f3e985e3376c637c43d78ef56388af64e7f9f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:25:28.802878635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:25:30.000424068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:25:32.047681785Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:25:33.349794926Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0bcd07420e1a5450706e47129cec4ef4d8b84ca7f18a6d2a624b0f85c8352c59",
                    "sha256:de57fc9c8d4310e419158ca93160f631358a486c1c1fe6058e2b496fbe0376b0",
                    "sha256:0f8c8c47e3fbc1f99a43646f7128304ba1a05fc0263cd10ec93d187f68f7afb8",
                    "sha256:498670ec8edb2b7f84db42f3002aa8c3cac616ac9864ae81f8ef25b4186d90fb"
                ]
            }
        },
        "1.18.1-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:36f325ce9c3629850f045a2e655b73f0b2d304e5fc73555aeb8efbd08a7a8e01",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "7858c045c8c6d569f11e9696798dd75254d12101239896c20dfb0146240153aa",
            "container_config": {
                "Hostname": "7858c045c8c6",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:36f325ce9c3629850f045a2e655b73f0b2d304e5fc73555aeb8efbd08a7a8e01",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-04-26T16:12:27.1586194Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-04T10:52:49.0709247Z",
                    "created_by": "Apply image 1809-amd64"
                },
                {
                    "created": "2022-04-26T16:11:03.4074277Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-04-26T16:11:04.3707556Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:11:05.5719737Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-04-26T16:11:09.8760112Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-04-26T16:11:10.8717033Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-04-26T16:11:11.9437649Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.1"
                },
                {
                    "created": "2022-04-26T16:12:23.3716128Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:f6e40ebc1025293c8680f72514f2737c5875736abaaeffaa478540fa29dd010b in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-04-26T16:12:26.0332788Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-04-26T16:12:27.1586194Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2803",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3da6ad2633b175b0d7f574117a3672f8cf3d2322eb89904ed9d5c36e0447e64",
                    "sha256:fd4fd05f626f41ca3b7501a9fee13f9cf802f82fd8a662aaf8ada6ae7d21f658",
                    "sha256:54dcabb8647f6e33973a4bfc30e3698b9c29385fe86ec40ab742a38dd0e21e53",
                    "sha256:44b064636ef31108a1c165d388d79b9de744bbcbf27a1a7e1b60d4b499b9517e",
                    "sha256:7623a1436b6b26916168f5d7a5d206c473c20cb421cfadbe681c6afeb0896ec5",
                    "sha256:543c8f474956568e73a699d362403b031fb8ee367c3cbcf28e27d7ba14e72cd3",
                    "sha256:0889d5d586597e6328777259a5bac9cb0342c3ecba4d93151c33211318896dae",
                    "sha256:4756be54dcb8c9956fc8cbcd040248ca013a87cb0dff2fe8b3ba00b25d49fb29",
                    "sha256:b334b74f9a335061d837e87d4f64663a5497a052343f435e5e30a1932b26baa9",
                    "sha256:18615f3cc299e5fba52f5e494ad7ccf0fef516b1b0a9e5de12385903d28cff6b"
                ]
            }
        },
        "1.18.1-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:4b81e500263d6ed0d78b232b19f7fb978835b266bdeb210d7d8c94f84d2bb6ef",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "f857cf2911342d463d138c8b5c61641aba3c4c6bb4223de2c7ee105b9a5fd4e0",
            "container_config": {
                "Hostname": "f857cf291134",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:4b81e500263d6ed0d78b232b19f7fb978835b266bdeb210d7d8c94f84d2bb6ef",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-04-26T16:13:42.9706925Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-03T05:29:07.0465742Z",
                    "created_by": "Apply image ltsc2022-amd64"
                },
                {
                    "created": "2022-04-26T16:12:14.7933673Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-04-26T16:12:15.8189868Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:12:16.8266507Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-04-26T16:12:22.5253842Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-04-26T16:12:23.6233518Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-04-26T16:12:24.5931418Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.1"
                },
                {
                    "created": "2022-04-26T16:13:36.413813Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:f6e40ebc1025293c8680f72514f2737c5875736abaaeffaa478540fa29dd010b in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-04-26T16:13:41.8358649Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-04-26T16:13:42.9706925Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.643",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fccd45c64ccd39b01024e6df23e112d76c503571bf19a9bd60fba0bb484fb7e3",
                    "sha256:2e611b513c964310d39421c989a4a153b81a9b28bd6e66f1439985ccf8addf48",
                    "sha256:0cf42fd6b201109782ff24e317755a4b01a87e4ec1b668cd289a8d0f3e0aad37",
                    "sha256:0c64595569a354d793fd0366812bd8ba3b1435a951559ee6db99e617d15dfd84",
                    "sha256:386150b329420cb81fc8dc70e9ee2a5464a6a6f7890268e7ab0e76570071925a",
                    "sha256:d143a47afb58668887a440ff53758ff197aba0c1df53a7a0b6132e11898d2e22",
                    "sha256:69ee1677feae7d41a06f74d89b8ce1ffdcec8136111e007e5ba8d2bc402921d0",
                    "sha256:b9367c0fe7624e402a20d3e002ee0f73c73f1532ea14e823e23646a7f5c50b6c",
                    "sha256:c190b41ea538f15118259ac9354ec4af1597615f6aa2c82de5086ac23ccd2971",
                    "sha256:4e0c254a0d268770d60dd3726390f642b02e7b26ff4f1182adaeec47cfa92a5e"
                ]
            }
        },
        "1.18.1-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0a05bc630ffd8777e2762edabcc3a46e167d2902350dc81e0dd04e83f2a46e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f039d52dc7c834682fcbb74f97feadd6d14dcb162dca0f9bf08fc35a20692bb",
            "container_config": {
                "Hostname": "7f039d52dc7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0a05bc630ffd8777e2762edabcc3a46e167d2902350dc81e0dd04e83f2a46e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:10.12256405Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:45:14.972655722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ed691b65385dede44a92f9de9e1428af431197c66461aa0f9c61e2f7c8bade5 in / "
                },
                {
                    "created": "2022-04-20T04:45:15.54694057Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T07:01:39.096504391Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T07:01:43.28086204Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T07:02:01.604480891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:40.11387662Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:40.823480942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:08:41.631913444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:04.463098363Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:06.045496492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:07.259762328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:08.856281122Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:10.12256405Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f4dc9775f33d9f80dff490ce6f9b38c36dbbec4c1951662e8a2e7dab6d6001f",
                    "sha256:f8323fb3a55ca67fca978090eb30481a2e6a3fa43f9abe6785a9b27604400cb0",
                    "sha256:f6c2459e20599295aafb91d5ce2a54d1e81f778fff9d13ef1d8a8532385d5ae2",
                    "sha256:f35deb8d96fc57e36d66e1e90d19a67da3cfa9e18c4abe620131bf71a45df923",
                    "sha256:f3e149e1421d1563783204a66a82a547320b3ddf01f8330b711c74438bd63efb",
                    "sha256:31548eda352e22d496a13f78c474724cc7e9b1e8160dcda6a885c09a31affe18",
                    "sha256:b5267aea284373ce287ceb3a1d512e5804e32c16235686320c826dbddf34fede"
                ]
            }
        },
        "1.18.1-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0a05bc630ffd8777e2762edabcc3a46e167d2902350dc81e0dd04e83f2a46e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f039d52dc7c834682fcbb74f97feadd6d14dcb162dca0f9bf08fc35a20692bb",
            "container_config": {
                "Hostname": "7f039d52dc7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0a05bc630ffd8777e2762edabcc3a46e167d2902350dc81e0dd04e83f2a46e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:10.12256405Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:45:14.972655722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ed691b65385dede44a92f9de9e1428af431197c66461aa0f9c61e2f7c8bade5 in / "
                },
                {
                    "created": "2022-04-20T04:45:15.54694057Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T07:01:39.096504391Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T07:01:43.28086204Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T07:02:01.604480891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:40.11387662Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:40.823480942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:08:41.631913444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:04.463098363Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:06.045496492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:07.259762328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:08.856281122Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:10.12256405Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f4dc9775f33d9f80dff490ce6f9b38c36dbbec4c1951662e8a2e7dab6d6001f",
                    "sha256:f8323fb3a55ca67fca978090eb30481a2e6a3fa43f9abe6785a9b27604400cb0",
                    "sha256:f6c2459e20599295aafb91d5ce2a54d1e81f778fff9d13ef1d8a8532385d5ae2",
                    "sha256:f35deb8d96fc57e36d66e1e90d19a67da3cfa9e18c4abe620131bf71a45df923",
                    "sha256:f3e149e1421d1563783204a66a82a547320b3ddf01f8330b711c74438bd63efb",
                    "sha256:31548eda352e22d496a13f78c474724cc7e9b1e8160dcda6a885c09a31affe18",
                    "sha256:b5267aea284373ce287ceb3a1d512e5804e32c16235686320c826dbddf34fede"
                ]
            }
        },
        "1.18.1-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d8f94f2c04bc4131f7abfcb8d34528a98453089955fdb6a5df9e8737dd188e31",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cd921fa3a7246352611d88336badb38fedec7430b2cb872fbaba7375b70b1704",
            "container_config": {
                "Hostname": "cd921fa3a724",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d8f94f2c04bc4131f7abfcb8d34528a98453089955fdb6a5df9e8737dd188e31",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:16:39.342247296Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T13:33:15.393492888Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d237e5cd139706988e7bbc50ae542898a9b1fa1539f00322f21a71714975ccd8 in / "
                },
                {
                    "created": "2022-04-20T13:33:16.331807982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T20:17:39.410552555Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T20:17:50.375880411Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T20:18:44.347342759Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:06.395016003Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:16:07.637450519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:09.535351509Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:30.59322331Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:16:32.598702319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:34.953561625Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:16:37.835547418Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:16:39.342247296Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b5ba0132861977a1665ed8766640dbabc8ec5184d2704efda73a5468a323d1",
                    "sha256:e52411dadecdfdcbf2279394fd21c91f75076ddbf528678204777af0e4fdd004",
                    "sha256:952036bb3ee88d70300a77bfc3c4648ce1ac0c3fa881b883ccf6befa393aecab",
                    "sha256:bcf9ec9b83fae709b73f364eaccf188025ca185bc3798dff306ae554a63ae71e",
                    "sha256:f97077e66d3e79310e516f1a169563a8fe6f4de05f1be10a592c61758f808f2d",
                    "sha256:c761ccf730e5af185078cb5d9f37cf91a1f66d7119233f566b3067218245630a",
                    "sha256:83072509da9eabf24bb4cfeef4bf2412d13757bf4b7e49bc938819a4286f9ce2"
                ]
            },
            "variant": "v7"
        },
        "1.18.1-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:de9b654753ade241a730b4264d302daeff5dbf86ca13075300246d05758b6e5d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bc64250522e4351924d0ee3f234a3d0d917d861560acb0886b4abc0f983a1a9b",
            "container_config": {
                "Hostname": "bc64250522e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:de9b654753ade241a730b4264d302daeff5dbf86ca13075300246d05758b6e5d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:22:16.104517622Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-04-20T04:31:19.607562351Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:73f1db8536438ca891f4b507a569e6c561364db0f05914ebea9d3fa97e1bf837 in / "
                },
                {
                    "created": "2022-04-20T04:31:20.240600943Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:48:35.733807382Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:48:40.368324238Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:49:00.221624411Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:21:43.79097489Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:21:44.995780387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:21:46.057105348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:22:09.191997229Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:22:11.359813283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:22:12.649130538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:22:14.787358162Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:22:16.104517622Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d5bb7390153ec2789794f897e2774e3fd18c58e639ad71364d363390ef7454b3",
                    "sha256:abe5ee099fc9bd696817d390ee34e2d12aef7c68b4df57dbaa51de84199fa390",
                    "sha256:35e626ec2072191d9284de1334a1476f7d9b8abd1ae1337cfde5160f5f19a50f",
                    "sha256:7a5ddcc261adf2a2a85c1219d05818c6ec52b10af6fd6f2e7cb59e1c0adac2d1",
                    "sha256:c571cc4d28896e723721fd10225ad0d2f6031a2a1c514df9a1cfcb910531258a",
                    "sha256:15d08acd3d7191ff6e2bd966ebc698a713ce1c4ae0d827fc16517ac672feff10",
                    "sha256:b8e7e7e44edbc7e5cecde3d8ec7e39827a11da0f3f94148d70178be5f8ddccd3"
                ]
            },
            "variant": "v8"
        },
        "1.18.1-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:fa7cf3f6345f34a5f6b64446ded8659929eafefa3ea207d952890c8ae1b13caa",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "caf4e36eea1f30f0b7f9614380d9eb8b3d0b373897ce601ef7abbddbb089915c",
            "container_config": {
                "Hostname": "caf4e36eea1f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:fa7cf3f6345f34a5f6b64446ded8659929eafefa3ea207d952890c8ae1b13caa",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-04-26T16:11:02.3675196Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2020-05-07T05:09:25.0463439Z",
                    "created_by": "Apply image 1809-RTM-amd64"
                },
                {
                    "created": "2022-04-04T11:20:25.3756058Z",
                    "created_by": "Install update 1809-amd64"
                },
                {
                    "created": "2022-04-26T16:08:35.3710655Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-04-26T16:08:36.3133396Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-04-26T16:08:37.2833039Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-04-26T16:08:38.2570085Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-04-26T16:08:39.2354688Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-04-26T16:09:13.4130842Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:09:14.395531Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:09:20.1059967Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-04-26T16:09:21.1318988Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.1"
                },
                {
                    "created": "2022-04-26T16:11:01.0135818Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '43a319ba7aa6a015771e34f87f1aff66e2a5ce76480c2832cc930786b6939e8f'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:11:02.3675196Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2803",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a7ba3db29ebb3a32e6a9c912d6ab5941bd981a0c39a420e6786c70a66babb80b",
                    "sha256:c6723851d2c1b7e940bc2fb928eaeee12e52f984cb692a07b09d9829e2dc8893",
                    "sha256:16df92e77ac4428af32622530255467b094b8a99f734ac127ba56e3374a73277",
                    "sha256:7c6ca20322a6389bcddc65828ff55d15de7dbeb610b0ba69ec62671f138ed0b8",
                    "sha256:5b6041101f2ab80d42557e02e87bd1caf31f0557b2ad7162e1c6097e8f10e30f",
                    "sha256:58a85911c4fef3f4a5428d4ee796de4a0c59c5bf2d04dfc5e6c4c85448113635",
                    "sha256:21e1520d2c56a7abdb221ebb547494145e417bc39febae31f3734a51c35ff470",
                    "sha256:731177e56fd1c5ffe95f969f684eaffdfb1d6374ccb628d2deda3b5ffe6fe849",
                    "sha256:5cf296592d334dfbba6e3d24b76b92198ca48d696cd3c8b9d974119128ceee16",
                    "sha256:4a34ebbf7bda0aef023f09147334f4bf339ee731e1631355c6971019f8fccddf",
                    "sha256:2f4020e9f2f3b8ee3d946901f7aacdc7a5818c4398a50d9ca3c01dc509a711a1",
                    "sha256:dbd5ab0bf251b4e0c2d14dbd57975fb1be673326408efec35701c2d597d6b878",
                    "sha256:1476a604c9db07a6a1ba357c588dfbd50af9164dfb76bfa879f9a5f19562c309"
                ]
            }
        },
        "1.18.1-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:9383b3290cf614cf85ba98fd400233cb352f337059a78f10a5ac4e72a01591c9",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "95b1eb4a7e928bb749b65d472d5c4146bda4d313a637fca29a5cecc024e662e3",
            "container_config": {
                "Hostname": "95b1eb4a7e92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:9383b3290cf614cf85ba98fd400233cb352f337059a78f10a5ac4e72a01591c9",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-04-26T16:33:47.9255551Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2016-11-19T17:05:00Z",
                    "created_by": "Apply image 1607-RTM-amd64"
                },
                {
                    "created": "2022-04-03T10:04:00Z",
                    "created_by": "Install update ltsc2016-amd64"
                },
                {
                    "created": "2022-04-26T16:27:46.9198889Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-04-26T16:27:48.6289848Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-04-26T16:27:50.3204243Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-04-26T16:27:51.9689424Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-04-26T16:27:53.6789601Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-04-26T16:28:52.2645136Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:28:54.451138Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:29:18.5733519Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-04-26T16:29:20.8107873Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.1"
                },
                {
                    "created": "2022-04-26T16:33:43.7291185Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '43a319ba7aa6a015771e34f87f1aff66e2a5ce76480c2832cc930786b6939e8f'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:33:47.9255551Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5066",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:fe48cee89971abac42eedb9110b61867659df00fc5b0b90dd91d6e19f704d935",
                    "sha256:24abe72b7b506d26d7a759008259e6038fc377f56ca9b4dce3224bb83c8c9881",
                    "sha256:080b51ac8931618c1a2acb735e71f07c9d69cbe87da60dba61ff4549b7aba9c7",
                    "sha256:71d171f5221b17eafd78c1c27a9485409acede83506cfbc46a054ab16a293b88",
                    "sha256:c7379a3cabfaf730a7f4c660b0d4ccb8d40347eec5fc0135f76888bdf1835ef5",
                    "sha256:e903750a09cd65b5ec3e0831d12353dee10ca9d0d826dc8dd46f6c1f818e85ce",
                    "sha256:da9d724a5ebf96da40dc66924ee5510257d185644feb36277c67ba1ca3cd0fac",
                    "sha256:642a15444a8513d9725978647755fdadb7f873e5ff9395bff986a8f9aa887a97",
                    "sha256:03f4bd0e3227e4cdd8613fee3fa3830a8ed1f722ccf8aa874dd33bd43dcd72ba",
                    "sha256:a56b6a1c93aea58ff49da5fa7cf5a52fd5784110542fefe7123abece6907f3ad",
                    "sha256:2cff8ce4594624a7a7c0fdc03ae5bd546eae091b55562fdcfce83f09a3dbdfc7",
                    "sha256:2da5b23a0e217320e68d17a5e3d190023724ee93f435b30c0b210121bb841a40"
                ]
            }
        },
        "1.18.1-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:b1bc1c6c03f5c45a0e96c398f2aab5a0967252b01a8c92d4ed20b92c02f23423",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "a5661aaf7ab9cde912c8a57537f329c2ed5e6bf3430ac76f6c88ff3b4b1e0ed3",
            "container_config": {
                "Hostname": "a5661aaf7ab9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.1"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:b1bc1c6c03f5c45a0e96c398f2aab5a0967252b01a8c92d4ed20b92c02f23423",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-04-26T16:12:13.6641417Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2021-05-08T09:40:24.683Z",
                    "created_by": "Apply image 2022-RTM-amd64"
                },
                {
                    "created": "2022-04-03T05:50:25.2004372Z",
                    "created_by": "Install update ltsc2022-amd64"
                },
                {
                    "created": "2022-04-26T16:09:20.8620587Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-04-26T16:09:21.9282494Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-04-26T16:09:23.0028583Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-04-26T16:09:24.0620222Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-04-26T16:09:25.1188761Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-04-26T16:09:47.7638666Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:09:48.8734932Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-04-26T16:10:00.2477658Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-04-26T16:10:01.3085678Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.1"
                },
                {
                    "created": "2022-04-26T16:12:12.2264837Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '43a319ba7aa6a015771e34f87f1aff66e2a5ce76480c2832cc930786b6939e8f'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-04-26T16:12:13.6641417Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.643",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c18686406f96b263d986714a2d88add06ea9ddbb3e52fb936222711da7d9d395",
                    "sha256:46db113248e4cc0550303d4e834438cfcb7d97c5601550b4c5cbd7604596fda8",
                    "sha256:4160e555c3a1dd7d78b29dcc181a48c4cbc164d7b9f27ed7caabeb139514aabf",
                    "sha256:c2bc5680d45ffafda4d14193f9a1be881367b113df5023711763667e99229568",
                    "sha256:d2ecae465469598e3cc6aafed880dc381dd860f702cef3aaffa6594586faec42",
                    "sha256:4212a10ff12a3b1567406bb14b5c0a9d4188d831251666f93679442e0b635fdb",
                    "sha256:a89760b5b9a9038c3effbaad1c289c5811cf298dd8783a72290a7dd5a1d64e07",
                    "sha256:40a934ef6ab3f71cec6dbdd31b6c3879228636c00a207ddb5e0a469463de5e96",
                    "sha256:6e6ba364c30e3127b61544e65579c2a60d3cda6a3013a3015eb5a05a63bfa85b",
                    "sha256:c79654b2b98c911c5461e61ef79d627f3889e066fc846c23c6c1dee7b03d6516",
                    "sha256:372f42734609daae6bfb67deab360d4e4eccfb42921b07489242968dd785cbfb",
                    "sha256:0bd900cd49960ce76ee9ae7e00d9a11dc40f44b6886e66b07762a88538da85fc",
                    "sha256:4ed9db57530e917ffbe869728ade77491514f9f3274a89e167bae406850ca73a"
                ]
            }
        },
        "1.18.1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9ce7c91d7b842244acc69e2660ca4f8bc0206b21cd92f6a65ff79e1c3b5a450",
            "container_config": {
                "Hostname": "c9ce7c91d7b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6b358500e14dc8795fa3538efc76552bad2e830729b5af98e7b2171f7ea84cf9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:10:18.908221522Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:15.794657904Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a81c181c66f226bd6abd48d0c7ed8a9c599c9f521ec7229286c83161afec8c2 in / "
                },
                {
                    "created": "2022-04-20T04:43:16.367340706Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:57:42.972342849Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:57:48.267962453Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:58:03.811109088Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:48.460719047Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:49.325512068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:50.062880589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:13.412801178Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:10:14.945384432Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:16.119415302Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:10:17.686818845Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:10:18.908221522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a13c519c6361b881ba38a452d05e130fc2ee26f0849f119936d747b96cf6a5c3",
                    "sha256:bafdbe68e4aee5999c326aaa33571b595d6bfbea119742439588c3e0c1a56130",
                    "sha256:a037458de4e074da622d972e28cfa275c246c684e06efdd28d39c0faa45cb633",
                    "sha256:08fa02ce37ebdcd0029cf499ca859e0dc488d7725499063baf4481681e6da7ef",
                    "sha256:a63e2cd7b2fe0c1817deb42905a571be86f3791049f1b2dacc8cd9c8bedb5134",
                    "sha256:1fd91c7d8b9a39e98209cae749d32eb08da54d6baa77567bb12f3ff2178e5c5b",
                    "sha256:009faad48bdba540dbd9b485b2e27db2573eae78dc3f774faa9e2102db97fe5f"
                ]
            }
        },
        "1.18.1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a1ee494989471d778e24da54de9e11fa322a7e0c174ef602743705d22d76b0c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80239ca917c09f4e346283f0a9c085aa6e3da4fcc4335f22c3ea2a56874bf2ca",
            "container_config": {
                "Hostname": "80239ca917c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a1ee494989471d778e24da54de9e11fa322a7e0c174ef602743705d22d76b0c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:57.522240221Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:43:37.180912862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7c5789fb822bda2652d7addee832c5a3d71733f0f94f97d89b0c5570c0840829 in / "
                },
                {
                    "created": "2022-04-20T04:43:37.732864614Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T06:59:01.964685664Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T06:59:07.088636152Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T06:59:22.097083802Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:31.658414581Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:09:32.326950583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:32.908045371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:52.999140937Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:54.204311944Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:55.19768983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:56.533614568Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:57.522240221Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9fd5db9c9a6470a6c668ade7fa1faf299b734be4f20fef105ec719ac161cee4",
                    "sha256:5d253e59e5233a8eeebb8acdf660c9a5dff6f064656a00fe856e45cd091be47f",
                    "sha256:85fe0038088133c12b3556a09e7817998e2043b1dc73630561a0d446d969f755",
                    "sha256:957a6eed8d1f1779b315b725c58f42fa20dd6bd59dbea586bf05b9dd32f1d3f2",
                    "sha256:6226a31c933943741d69c02669145934d6ef559643adabdf64fb463048c448ee",
                    "sha256:9129b70559168121e633f968c2d197c75b91232f79ce86a36b44e72151bd6263",
                    "sha256:77cbc16effadbc8a357367d6f376dcbeb7da7c26da6d59f582d5199a4e745e35"
                ]
            }
        },
        "1.18.1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5830660d2d1ad4b68a62f5a615a2e725d9634946b1a326d8d6a30b6472f64f2e",
            "container_config": {
                "Hostname": "5830660d2d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:22:08.271902057Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:37.115539748Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:37.833093282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:38.556888209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:03.362460521Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-amd64.tar.gz'; \t\t\tsha256='7b28ca61502d7034c32e0a03ecde15847db4ad323c2be88a14f3f6ffc065bff7'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-arm64.tar.gz'; \t\t\tsha256='cb253fa9ec98bab0901b54ec031f3e985e3376c637c43d78ef56388af64e7f9f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:22:04.730771521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:05.793838313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:07.217408375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:22:08.271902057Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:c37b05e0d38436798256266a7d1cd32d4147900bca1d285b5a6bc095783c01a3",
                    "sha256:40e1d98db85607512279aaebfeea777ad48753920f1dfe8293d4395725ceb60f",
                    "sha256:40845ff9f0130e7705b2697861288102cf9ec5148b2b74ed726758e4efa10ae5"
                ]
            }
        },
        "1.18.1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5830660d2d1ad4b68a62f5a615a2e725d9634946b1a326d8d6a30b6472f64f2e",
            "container_config": {
                "Hostname": "5830660d2d1a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9ec7d46dcee3fe31be9f991407973e606436aae2e04dc06d398bbdbdb8dc8c3f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-15T00:22:08.271902057Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-04-15T00:21:37.115539748Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-04-15T00:21:37.833093282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:21:38.556888209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:03.362460521Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-amd64.tar.gz'; \t\t\tsha256='7b28ca61502d7034c32e0a03ecde15847db4ad323c2be88a14f3f6ffc065bff7'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220414.3/go.20220414.3.linux-arm64.tar.gz'; \t\t\tsha256='cb253fa9ec98bab0901b54ec031f3e985e3376c637c43d78ef56388af64e7f9f'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-15T00:22:04.730771521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:05.793838313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-15T00:22:07.217408375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-15T00:22:08.271902057Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:c37b05e0d38436798256266a7d1cd32d4147900bca1d285b5a6bc095783c01a3",
                    "sha256:40e1d98db85607512279aaebfeea777ad48753920f1dfe8293d4395725ceb60f",
                    "sha256:40845ff9f0130e7705b2697861288102cf9ec5148b2b74ed726758e4efa10ae5"
                ]
            }
        },
        "1.18.1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f0a05bc630ffd8777e2762edabcc3a46e167d2902350dc81e0dd04e83f2a46e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f039d52dc7c834682fcbb74f97feadd6d14dcb162dca0f9bf08fc35a20692bb",
            "container_config": {
                "Hostname": "7f039d52dc7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f0a05bc630ffd8777e2762edabcc3a46e167d2902350dc81e0dd04e83f2a46e9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-04-26T16:09:10.12256405Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-04-20T04:45:14.972655722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ed691b65385dede44a92f9de9e1428af431197c66461aa0f9c61e2f7c8bade5 in / "
                },
                {
                    "created": "2022-04-20T04:45:15.54694057Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-20T07:01:39.096504391Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-20T07:01:43.28086204Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-04-20T07:02:01.604480891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:40.11387662Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-04-26T16:08:40.823480942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:08:41.631913444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:04.463098363Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-amd64.tar.gz'; \t\t\tsha256='0ecd8a6b43ae3e993eedddde6141a7785fc65d1cc8a322c6e67fa02420a883fd'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220420.4/go.20220420.4.linux-armv6l.tar.gz'; \t\t\tsha256='fcce5540ea86052c7d1549f6f89ab3265ebbbd09eb807d8b6c298deafb1c0f82'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220412.1/go.20220412.1.linux-arm64.tar.gz'; \t\t\tsha256='7965396729a9efb2d166e9b33eb142629f9c505240c4e373bbd783cf5f8af61a'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-04-26T16:09:06.045496492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:07.259762328Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-26T16:09:08.856281122Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-04-26T16:09:10.12256405Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f4dc9775f33d9f80dff490ce6f9b38c36dbbec4c1951662e8a2e7dab6d6001f",
                    "sha256:f8323fb3a55ca67fca978090eb30481a2e6a3fa43f9abe6785a9b27604400cb0",
                    "sha256:f6c2459e20599295aafb91d5ce2a54d1e81f778fff9d13ef1d8a8532385d5ae2",
                    "sha256:f35deb8d96fc57e36d66e1e90d19a67da3cfa9e18c4abe620131bf71a45df923",
                    "sha256:f3e149e1421d1563783204a66a82a547320b3ddf01f8330b711c74438bd63efb",
                    "sha256:31548eda352e22d496a13f78c474724cc7e9b1e8160dcda6a885c09a31affe18",
                    "sha256:b5267aea284373ce287ceb3a1d512e5804e32c16235686320c826dbddf34fede"
                ]
            }
        },
        "1.18.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18.10-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18.10-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18.10-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18.10-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:58feb71e1ba4e491758bdee91b054733e78a37bcce4a3c47cb10a9169c608566",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "afb0a58ccebabe569d7001842a955edc418a9c5720b1d94e0e1afdcd1b10fac9",
            "container_config": {
                "Hostname": "afb0a58cceba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:58feb71e1ba4e491758bdee91b054733e78a37bcce4a3c47cb10a9169c608566",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:05:50.115186603Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2023-01-11T04:00:17.406912301Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:48f6407691a382c3ad731f05f78d4210efd40f1a00abfd6c043d8401c6ca1811 in / "
                },
                {
                    "created": "2023-01-11T04:00:18.644068712Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T04:33:04.003412015Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T04:33:10.325051697Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T04:33:36.44505349Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:30.945388161Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:31.610965562Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:32.580187643Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:45.486447183Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:05:46.71473077Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:47.705125788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:49.133273315Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:05:50.115186603Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b58b37f69e0834a86b94ec5b80a76d3c47ebe6037e931b0b76a2542c379c18c",
                    "sha256:e3f74cc6cecde408626692abd9744368b7c54a03eb415cabf9438d747637869f",
                    "sha256:ec8673d20fe39e8980bcd4c678ee21fb32b9fc039e2e7ff26380b44a412d728e",
                    "sha256:2520982b80ae41e94bd8af9faa45a016463c3b9dff5da2680a0385c5416284c5",
                    "sha256:f95a9a5b0d0cf950fb4ffe28452f1caf5fd1054e88721e8ba3ccebad5ca3b745",
                    "sha256:f4ff8b9526427a8cc88d1ca478dee4b79370f081fbe1cb02bcda07f0bd9a101f",
                    "sha256:9631ae78441c1d5559656b51f810a845f4412e2840171f172893aa57a28dd2e5"
                ]
            },
            "variant": "v7"
        },
        "1.18.10-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:037bf8861fc81efef25687e706f856d64c3672711eb2d37db0a8147f1a0b3f55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e09f5aa57c7323c5d8fd8d05752a77d5bfc0af4876c87544bd43615baa63029c",
            "container_config": {
                "Hostname": "e09f5aa57c73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:037bf8861fc81efef25687e706f856d64c3672711eb2d37db0a8147f1a0b3f55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:05:49.365891895Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2023-01-11T02:57:24.516580953Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e185c2d9ca8a231a39ee2b1761fcdff75065252d25a65a207acb7a319c1cf23 in / "
                },
                {
                    "created": "2023-01-11T02:57:25.120160428Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:24:27.622244028Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:24:32.668553449Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:24:49.250099331Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:30.851367633Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:31.52307111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:32.121234105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:44.796428069Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:05:46.016213819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:47.003484223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:48.388061215Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:05:49.365891895Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ea8ab45f064e9fdfb6f5861e91f08cf17a9edcba1896520091348fd5cc2b27cd",
                    "sha256:5d37ad02a8e2ee92d4c53a1b057764e8ceca5a5bddf04581f7d8454ed202616b",
                    "sha256:72235aad06ad2c1a8b937e20050d76c0437971805e39a6255af4cfa0ebfdeaae",
                    "sha256:85f9ebffaf4ded43384d8a122d4a2eb1d25c83dd63a4997136a667da907c20df",
                    "sha256:76b6cbbdbd04453a19ed10ddf401d1257f108663210f2b4ca50371f82a4893a1",
                    "sha256:3c4ef2ac92fe02f12ec7a7db3ddd6e77ea46927590fca66acea40e2a34b803ea",
                    "sha256:49869c97f6a1d3b18d652a34b1576345c549f6d57d2f9afa339581c2ea508d69"
                ]
            },
            "variant": "v8"
        },
        "1.18.10-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7dd50934e7650cf092d110c0e42d268060370f153a8ff3185ba86a308c33245f",
            "container_config": {
                "Hostname": "7dd50934e765",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:31.941337005Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:54.999052854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4bf66d4081da52e8b692fcff96aad84d3e68bda4f62e870e8f4803153c70e24c in / "
                },
                {
                    "created": "2023-01-11T02:34:55.608587219Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:05:46.913895834Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:05:53.202838137Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:06:14.113219128Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:03.545395441Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:04.308353632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:04.962829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:26.699237461Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:28.169181523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:29.312262747Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:30.824334333Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:31.941337005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:083aacb889b3fc7c21c3c680a541f50b467ec7d7de97a48e43122d9a34219788",
                    "sha256:b7392dc587490663dce94a350036df4060e5536400b1cf55d833e955bb36869b",
                    "sha256:d5ce45249ce15069660d16956c4b7dd4e74e8b6a7e88283ed30f45aa37b15af3",
                    "sha256:132e6b0c0edd2062fe1b4a1dc10196b7b442cbc3b8bcc0c183397cbb641ff950",
                    "sha256:a6da2a1a9d18fa228e93292251a2210c496e5aad0254e20c4935fd74007f58f6",
                    "sha256:aad741d414f1188ffab6eeec7c09c86abf2327863638d6548bc416cb4f248eb9",
                    "sha256:fcc33d8a4ce54405db084bc0dd7b0a2a9c56ed56778f91d79ef07cf2f9c5ca00"
                ]
            }
        },
        "1.18.10-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7dd50934e7650cf092d110c0e42d268060370f153a8ff3185ba86a308c33245f",
            "container_config": {
                "Hostname": "7dd50934e765",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:31.941337005Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:54.999052854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4bf66d4081da52e8b692fcff96aad84d3e68bda4f62e870e8f4803153c70e24c in / "
                },
                {
                    "created": "2023-01-11T02:34:55.608587219Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:05:46.913895834Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:05:53.202838137Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:06:14.113219128Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:03.545395441Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:04.308353632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:04.962829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:26.699237461Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:28.169181523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:29.312262747Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:30.824334333Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:31.941337005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:083aacb889b3fc7c21c3c680a541f50b467ec7d7de97a48e43122d9a34219788",
                    "sha256:b7392dc587490663dce94a350036df4060e5536400b1cf55d833e955bb36869b",
                    "sha256:d5ce45249ce15069660d16956c4b7dd4e74e8b6a7e88283ed30f45aa37b15af3",
                    "sha256:132e6b0c0edd2062fe1b4a1dc10196b7b442cbc3b8bcc0c183397cbb641ff950",
                    "sha256:a6da2a1a9d18fa228e93292251a2210c496e5aad0254e20c4935fd74007f58f6",
                    "sha256:aad741d414f1188ffab6eeec7c09c86abf2327863638d6548bc416cb4f248eb9",
                    "sha256:fcc33d8a4ce54405db084bc0dd7b0a2a9c56ed56778f91d79ef07cf2f9c5ca00"
                ]
            }
        },
        "1.18.10-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a2362208beaf3dab5c2093f69d5454e84baf4839a80ae58305cc879f423d78ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "392d21999c1ee2278a26a504498a7e6b2e2290f37907035b2bf6836b8e2f0416",
            "container_config": {
                "Hostname": "392d21999c1e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a2362208beaf3dab5c2093f69d5454e84baf4839a80ae58305cc879f423d78ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:05:38.706034128Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2023-01-11T04:00:52.744730373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7a8ada9998422200d8f422ba7967ecc0f2435715f4b69347f7c0eddf589b1dc5 in / "
                },
                {
                    "created": "2023-01-11T04:00:53.45068728Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T04:34:53.433271456Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T04:34:59.546819689Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T04:35:24.093348762Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:19.114613525Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:19.738894923Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:20.53485317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:34.348793569Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:05:35.533996486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:36.455298374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:37.759648155Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:05:38.706034128Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c8c686187ec85fea5a62caccb55157a860b4d158cb1746b8f2a72112c889f5d1",
                    "sha256:78546c6d7e4762634eb99e6ecbf9e817c5ba4d1e85310f7350d002e483c26da4",
                    "sha256:cff0e3d94d1fba828f1541bc34cd54462f19e2031d3638aa5e3f2f998049c836",
                    "sha256:6a0c30e5c6e4ca8d84a59a4cb955175f95cc62a69e59e4e8889b6aa14431f5d1",
                    "sha256:ce93be9d024ed099d209eadd2daf770a91386470748f81574299658e05f7be84",
                    "sha256:6a625dc78b41e13f048bb202b5155887719178971ddcc0571a29bd2c267e03c5",
                    "sha256:45476e8e39b3b81aba43bdf90fa8389aca7fad2cfa8f21d74b26d78015010657"
                ]
            },
            "variant": "v7"
        },
        "1.18.10-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:37f12598afe7e5cd043ae72c3f0e9b23aa0a0a8ed3e981a395fb3b6f8c267265",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d28f4c475bc2a0370bed3ba3a50cb1a22805dfb1552df29e4664885b341c9a9e",
            "container_config": {
                "Hostname": "d28f4c475bc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:37f12598afe7e5cd043ae72c3f0e9b23aa0a0a8ed3e981a395fb3b6f8c267265",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:06:04.930379998Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2023-01-11T02:57:43.283738825Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2b58305052bb953886c976022efeb324ef33bc6e55f9e15915e98490bd8fcb in / "
                },
                {
                    "created": "2023-01-11T02:57:43.761008797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:25:58.981059202Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:26:04.169396237Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:26:21.754151007Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:42.702552954Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:05:43.319737682Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:43.86114469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:00.533691785Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:06:01.699221342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:02.639436133Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:03.976902884Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:06:04.930379998Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9586e1383a50bb85bb682e52ad9fdce431f1879dd2f9c5627323f7b47b92a9bd",
                    "sha256:2246c544f6d9b5376ea1f89e172c762c8b3285e9206ec27b3c5332b486dc8e56",
                    "sha256:18488952d1ef01fbc8c27a5f75e299f7d58f37801e530a8537b6674101a46f80",
                    "sha256:23fddaecc2ccf3cc2d5e324128791320aeb0da760fc94fab413c18b20c2a73b7",
                    "sha256:3c112b14fe99abd9b093546f6ca208ccdcf19b8bdf4948bfd5f906c9c09306f4",
                    "sha256:a0af1f122acfe8e5d1bdc51f44eac2b7c06a2622729647969269d62ee1e7038d",
                    "sha256:3606fd0749a8c294572f961f94aaffcd2e00eb9e1c3172f209f3a744ad1c855e"
                ]
            },
            "variant": "v8"
        },
        "1.18.10-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18.10-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18.10-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18.10-1-fips-cbl-mariner1.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:92bc868a4f4d2fdcaa52b91f0842adeede723eae56ff32018f161aac3eb6bc9b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "864bb1ba355d124ae3a50e650b424781dbbeb0456d0120761bf65fc16f14b79d",
            "container_config": {
                "Hostname": "864bb1ba355d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:92bc868a4f4d2fdcaa52b91f0842adeede723eae56ff32018f161aac3eb6bc9b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:06:50.996185503Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2023-01-30T15:32:44.234783471Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:32:45.873338258Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:32:47.000963007Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:32:47.208393532Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:23.543017674Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:06:24.238327879Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:24.845003449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:45.79911379Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:06:47.149397939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:48.258126404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:49.867546199Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:06:50.996185503Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e54f9aaa5544b08516a8e1cd70d9f4f37b8db7ad96340ea3ad42133fd4ab8481",
                    "sha256:9eecc733f3cbc795214380465491445a0de39e3204b0be4dd9d201157d082a04",
                    "sha256:57d6be8fe5a4e93ac7bea9af6b312e24a672bf25eed9f487e19aadaf324d78cb",
                    "sha256:869ca70a80e0010f6e0d22cab6a6f8cd663eaff588e0c4cfd3c6c2ccb21b9995",
                    "sha256:70717f3720e1ab21e39643a77437b86f1d03eb61e064bfca14118a7800a66d34"
                ]
            }
        },
        "1.18.10-1-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2a8f146e1118468d558bdc273a09dc76fe211b3367e45d364a14f10a2fd8b29",
            "container_config": {
                "Hostname": "e2a8f146e111",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.236601209Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-02-01T21:29:08.402527949Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-02-01T21:29:13.317172696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T21:29:15.000863502Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-02-01T21:29:15.428594979Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:40.321264108Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:41.094452826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:41.608260427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:03.910331555Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.431563453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:06.577262206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.116283314Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.236601209Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:71080a118de881605e8a53fde3d9a857c7237bc2941343e7cfadbe772c50713c",
                    "sha256:778fe95ef71bdd8904c0945c1f986a059ca618a6c8809558a0562285686acbad",
                    "sha256:4b410f1700d7637dd81cfd7b19a28512ca643fcc83cd5cbe293cbfa8ba2f8f67",
                    "sha256:0cdb2d5851e09d752fc6397bac42b2581037a47ec8e8ebb1aec81131511fd8f4",
                    "sha256:6dfd5f0e6bbb87ac48c3f836d8a71932c03902cbee7fb188245e4ebc5c8458b2"
                ]
            }
        },
        "1.18.10-1-fips-cbl-mariner2.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2a8f146e1118468d558bdc273a09dc76fe211b3367e45d364a14f10a2fd8b29",
            "container_config": {
                "Hostname": "e2a8f146e111",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.236601209Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-02-01T21:29:08.402527949Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-02-01T21:29:13.317172696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T21:29:15.000863502Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-02-01T21:29:15.428594979Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:40.321264108Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:41.094452826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:41.608260427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:03.910331555Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.431563453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:06.577262206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.116283314Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.236601209Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:71080a118de881605e8a53fde3d9a857c7237bc2941343e7cfadbe772c50713c",
                    "sha256:778fe95ef71bdd8904c0945c1f986a059ca618a6c8809558a0562285686acbad",
                    "sha256:4b410f1700d7637dd81cfd7b19a28512ca643fcc83cd5cbe293cbfa8ba2f8f67",
                    "sha256:0cdb2d5851e09d752fc6397bac42b2581037a47ec8e8ebb1aec81131511fd8f4",
                    "sha256:6dfd5f0e6bbb87ac48c3f836d8a71932c03902cbee7fb188245e4ebc5c8458b2"
                ]
            }
        },
        "1.18.10-1-fips-cbl-mariner2.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2ddd2810932298fae40bc7c984d6a25795eec26399beb0cc51e675b1294f6035",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e7aeca2923b1c965c7a1674f44b77e9b5efdc9322f9f0dbd213aaffbf55d8321",
            "container_config": {
                "Hostname": "e7aeca2923b1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2ddd2810932298fae40bc7c984d6a25795eec26399beb0cc51e675b1294f6035",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:06:12.791672204Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2023-02-01T21:32:38.90889889Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-02-01T21:32:39.948119745Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T21:32:41.000563755Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-02-01T21:32:41.124850926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:56.692220467Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:05:57.260278115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:05:57.652336024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:08.673134349Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:06:09.720792128Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:10.513271472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:06:11.798599609Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:06:12.791672204Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38acf73475b2c0482740fe53947f30f57db89f307eef5a28baa914c94528ad23",
                    "sha256:7b6e3d7dde3ad903a4864d8e17f73630f124fb26473f787d2ffc1fd5c17ec146",
                    "sha256:37c82ad4abd926752fdf906471b6f0c86f374db1a4bef0a733a4d4327fc11965",
                    "sha256:49bf147192fc32f9e21b8b816b971790172c88d9f0401fd0041e219508323d36",
                    "sha256:31a4075416d6668f67b447b6d7592f8dd755bda66868121368cf51c3cb5886eb"
                ]
            }
        },
        "1.18.10-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:bcf667a50f3ce7d453b8d941a1059cb668db3d53f6ba9ded4881c3a24f55a58f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "45fc7af1e4273c891522ca486edd1ab85aff09e6131a176d7841bde644ae55fd",
            "container_config": {
                "Hostname": "45fc7af1e427",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:bcf667a50f3ce7d453b8d941a1059cb668db3d53f6ba9ded4881c3a24f55a58f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2023-02-01T23:08:24.5592969Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2023-01-07T05:17:01.6896405Z",
                    "created_by": "Apply image 10.0.17763.3887"
                },
                {
                    "created": "2023-02-01T23:07:14.539912Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2023-02-01T23:07:15.3679424Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2023-02-01T23:07:16.0692198Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2023-02-01T23:07:19.6717479Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2023-02-01T23:07:20.7319Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2023-02-01T23:07:21.6005694Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.10"
                },
                {
                    "created": "2023-02-01T23:08:20.065522Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:cd31279141bdeb1d3bc534d61b688158cec2e95a21b342be03772116db859cb2 in C:\\Program Files\\Go "
                },
                {
                    "created": "2023-02-01T23:08:23.6902153Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2023-02-01T23:08:24.5592969Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.3887",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50b6861b6f3e5c0c2cf3ef7b52c33435f776528abc6cba07928ffd3f5f39c065",
                    "sha256:d866eb45f44d9c54dd4e9cb8f9c18dae31bd95a6d7b7a11af621b27e6522561f",
                    "sha256:26db2f9e06471b4640824e170df9878fd8fabe15eb709f5b00a6a08a5dea1c60",
                    "sha256:f486efac6e4eaeedf6b8e1a75d6e9377ad98283421e9babf27ebd5cac5931dc5",
                    "sha256:f85df8ebc0a4bca73f5d83a8842bb6ed5d3dd1da1ab174435a4e1b82b001c6c8",
                    "sha256:95fd187a5f5dc807ac1e0a85976915d1aec88f5093995c31b47ae99b6077d864",
                    "sha256:ff3195b8e3f98465efbb06cf7f522fc3efd4d816212ef3777d5c14f986c4fcd0",
                    "sha256:c100a744c6b80cd41cb9a0af962c4d3c63ccec107eb108bfaa911a5b1c06336f",
                    "sha256:a733976f3ffd58bafe90cd674f2fe4d6461ceab670bda3b9eb3f22da2e36dcb9",
                    "sha256:a4741e58ee5643c55951dbf27116e697eeef7e25713ac1a4c2b1ddb626fc80fa"
                ]
            }
        },
        "1.18.10-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:177c7d1fabfaed7007838d4cc692ba0fba63fd2bccf69f6dbeed362215f544a9",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "be6c59141e3a66b1209565ba41071f130439a9c4699e64c77cd6f3fbdcce53ea",
            "container_config": {
                "Hostname": "be6c59141e3a",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:177c7d1fabfaed7007838d4cc692ba0fba63fd2bccf69f6dbeed362215f544a9",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2023-02-01T23:15:40.1985078Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2023-01-06T23:36:49.7303265Z",
                    "created_by": "Apply image 10.0.20348.1487"
                },
                {
                    "created": "2023-02-01T23:14:16.1246076Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2023-02-01T23:14:16.9646948Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2023-02-01T23:14:17.5468271Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2023-02-01T23:14:20.2432176Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2023-02-01T23:14:20.8644223Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2023-02-01T23:14:21.4275662Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.10"
                },
                {
                    "created": "2023-02-01T23:15:35.6157479Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:cd31279141bdeb1d3bc534d61b688158cec2e95a21b342be03772116db859cb2 in C:\\Program Files\\Go "
                },
                {
                    "created": "2023-02-01T23:15:39.3851936Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2023-02-01T23:15:40.1985078Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.1487",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:52bc99b0216f00755ce90018cc5dc88a9aca7a72ecdbcaf63a30b34db18c8025",
                    "sha256:09b3dba3917c52813fdbf8aa22268240fb8e8c23fe3842a19311676ba4664504",
                    "sha256:bc60980defe8cf1dd791014c42136b3af389d1ad3afc283019dd58b21d60c19d",
                    "sha256:0e5f8a8d33ff552f097c3888968cc71c4e67592a18dbf4edc99922fee27f9c1d",
                    "sha256:c0fee98a330ebacf32b50ffd647cc6a323225f5e8ada40d31e86dd85c24ea0ac",
                    "sha256:50ce40d72e05c21190c88d48ff93c621b79b0e88e779ded3acfca46ecdd8a324",
                    "sha256:7cde0a53fb0b70a5a100fa80c6d6e59431aea433dd26c80de6b809609463f661",
                    "sha256:a4ac6a4b55cc80584a0fd3ce6f5156b551a49a736759e6f7bdc8f98462abc7bd",
                    "sha256:d40bcc0d9f7d9f023c6beef48abf7a3e254beebd7ff35278a77556ae6158a7e2",
                    "sha256:090949050f24cd6c823b914e18255e5aa8c8e659320646e65093466b556b2e37"
                ]
            }
        },
        "1.18.10-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:e49b8b4b0641facbfe297e0179f548184c688af298cbfef76d34cda3a50ff570",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "12406ee785b38502ba3c55dd4c24d66bf6da3d6293b6a3574105a7f437cf109b",
            "container_config": {
                "Hostname": "12406ee785b3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:e49b8b4b0641facbfe297e0179f548184c688af298cbfef76d34cda3a50ff570",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2023-02-01T23:07:13.5304709Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2023-01-07T05:37:58.8961787Z",
                    "created_by": "Apply image 10.0.17763.3887"
                },
                {
                    "created": "2023-02-01T23:05:36.1838922Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2023-02-01T23:05:36.7761616Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2023-02-01T23:05:37.3584763Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2023-02-01T23:05:37.9159359Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2023-02-01T23:05:38.4733706Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2023-02-01T23:05:50.5861345Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2023-02-01T23:05:51.7895315Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2023-02-01T23:05:57.8084984Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2023-02-01T23:05:58.4204663Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.10"
                },
                {
                    "created": "2023-02-01T23:07:12.3150655Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '4875aac7b06b864d4c044e25b288c169a6eced58378f18223accf69edcb9fbb9'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2023-02-01T23:07:13.5304709Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.3887",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d37190a40e909425195ab8fcb1db81a2edb6000c4331e2c56afeccb5fb18a1c2",
                    "sha256:7c2f83c8a35cfc811e8d4c5f5bd6a4931ba7b2e129536dc80a6224f10abe7fd7",
                    "sha256:633e3749dd2ffff956112d6eaf22aef04c1fa69c9e6b4df32ba058f7ca763bfd",
                    "sha256:7766855c6908402cf1f058a0b20edb198eb1803e961ed7405a75ed311c389efe",
                    "sha256:3b788dc9aee82b656188ae405a1ccec2b0c3e11e27e23b09ad1d574674ba97bf",
                    "sha256:64bf5ba63352a6357426fb00e52114d672f7234c66ac10a96b33bc1a9e5a2d2b",
                    "sha256:f7fd4032f22dbc00b12212e68714e218c2f939e8560ab50d7e75018740280e6c",
                    "sha256:9281ab966ebfae9627dfdee3504b4f7d4502b8ab69a33cc5d521d3f6ae2fc542",
                    "sha256:1a101eb985356c9529c58e3d64bf0623c4c9954cb4271bd2d6ec8ce49b72be02",
                    "sha256:d3b0dd04fc0b0386f804dcda6a9cccaf0e11305fcbed5af62bf477e7e28e2dc3",
                    "sha256:a1b94f1779c5d7dc1dddaeb80f093791496252d8bd9b0e0973f845f2a66b988e",
                    "sha256:6c8f563fa4c61659cf993ea1e56bce0ed0d9775d958ee9af06393b1aa81f52f4"
                ]
            }
        },
        "1.18.10-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:dad6dbb94aff2b626c55b5471618817f2a78a2d344fbcc1fadb9457f16330ff7",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "f61d40609df68a93e908557c1f751550f1bcb086145fdb65406cee2bcb2d329d",
            "container_config": {
                "Hostname": "f61d40609df6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:dad6dbb94aff2b626c55b5471618817f2a78a2d344fbcc1fadb9457f16330ff7",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2023-02-01T23:40:15.2857849Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2023-01-07T02:35:03.5211523Z",
                    "created_by": "Apply image 10.0.14393.206"
                },
                {
                    "created": "2023-01-07T03:26:54.4609217Z",
                    "created_by": "Install update 10.0.14393.5648"
                },
                {
                    "created": "2023-02-01T23:33:34.072735Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2023-02-01T23:33:36.1165757Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2023-02-01T23:33:38.0795359Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2023-02-01T23:33:40.1628319Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2023-02-01T23:33:42.1744312Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2023-02-01T23:34:58.8815885Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2023-02-01T23:35:01.5535859Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2023-02-01T23:35:27.1106551Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2023-02-01T23:35:29.9165188Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.10"
                },
                {
                    "created": "2023-02-01T23:40:11.6412272Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '4875aac7b06b864d4c044e25b288c169a6eced58378f18223accf69edcb9fbb9'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2023-02-01T23:40:15.2857849Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5648",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:a52bf4a3203bba3cfc52703910d390841d8b2581db100c736c64f783acd501c0",
                    "sha256:e3b513f18994139011b80bc24c526d9cee07847691bb4530be4508ca50a071b9",
                    "sha256:62c9c7af3ae484e901bae49d0c0819f20a76960dec8c77b1dbd380730ef6a9c2",
                    "sha256:3c8f2b4329a854fc42daca07b9a70c051deecf30bffc14dcdc44009ec6b979b6",
                    "sha256:205226add87ec6a946dbbbaaddad1f643e217ced995bddfde0c343d689af3f07",
                    "sha256:4cb714481240d2c8807d9dde270114b48cbb4e6ccf34355719e5d8abe78d92ac",
                    "sha256:ac891a9547475739375a26d5819f465c8ad686befc15178bcb0a4c38807ed91f",
                    "sha256:e24cb7ac178466828975bd2b8354a827966cf7c9dc68b9f6e9825bbff8efd9ec",
                    "sha256:c4b773b7c2b70640a95bf01ab8b80c2f7bca342b58a10abccecdaefa2d3765da",
                    "sha256:e3117f964e54c6ad75d70a89b95e5c258d6bb235c25b01aa558e2cfde5109881",
                    "sha256:79ceae7319ea86ac8bf491772940d86df27cc1ef75486d575083253ba7cc3f35",
                    "sha256:91a8f0da76684a47101699aa3388e3fae71dccca2383550bcaef7d20df6d50e2"
                ]
            }
        },
        "1.18.10-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:a817376518c87a1c08784b72602f23707961f7f359d415b0d94e49c4df00b13f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "a6a6f381a32658412d540a1a8aa61f9e89c41dbdded3ee94002fe596d206ff99",
            "container_config": {
                "Hostname": "a6a6f381a326",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.10"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:a817376518c87a1c08784b72602f23707961f7f359d415b0d94e49c4df00b13f",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2023-02-01T23:14:14.9803933Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2023-01-06T23:47:40.8695639Z",
                    "created_by": "Apply image 10.0.20348.1487"
                },
                {
                    "created": "2023-02-01T23:11:48.7173812Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2023-02-01T23:11:49.4304508Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2023-02-01T23:11:50.151514Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2023-02-01T23:11:50.816708Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2023-02-01T23:11:51.4206565Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2023-02-01T23:12:06.4681366Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2023-02-01T23:12:07.2595427Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2023-02-01T23:12:14.4233935Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2023-02-01T23:12:15.0761692Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.10"
                },
                {
                    "created": "2023-02-01T23:14:13.7487243Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = '4875aac7b06b864d4c044e25b288c169a6eced58378f18223accf69edcb9fbb9'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2023-02-01T23:14:14.9803933Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.1487",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:00557f810b16f393ccd2589a194b3b492a67616dda81e32c5ddecb176426d503",
                    "sha256:a7a821a7b23011a365f5a0f6d03cb4ed89eacc155ac5a3def6e91e66b133a347",
                    "sha256:413660d979e53f7f0b3990c45ac4faf0b52bdeb6c75e5f5207a3f5b7c5372479",
                    "sha256:38f1202e98261fc2dda198a6d9493ac051b64e8ca961c036835f38b7348bda1e",
                    "sha256:e604975548a5bc9595d448461e3d91ffeed21619b9f58dcd7e539b4b87d7b3a9",
                    "sha256:79de8d423effb98b53a9cb923ce2147acc2a5257d2f94c549e1f52e27a8fe5b5",
                    "sha256:107b41a3d00e2bbfea55098ed036684d6a967b8fc18c01267f23fc7e2cdad602",
                    "sha256:f813388ca94e1c6fb2da2f32d82b4f61c82cadff8748a5116399b552b631b973",
                    "sha256:c126a160c8897cdcd9a8ae3396191ec6426431d539bee88ac3b93c5ab4019dfb",
                    "sha256:05979b51af12cc24da9ec42e0ab4bb49ca50470b580a342d75a7f4dd97819650",
                    "sha256:c232dfd7471e73cec61f883c0b8e13aa8265ef221f90dd0df84c6f6947cbde48",
                    "sha256:bb5c236f2975a71e863b8b24828a7e9d200bca65bfbe58b22ea5cf741220d71e"
                ]
            }
        },
        "1.18.10-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a00aed06e951d250f26c3cabe89c3cde9b9f9ff51f9f2658c05967d56d63d685",
            "container_config": {
                "Hostname": "a00aed06e951",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d5252e94dd4f5820a9ad329c3b19854b8a7a9954adb6448d2cf0f0f461dc6b6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:36.748543093Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:29.929322025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:917750a82b29f8f7f88a121017bd9dfeb0fbcc8f0697a009f08b6b58246eff4b in / "
                },
                {
                    "created": "2023-01-11T02:34:30.548954715Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:04:10.295483724Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:04:16.539497426Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:04:36.114352327Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:08.652240343Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:09.323882845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:09.922455873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:32.202976798Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:33.45808369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:34.473181997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:35.763083071Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:36.748543093Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a9099c3159f52e46aeed72420924377873529e3f36a80eddbfeb63860d036a04",
                    "sha256:a463dbda46648cc9a3af3f009b2c73035cb068639edb24f1fb5a792b057c6aa8",
                    "sha256:49b333f7bad4d30043c926b2e1270833f419ee03da204f91e09bd7939c68032e",
                    "sha256:9f4f964da72795eddb83aa809dd2b336cb37b93238a18a2e230b0adec951d1a7",
                    "sha256:2d8991cbbe15db42ddfefb968a85aa126833fc04a9e28cb3fdf96a05a200f911",
                    "sha256:fac3878488d6758fe9173faf885d32c0e13512c389775cbc43a4b7bd360e5e7c",
                    "sha256:ae05ff1facf950692dc0ffb4fca0010ed8f0907235ff723359a58615893f4086"
                ]
            }
        },
        "1.18.10-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7dd50934e7650cf092d110c0e42d268060370f153a8ff3185ba86a308c33245f",
            "container_config": {
                "Hostname": "7dd50934e765",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7db7e4d804ebf20a0c346faeaeb25c005417fb5672b4cfa20621a9bc685009af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:03:31.941337005Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-11T02:34:54.999052854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4bf66d4081da52e8b692fcff96aad84d3e68bda4f62e870e8f4803153c70e24c in / "
                },
                {
                    "created": "2023-01-11T02:34:55.608587219Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-11T03:05:46.913895834Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-11T03:05:53.202838137Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-01-11T03:06:14.113219128Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:03.545395441Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-01T23:03:04.308353632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:04.962829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:26.699237461Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-amd64.tar.gz'; \t\t\tsha256='54e52c08ebbb8b4eb9c8c1ac8cbc0627e52bc036c59f1961bd2b00e52be75fa5'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-armv6l.tar.gz'; \t\t\tsha256='1f238f3ff8fa48b320e1d2ebd864ab09fabd3715153eaada48d92ae0f39b147a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20230110.2/go.20230110.2.linux-arm64.tar.gz'; \t\t\tsha256='3f3c7d5e7c8ea49231074cf31e97750e0fc6dfd3b91e2ac05ccca9ca167e0fa2'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:03:28.169181523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:29.312262747Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:30.824334333Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:03:31.941337005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:083aacb889b3fc7c21c3c680a541f50b467ec7d7de97a48e43122d9a34219788",
                    "sha256:b7392dc587490663dce94a350036df4060e5536400b1cf55d833e955bb36869b",
                    "sha256:d5ce45249ce15069660d16956c4b7dd4e74e8b6a7e88283ed30f45aa37b15af3",
                    "sha256:132e6b0c0edd2062fe1b4a1dc10196b7b442cbc3b8bcc0c183397cbb641ff950",
                    "sha256:a6da2a1a9d18fa228e93292251a2210c496e5aad0254e20c4935fd74007f58f6",
                    "sha256:aad741d414f1188ffab6eeec7c09c86abf2327863638d6548bc416cb4f248eb9",
                    "sha256:fcc33d8a4ce54405db084bc0dd7b0a2a9c56ed56778f91d79ef07cf2f9c5ca00"
                ]
            }
        },
        "1.18.10-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18.10-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6dcaf76fda64b13f04d177e89cba4e5f0e94b0e16f57142101c35566da971474",
            "container_config": {
                "Hostname": "6dcaf76fda64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3c132dfedb8534161d58f44b59da8fb22e195022737f8acecae7d27e7a1a97d9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.919211368Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-01-30T15:28:05.784722811Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-01-30T15:28:10.734108206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T15:28:12.000228429Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-01-30T15:28:12.384771793Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:42.522968993Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:43.30609033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:43.891720695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:04.305420591Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.843501235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:07.006317915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.7274665Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.919211368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc7d4390d641a8c520027a50609210670db33b3cac510f48a3be27cd93db7be3",
                    "sha256:5ff8660f7a15e0e4bce1cfa5487644fbacebbf11148ea97f601bd1cbaf610f51",
                    "sha256:bfe39a33e5651913eb6d83458e41d4dc65662080a7055781a567a8e9f89e8d14",
                    "sha256:edd5efaa70ddd56a0f9351aaecb2cb6c014f940c3a6ef2e4cc11d49f199f9d72",
                    "sha256:f06c0749ae08a617ad840ac25409a242d72535eaaa991ae45577fb19020b6f25"
                ]
            }
        },
        "1.18.10-fips-cbl-mariner2.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2a8f146e1118468d558bdc273a09dc76fe211b3367e45d364a14f10a2fd8b29",
            "container_config": {
                "Hostname": "e2a8f146e111",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ca99f9a4facad5a5953e5790c5803d238f68fa4d5f06a0d4e09d1e0e9b694c7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-01T23:04:09.236601209Z",
            "docker_version": "20.10.22+azure-1",
            "history": [
                {
                    "created": "2023-02-01T21:29:08.402527949Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2023-02-01T21:29:13.317172696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG EULA=@EULA_FILE@",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T21:29:15.000863502Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:2c9b9395238ee55ff215d908ee6cf02975b45c4e6c97b276333bcd60ee705729 in . "
                },
                {
                    "created": "2023-02-01T21:29:15.428594979Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:40.321264108Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tiana-etc \t\tkernel-headers \t\ttar \t\twget \t\tca-certificates \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2023-02-01T23:03:41.094452826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:03:41.608260427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.10",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:03.910331555Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-amd64.tar.gz'; \t\t\tsha256='456e89bc329d8d02db5df564052ba731481c1e0c95e0f28e0e71c0d43460c758'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20230110.6/go.20230110.6.linux-arm64.tar.gz'; \t\t\tsha256='20887a22c854bd14a71936a27d8e78c52e17d1c81a55744de45667dad3f750a3'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-02-01T23:04:05.431563453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:06.577262206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T23:04:08.116283314Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-02-01T23:04:09.236601209Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:71080a118de881605e8a53fde3d9a857c7237bc2941343e7cfadbe772c50713c",
                    "sha256:778fe95ef71bdd8904c0945c1f986a059ca618a6c8809558a0562285686acbad",
                    "sha256:4b410f1700d7637dd81cfd7b19a28512ca643fcc83cd5cbe293cbfa8ba2f8f67",
                    "sha256:0cdb2d5851e09d752fc6397bac42b2581037a47ec8e8ebb1aec81131511fd8f4",
                    "sha256:6dfd5f0e6bbb87ac48c3f836d8a71932c03902cbee7fb188245e4ebc5c8458b2"
                ]
            }
        },
        "1.18.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d483f82b0fa6cd5ae7ba43cc8a93bac7878c0094f6159ca6b40d149981369e4",
            "container_config": {
                "Hostname": "9d483f82b0fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:34.152714802Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.098064021Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.966718646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:50.730169979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:28.351711111Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:29.927913475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:31.197993519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:32.878559449Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:34.152714802Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:3e604cf1bf64b221189311dfc97c2b26057ba5ba7c46942c20b64c4b20ec502d",
                    "sha256:82203f5724a2931421b980ce4b937baf1886c45ca0961dfc8033a4d1fdfc7c27",
                    "sha256:ea29340a4a852b2644eec5fbe2c32ade01494a64c2538088922fdd4d29dd2ccf"
                ]
            }
        },
        "1.18.2-1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d483f82b0fa6cd5ae7ba43cc8a93bac7878c0094f6159ca6b40d149981369e4",
            "container_config": {
                "Hostname": "9d483f82b0fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:34.152714802Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.098064021Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.966718646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:50.730169979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:28.351711111Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:29.927913475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:31.197993519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:32.878559449Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:34.152714802Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:3e604cf1bf64b221189311dfc97c2b26057ba5ba7c46942c20b64c4b20ec502d",
                    "sha256:82203f5724a2931421b980ce4b937baf1886c45ca0961dfc8033a4d1fdfc7c27",
                    "sha256:ea29340a4a852b2644eec5fbe2c32ade01494a64c2538088922fdd4d29dd2ccf"
                ]
            }
        },
        "1.18.2-1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d483f82b0fa6cd5ae7ba43cc8a93bac7878c0094f6159ca6b40d149981369e4",
            "container_config": {
                "Hostname": "9d483f82b0fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:34.152714802Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.098064021Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.966718646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:50.730169979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:28.351711111Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:29.927913475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:31.197993519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:32.878559449Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:34.152714802Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:3e604cf1bf64b221189311dfc97c2b26057ba5ba7c46942c20b64c4b20ec502d",
                    "sha256:82203f5724a2931421b980ce4b937baf1886c45ca0961dfc8033a4d1fdfc7c27",
                    "sha256:ea29340a4a852b2644eec5fbe2c32ade01494a64c2538088922fdd4d29dd2ccf"
                ]
            }
        },
        "1.18.2-1-bullseye-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d483f82b0fa6cd5ae7ba43cc8a93bac7878c0094f6159ca6b40d149981369e4",
            "container_config": {
                "Hostname": "9d483f82b0fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:34.152714802Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.098064021Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.966718646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:50.730169979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:28.351711111Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:29.927913475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:31.197993519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:32.878559449Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:34.152714802Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:3e604cf1bf64b221189311dfc97c2b26057ba5ba7c46942c20b64c4b20ec502d",
                    "sha256:82203f5724a2931421b980ce4b937baf1886c45ca0961dfc8033a4d1fdfc7c27",
                    "sha256:ea29340a4a852b2644eec5fbe2c32ade01494a64c2538088922fdd4d29dd2ccf"
                ]
            }
        },
        "1.18.2-1-bullseye-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:617d8d6738aeff761f044ac6892ced8ed440efd6b1ec9aa25c56dce384f34331",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93d375fe3800ccf746d16aa6b8a65123c437185bd4c544c19c5406d8718005b2",
            "container_config": {
                "Hostname": "93d375fe3800",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:617d8d6738aeff761f044ac6892ced8ed440efd6b1ec9aa25c56dce384f34331",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:11.450909736Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T01:48:30.377871517Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d6545064ea0f75166d59e4d4a2df1e41a3477ae468e558e31f29857336978c0e in / "
                },
                {
                    "created": "2022-05-11T01:48:31.280990215Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T03:21:45.636994835Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T03:21:59.647851327Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T03:22:51.954975669Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:00.11793869Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:15.68663144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:22.14734146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:42.21778887Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:39:00.303195134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:05.640773999Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:09.435785405Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:11.450909736Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4e6f331ea0f9e2526d00cb14cca9deb5634b404c564aefaf6cf031bcb631832b",
                    "sha256:c32c0327c8a8dce69b03155c50e10a2bf5e1c2e7eeeb5653ae3cc849638cbc8b",
                    "sha256:93cf61e290e26ff89af3910bf302369c88264a3bba1a6f081e1a92782e637ea5",
                    "sha256:c78e48a3cec0e136cca08b8ede02bbe1b476ae53be4d08c0cd7a4f20286048e8",
                    "sha256:d22c60be28bc2f6587d64921ca7aa050bedf4153f88a1c915823a03c587e1b97",
                    "sha256:cfdfee773779880d2e7e3c64f7f49f09cd4515f9882599ad880ef678e10484cd",
                    "sha256:21e3c7de200598769f7173ff6b6d31342c4ce553c2a7eeafb7604c51d5aba346"
                ]
            },
            "variant": "v7"
        },
        "1.18.2-1-bullseye-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ec83a109e5fba9fd14a697135389dc99f235b05e1a054c5b0f8e687b33ed6e0d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5cdc99d201afaef576f691e5fedcebf4d22d56218986628817cab2d7d25b742a",
            "container_config": {
                "Hostname": "5cdc99d201af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ec83a109e5fba9fd14a697135389dc99f235b05e1a054c5b0f8e687b33ed6e0d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:26.070150083Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T00:46:44.101445948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:239aa42118877a929b2fbfc0d5793fee7815289280affa5286de2459385c0679 in / "
                },
                {
                    "created": "2022-05-11T00:46:44.82281499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:25:24.029069155Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:25:29.327490075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:25:48.037534449Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:36.432878303Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:44.004626681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:52.867916544Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:13.238522023Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:39:17.801750533Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:20.254182523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:22.883785876Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:26.070150083Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a57faaaa949a5ff3624ed1f1ff84a9b56c54bcf7fd9032476beb175005c2767",
                    "sha256:af9f18963b2c40704f106688aa7c396fbc3fc411df5d3c4334695f9bea47791a",
                    "sha256:54f9258101c9f8e308c1cd30d2c08a120bcd19740f7afba2a38f80801e2e1b1d",
                    "sha256:7584b38b3583c97651dc67f4cbd74b4050d02f3b476128abdc5fd6fbb617de6a",
                    "sha256:f4ce1a30ceaaf9d17497efc788f7f432018b4a8b4efd4d1c1a2e3bac1035ddaa",
                    "sha256:206db6769eed30d74cb00d4091975c9a03968a1d92116dcea07576381b11ce17",
                    "sha256:c41d02a3db2223656f9d2ab0e686606f572eabe2a3bc7a2cf46f11ad41bee460"
                ]
            },
            "variant": "v8"
        },
        "1.18.2-1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:16c2c66042af92a49782ea4d92724546ea722fef3f94b821ab099229e0b72fbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac11ba6cfa82809d9c8235039650ca9c395632427390a09a6b879d6794840ca",
            "container_config": {
                "Hostname": "2ac11ba6cfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:16c2c66042af92a49782ea4d92724546ea722fef3f94b821ab099229e0b72fbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:26.54026622Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:26.329235418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54d60144d251caa916ff50606bc2364131d47d6b10ed83d08c81c647ab56cc40 in / "
                },
                {
                    "created": "2022-05-11T01:20:26.817731753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:50:23.11692482Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:50:28.365870038Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:50:43.421251262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:00.353168421Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:01.084742825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:01.72869378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:21.505361415Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:22.924481342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.015025044Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:25.448144193Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:26.54026622Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f70b727d55c3bf3e37ab16d9d40bc5f5dd209f01a5514af0146547d3f3eaca60",
                    "sha256:7ae08394a32ad3980fc0863f492f8dc720c5169d94c10ad4fdfefc76b68bf23e",
                    "sha256:58b24c6222e3b3d7fdfebbffbce6c4eb14de8abf92a99710ee5cf2dc76e3204c",
                    "sha256:74f08751ac3feff0f5e89a91b43ec8a6949c90db328bb788695743cc20e0594e",
                    "sha256:0806dec31e2edfcca1d0f41649de4adc8e52af8e65c375afc6823c38cd669e12",
                    "sha256:a3590d1fce8d93aac63cfab0e6e881b77146b18944787948a0696f74bc359e3b",
                    "sha256:9b9373f39652b8200b6cd4ab3918c8c6c493df953ba1a2f406b5c31abc798a63"
                ]
            }
        },
        "1.18.2-1-buster-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:16c2c66042af92a49782ea4d92724546ea722fef3f94b821ab099229e0b72fbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac11ba6cfa82809d9c8235039650ca9c395632427390a09a6b879d6794840ca",
            "container_config": {
                "Hostname": "2ac11ba6cfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:16c2c66042af92a49782ea4d92724546ea722fef3f94b821ab099229e0b72fbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:26.54026622Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:26.329235418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54d60144d251caa916ff50606bc2364131d47d6b10ed83d08c81c647ab56cc40 in / "
                },
                {
                    "created": "2022-05-11T01:20:26.817731753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:50:23.11692482Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:50:28.365870038Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:50:43.421251262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:00.353168421Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:01.084742825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:01.72869378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:21.505361415Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:22.924481342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.015025044Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:25.448144193Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:26.54026622Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f70b727d55c3bf3e37ab16d9d40bc5f5dd209f01a5514af0146547d3f3eaca60",
                    "sha256:7ae08394a32ad3980fc0863f492f8dc720c5169d94c10ad4fdfefc76b68bf23e",
                    "sha256:58b24c6222e3b3d7fdfebbffbce6c4eb14de8abf92a99710ee5cf2dc76e3204c",
                    "sha256:74f08751ac3feff0f5e89a91b43ec8a6949c90db328bb788695743cc20e0594e",
                    "sha256:0806dec31e2edfcca1d0f41649de4adc8e52af8e65c375afc6823c38cd669e12",
                    "sha256:a3590d1fce8d93aac63cfab0e6e881b77146b18944787948a0696f74bc359e3b",
                    "sha256:9b9373f39652b8200b6cd4ab3918c8c6c493df953ba1a2f406b5c31abc798a63"
                ]
            }
        },
        "1.18.2-1-buster-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b4dd5037a7eba9591d2d3e190bed81a18157b812cbe9e15d327d8853c10d2abf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9b1db4b6287379ecdfc244849d6762d55d404e1c8e0d59d28a725cdce887d3df",
            "container_config": {
                "Hostname": "9b1db4b62873",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b4dd5037a7eba9591d2d3e190bed81a18157b812cbe9e15d327d8853c10d2abf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:38:55.539962906Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T01:49:37.505506928Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c75d7f24328b3f84cd700813a0a8ff5af16399f4475d24da9b0a859d584614c in / "
                },
                {
                    "created": "2022-05-11T01:49:38.657365734Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T03:25:27.489264794Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T03:25:40.87973511Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T03:26:30.078495227Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:37:40.335393288Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:06.554885277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:08.295752818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:28.925671079Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:37.739590794Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:43.590175146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:53.641439635Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:38:55.539962906Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4f4037da932d1ae2a0c18ed4725bcbc47862ef617fe560a1dfc49ec4c2c8c73b",
                    "sha256:de070f6df096e58a632e62a2c52b975fd5b9191ca2b6c8aba8ebd218579e4d0d",
                    "sha256:1c0b1d482bfb414768729df610127dae9ba6ef2906ba9995c0a786e7072714cb",
                    "sha256:c01b06d07a2296d0cad7d9f2ca97055072044d8be34cf2666996bffa08af637c",
                    "sha256:ac354aa3237b35acaad880fff319b761a3617b9b9d535ed1329ee0363a0d23e9",
                    "sha256:5e3a50755444a26e4fb073549944b6827fdf0d295abe7939a4973864699270de",
                    "sha256:4141f44f842ec9623b0ac130b72539d03ec519a92c436f4da778b24ca56ac957"
                ]
            },
            "variant": "v7"
        },
        "1.18.2-1-buster-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:dbdbf4e5dbfdb0434a1afc55d582e8c7d5a9d80bb0454921eb33ac3913afff91",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2180389b7d58369b39ad5df9f9515c5f7e30701db7e9dce9023c8a56c03f4eca",
            "container_config": {
                "Hostname": "2180389b7d58",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dbdbf4e5dbfdb0434a1afc55d582e8c7d5a9d80bb0454921eb33ac3913afff91",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:11.351121201Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T00:47:11.06561516Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5389b77733b44ebc41850baff3ebfc491726af264a745f108d5f16076a0f04ab in / "
                },
                {
                    "created": "2022-05-11T00:47:11.726718564Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:26:53.336816611Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:26:58.881063614Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:27:18.43982007Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:17.27665412Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:25.063708278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:27.154891903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:56.743100511Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:39:00.90581498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:03.751321941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:08.496087291Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:11.351121201Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eef45e999bd2c0bd45201c404c7e1aeec5ac544c347aec5df6b827555a1ae9a9",
                    "sha256:e02667822538e9da3764196b2ab6a272f697166c37cf7cb720ecab0a94d1a1d2",
                    "sha256:cbd6d1248e0ae5d72aa5c7753618418a0f7a9c10e0c9c0b0ec6eb7bf1b887357",
                    "sha256:3e5c438ddcb14a2aff8c8a549b976c90687a48dad0ed2fbc37568acf6ddbddb4",
                    "sha256:e6fce8defeaa486f4d24d7f465f2ceb2795ebd894967aee942753635fc8fb46d",
                    "sha256:8d1e597c7cb0e980deb8240d3bcb00fb34c1dcc9ba477bae231b7062a74f7990",
                    "sha256:527626f5b50f9de017e81a8aece329a6a4019d3dbb80e52895d3297409a10c45"
                ]
            },
            "variant": "v8"
        },
        "1.18.2-1-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a33bdd27c3042e4cc33b87727b52ac4c25ba7829555b6e67ce3326df6536a008",
            "container_config": {
                "Hostname": "a33bdd27c304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:33.246239051Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:06.242613972Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:06.876977755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:07.496313727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:28.678963609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-amd64.tar.gz'; \t\t\tsha256='eb92d491af5b718d6161c5a86b79473770647c3d0db1f0866418842d0dadaa93'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-arm64.tar.gz'; \t\t\tsha256='e0256e419dc9e2a3be28fe0176772056e7531655db4a466826a388808df16c35'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:29.914075949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:30.942677285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.29661558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:33.246239051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:39c6d403037c823fd8d91ee7021de5141322bc5498893f60407615249a6e3eea",
                    "sha256:6c523a290f4f4a3483faffa5b71f1eec299496097fbb7cc66d189377023fecdc",
                    "sha256:d65cb2ef67932283569346dead196cca9b55134d41ae0b8fc262e6ced151179d"
                ]
            }
        },
        "1.18.2-1-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a33bdd27c3042e4cc33b87727b52ac4c25ba7829555b6e67ce3326df6536a008",
            "container_config": {
                "Hostname": "a33bdd27c304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:33.246239051Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:06.242613972Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:06.876977755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:07.496313727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:28.678963609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-amd64.tar.gz'; \t\t\tsha256='eb92d491af5b718d6161c5a86b79473770647c3d0db1f0866418842d0dadaa93'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-arm64.tar.gz'; \t\t\tsha256='e0256e419dc9e2a3be28fe0176772056e7531655db4a466826a388808df16c35'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:29.914075949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:30.942677285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.29661558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:33.246239051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:39c6d403037c823fd8d91ee7021de5141322bc5498893f60407615249a6e3eea",
                    "sha256:6c523a290f4f4a3483faffa5b71f1eec299496097fbb7cc66d189377023fecdc",
                    "sha256:d65cb2ef67932283569346dead196cca9b55134d41ae0b8fc262e6ced151179d"
                ]
            }
        },
        "1.18.2-1-fips-cbl-mariner1.0-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a33bdd27c3042e4cc33b87727b52ac4c25ba7829555b6e67ce3326df6536a008",
            "container_config": {
                "Hostname": "a33bdd27c304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:33.246239051Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:06.242613972Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:06.876977755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:07.496313727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:28.678963609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-amd64.tar.gz'; \t\t\tsha256='eb92d491af5b718d6161c5a86b79473770647c3d0db1f0866418842d0dadaa93'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-arm64.tar.gz'; \t\t\tsha256='e0256e419dc9e2a3be28fe0176772056e7531655db4a466826a388808df16c35'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:29.914075949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:30.942677285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.29661558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:33.246239051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:39c6d403037c823fd8d91ee7021de5141322bc5498893f60407615249a6e3eea",
                    "sha256:6c523a290f4f4a3483faffa5b71f1eec299496097fbb7cc66d189377023fecdc",
                    "sha256:d65cb2ef67932283569346dead196cca9b55134d41ae0b8fc262e6ced151179d"
                ]
            }
        },
        "1.18.2-1-fips-cbl-mariner1.0-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:1e9614358124ba60d939d1dae8966c81b502b6325f9dcb0b8cd0a93baf0cbd3b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "22c967630aac5c321c75b1d139b919688738b500506b854293c86bab7ab20d1d",
            "container_config": {
                "Hostname": "22c967630aac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1e9614358124ba60d939d1dae8966c81b502b6325f9dcb0b8cd0a93baf0cbd3b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:06.137744331Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-03-19T16:55:40.140658887Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:37:59.790663821Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:38:08.364737169Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:09.523703411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:38.366926541Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-amd64.tar.gz'; \t\t\tsha256='eb92d491af5b718d6161c5a86b79473770647c3d0db1f0866418842d0dadaa93'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-arm64.tar.gz'; \t\t\tsha256='e0256e419dc9e2a3be28fe0176772056e7531655db4a466826a388808df16c35'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:55.426328613Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:00.423884571Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:04.058346808Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:06.137744331Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0bcd07420e1a5450706e47129cec4ef4d8b84ca7f18a6d2a624b0f85c8352c59",
                    "sha256:54a7961699f241eaee02a4a058d3fab7895084f6151b604e4ca40e838707da06",
                    "sha256:d32486ab43e10ca36c31f24723c1820e06622d58df4186f02bf71831feb85b64",
                    "sha256:e81034410d2073ba54e3365a53b48f5b2054715d5e076e36825aea0b46f9b9bd"
                ]
            }
        },
        "1.18.2-1-nanoserver-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:1087823fa512b101ade71d37681d79c0ce5c318f72f1c254a88f968d6872008c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "a960e39d43ab2305506e2220b125204fc0f51bf54a0bd9049d382100d1c5a2fb",
            "container_config": {
                "Hostname": "a960e39d43ab",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:1087823fa512b101ade71d37681d79c0ce5c318f72f1c254a88f968d6872008c",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-05-11T17:45:05.1665314Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T16:42:43.3779926Z",
                    "created_by": "Apply image 10.0.17763.2928"
                },
                {
                    "created": "2022-05-11T17:43:57.9489079Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-05-11T17:43:58.8519268Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:44:00.0238317Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-05-11T17:44:02.4515619Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-05-11T17:44:03.5334765Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-05-11T17:44:04.5569091Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.2"
                },
                {
                    "created": "2022-05-11T17:45:01.4581911Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:dc532f086edf49f31e37bc563e4138d736f6a5360c0e125a1b836ec749bfc758 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-05-11T17:45:04.018318Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-05-11T17:45:05.1665314Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2928",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a0d44e5352dcb84bca48b6ee3d30a9ec91b5e6eb6793747e06d2454d360a9338",
                    "sha256:ff2e9d31f5698824187e810ee34bce36d5a5e67fd60ceb21201f339160c99431",
                    "sha256:1ac40bba90cc72325e193b938bbd00c53345ebdf42059b1ba98882e9046844b6",
                    "sha256:446caee41046baafc9e17db5cd229eaa36f6f75f7fa425473759988d20ef5eb6",
                    "sha256:b249c10a25b8513c06a00d5b2f4e4c7072f5928efbfa13fdf2f626943e362eed",
                    "sha256:e0085f73718b8480fab4d13c4b245b9b0af6b75fa909caa6c9da079287a48a7e",
                    "sha256:9b6ed775f512035fd028142788f760c92e53956e13b0ba4504ff48b5de28dd40",
                    "sha256:cacda23bd9ac96cab4f42b1814fd3f8be3039c4a3aafb1532b86184cbb9ea563",
                    "sha256:2d0fbfc8f6a563269f071e89754c5542102ac49113d7046f253bf192b5418e0c",
                    "sha256:680385b8f2a7890a0ef2628dd1140d0870f2b770e227f0abc349867097a23f42"
                ]
            }
        },
        "1.18.2-1-nanoserver-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:5ea79367ab8b09af5417612058184712b9645f1f52016fccbbedd1dfd2b4c7dd",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "container": "5ca5f8979a93c1b23e70bbc5685d8a10e2a8c935886c010b558bd2328a5d8e9a",
            "container_config": {
                "Hostname": "5ca5f8979a93",
                "Domainname": "",
                "User": "ContainerUser",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "cmd",
                    "/S",
                    "/C",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:5ea79367ab8b09af5417612058184712b9645f1f52016fccbbedd1dfd2b4c7dd",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "cmd",
                    "/S",
                    "/C"
                ]
            },
            "created": "2022-05-11T17:55:12.2833284Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T02:37:33.5903831Z",
                    "created_by": "Apply image 10.0.20348.707"
                },
                {
                    "created": "2022-05-11T17:53:50.2516441Z",
                    "created_by": "cmd /S /C #(nop)  SHELL [cmd /S /C]"
                },
                {
                    "created": "2022-05-11T17:53:50.5664407Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:53:51.0668218Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerAdministrator"
                },
                {
                    "created": "2022-05-11T17:53:54.7912707Z",
                    "created_by": "cmd /S /C setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\""
                },
                {
                    "created": "2022-05-11T17:53:55.3565771Z",
                    "created_by": "cmd /S /C #(nop)  USER ContainerUser"
                },
                {
                    "created": "2022-05-11T17:53:55.6693401Z",
                    "created_by": "cmd /S /C #(nop)  ENV GOLANG_VERSION=1.18.2"
                },
                {
                    "created": "2022-05-11T17:55:07.1652779Z",
                    "created_by": "cmd /S /C #(nop) COPY dir:dc532f086edf49f31e37bc563e4138d736f6a5360c0e125a1b836ec749bfc758 in C:\\Program Files\\Go "
                },
                {
                    "created": "2022-05-11T17:55:11.83173Z",
                    "created_by": "cmd /S /C go version"
                },
                {
                    "created": "2022-05-11T17:55:12.2833284Z",
                    "created_by": "cmd /S /C #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.707",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:26085ddda8400952278f21eda4de3abb08e6e2b02afaddd77d1dab2b2a3f7c70",
                    "sha256:221023ee121539742948e5d1d6b8fb6a4c9c504c5746442a2f92bef768036bc2",
                    "sha256:c86c314d66736313c9a5cdb28c0b4452db86f03781b6a3b94cf6697eba428407",
                    "sha256:2a61721dc7352e4032e4c4779d2fbd023158680480ace3b6f286e1c8ab27ed48",
                    "sha256:6a6558970532e6315707fb4d313e86898390c0da882bae5708c6d578d1fa39c9",
                    "sha256:4eac29233bd08ce386c0d63d91de7422530bc2a4af9ab42dd3ff7a8574c25baa",
                    "sha256:f40703b3d2fd68782d951d0a73ce06b91a406cc0c6b6854d0c5fefa606b4f48d",
                    "sha256:340e20b4731c618ce13c0931d4d65f08f85f3393d9f42db3c45e511e48368a0b",
                    "sha256:a5e217ddb67d311846e0154144ecd6d0ef2f59cdcee97abc86288f067465a65d",
                    "sha256:425b10c33f4e72cce5c5d34072eb4ef38900c4675432bb97e0da77cb7c16c641"
                ]
            }
        },
        "1.18.2-1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d2fa5dd89330ffa89be118b4d1918fb3016b14cb3766e1ae6a24922e3e7d5c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80bbd38e83eb45d62c7d28daa62932d9a10ed1befc7768584b3d3ea088736622",
            "container_config": {
                "Hostname": "80bbd38e83eb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d2fa5dd89330ffa89be118b4d1918fb3016b14cb3766e1ae6a24922e3e7d5c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:19.697758889Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:22:05.01919771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00f57642edc8479d50e6470a3509ad679eb9353761912deade33251fb3d9daa8 in / "
                },
                {
                    "created": "2022-05-11T01:22:05.440894091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:53:15.002335304Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:53:19.561223483Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:53:39.189232047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:49.204087806Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:50.063053449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:34:50.813642967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:13.79033581Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:15.379864213Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:16.682012874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:18.39445532Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:19.697758889Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:05c492a3d5e99724a697838cea48a423dace2099791aae4c2d7cdc0f61222107",
                    "sha256:6c64c31a187c2b4d67a1f0055f46ef95f65f7cf85ceedf20c59abecd77c8293f",
                    "sha256:5f9553657987b7f7aa1f8797dd5ee18ad45d9f758d2e0420929235ff33a32a08",
                    "sha256:329c9d2dc466b49078e9c71bdc5925632ba8eebcb42bd0439e8bc5e84f238d95",
                    "sha256:489aacc5da1c174f0218d011949134e68fa28504d723df9ff1a9c59f6f1f3441",
                    "sha256:181183b40ed94564a81d1d65fdf0dbdc095c127edbf1ed2f5c1678e1d70e64ef",
                    "sha256:d7f1c400bcb0e0b51896cca4977a92517e19cc717ebc70d7e6c9e235e040e81c"
                ]
            }
        },
        "1.18.2-1-stretch-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d2fa5dd89330ffa89be118b4d1918fb3016b14cb3766e1ae6a24922e3e7d5c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80bbd38e83eb45d62c7d28daa62932d9a10ed1befc7768584b3d3ea088736622",
            "container_config": {
                "Hostname": "80bbd38e83eb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d2fa5dd89330ffa89be118b4d1918fb3016b14cb3766e1ae6a24922e3e7d5c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:19.697758889Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:22:05.01919771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00f57642edc8479d50e6470a3509ad679eb9353761912deade33251fb3d9daa8 in / "
                },
                {
                    "created": "2022-05-11T01:22:05.440894091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:53:15.002335304Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:53:19.561223483Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:53:39.189232047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:49.204087806Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:34:50.063053449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:34:50.813642967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:13.79033581Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:15.379864213Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:16.682012874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:18.39445532Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:19.697758889Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:05c492a3d5e99724a697838cea48a423dace2099791aae4c2d7cdc0f61222107",
                    "sha256:6c64c31a187c2b4d67a1f0055f46ef95f65f7cf85ceedf20c59abecd77c8293f",
                    "sha256:5f9553657987b7f7aa1f8797dd5ee18ad45d9f758d2e0420929235ff33a32a08",
                    "sha256:329c9d2dc466b49078e9c71bdc5925632ba8eebcb42bd0439e8bc5e84f238d95",
                    "sha256:489aacc5da1c174f0218d011949134e68fa28504d723df9ff1a9c59f6f1f3441",
                    "sha256:181183b40ed94564a81d1d65fdf0dbdc095c127edbf1ed2f5c1678e1d70e64ef",
                    "sha256:d7f1c400bcb0e0b51896cca4977a92517e19cc717ebc70d7e6c9e235e040e81c"
                ]
            }
        },
        "1.18.2-1-stretch-arm32v7": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:334184167133eea9b5a934bf7cd81069176d1547e8a294d69aa4d36bd690a8ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4095d117421dfc03065a4f86e465f6ebf2c30e6bb8228b4e9225a62d6c89db7",
            "container_config": {
                "Hostname": "f4095d117421",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:334184167133eea9b5a934bf7cd81069176d1547e8a294d69aa4d36bd690a8ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:39:09.095834484Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T01:54:33.578234352Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c679388ac7a37037465302aea3117354d9746d0c50c056e826b5c8c58aea5138 in / "
                },
                {
                    "created": "2022-05-11T01:54:34.285692569Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T03:33:12.185481273Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T03:33:23.615107937Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T03:34:15.649593593Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:04.775021539Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:38:21.7422971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:23.457544515Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:38:46.261933903Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:38:59.418278377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:01.59572881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:07.456050369Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:39:09.095834484Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1502f13ee9bc6e99ae1e3cd119b52658d783e2be1f6160489d7b38e2329f43c8",
                    "sha256:b0d04ef19bf13b20fcab5e978d3fd8ba3da7567a30e18900c87eb2e59d61d4d5",
                    "sha256:8f0d791b14370f4da45b5b98de1a87346bfb8bec62aee72d268f0b86301e02ff",
                    "sha256:329f8f993bea2109e9a9b958c10b791b01bac6587f08533c7b801bc2e5366583",
                    "sha256:1e766f7ab063aeb9b87646cfb11580118259be1ea7ae7586800bbe3e0b2cf314",
                    "sha256:81800a580ba6a0318f61d386e6c97572aa11a134e53d5e1779670cef622b5f0f",
                    "sha256:6cc01473511d464521f804327c3e8f85a67051203630f621405ca9a860225ead"
                ]
            },
            "variant": "v7"
        },
        "1.18.2-1-stretch-arm64v8": {
            "architecture": "arm64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0d1bd998c9981b51028a918432097eda688f2487c146da48ef6415b6a7d76c86",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25d04ba6324dce57a771d34306b7705d7a7ae580cec4ba81eb08866b0522cc74",
            "container_config": {
                "Hostname": "25d04ba6324d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0d1bd998c9981b51028a918432097eda688f2487c146da48ef6415b6a7d76c86",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:40:37.521283361Z",
            "docker_version": "20.10.13",
            "history": [
                {
                    "created": "2022-05-11T00:49:08.429633252Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8949016fba61b18207f5a2309fc974562080c5cc80d1eb82adb35c4fa03f6f05 in / "
                },
                {
                    "created": "2022-05-11T00:49:09.74851696Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:29:58.184124433Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:30:02.821511765Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:30:21.411043564Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:39:27.187000067Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:39:32.182985781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:39:39.348821026Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:40:13.371200164Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:40:19.966466123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:40:25.125869497Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:40:30.227993606Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:40:37.521283361Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4564104aefa260b6c4a014d61945b9fcb94ad84cd8e532ffcc66966d678151f5",
                    "sha256:c68ab1c74905743444e26581ec294f149d1b6486bcc0fe4b44c3f8101e2424b7",
                    "sha256:09f0edead130ed67b387c2ba0f3f697b5e6713612129af66c2c0b880ff45eb21",
                    "sha256:4e1394fdea0073668e590d7eb0f09e25f8c78f4ae1eeb27a73d923bcdcbbda83",
                    "sha256:ee8a65e3d8f5fe5d77daba6491e11eaecc04b15e22b9a7986f2f78b21b6f0257",
                    "sha256:78eadba8a1a705422e4d94831f0b9fd8f40d3591a2d859b5d5bbf0c77183b2aa",
                    "sha256:d81580459164de1358f0944bff7b2bab28d1269863800f9084da75ea9b060300"
                ]
            },
            "variant": "v8"
        },
        "1.18.2-1-windowsservercore-1809-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:da077aa7d93b8d590427397c452183e58024e2992fe01429ede74cb054498ebf",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "ea0b2d9802e6c5ede1319f265510544824001c0af71d4d3f031ff05efe4d264f",
            "container_config": {
                "Hostname": "ea0b2d9802e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:da077aa7d93b8d590427397c452183e58024e2992fe01429ede74cb054498ebf",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-05-11T17:43:56.9033881Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:27:13.2763402Z",
                    "created_by": "Apply image 10.0.17763.2803"
                },
                {
                    "created": "2022-05-05T17:03:24.9634109Z",
                    "created_by": "Install update 10.0.17763.2928"
                },
                {
                    "created": "2022-05-11T17:42:16.5277145Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-05-11T17:42:17.4599457Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-05-11T17:42:18.4081086Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-05-11T17:42:19.3088265Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-05-11T17:42:20.324938Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-05-11T17:42:37.8998942Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:42:38.8458169Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:42:44.5122899Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-05-11T17:42:45.432278Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.2"
                },
                {
                    "created": "2022-05-11T17:43:55.5823814Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'a1552dd2452ae802756d8263c6c482e9c0b4b606f3bfbac0911c426f84a8af92'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:43:56.9033881Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.17763.2928",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6fdd6832d95a5f537e0e7d87f2613ea9741ad9c20438b9d5a2697a883c4cd96",
                    "sha256:19d90b2bc7a17e712bc5028ff2b9169219fde003c778add8e96fc55292b63a87",
                    "sha256:fe7dda73989bc943c2a9f225daf6d197825fec6fd6604f0646a8afcf1b06f81e",
                    "sha256:c95c98d4beda3d5f8474ef473c64ac1c3b2a73acb3b53df3413299c90e1e3c15",
                    "sha256:091a09e16c70ee7290e3740fa7df0e50f7bd9a5c27bdb10562ce8505b69c1a33",
                    "sha256:91abfbfc30e297a36404ad5c285bc65a7dbd8e80a744a01905f6593151c25ff9",
                    "sha256:c27ca74570f829a521c73a7675b11b72f661c3be403d7b2a86a9b2647aaa6c8f",
                    "sha256:1515063dacb840e928f74ff10b742a50ebca2e49156e225a50e7fb9351a801bf",
                    "sha256:28506028231ffd615bfdf6fcac2cb6a6324e86d2ff9e716601a7705c75538055",
                    "sha256:5c9bf4c8594a485336f26bcf3857f63cb9a863aa09d57598b8282b9d466a5c7a",
                    "sha256:aa4adc2faad495bfbfdd803677f2cc0cdd6d5c7c498fb5c43dbe77525cfc562e",
                    "sha256:ce843b0ffaf7088de4f749d7dddf583ab47542f34118b89637bc5b41eaff1ced",
                    "sha256:a253ce8c026eb8611627ef39bda9ef9d710bbcb18307fa32954bb6307fbd8937"
                ]
            }
        },
        "1.18.2-1-windowsservercore-ltsc2016-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:b571187812fa7e2a0c7510f411530ea60d76255e3d49aaca8537b4b2ce21542a",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "3a228f6519262b2c7f81a954e7ee621c61af65941b273f886b24780b9e13a4c6",
            "container_config": {
                "Hostname": "3a228f651926",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:b571187812fa7e2a0c7510f411530ea60d76255e3d49aaca8537b4b2ce21542a",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-05-11T17:58:41.1154682Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-05-05T02:36:40.2940142Z",
                    "created_by": "Apply image 10.0.14393.206"
                },
                {
                    "created": "2022-05-05T03:42:13.7748176Z",
                    "created_by": "Install update 10.0.14393.5125"
                },
                {
                    "created": "2022-05-11T17:52:46.8098544Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-05-11T17:52:48.442744Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-05-11T17:52:49.9614971Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-05-11T17:52:51.5288184Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-05-11T17:52:53.1460715Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-05-11T17:53:49.6016537Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:53:51.7218547Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:54:15.2413674Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-05-11T17:54:17.4514181Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.2"
                },
                {
                    "created": "2022-05-11T17:58:37.1455774Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'a1552dd2452ae802756d8263c6c482e9c0b4b606f3bfbac0911c426f84a8af92'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:58:41.1154682Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.14393.5125",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f358be10862ccbc329638b9e10b3d497dd7cd28b0e8c7931b4a545c88d7f7cd6",
                    "sha256:9f7d281f701e6f21614d8e0e7bbc08f5650c427949acbc81977689ab82763f30",
                    "sha256:b859aa2ac970b3ac6b6222b67aee5d647213b68cdd935b38a80b0232fe4ce3df",
                    "sha256:ee95edb13384c5517a48f967921ab62cf4edde242c0868c9d4cc892eef617cbb",
                    "sha256:21b903b272a0865a5ababa9252ea2b463d74fe37f509959d47bc24b5686408d9",
                    "sha256:03c1932db8efd82c978c0d9033b0d99e74174ab0f5cba4f782d2f245dd6b87e3",
                    "sha256:00fbba9d3a531079ee379b0202fba8825b1897d8c9ada56874884da7fc1aa8ab",
                    "sha256:b65f7f4f59a4fb4f2b952a093318b906a48cdea27be0bf30b6b10267c1c98cca",
                    "sha256:90cc572c8cc7cb29efca517912bc0bcba7aeeb34391f3c2c34718d4b2ce72e1e",
                    "sha256:f64ee1587b8fb00e7234a37e545557563cad1a446e2c29190023339835bbec35",
                    "sha256:1b7f4be0d9dea45f7d413ef52d0bd2e2425c4c25597dc9b77ecc9f756c43095b",
                    "sha256:41f8ec49cf043faac4f6f46569713bb0f897d0152727a80c7e4c40eac8f945ea",
                    "sha256:a36de397dd53fa289fbb8ce804521962a837617630d04f0fb72b8ad98bc9e300"
                ]
            }
        },
        "1.18.2-1-windowsservercore-ltsc2022-amd64": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "c:\\windows\\system32\\cmd.exe"
                ],
                "Image": "sha256:80e419eea2f89cc8a7f7b4ef4c1771fe894afa90afe7acd74d2a27da1024f023",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null,
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "container": "965f55cc30e35aee5e3b242f444045cde1431c2d1c2e71d9d2059d53959e75da",
            "container_config": {
                "Hostname": "965f55cc30e3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "GIT_VERSION=2.23.0",
                    "GIT_TAG=v2.23.0.windows.1",
                    "GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip",
                    "GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735",
                    "GOPATH=C:\\go",
                    "GOLANG_VERSION=1.18.2"
                ],
                "Cmd": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';",
                    "#(nop) WORKDIR C:\\go"
                ],
                "Image": "sha256:80e419eea2f89cc8a7f7b4ef4c1771fe894afa90afe7acd74d2a27da1024f023",
                "Volumes": null,
                "WorkingDir": "C:\\go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {},
                "Shell": [
                    "powershell",
                    "-Command",
                    "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
                ]
            },
            "created": "2022-05-11T17:53:49.5195896Z",
            "docker_version": "20.10.9",
            "history": [
                {
                    "created": "2022-04-22T01:12:09.4542389Z",
                    "created_by": "Apply image 10.0.20348.643"
                },
                {
                    "created": "2022-05-05T03:02:27.4444987Z",
                    "created_by": "Install update 10.0.20348.707"
                },
                {
                    "created": "2022-05-11T17:43:08.979963Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  SHELL [powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';]"
                },
                {
                    "created": "2022-05-11T17:43:09.5448124Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_VERSION=2.23.0"
                },
                {
                    "created": "2022-05-11T17:43:10.0676158Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_TAG=v2.23.0.windows.1"
                },
                {
                    "created": "2022-05-11T17:43:10.4498218Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_URL=https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip"
                },
                {
                    "created": "2022-05-11T17:43:10.8613753Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GIT_DOWNLOAD_SHA256=8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735"
                },
                {
                    "created": "2022-05-11T17:51:32.5377057Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \t\tWrite-Host 'Removing ...'; \tRemove-Item git.zip -Force; \t\tWrite-Host 'Updating PATH ...'; \t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \t\tWrite-Host 'Verifying install (\"git version\") ...'; \tgit version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:51:33.2266082Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOPATH=C:\\go"
                },
                {
                    "created": "2022-05-11T17:51:43.6644357Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \tWrite-Host ('Updating PATH: {0}' -f $newPath); \t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);"
                },
                {
                    "created": "2022-05-11T17:51:44.068929Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop)  ENV GOLANG_VERSION=1.18.2"
                },
                {
                    "created": "2022-05-11T17:53:48.6147733Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; $url = 'https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.windows-amd64.zip'; \tWrite-Host ('Downloading {0} ...' -f $url); \t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \t\t$sha256 = 'a1552dd2452ae802756d8263c6c482e9c0b4b606f3bfbac0911c426f84a8af92'; \tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \t\tWrite-Host 'FAILED!'; \t\texit 1; \t}; \t\tWrite-Host 'Expanding ...'; \tExpand-Archive go.zip -DestinationPath C:\\; \t\tWrite-Host 'Moving ...'; \tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \t\tWrite-Host 'Removing ...'; \tRemove-Item go.zip -Force; \t\tWrite-Host 'Verifying install (\"go version\") ...'; \tgo version; \t\tWrite-Host 'Complete.';"
                },
                {
                    "created": "2022-05-11T17:53:49.5195896Z",
                    "created_by": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; #(nop) WORKDIR C:\\go"
                }
            ],
            "os": "windows",
            "os.version": "10.0.20348.707",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b9bda40f596a8f8648c218b23e552acf9498c039eb0a48c222cfcd5a9af9e841",
                    "sha256:c4d2c4780b4ea432c5cced8561e471e767db039680b4ae9fe57ac61d8cc208a8",
                    "sha256:669ca414d6ab42569f543c49c56e78ff47dc6b8d897e7d5d997b356ba677a6d5",
                    "sha256:e39a8d53efa8769c7da516c8e5167d41cea3d11bb99d66732864904d37b82f59",
                    "sha256:9013dffe7250d590650adec5b21e5d38c5c9b6fd4f5b48d6e07b62577d2f850e",
                    "sha256:c79ac1c5733b8ec6aac66559abc5ad868849f393ef7376c248dae082d4795e36",
                    "sha256:f6d4cfa8a4e70b1ba9b2855a7edf5b15133c88d23ffa8b6e63d26232a8e3f414",
                    "sha256:4892afc6c142bb42acf37eaa5b6b13d29da8392045dacbaa8e2cb56697cfe6d4",
                    "sha256:c118e8211454019f4680277d1cabf01ba3b948e6f979034edd09c439cc9acf2d",
                    "sha256:36f234ddf3fc50ecfa0ed6aff4b43865b366fecee32c0e9bf5ee02cf9510bfd6",
                    "sha256:923266383a1e9aac3fec561dcb6f32e0dfaa0bc127deb5fb07f971ede3d27343",
                    "sha256:a823270314814c35ce62c101e59fe029ce37ef69b69435ae908f242faab42b3c",
                    "sha256:fcaed5c32bf67b45dc408bfb461bc57b5e969f4928f76eebad89f151101c4ad0"
                ]
            }
        },
        "1.18.2-bullseye": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d483f82b0fa6cd5ae7ba43cc8a93bac7878c0094f6159ca6b40d149981369e4",
            "container_config": {
                "Hostname": "9d483f82b0fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:79fee458642342e4f69ee9a77411093493cf59e7a712e38c87198852cfefb2fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:36:34.152714802Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:05.165042534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68a5d7d0db592625159865110c1b7dcb15cf70ecf71b5fd541ef89584cd734ba in / "
                },
                {
                    "created": "2022-05-11T01:20:05.670760099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:49:04.339229119Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:49:10.003322912Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:49:25.35114407Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.098064021Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:49.966718646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:50.730169979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:28.351711111Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:36:29.927913475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:31.197993519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:36:32.878559449Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:36:34.152714802Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78658088978a7596a65f6e864cd30ae00697c62b2b0b82ebf766239ae9c2ed6d",
                    "sha256:b274e8788e0ca09a3ad0803fba9ee8c9e622fcb7fa8f869f7931addbef04605c",
                    "sha256:1b7cceb6a07c2c478dddc806ab26962dc8f3c477bcec338a90ee9fb4af118250",
                    "sha256:a7934564e6b9c322c468fea3f49d61a4a84b26d3f20a24f0ef0f874332095070",
                    "sha256:3e604cf1bf64b221189311dfc97c2b26057ba5ba7c46942c20b64c4b20ec502d",
                    "sha256:82203f5724a2931421b980ce4b937baf1886c45ca0961dfc8033a4d1fdfc7c27",
                    "sha256:ea29340a4a852b2644eec5fbe2c32ade01494a64c2538088922fdd4d29dd2ccf"
                ]
            }
        },
        "1.18.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:16c2c66042af92a49782ea4d92724546ea722fef3f94b821ab099229e0b72fbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac11ba6cfa82809d9c8235039650ca9c395632427390a09a6b879d6794840ca",
            "container_config": {
                "Hostname": "2ac11ba6cfa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:16c2c66042af92a49782ea4d92724546ea722fef3f94b821ab099229e0b72fbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:26.54026622Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-05-11T01:20:26.329235418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54d60144d251caa916ff50606bc2364131d47d6b10ed83d08c81c647ab56cc40 in / "
                },
                {
                    "created": "2022-05-11T01:20:26.817731753Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T01:50:23.11692482Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T01:50:28.365870038Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-05-11T01:50:43.421251262Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:00.353168421Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-11T17:35:01.084742825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:01.72869378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:21.505361415Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-amd64.tar.gz'; \t\t\tsha256='88854cf719158b74a56937e1cc9b222b4d4e3d1305635e9eb213e942e7cd2029'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-armv6l.tar.gz'; \t\t\tsha256='967132f65726cccf1eb7b65051706d489b5bfbdca48d52f102497315ebe3c84f'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/release-branch.go1.18/20220510.3/go.20220510.3.linux-arm64.tar.gz'; \t\t\tsha256='eb68f145e815f9ff0980835d60d345dc159736eb01adf96c3b93d1600a639ace'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:22.924481342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:24.015025044Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:25.448144193Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:26.54026622Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f70b727d55c3bf3e37ab16d9d40bc5f5dd209f01a5514af0146547d3f3eaca60",
                    "sha256:7ae08394a32ad3980fc0863f492f8dc720c5169d94c10ad4fdfefc76b68bf23e",
                    "sha256:58b24c6222e3b3d7fdfebbffbce6c4eb14de8abf92a99710ee5cf2dc76e3204c",
                    "sha256:74f08751ac3feff0f5e89a91b43ec8a6949c90db328bb788695743cc20e0594e",
                    "sha256:0806dec31e2edfcca1d0f41649de4adc8e52af8e65c375afc6823c38cd669e12",
                    "sha256:a3590d1fce8d93aac63cfab0e6e881b77146b18944787948a0696f74bc359e3b",
                    "sha256:9b9373f39652b8200b6cd4ab3918c8c6c493df953ba1a2f406b5c31abc798a63"
                ]
            }
        },
        "1.18.2-fips": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a33bdd27c3042e4cc33b87727b52ac4c25ba7829555b6e67ce3326df6536a008",
            "container_config": {
                "Hostname": "a33bdd27c304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:33.246239051Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:06.242613972Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:06.876977755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:07.496313727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:28.678963609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-amd64.tar.gz'; \t\t\tsha256='eb92d491af5b718d6161c5a86b79473770647c3d0db1f0866418842d0dadaa93'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-arm64.tar.gz'; \t\t\tsha256='e0256e419dc9e2a3be28fe0176772056e7531655db4a466826a388808df16c35'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:29.914075949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:30.942677285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.29661558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:33.246239051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:39c6d403037c823fd8d91ee7021de5141322bc5498893f60407615249a6e3eea",
                    "sha256:6c523a290f4f4a3483faffa5b71f1eec299496097fbb7cc66d189377023fecdc",
                    "sha256:d65cb2ef67932283569346dead196cca9b55134d41ae0b8fc262e6ced151179d"
                ]
            }
        },
        "1.18.2-fips-cbl-mariner1.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": null,
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a33bdd27c3042e4cc33b87727b52ac4c25ba7829555b6e67ce3326df6536a008",
            "container_config": {
                "Hostname": "a33bdd27c304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c75c3d4be3970c706d68f8b5065dc896fa6c0eaee073b05172563b19a8c24b56",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T17:35:33.246239051Z",
            "docker_version": "20.10.14+azure-1",
            "history": [
                {
                    "created": "2022-03-19T16:29:25.822295794Z",
                    "comment": "Imported from -"
                },
                {
                    "created": "2022-05-11T17:35:06.242613972Z",
                    "created_by": "/bin/sh -c tdnf install -y \t\tbinutils \t\tgcc \t\tglibc \t\tglibc-devel \t\tkernel-headers \t\tiana-etc \t\topenssl-devel \t; \ttdnf clean all"
                },
                {
                    "created": "2022-05-11T17:35:06.876977755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:07.496313727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:28.678963609Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(uname -m)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-amd64.tar.gz'; \t\t\tsha256='eb92d491af5b718d6161c5a86b79473770647c3d0db1f0866418842d0dadaa93'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dotnetbuildoutput.blob.core.windows.net/golang/microsoft/dev.boringcrypto.go1.18/20220510.6/go.20220510.6.linux-arm64.tar.gz'; \t\t\tsha256='e0256e419dc9e2a3be28fe0176772056e7531655db4a466826a388808df16c35'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl=null; \t\tsha256=null; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.sig\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \twget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \tgpg --batch --import microsoft-managed-lang-compiler.asc; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-05-11T17:35:29.914075949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:30.942677285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T17:35:32.29661558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T17:35:33.246239051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09951eca1ed8c40810aa3e6995a344827e21fbd06b74f35325a59b605d672764",
                    "sha256:39c6d403037c823fd8d91ee7021de5141322bc5498893f60407615249a6e3eea",
                    "sha256:6c523a290f4f4a3483faffa5b71f1eec299496097fbb7cc66d189377023fecdc",
                    "sha256:d65cb2ef67932283569346dead196cca9b55134d41ae0b8fc262e6ced151179d"
                ]
            }
        }
    }
}