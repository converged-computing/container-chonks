{
    "manifests": {
        "1.20": {
            "manifests": [
                {
                    "digest": "sha256:a76df3b4f1478766631c794de7ff466aca466f995fd5bb216bb9643a3dd2a6bb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:f46bffd1049ef89d01841ba45bb02880addbbe6d1587726b9979dbe2f6b556a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v5"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:d9a32c8a3049313fb16427b6e64a4a1f12b60a4a240bf4fbf9502013fcdf621c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:acd1b78ac05eedcef5f205406468616e83a6a712f76d068a45cf76803d821d0b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:d972eee4f12250a62a8dc076560acc1903fc463ee9cb84f9762b50deed855ed6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:b187079b65b3eff95d1ea02acbc0abed172ba8e1433190b97d0acfddd5477640",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:ae93c7f72dc47dbd984348240c02484b95650b8b328464c62559ef173b64ce0d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:51f45f5871a8d25b65cecf570c6b079995a16c7aef559261d7fd949e32d44822",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1570
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.20-alpine": {
            "manifests": [
                {
                    "digest": "sha256:4622b43aaf724632cfb2d192b781668da20af49d13c240281f97733cdd722f4a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:89be2dde9008709c8df80e4abe51dd93115af47eb4a9e61917fc69322fafe967",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:58e7fda3c6c32ada82fbe8bc7ba731914e4bdffb34dcf932e66ac13400f46ba8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:1a946edcecbd2fd3121946a05e978c3a03c5d94c67d2376d3fbb62ed0c470d90",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:a0c45d72343800d2912c15be0aea395faaf390862ac11b73a9916bc1a8f2acb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:6b83b1e0f3ee142541612d70436bed066141f106e892d73a623fa59cfd40ed0a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:7a7cb7b50355b161c83a7cf44a4ffb0e763ae418aa260f402930efa820749302",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1568
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.21": {
            "manifests": [
                {
                    "digest": "sha256:25dedae0aceb6b4fe5837a0acbacc6580453717f126a095aa05a3c6fcea14dd4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:925b9b51300dfde7a3f4690d5cda72fd5904aa09b40a2b913a38082d4ff4c99b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v5"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:6ed891b071ed1ff84766efb66d9cb1d9191658a51f90807cda74abc020d8ff36",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:6749669a206c08db96e2da448df2cf46ec4cf09ee1fdd51ed22edc2506727827",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:62ca046014cae8b07a4de1dc511308428a72bd7ae659502568332db9381ea0e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:2af0ebfe48ffb51dd02261bee74f581ceafac1a1cc51b320a8f6c40495ee589d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:3337076ebe3f41e5d6fd68141edf3872647a1923886de1ab59f8116c8991fbeb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:4decd37d75649115c7d55805ebea5c5f76c2103bd82290ce65e142a4c8c97e93",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1570
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.21-alpine": {
            "manifests": [
                {
                    "digest": "sha256:529db430e042ecef071f2e88267cee6da18f8ab44d66a0c44348886fdc2e60fc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:a2b6200e0325b88cd63af4ce42f1978ec9d96407ab5b3ce4a8250b213a58b999",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:4ba38ebc658a92697c22e1582d712f234f10945c2e750c88f10aa76e9a055cc2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:07412f4c3c727ccdfac16006c7c28ce77a80c39372545ce5edd877be92f533dd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:7d003b925548b52a107073c359f69ed1f2113109891dd63cd007f1a4365c9d51",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:05cab74c29db222625dd445b083a35d7fda2d6f1f05e9e559ea970c75e36c78e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1568
                },
                {
                    "digest": "sha256:eb2e50a1724b22e27be940becf5d8821dc7c0545c29ee22944a92fbfb543ce80",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1568
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.22": {
            "manifests": [
                {
                    "digest": "sha256:9081064712674ffcff7b7bdf874c75bcb8e5fb933b65527026090dacda36ea8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:01a86439ce7d73daff3dc561a00e89e63ad8bc294e4e33c480e8e2a3e57f884e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v5"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:e233dc12419cf89333e7429a5af77136c9f249dcd229628e9605e24a270401eb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:cf4ffe24f08a167176c84f2779c9fc35c2f7ce417b411978e384cbe63525b420",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:c07c56892b75cc98627f41a57e85dde6a81e3d0112860df143412ac70fa2dd53",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:3995194d3d75424bf77716eeccd01a0206d3e7b5b23367b823aa2e8ccea566e5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:4e20be8b1e2d67c83df707f0be92ea4482cc6fde9df6a863c8eac17ea774833d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:00e4e73b6c354a4e92416e99a0d9ff1f0f24b1634504ef39f8ccf7233529c72e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1570
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.23": {
            "manifests": [
                {
                    "digest": "sha256:a97a153152fcd6410bdf4fb64f5622ecf97a753f07dcc89dab14509d059736cf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:6735e6dc04727ece994c48b94f34cfee9ec30ce72cab7f3cb46c6f7d702fd5f2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v5"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:83e0a67fb9a81a2c711046cdf3e338ed23dad869a94c3268eefeb4e8a4d9cdf7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:7e8505ff16110d55bc01f29d603c3662f629502327fc495278a9bcef37c75426",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:c130405ece95b1a8c65606916b8291fe3f01dd730b1ecf847ac3988004774bf6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:f5051375e4b1ca2d46227b48516474fbd750f023d94dabbc3b50861e2f8adec1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:3af8125d6882412235e87f5ac3f16bb63a7cf725a2f2f91a8281100c3db97efa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1570
                },
                {
                    "digest": "sha256:794e218268ddf36724136adab53fe076a7ab96d4bf5c76dcb00b9ee48e08fa6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1570
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.24": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:d1268324d1e3a3350098ac69d9628f162105355dfe8f48260caed6a7c001d3ad",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-10T02:53:34Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:2e26275ed7a47e8e93f264d39a09ca4bc3f4058c904c75087e237f4ea883f2a1",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2104
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:2e26275ed7a47e8e93f264d39a09ca4bc3f4058c904c75087e237f4ea883f2a1",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:c77955a7291b5403d1150279cd591622922803289e57a26f82383bb8d3fb8a97",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v5",
                        "org.opencontainers.image.base.digest": "sha256:1ed5e23dcc59f130aa095b70e8fdbc422c6b9bba947df1ec48e606f2ecc3569e",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-10T16:45:51Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:ebc27d1258e6327997df646226e769c17382e6035f2b49bb1b2012beeea77c21",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v5"
                    },
                    "size": 2106
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v5",
                        "vnd.docker.reference.digest": "sha256:ebc27d1258e6327997df646226e769c17382e6035f2b49bb1b2012beeea77c21",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:2796b8d6e8f4f8da1708e89b578790504d23c6a94f9b5c6c1a33cf0031d55fc9",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:2786611dfd6c17bcc0225794e875cdbf2faf7ebf943bd88fcde8baea61a4b673",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-11T01:47:00Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:2a1b7f111a70b3396218651aaee8dcdb9207680f408c59c4f675fc66eeb233cc",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 2106
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:2a1b7f111a70b3396218651aaee8dcdb9207680f408c59c4f675fc66eeb233cc",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:1ecbaa35ef6b5f822543bc6fbe7b8f3fe2c58f32adac255f39c0ed1115995445",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:5e3e0f1da7c83ffee19a476630222cff8cffc3680523bafd564e98622add32f5",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-10T16:57:25Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:e8fdcd6356fb4914274d329bdb38c9fb7bd1be31ff50da71a8ffedaab04cf929",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2106
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:e8fdcd6356fb4914274d329bdb38c9fb7bd1be31ff50da71a8ffedaab04cf929",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:e0700696b36f35f5124e2bf4d24295614d1d3a35cefaeaac1dcb091db66df618",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:e5ce0b22ac2110605753e8e6eab2d5bfce1790caaecaa13649fa07dcfad25001",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-10T01:51:37Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:000a295646ff82c496183627761f6de8e86966eabdd508e68d9b35a69e271a25",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 2103
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:000a295646ff82c496183627761f6de8e86966eabdd508e68d9b35a69e271a25",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:6895631259b0468b42b3f6028461a7225f38b132b2b427b2ea0a12edd5dee1d1",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "org.opencontainers.image.base.digest": "sha256:73321ba66eb2f5243a389c411825615b8568b09b22d1843b59a7c1eb7fc1e6a3",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-11T02:10:45Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:85a16ab2fd41d53aa79aa9858e798fac7ac7234a2d7d2b544b78f3f43a135beb",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 2107
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "vnd.docker.reference.digest": "sha256:85a16ab2fd41d53aa79aa9858e798fac7ac7234a2d7d2b544b78f3f43a135beb",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:2c2487ffb3e5a88bac2ef32ea60fc08609a4c1da8a94309136d303c9d721883e",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:f2ada486b4250c51599b6b0bbfeef5caa5a6862b5f2aa4620af2989e39228ad9",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-10T19:28:02Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:b187b36cae4d4596b62251b615fe1d8662dd2d044a45cef9c84b9c044c5b81b5",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 2106
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:b187b36cae4d4596b62251b615fe1d8662dd2d044a45cef9c84b9c044c5b81b5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:51565d6e7b7ed8ceed094dc03bd7a3455ac8f7f1fc374f25b51ad30f6f7dd37c",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:881f31801aa86d64bbfb066b1fe8e7a26b7dd4e867bb33dc7dfc316565f3ed6b",
                        "org.opencontainers.image.base.name": "debian:bullseye-slim",
                        "org.opencontainers.image.created": "2024-04-13T04:22:46Z",
                        "org.opencontainers.image.revision": "1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#1a8d87b69760693a8e33cd8a9e0c2e5f0e8b0e3c:stable/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.24.0"
                    },
                    "digest": "sha256:20a30a8cf4530a57107a8370f7c63606693ddee31a81a6ff7608210218cd9e58",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 2104
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:20a30a8cf4530a57107a8370f7c63606693ddee31a81a6ff7608210218cd9e58",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:4ab8f01f118cef311d245d00eca2035ed23042ca9f30268397a1889a743ee726",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1.25": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:911821c26cc366231183098f489068afff2d55cf56911cb5b7bd32796538dfe1",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T02:55:39Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:e688fed0b0c7513a63364959e7d389c37ac8ecac7a6c6a31455eca2f5a71ab8b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2295
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:e688fed0b0c7513a63364959e7d389c37ac8ecac7a6c6a31455eca2f5a71ab8b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:6f66f24cf574338e2e9468d63ae718203af66e5a35cc7c4af4772fc7c12884fe",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v5",
                        "org.opencontainers.image.base.digest": "sha256:ebb104c7880d3fa5343497f453e4c3841a6f0f7ea32a965cd90c47502e8f5b15",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T14:50:58Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:712bcddd8580f5a3e222b1d9fe2223cbaf3adc67ff8e41e8b2e9dd219cd922e4",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v5"
                    },
                    "size": 2297
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v5",
                        "vnd.docker.reference.digest": "sha256:712bcddd8580f5a3e222b1d9fe2223cbaf3adc67ff8e41e8b2e9dd219cd922e4",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:220a9bf1d8259c50dc71e8b5707da5940f28dd8c4f3464309f752029236cc54a",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:9498c3b6d064c51d3df86cea9b2f096d1242ed325ab420487df42a1f68b43066",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T13:52:58Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:923e07a43e42f56c2143184e04ed230fa2d0d2b12875cb4604e2db7a31d4e4bf",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 2297
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:923e07a43e42f56c2143184e04ed230fa2d0d2b12875cb4604e2db7a31d4e4bf",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:9a1044613ca93ba860036a8d253eabca87d9a0a7cf15dbb864f42af2aeb0ec37",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:6dc38501802c1554f0fd858d1153a6f0e18c71006c6d0b31cf19fa778900e658",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T18:11:12Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:557b2c07439ee9e53cb178e3bdbb87114b31c48a41a17c8750c5908d65adeec6",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2297
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:557b2c07439ee9e53cb178e3bdbb87114b31c48a41a17c8750c5908d65adeec6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:ef1becf85460ca425eb1e5bcc7ed8da0ec5d0d159be02d5c998d5fbf6b69191b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:b8ff4eb084463bc8a819f32cfd5faf2f1cbf8e5ff98f52e8ad8469651ba5508d",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T01:52:59Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:58c0d66c29cb6c8f718ea4782898814ab78a52c32726a31b9808403feade654f",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 2294
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:58c0d66c29cb6c8f718ea4782898814ab78a52c32726a31b9808403feade654f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:d70f5120064c5513bb69a6f5a98d8d7a8e8358045f549ff8b1f5bf1ea0255d95",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "org.opencontainers.image.base.digest": "sha256:2aad38a708c2c935b648b93a2a4d85fcf9ab1b4d5575ffc308536051f79bef55",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T21:39:59Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:209df08bf6a3985a0d026877e195a7c5a3d9497894ad702c2e6d43f13bd8a4fd",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 2298
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "vnd.docker.reference.digest": "sha256:209df08bf6a3985a0d026877e195a7c5a3d9497894ad702c2e6d43f13bd8a4fd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:383350f2bb526aa9081522fea60cd52ded13b329632ce44e971410fa8da610ee",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:1ab5eca92e8a93dfd55e6e4146c5ec90aba431562750faf65bb9142c0b2fd07f",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T13:33:05Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:cb3d7176e27816bddcf89ad18070aec82c1c78f9447a2faceb46e8c53ef03b02",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 2297
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:cb3d7176e27816bddcf89ad18070aec82c1c78f9447a2faceb46e8c53ef03b02",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:92b57edd2e095783b258446b1c92451545ef3f39d2bfea16377af608a586341a",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:3fd07290955a35342cebcceaad53bac8ff57a404d1e41d951391b63133ecd32e",
                        "org.opencontainers.image.base.name": "debian:bookworm-slim",
                        "org.opencontainers.image.created": "2024-05-14T18:04:18Z",
                        "org.opencontainers.image.revision": "9abe4ae472b3332665fad9b12ee146dc242e775c",
                        "org.opencontainers.image.source": "https://github.com/nginxinc/docker-nginx.git#9abe4ae472b3332665fad9b12ee146dc242e775c:mainline/debian",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/nginx",
                        "org.opencontainers.image.version": "1.25.5"
                    },
                    "digest": "sha256:8bce1fb01efcb744c8d500cc348447289d4637fa6bd10e58568b37577b70e3de",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 2295
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:8bce1fb01efcb744c8d500cc348447289d4637fa6bd10e58568b37577b70e3de",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:d47674e5701dc0afb9d6c004b973484e87cf46436f641f596fc5f8bb88495c22",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 841
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        }
    },
    "tags": [
        "1.20",
        "1.20-alpine",
        "1.21",
        "1.21-alpine",
        "1.22",
        "1.23",
        "1.24",
        "1.25"
    ],
    "configs": {
        "1.20": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:568a65393e894cd19a0473a1716fdee1b96246c302b2446296c555744e8d919e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container": "758f963724ce27609407bcc02105d7a411d09b61e3d7af87b84ef884179ab8b5",
            "container_config": {
                "Hostname": "758f963724ce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                ],
                "Image": "sha256:568a65393e894cd19a0473a1716fdee1b96246c302b2446296c555744e8d919e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2022-05-17T22:37:17.011072851Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-05-11T01:20:16.520708229Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4a0bb88956083aa56032fdd9601d9b66c39b18c896ba35ea33594cd75621640a in / "
                },
                {
                    "created": "2022-05-11T01:20:16.833449474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T05:04:29.216415069Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T05:05:20.5186653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:58.109357274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:58.209807672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.079017297Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-05-17T22:37:16.308331577Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-05-17T22:37:16.42037498Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.526730341Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.63286206Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.723840482Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.816451964Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.912604472Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:17.011072851Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fd95118eade99a75b949f634a0994e0f0732ff18c2573fabdfc8d4f95b092f0e",
                    "sha256:c2a3d4a53f9adaef9826a74511dcab96c18c6cab06d39270b82dcd2b0c496e5f",
                    "sha256:a64d597d6b14cfa4291fb73cbe9c998610d37d049b34b9e6271f0b72a893ebb2",
                    "sha256:4f49c6d6dd075585b63d71ad3e63a3cc9ae2c3319a01ecb9ca1fbc78768d4b7b",
                    "sha256:881700cb7ab2ce8da6ae29674416aa6dbe6ce0a652a9a81a9d5aefc36da122ee",
                    "sha256:07ef16952879508db7972ea8a2815a3bc8caea4950c0195223d67ea938b44957"
                ]
            }
        },
        "1.20-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:4e5748a220f3628c93a4a91dd886f7ded0a9652e56e14bf8ab6cbe7e1e82a7a0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container": "82e534050198608cb8643267c89be3a54ce7a0bdd8c3ede486584b5d40f9b94e",
            "container_config": {
                "Hostname": "82e534050198",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                ],
                "Image": "sha256:4e5748a220f3628c93a4a91dd886f7ded0a9652e56e14bf8ab6cbe7e1e82a7a0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2022-05-17T22:37:53.699922729Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:22:21.945905547Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:22:22.0391134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:44.633011771Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:44.732276516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:52.828589106Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/689.tar.gz                 && PKGOSSCHECKSUM=\\\"b3cb5de3d22b4db2ab478e60469638e1935cb91c20405e33bdbf7303766278cf864bace62f95ef40f4fe39e92731f53ce1c4a18192ec7f7820f4083cd9384116 *689.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 689.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 689.tar.gz                 && cd pkg-oss-689                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-05-17T22:37:52.998429201Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-05-17T22:37:53.098947844Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:53.199396415Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:53.306062907Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:53.39864963Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:53.497599477Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:53.595262844Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:53.699922729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:73e72459bfe3d9fd81413680ef4e6061dde9c3592d9ffce1c0b4100f7684f881",
                    "sha256:27e9ed2602d4427ee5e47f643814a5688e9db338dc50e2c76d689b3c008c7dc5",
                    "sha256:68aa52488b502fc6b86862d3d01a15a4aad20f6987fa132f41b55b33597879a8",
                    "sha256:956432f9d2d2975779e95b5bb04166c31fa9743919513da2085621ae0cb9570e",
                    "sha256:3400b427ca31a29e12e59dadb6fa907006beced38239b6581d75ea9e4f1b8a76"
                ]
            }
        },
        "1.21": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:84a2e27303200422deb89ae538dbbc442ac0ffa72c7be4d6f1d3b4bd32dcd451",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container": "0a702bec7d2ceb935c6501ae3dfc1ab850f9ea46b9296eb1323b2b826595f954",
            "container_config": {
                "Hostname": "0a702bec7d2c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                ],
                "Image": "sha256:84a2e27303200422deb89ae538dbbc442ac0ffa72c7be4d6f1d3b4bd32dcd451",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2022-05-28T05:41:03.228946845Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-05-28T01:20:23.14142546Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:134f25aec8adf83cb940ba073a3409ca85dbb5ae592b704f95193e7d2539a3bc in / "
                },
                {
                    "created": "2022-05-28T01:20:23.517927306Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:40:43.867278969Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:40:43.968640677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:40:44.069861365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:40:44.16707172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:41:02.292068204Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-05-28T05:41:02.521321171Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-05-28T05:41:02.628330759Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-28T05:41:02.734790261Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-28T05:41:02.842054139Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-28T05:41:02.934962537Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:41:03.032708457Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:41:03.129920688Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T05:41:03.228946845Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ad6562704f3759fb50f0d3de5f80a38f65a85e709b77fd24491253990f30b6be",
                    "sha256:58354abe5f0e9e8cf3849a697cd86bfefb8448b9deb74e3d13aa3e4c98dd3665",
                    "sha256:53ae81198b641f2911dfc469313edde2fe690bf230efaa823a4aa836d08336e0",
                    "sha256:57d3fc88cb3f95fe3daac8591dabe1c161af0fcfd4cf099aa3f994c888ac7877",
                    "sha256:747b7a567071ddb822a072c4dadc2ef50ef6d1bf35ce477e9a559f1df1b7c571",
                    "sha256:33e3df466e11254954ba3b06301c93c066a1f699e2ddd80f0214340236d57935"
                ]
            }
        },
        "1.21-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:ebc24bc17c5a0e526e658e2473222556f40588eaf8b65995fd0eade2365602dc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container": "6267b0b64513d649f62fdcba05446c4f24d94ea820fbc80f41705a44df47915f",
            "container_config": {
                "Hostname": "6267b0b64513",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.21.6",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                ],
                "Image": "sha256:ebc24bc17c5a0e526e658e2473222556f40588eaf8b65995fd0eade2365602dc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2022-05-17T22:36:41.590296646Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:19:59.790636867Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d673d25da3a14ce1f6cf66e4c7fd4f4b85a3759a9d93efb3fd9ff852b5b56e4 in / "
                },
                {
                    "created": "2022-04-05T00:19:59.912662499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:21:55.233408317Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T07:21:55.329866853Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:29.954393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:30.049462176Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:40.682196333Z",
                    "created_by": "/bin/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat /etc/apk/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             && if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             && su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -O https://hg.nginx.org/pkg-oss/archive/688.tar.gz                 && PKGOSSCHECKSUM=\\\"a8ab6ff80ab67c6c9567a9103b52a42a5962e9c1bc7091b7710aaf553a3b484af61b0797dd9b048c518e371a6f69e34d474cfaaeaa116fd2824bffa1cd9d4718 *688.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r 688.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf 688.tar.gz                 && cd pkg-oss-688                 && cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del .build-deps             && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     && apk del .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         && runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     && apk add --no-cache $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     && apk add --no-cache tzdata     && apk add --no-cache curl ca-certificates     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-05-17T22:36:40.872850948Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-05-17T22:36:40.977973703Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:36:41.084102821Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:36:41.192654248Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:36:41.289629462Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:41.38864134Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:41.4925392Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:41.590296646Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4fc242d58285699eca05db3cc7c7122a2b8e014d9481f323bd9277baacfa0628",
                    "sha256:4721bfafc708dfeaa56a501848081b91415899e5b9f0d26612be42a8ff43e8e2",
                    "sha256:45b275e8a06dd152de9b17143ad936aa971fb8abaa0f6d977f7d822c61604abc",
                    "sha256:a43749efe4ecc3db4ca41063def5021c8567743c5ea13865d2e620beab1017ea",
                    "sha256:d6dd885da0bbd4268a39c7f79fc0e87c8de6641ba4ea33e5ef7e1caa64f8429d",
                    "sha256:c0e7c94aefd832d1ee1c565ddcac257ca7851f41c3ef6f079722c69f14f0662b"
                ]
            }
        },
        "1.22": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.22.1",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:ac11e640bcc062b08915a6000b288c5aa95dbe4ce6a12a813e7ee5a8bf4e7bcc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container": "44be101c917b913dee6a5c152a88fef7d2fc5298c3ee73fbce71044fc64efa89",
            "container_config": {
                "Hostname": "44be101c917b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.22.1",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                ],
                "Image": "sha256:ac11e640bcc062b08915a6000b288c5aa95dbe4ce6a12a813e7ee5a8bf4e7bcc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2023-03-28T22:20:54.277869356Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-23T01:30:27.508854764Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:60911afdacfdc216e44115addb5f3cc07f4166e8a4adf7be94a58aacc327ad63 in / "
                },
                {
                    "created": "2023-03-23T01:30:27.77150784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-23T15:59:59.126668063Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-23T16:00:37.957650199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.22.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T22:20:36.704470059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T22:20:36.786810267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T22:20:53.4095277Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-28T22:20:53.651213669Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-28T22:20:53.742225926Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-28T22:20:53.835762825Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-28T22:20:53.930238457Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-28T22:20:54.016780164Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T22:20:54.105946463Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T22:20:54.192247117Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T22:20:54.277869356Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3af14c9a24c941c626553628cf1942dcd94d40729777f2fcfbcd3b8a3dfccdd6",
                    "sha256:a4f34e6fb432af40bc358fdc8f92ee363bffb9d7bc8705398e4e7c99e62943c7",
                    "sha256:25bbf4633bb359400f036a83be0d8a07ba3eab347135a489f8ec616404847dbe",
                    "sha256:21f8452ebfb1832ec9822af3c7cbc9d258bfd607724a2e79065720e6065ef82a",
                    "sha256:ccf4f419ba49069147fcee4a7765515d9e0ac91aa1086eaa3d2e0e28578346c3",
                    "sha256:9543dec06aa8367938aea1f3d584ef8b19c65f140a06c26659f45a6c06687dde"
                ]
            }
        },
        "1.23": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:cf8eb14e5e1fe937f2c9743b3ba9cd960c80eb2fdb9d31e8be0371757cd67369",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container": "f90712356fe5561919c8fe9411b7882410f45d6346a6e02918eed4b4c4bd73a1",
            "container_config": {
                "Hostname": "f90712356fe5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.4",
                    "NJS_VERSION=0.7.11",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"nginx\" \"-g\" \"daemon off;\"]"
                ],
                "Image": "sha256:cf8eb14e5e1fe937f2c9743b3ba9cd960c80eb2fdb9d31e8be0371757cd67369",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2023-05-23T08:51:38.011802405Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-05-23T01:20:14.056617575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88252a7f118b4d6f55dd5baf49dbcaa053c9d6172c652963c1151fa76f625e44 in / "
                },
                {
                    "created": "2023-05-23T01:20:14.397263351Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:20.535844201Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:20.619959454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:20.704960322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.11",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:20.787909858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:37.14547227Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-05-23T08:51:37.397603262Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-05-23T08:51:37.486101947Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-23T08:51:37.607395197Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-23T08:51:37.691138773Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-05-23T08:51:37.767967517Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:37.847247223Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:37.929617507Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-23T08:51:38.011802405Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8cbe4b54fa88d8fc0198ea0cc3a5432aea41573e6a0ee26eca8c79f9fbfa40e3",
                    "sha256:5dd6bfd241b4f4d0bb0a784cd7cefe00829edce2fccb2fcad71244df6344abff",
                    "sha256:043198f57be0cb6dd81abe9dd01531faa8dd2879239dc3b798870c0604e1bb3c",
                    "sha256:2731b5cfb6163ee5f1fe6126edb946ef11660de5a949404cc76207bf8a9c0e6e",
                    "sha256:6791458b394218a2c05b055f952309afa42ec238b74d5165cf1e2ebe9ffe6a33",
                    "sha256:4d33db9fdf22934a1c6007dcfbf84184739d590324c998520553d7559a172cfb"
                ]
            }
        },
        "1.24": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.24.0",
                    "NJS_VERSION=0.7.12",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2023-04-11T19:57:20Z",
            "history": [
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d6b639e8b6bcc01149b7486502558088f9816200063ca72b91a1f989bc8d85e in / "
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "ENV NGINX_VERSION=1.24.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "ENV NJS_VERSION=0.7.12",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "ENV PKG_RELEASE=1~bullseye",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "RUN /bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/usr/share/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T19:57:20Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:420179ad2efafbf953a0c75f68a4c9dfaf38a98643df97d415bce49b179895f7",
                    "sha256:13c8460bfc9a101c9d6fe94fc9c71f56a95fe69124ca0f51f08dc2b0dbd5956c",
                    "sha256:b9a187a24e195526ec928d77020241c6965abc70102d604fd424d7d7a3caf796",
                    "sha256:96c08fed6a4cb59eeeb7c0bd67f71a17e0e8981e29903dc589c07cfee160c815",
                    "sha256:29492f82bbc2d3446f771f4db2cf5afba6c73c40a834c2a74b27e461721b0870",
                    "sha256:bc4a3582faa9d8347cf764790d3a90c117d4c8a308f48e5716476380882d49ab"
                ]
            }
        },
        "1.25": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.25.5",
                    "NJS_VERSION=0.8.4",
                    "NJS_RELEASE=3~bookworm",
                    "PKG_RELEASE=1~bookworm"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "ArgsEscaped": true
            },
            "created": "2024-05-03T19:49:21Z",
            "history": [
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5aaace706aa00ff97d243daa2c29f5de88f124e1b97c570634f16eef90783286 in / "
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NGINX_VERSION=1.25.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_VERSION=0.8.4",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV NJS_RELEASE=3~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENV PKG_RELEASE=1~bookworm",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "RUN /bin/sh -c set -x     && groupadd --system --gid 101 nginx     && useradd --system --gid nginx --no-create-home --home /nonexistent --comment \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     NGINX_GPGKEY_PATH=/etc/apt/keyrings/nginx-archive-keyring.gpg;     export GNUPGHOME=\"$(mktemp -d)\";     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         gpg1 --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     gpg1 --export \"$NGINX_GPGKEY\" > \"$NGINX_GPGKEY_PATH\" ;     rm -rf \"$GNUPGHOME\";     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${NJS_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src [signed-by=$NGINX_GPGKEY_PATH] https://nginx.org/packages/mainline/debian/ bookworm nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY docker-entrypoint.sh / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "EXPOSE map[80/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "STOPSIGNAL SIGQUIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-03T19:49:21Z",
                    "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d4427064ecc46e3c2add169e9b5eafc7ed2be7861081ec925938ab628ac0e25",
                    "sha256:fc1cf9ca5139883943cc519cc3c57f0855395618f56d6431490fa735461156f1",
                    "sha256:747b290aeba888738176dcbf7382eb0f660f27e785b839592918b8ed291d5792",
                    "sha256:9f4d73e635f122031c04047f0e87fb224bef098a28700439bb4e72d0619aaad6",
                    "sha256:56f8fe6aedcdee31bdee17249b1e18434ce7ab5a1814e2193773b54d7f9db39a",
                    "sha256:7d2fd59c368c60f74214fc47399dcc35ef8513e26890a0c6004835bceabeb4c6",
                    "sha256:14773070094ddc0debcea4f38f0daa7dd8116858387e0c238fa96ae8047bc07e"
                ]
            }
        }
    }
}