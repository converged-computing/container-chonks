{
    "manifests": {
        "7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 3920,
                "digest": "sha256:78ab9c2522c62a28b7ce29b6b97f4fe582166109599f9b128358fd5fe9cae7a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51356334,
                    "digest": "sha256:51f5c6a04d83efd2d45c5fd59537218924bc46705e3de6ffc8bc07b51481610b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 158212910,
                    "digest": "sha256:2e9ce30f39de58cffbc5b8ea3eb015c165cceca6b8b1bd541ed9a4afc878a7dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                }
            ]
        },
        "7.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 3920,
                "digest": "sha256:78ab9c2522c62a28b7ce29b6b97f4fe582166109599f9b128358fd5fe9cae7a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51356334,
                    "digest": "sha256:51f5c6a04d83efd2d45c5fd59537218924bc46705e3de6ffc8bc07b51481610b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 158212910,
                    "digest": "sha256:2e9ce30f39de58cffbc5b8ea3eb015c165cceca6b8b1bd541ed9a4afc878a7dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                }
            ]
        },
        "7.10.1": {
            "name": "library/haskell",
            "tag": "7.10.1",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:9c6734d21ecdd4854ddeb925072df3f38ca1e094312f5d3fefa012dbb6e5b8b5"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:e5ad7970bc69d2ba62d2bbb4b80627273350e1982ff43bc1ca04a3215bc6da5b"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"5797d6f0588724eb33a9171b0a74efca9c34b788d5c453178c3b1b3f5f3800b6\",\"parent\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"created\":\"2015-05-25T04:49:21.483416022Z\",\"container\":\"fc6a45a9dc442bd4a3ae90f08634954ff522a906e64a81778c8f1d5061f9399d\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"ghci\\\"]\"],\"Image\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"ghci\"],\"Image\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"5797d6f0588724eb33a9171b0a74efca9c34b788d5c453178c3b1b3f5f3800b6\",\"parent\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"created\":\"2015-05-25T04:49:21.483416022Z\",\"container\":\"fc6a45a9dc442bd4a3ae90f08634954ff522a906e64a81778c8f1d5061f9399d\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"ghci\\\"]\"],\"Image\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"ghci\"],\"Image\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"7ccf538f0932c24fd60c535ebec5005859d09cd7d9a96965d94727ba1a376100\",\"parent\":\"24b174fedc94b281e89a4a98ea22d0187721af6a32bb50a2b8d2770d4a5381e3\",\"created\":\"2015-05-25T04:49:21.215397463Z\",\"container\":\"58568bacdd71f43084b39cd8b51ad87cdae6359a302ee3853b0752cf7793179b\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Image\":\"24b174fedc94b281e89a4a98ea22d0187721af6a32bb50a2b8d2770d4a5381e3\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"24b174fedc94b281e89a4a98ea22d0187721af6a32bb50a2b8d2770d4a5381e3\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"24b174fedc94b281e89a4a98ea22d0187721af6a32bb50a2b8d2770d4a5381e3\",\"parent\":\"821e4b7634f7f3d2048375f7f1b1827bfba971e384bb69956a2bc1ee088117dd\",\"created\":\"2015-05-25T04:49:18.996698115Z\",\"container\":\"22b48adc63710434337511cc50a0982fe0d16b89f0ef8fc804dc6ca481204cbd\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' \\u003e /etc/apt/sources.list.d/ghc.list \\u0026\\u0026     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 \\u0026\\u0026     apt-get update \\u0026\\u0026     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.10.1 happy-1.19.5 alex-3.1.4             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev \\u0026\\u0026     rm -rf /var/lib/apt/lists/*\"],\"Image\":\"821e4b7634f7f3d2048375f7f1b1827bfba971e384bb69956a2bc1ee088117dd\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"821e4b7634f7f3d2048375f7f1b1827bfba971e384bb69956a2bc1ee088117dd\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":581411194}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"821e4b7634f7f3d2048375f7f1b1827bfba971e384bb69956a2bc1ee088117dd\",\"parent\":\"a0788a895cfa39b191e66ec6cf5f0a36eeb282ed0b1a5104b6bfc22dd75ad391\",\"created\":\"2015-05-25T04:48:02.379235063Z\",\"container\":\"7d753a2ce355bf6e8e0a866e0271c5aed9b70f68d1a3c0faa41955279b18facb\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV LANG=C.UTF-8\"],\"Image\":\"a0788a895cfa39b191e66ec6cf5f0a36eeb282ed0b1a5104b6bfc22dd75ad391\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"a0788a895cfa39b191e66ec6cf5f0a36eeb282ed0b1a5104b6bfc22dd75ad391\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"a0788a895cfa39b191e66ec6cf5f0a36eeb282ed0b1a5104b6bfc22dd75ad391\",\"parent\":\"df2a0347c9d081fa05ecb83669dcae5830c67b0676a6d6358218e55d8a45969c\",\"created\":\"2015-05-25T04:48:02.087574799Z\",\"container\":\"842060b8bcf30b7dc7393dc005b9ef2a9414505d371734ede97d746eb8980c0f\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) MAINTAINER Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\"],\"Image\":\"df2a0347c9d081fa05ecb83669dcae5830c67b0676a6d6358218e55d8a45969c\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"docker_version\":\"1.6.0\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"df2a0347c9d081fa05ecb83669dcae5830c67b0676a6d6358218e55d8a45969c\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":[],\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"df2a0347c9d081fa05ecb83669dcae5830c67b0676a6d6358218e55d8a45969c\",\"parent\":\"39bb80489af75406073b5364c9c326134015140e1f7976a370a8bd446889e6f8\",\"created\":\"2015-05-19T22:52:11.971198787Z\",\"container\":\"3bdca81ddad8424ebec16b448f6f474479ddfa4233fce7b995c48487fed138d0\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"39bb80489af75406073b5364c9c326134015140e1f7976a370a8bd446889e6f8\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"39bb80489af75406073b5364c9c326134015140e1f7976a370a8bd446889e6f8\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":{}},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":0}\n"
                },
                {
                    "v1Compatibility": "{\"id\":\"39bb80489af75406073b5364c9c326134015140e1f7976a370a8bd446889e6f8\",\"created\":\"2015-05-19T22:52:10.262428631Z\",\"container\":\"eadddbb61a324df066e6e04566fff387fa63012b9e8c7fa071b145e4c69cd0de\",\"container_config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:5de08c81c24812789a17b011e78ec7ba4d27360add394de74ba5f530a3e2d764 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.6.0\",\"config\":{\"Hostname\":\"eadddbb61a32\",\"Domainname\":\"\",\"User\":\"\",\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"Cpuset\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"PortSpecs\":null,\"ExposedPorts\":null,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"NetworkDisabled\":false,\"MacAddress\":\"\",\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":125171162}\n"
                }
            ],
            "schemaVersion": 1,
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "RARR:KW3Q:YJNP:3YLE:SK4B:GZCL:Y5HN:PH35:SGVF:Z5XG:KC4A:MX46",
                            "kty": "EC",
                            "x": "OR3csaJb5Ibm83KPMHl-Di_IeOBj2ekXyCr_doZ5X8E",
                            "y": "7_YMtOiVrNPp_mhEU1RS8wqNbO_f98IstrmaOLgSO3s"
                        },
                        "alg": "ES256"
                    },
                    "signature": "5Un-70NBgh1s-XnBDK9zmZVmOy6wh5tivTGBd9uUPPyWgjw-20cqfe90grN-M0kasMPM0qD0DRAt6l8K_8yKyQ",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjE2MDU5LCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDg6NTI6MjlaIn0"
                }
            ]
        },
        "7.10.2": {
            "schemaVersion": 1,
            "name": "library/haskell",
            "tag": "7.10.2",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:cb7d91d0c92cc2da09e913ab3adc5a5492733e0b5e3028b0623183c8706a0417"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:81cc5f26a6a083c024fb4138326e4d00f9a73f60c0e2a4399e1f7617ebe8c6c9"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"1393ea90c810aea93809db2d63f9e52b1307788bbe7e817cdd9392e19916643a\",\"parent\":\"20ab85375316e3f84b49c4e4ff82d29314c6087ae36c66eaec778358fff4753e\",\"created\":\"2016-01-07T15:51:47.11452819Z\",\"container\":\"3015ec004ee98b5f8f526e93ea5f44e9d98348e5fb371b1a2ea100d55a756135\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"ghci\\\"]\"],\"Image\":\"20ab85375316e3f84b49c4e4ff82d29314c6087ae36c66eaec778358fff4753e\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"ghci\"],\"Image\":\"20ab85375316e3f84b49c4e4ff82d29314c6087ae36c66eaec778358fff4753e\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"20ab85375316e3f84b49c4e4ff82d29314c6087ae36c66eaec778358fff4753e\",\"parent\":\"a8df90c28c6315c860a5ec280373551932ccfe0a077c6b38bf7d56be87d4aeb6\",\"created\":\"2016-01-07T15:51:46.566331017Z\",\"container\":\"997b58414979bd03942a874c181f434d60d042f3b518bcfd3951edffeb1dcafd\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Image\":\"a8df90c28c6315c860a5ec280373551932ccfe0a077c6b38bf7d56be87d4aeb6\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"a8df90c28c6315c860a5ec280373551932ccfe0a077c6b38bf7d56be87d4aeb6\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"a8df90c28c6315c860a5ec280373551932ccfe0a077c6b38bf7d56be87d4aeb6\",\"parent\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"created\":\"2016-01-07T15:51:41.671437681Z\",\"container\":\"2e1081d8eca5ca320948b4168a27d871575c7a90548fff90f0b07f54e6d11672\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' \\u003e /etc/apt/sources.list.d/ghc.list \\u0026\\u0026     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 \\u0026\\u0026     apt-get update \\u0026\\u0026     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.10.2 happy-1.19.5 alex-3.1.4             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates \\u0026\\u0026     rm -rf /var/lib/apt/lists/*\"],\"Image\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":588816964}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"parent\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"created\":\"2016-01-07T15:50:25.850437109Z\",\"container\":\"4aed5bb50c7d346d7fcae74afa8af1bf568a94168099476d21bf86a15e3ecbbe\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV LANG=C.UTF-8\"],\"Image\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"parent\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"created\":\"2016-01-07T15:50:25.35457345Z\",\"container\":\"5cbfe2e69a420528f254423e9f8a1c5e6c36ff47c8de99b5ea6decfb16e2f826\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) MAINTAINER Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\"],\"Image\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"parent\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"created\":\"2016-01-07T01:07:11.982173215Z\",\"container\":\"1a9173a681853efd414d3ffc036871ac5a6c46e2aefbe839d186cce595d48a4d\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.8.3\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"created\":\"2016-01-07T01:07:09.137000568Z\",\"container\":\"30db80bfe262b3b727e41bfe6e627075f5918e4b9f5c1276e626ff20a3dd6725\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:0098703cdfd5b5eda3aececc4d4600b0fb4b753e19c832c73df4f9d5fdcf3598 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.8.3\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":125115267}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "6U6W:2S6I:6LAW:Q6G5:5JZB:LKJN:MO2N:O7MA:XB5N:RZHB:UI6E:C3Q7",
                            "kty": "EC",
                            "x": "JWiYI5W_PfEZ201qyxr-1Sy2FXuzdqzzSYK8OWZ7NXo",
                            "y": "UyUMAonUuNw3POgXNH70iuY0i8i05WJ9_nC7PjAADgU"
                        },
                        "alg": "ES256"
                    },
                    "signature": "MDTYCNwhFEw_DsZHKRf5f8SXVL2ekMmEcM5YdsWiF0iosKZQQYI_NxKL83pX3VBp3XdY3uSnnM4V4rJOpq3olA",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjExODMwLCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDg6NTI6MzBaIn0"
                }
            ]
        },
        "7.10.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/octet-stream",
                "size": 3920,
                "digest": "sha256:78ab9c2522c62a28b7ce29b6b97f4fe582166109599f9b128358fd5fe9cae7a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51356334,
                    "digest": "sha256:51f5c6a04d83efd2d45c5fd59537218924bc46705e3de6ffc8bc07b51481610b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 158212910,
                    "digest": "sha256:2e9ce30f39de58cffbc5b8ea3eb015c165cceca6b8b1bd541ed9a4afc878a7dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                }
            ]
        },
        "7.8": {
            "schemaVersion": 1,
            "name": "library/haskell",
            "tag": "7.8",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:3d8d6e82ec1324e349ae4b16578daeae9db4881b90c86734add486a612298b64"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:81cc5f26a6a083c024fb4138326e4d00f9a73f60c0e2a4399e1f7617ebe8c6c9"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"144fdf8d852d9318feb3996fde748fb7f4060b5b932b4e6d36efc6403ca2ebf6\",\"parent\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"created\":\"2016-01-07T15:54:11.578636656Z\",\"container\":\"b70aeb04554a0d3272a7d155d92de7276ae554bb64b4bf82fcb79fcac14d1fab\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"ghci\\\"]\"],\"Image\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"ghci\"],\"Image\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"parent\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"created\":\"2016-01-07T15:54:10.978541777Z\",\"container\":\"db79d07d62478c07f17e4486c191ac923c342a129ef7c1b012005b2e0dc848f6\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Image\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"parent\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"created\":\"2016-01-07T15:54:06.583340205Z\",\"container\":\"5cadc7d9c33e108e6b7fd9c890bca7185f28bf0cb13133ec4388774bdef4dc51\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' \\u003e /etc/apt/sources.list.d/ghc.list \\u0026\\u0026     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 \\u0026\\u0026     apt-get update \\u0026\\u0026     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.8.4 happy-1.19.4 alex-3.1.3             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates \\u0026\\u0026     rm -rf /var/lib/apt/lists/*\"],\"Image\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":522655783}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"parent\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"created\":\"2016-01-07T15:50:25.850437109Z\",\"container\":\"4aed5bb50c7d346d7fcae74afa8af1bf568a94168099476d21bf86a15e3ecbbe\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV LANG=C.UTF-8\"],\"Image\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"parent\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"created\":\"2016-01-07T15:50:25.35457345Z\",\"container\":\"5cbfe2e69a420528f254423e9f8a1c5e6c36ff47c8de99b5ea6decfb16e2f826\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) MAINTAINER Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\"],\"Image\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"parent\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"created\":\"2016-01-07T01:07:11.982173215Z\",\"container\":\"1a9173a681853efd414d3ffc036871ac5a6c46e2aefbe839d186cce595d48a4d\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.8.3\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"created\":\"2016-01-07T01:07:09.137000568Z\",\"container\":\"30db80bfe262b3b727e41bfe6e627075f5918e4b9f5c1276e626ff20a3dd6725\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:0098703cdfd5b5eda3aececc4d4600b0fb4b753e19c832c73df4f9d5fdcf3598 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.8.3\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":125115267}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "ZYSU:6KXW:XJEQ:3W23:EPGU:BJZJ:PW2Q:N4QY:RFFZ:7TYF:AP3U:X365",
                            "kty": "EC",
                            "x": "RUy2eQH0ExOJ43sHDC6uYlKwnxnehnnbE7pOaNnAz4s",
                            "y": "hS13gaTO6u7JDh4iia4siSUWIOqfIE4igg-N1d3rj_A"
                        },
                        "alg": "ES256"
                    },
                    "signature": "Q_5jU1UqF9XseUUNm4A_oVX_caZNdqeYbFYpXg4WdCw4PoaOrclUN3El03qxux9aOCeGPmFPrDCdBS77X04eoA",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjExODIyLCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDg6NTI6MzJaIn0"
                }
            ]
        },
        "7.8.4": {
            "schemaVersion": 1,
            "name": "library/haskell",
            "tag": "7.8.4",
            "architecture": "amd64",
            "fsLayers": [
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:3d8d6e82ec1324e349ae4b16578daeae9db4881b90c86734add486a612298b64"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4"
                },
                {
                    "blobSum": "sha256:81cc5f26a6a083c024fb4138326e4d00f9a73f60c0e2a4399e1f7617ebe8c6c9"
                }
            ],
            "history": [
                {
                    "v1Compatibility": "{\"id\":\"144fdf8d852d9318feb3996fde748fb7f4060b5b932b4e6d36efc6403ca2ebf6\",\"parent\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"created\":\"2016-01-07T15:54:11.578636656Z\",\"container\":\"b70aeb04554a0d3272a7d155d92de7276ae554bb64b4bf82fcb79fcac14d1fab\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"ghci\\\"]\"],\"Image\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"ghci\"],\"Image\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4d029aea6c2e510b1335c8a8bfeca933181ee72cd15c85ebb79c3cf54ec3b4cf\",\"parent\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"created\":\"2016-01-07T15:54:10.978541777Z\",\"container\":\"db79d07d62478c07f17e4486c191ac923c342a129ef7c1b012005b2e0dc848f6\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Image\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/root/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.8.4/bin:/opt/happy/1.19.4/bin:/opt/alex/3.1.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"429e86f8fcd59e4fc1c836e161c5f873552aac59f6532d61f9c649df225cd644\",\"parent\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"created\":\"2016-01-07T15:54:06.583340205Z\",\"container\":\"5cadc7d9c33e108e6b7fd9c890bca7185f28bf0cb13133ec4388774bdef4dc51\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' \\u003e /etc/apt/sources.list.d/ghc.list \\u0026\\u0026     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 \\u0026\\u0026     apt-get update \\u0026\\u0026     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.8.4 happy-1.19.4 alex-3.1.3             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates \\u0026\\u0026     rm -rf /var/lib/apt/lists/*\"],\"Image\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":522655783}"
                },
                {
                    "v1Compatibility": "{\"id\":\"4b4f516d82a1951a6d601ebdfe4aa452410884f451c6f6fe75c0a3bea629ce61\",\"parent\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"created\":\"2016-01-07T15:50:25.850437109Z\",\"container\":\"4aed5bb50c7d346d7fcae74afa8af1bf568a94168099476d21bf86a15e3ecbbe\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ENV LANG=C.UTF-8\"],\"Image\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"LANG=C.UTF-8\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"17350d8f0bbfaf4ec1a50b90942541df39de22e93781d411d9608948d928b059\",\"parent\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"created\":\"2016-01-07T15:50:25.35457345Z\",\"container\":\"5cbfe2e69a420528f254423e9f8a1c5e6c36ff47c8de99b5ea6decfb16e2f826\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) MAINTAINER Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\"],\"Image\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"docker_version\":\"1.8.3\",\"author\":\"Chris Biscardi \\u003cchris@christopherbiscardi.com\\u003e\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":[\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"],\"Cmd\":[\"/bin/bash\"],\"Image\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":[],\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"d4b2ba78e3b4b44bdfab5b625c210d6e410debba50446520fe1c3e1a5ee9cdea\",\"parent\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"created\":\"2016-01-07T01:07:11.982173215Z\",\"container\":\"1a9173a681853efd414d3ffc036871ac5a6c46e2aefbe839d186cce595d48a4d\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [\\\"/bin/bash\\\"]\"],\"Image\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.8.3\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/bash\"],\"Image\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\"}"
                },
                {
                    "v1Compatibility": "{\"id\":\"cb6fb082434ea9d7f25798e96abc06cb176cbe910970ec86874555e7c9fbc04a\",\"created\":\"2016-01-07T01:07:09.137000568Z\",\"container\":\"30db80bfe262b3b727e41bfe6e627075f5918e4b9f5c1276e626ff20a3dd6725\",\"container_config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) ADD file:0098703cdfd5b5eda3aececc4d4600b0fb4b753e19c832c73df4f9d5fdcf3598 in /\"],\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"docker_version\":\"1.8.3\",\"config\":{\"Hostname\":\"30db80bfe262\",\"Domainname\":\"\",\"User\":\"\",\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Env\":null,\"Cmd\":null,\"Image\":\"\",\"Volumes\":null,\"WorkingDir\":\"\",\"Entrypoint\":null,\"OnBuild\":null,\"Labels\":null},\"architecture\":\"amd64\",\"os\":\"linux\",\"Size\":125115267}"
                }
            ],
            "signatures": [
                {
                    "header": {
                        "jwk": {
                            "crv": "P-256",
                            "kid": "S7IR:PSTM:R66X:GFCW:S73Q:AVEM:FVPA:IQHM:Q4MS:752L:NGNZ:DYPD",
                            "kty": "EC",
                            "x": "kpZU8d_GQnvgeyALTWK2PjiW83lpE7UUToVkO6PTuok",
                            "y": "ghCFa8_cqnZCP_bXTI_ZajGmYe3aqZyE8sHAyEtmpCc"
                        },
                        "alg": "ES256"
                    },
                    "signature": "F6HLlDocovuQFDAr41jc32sMeaJUwJ0G_tVuiez9-7UBlvSOy6ErPSMeT9PGuW1uEjsriNLbz_Lp4jV5iWTmqg",
                    "protected": "eyJmb3JtYXRMZW5ndGgiOjExODI0LCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMjQtMDUtMzBUMDg6NTI6MzNaIn0"
                }
            ]
        },
        "8": {
            "manifests": [
                {
                    "digest": "sha256:3fa8506447e892ba21664d9e7bfd25b67589e4975aa041eef7e226722dde43e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:d3480cdf6b81e5b1e4b94f585ed3db1834ac1fedcd3fe45c0bde6babfad4fe34",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2225
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8-buster": {
            "manifests": [
                {
                    "digest": "sha256:3fa8506447e892ba21664d9e7bfd25b67589e4975aa041eef7e226722dde43e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:d3480cdf6b81e5b1e4b94f585ed3db1834ac1fedcd3fe45c0bde6babfad4fe34",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2225
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8-slim": {
            "manifests": [
                {
                    "digest": "sha256:55068d380e9438d69947174434f054678d221122c7b1617141e743d47df77799",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:53c8f5802b9eece9be66921c3efd657b2c8b1c4fd71ebde2a135570c8ad7c472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:55068d380e9438d69947174434f054678d221122c7b1617141e743d47df77799",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:53c8f5802b9eece9be66921c3efd657b2c8b1c4fd71ebde2a135570c8ad7c472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8-stretch": {
            "manifests": [
                {
                    "digest": "sha256:100f8fb7d7d8d64adb5e106fe8136b8d4cbdc03aeb2cbd145a7597d74b69bafb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:794d0b251286b18fcf971024f6e47e17debcdb745a9c6b9c58e1d47a25c7cc00",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.0.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3708,
                "digest": "sha256:3fc5a5260db00ef1c1538dd8a9b5bd0ae569c18b1f1c32c0a69469081c1e9882"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51361210,
                    "digest": "sha256:5040bd2983909aa8896b9932438c3f1479d25ae837a5f6220242a264d0221f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 204171275,
                    "digest": "sha256:7c5f380bbf7c7705489d99b69ad9ce521053e9f02adf2887f409c6f1bf9083d4"
                }
            ]
        },
        "8.0.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:794d0b251286b18fcf971024f6e47e17debcdb745a9c6b9c58e1d47a25c7cc00",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.10": {
            "manifests": [
                {
                    "digest": "sha256:3fa8506447e892ba21664d9e7bfd25b67589e4975aa041eef7e226722dde43e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:d3480cdf6b81e5b1e4b94f585ed3db1834ac1fedcd3fe45c0bde6babfad4fe34",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2225
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10-buster": {
            "manifests": [
                {
                    "digest": "sha256:3fa8506447e892ba21664d9e7bfd25b67589e4975aa041eef7e226722dde43e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:d3480cdf6b81e5b1e4b94f585ed3db1834ac1fedcd3fe45c0bde6babfad4fe34",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2225
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10-slim": {
            "manifests": [
                {
                    "digest": "sha256:55068d380e9438d69947174434f054678d221122c7b1617141e743d47df77799",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:53c8f5802b9eece9be66921c3efd657b2c8b1c4fd71ebde2a135570c8ad7c472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:55068d380e9438d69947174434f054678d221122c7b1617141e743d47df77799",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:53c8f5802b9eece9be66921c3efd657b2c8b1c4fd71ebde2a135570c8ad7c472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10-stretch": {
            "manifests": [
                {
                    "digest": "sha256:100f8fb7d7d8d64adb5e106fe8136b8d4cbdc03aeb2cbd145a7597d74b69bafb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.1": {
            "manifests": [
                {
                    "digest": "sha256:cc016ae4db1c22d9fa1046b7461470b8ca3c825444475a45e1f5f693dcb5216a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.1-buster": {
            "manifests": [
                {
                    "digest": "sha256:cc016ae4db1c22d9fa1046b7461470b8ca3c825444475a45e1f5f693dcb5216a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.1-stretch": {
            "manifests": [
                {
                    "digest": "sha256:a9f574bdc53feacbe412aa7302d60993d7426e9f41c67d0b83c3aa43d47206a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.2": {
            "manifests": [
                {
                    "digest": "sha256:990f4ee34d3e1f39d008db97b4a811819ca21aca562b888fef40eee9f9c067fb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:990f4ee34d3e1f39d008db97b4a811819ca21aca562b888fef40eee9f9c067fb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.2-stretch": {
            "manifests": [
                {
                    "digest": "sha256:96224bbddf0779bb26fb4a2e7ab7c6f80af0f5d5744e590cb06703ec967bc931",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.3": {
            "manifests": [
                {
                    "digest": "sha256:c2fed5a546c74dd991d5f507776de2b487434c5114a8b43c0711db8be26a13b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.3-buster": {
            "manifests": [
                {
                    "digest": "sha256:c2fed5a546c74dd991d5f507776de2b487434c5114a8b43c0711db8be26a13b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.3-stretch": {
            "manifests": [
                {
                    "digest": "sha256:5eedd040249277683e7e4997ff788f5b382de935c8e3d22edef87258ba72f6b4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.4": {
            "manifests": [
                {
                    "digest": "sha256:30ecdaee0fd59cdcddf004a68c2d8995ba4212a64106abc3e411742c606e59ac",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1167
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.4-buster": {
            "manifests": [
                {
                    "digest": "sha256:30ecdaee0fd59cdcddf004a68c2d8995ba4212a64106abc3e411742c606e59ac",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1167
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.4-stretch": {
            "manifests": [
                {
                    "digest": "sha256:d1a6190ae50aa65f56c8083cc5bfad260d01c811c421201effdca18538082aed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.5": {
            "manifests": [
                {
                    "digest": "sha256:d41f532f50c2ec745ebff1b7318298b424435f06bff9eb29cae765f516f5d28b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.5-buster": {
            "manifests": [
                {
                    "digest": "sha256:d41f532f50c2ec745ebff1b7318298b424435f06bff9eb29cae765f516f5d28b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.5-stretch": {
            "manifests": [
                {
                    "digest": "sha256:3c8a2ad64aa83c0b61f2acb8bbc4c12a84bcd41371b45e2aaf16c63950f02f74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.6": {
            "manifests": [
                {
                    "digest": "sha256:c1a8243a163fc8ddd54536c29df072d8c360a15cd21cdfeb3b8ce39b3e48602c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.6-buster": {
            "manifests": [
                {
                    "digest": "sha256:c1a8243a163fc8ddd54536c29df072d8c360a15cd21cdfeb3b8ce39b3e48602c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.6-stretch": {
            "manifests": [
                {
                    "digest": "sha256:863bc6499e74056caa39b87e2c918a4ce8169614ebe27a601e3702f7036f59d6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.7": {
            "manifests": [
                {
                    "digest": "sha256:3fa8506447e892ba21664d9e7bfd25b67589e4975aa041eef7e226722dde43e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:d3480cdf6b81e5b1e4b94f585ed3db1834ac1fedcd3fe45c0bde6babfad4fe34",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2225
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.7-buster": {
            "manifests": [
                {
                    "digest": "sha256:3fa8506447e892ba21664d9e7bfd25b67589e4975aa041eef7e226722dde43e1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:d3480cdf6b81e5b1e4b94f585ed3db1834ac1fedcd3fe45c0bde6babfad4fe34",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2225
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.7-slim": {
            "manifests": [
                {
                    "digest": "sha256:55068d380e9438d69947174434f054678d221122c7b1617141e743d47df77799",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:53c8f5802b9eece9be66921c3efd657b2c8b1c4fd71ebde2a135570c8ad7c472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.7-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:55068d380e9438d69947174434f054678d221122c7b1617141e743d47df77799",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:53c8f5802b9eece9be66921c3efd657b2c8b1c4fd71ebde2a135570c8ad7c472",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.10.7-stretch": {
            "manifests": [
                {
                    "digest": "sha256:100f8fb7d7d8d64adb5e106fe8136b8d4cbdc03aeb2cbd145a7597d74b69bafb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:f7ab3da15a468f67139b42a8011818e54d0a791f149530f7b77af2921fd80201",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.2.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:c3f2a24cd1615db531f0de9d3d5653a2bf5c3f7cd0c454c21bf41b9b0a65be29",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.2.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:f7ab3da15a468f67139b42a8011818e54d0a791f149530f7b77af2921fd80201",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.4": {
            "manifests": [
                {
                    "digest": "sha256:abbaf24b19bec56f3c0dd8c6f8c61150fb0b219893cd7a44167f1999ccc0ba64",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 742
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.4.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:dfbb3272e0a5b2f3e088b207f4920c343e942a5767fe2dde6c47c14a19b693f8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.4.4": {
            "manifests": [
                {
                    "digest": "sha256:abbaf24b19bec56f3c0dd8c6f8c61150fb0b219893cd7a44167f1999ccc0ba64",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 742
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.6": {
            "manifests": [
                {
                    "digest": "sha256:64352f810b8cbbc79ec55150cc88105586a280c0f0ea0cedfa0ed2e9f1454de1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.6.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:76492c46948944086d282647bb3c1651fb68dd4bc7eec8dc6fa49cc79f46dd95",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                }
            ]
        },
        "8.6.3": {
            "manifests": [
                {
                    "digest": "sha256:24ce4bfddd008ace5fd72452337d51e24e506577549947376c177a01775c62a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 742
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.6.5": {
            "manifests": [
                {
                    "digest": "sha256:64352f810b8cbbc79ec55150cc88105586a280c0f0ea0cedfa0ed2e9f1454de1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8": {
            "manifests": [
                {
                    "digest": "sha256:a2fff27f485dac664822ed6da4f4af5235b4889044a120d865a7c6b8eae2f476",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8-buster": {
            "manifests": [
                {
                    "digest": "sha256:a2fff27f485dac664822ed6da4f4af5235b4889044a120d865a7c6b8eae2f476",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8-stretch": {
            "manifests": [
                {
                    "digest": "sha256:32a88a1e57ebf1c786e744f205c584c0373ba7efbbfd2c7677729f0fe5af1e31",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.1": {
            "manifests": [
                {
                    "digest": "sha256:fe192e7290b390d504781577ba4bff6cf756f61a249c985e5d69c25e2b6f26bb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 742
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.2": {
            "manifests": [
                {
                    "digest": "sha256:cfc92ba4934d7b77d42ca3da97fec26b09fc8da212db8f9605d4f34d342d737d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.3": {
            "manifests": [
                {
                    "digest": "sha256:08d9abf330305268bf77b251cd41d04372536712d495122bc6c8d054dbdfe3c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.3-buster": {
            "manifests": [
                {
                    "digest": "sha256:08d9abf330305268bf77b251cd41d04372536712d495122bc6c8d054dbdfe3c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.3-stretch": {
            "manifests": [
                {
                    "digest": "sha256:3015ab849fcbdcec98c83ce8d12ec4d3b0bb1e2e8eadbde968da5b2477aa83b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.4": {
            "manifests": [
                {
                    "digest": "sha256:a2fff27f485dac664822ed6da4f4af5235b4889044a120d865a7c6b8eae2f476",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.4-buster": {
            "manifests": [
                {
                    "digest": "sha256:a2fff27f485dac664822ed6da4f4af5235b4889044a120d865a7c6b8eae2f476",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "8.8.4-stretch": {
            "manifests": [
                {
                    "digest": "sha256:32a88a1e57ebf1c786e744f205c584c0373ba7efbbfd2c7677729f0fe5af1e31",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1165
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9-buster": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9-slim": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9-stretch": {
            "manifests": [
                {
                    "digest": "sha256:34c311ac7a66006825886b5bfcfb7b83302671ce6169c75949e2961a54461c70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0": {
            "manifests": [
                {
                    "digest": "sha256:15e0ac1a5cd5a06c11261d4d277d55af192090fd6f0a2d0f373380e8aa613fb9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2013
                },
                {
                    "digest": "sha256:65f2e4633070ecdfdd0da11228f0ed5c4e032411fe25553697c59179ad18b768",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2226
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0-buster": {
            "manifests": [
                {
                    "digest": "sha256:15e0ac1a5cd5a06c11261d4d277d55af192090fd6f0a2d0f373380e8aa613fb9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2013
                },
                {
                    "digest": "sha256:65f2e4633070ecdfdd0da11228f0ed5c4e032411fe25553697c59179ad18b768",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2226
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0-slim": {
            "manifests": [
                {
                    "digest": "sha256:5710fa70133299563bd119b5b18a67eb0e71c18fe0bd465602aa8bcdc82a3c13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:9e09be743653c70e4941417ae0bc613e287b9214efd1b625a97dae922ac73f38",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1590
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:5710fa70133299563bd119b5b18a67eb0e71c18fe0bd465602aa8bcdc82a3c13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:9e09be743653c70e4941417ae0bc613e287b9214efd1b625a97dae922ac73f38",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1590
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0-stretch": {
            "manifests": [
                {
                    "digest": "sha256:34c311ac7a66006825886b5bfcfb7b83302671ce6169c75949e2961a54461c70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.1": {
            "manifests": [
                {
                    "digest": "sha256:34de02ba8d12addef808bb4f540f452912156dc1153bedea48ee2a2e543e805a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1379
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.1-buster": {
            "manifests": [
                {
                    "digest": "sha256:34de02ba8d12addef808bb4f540f452912156dc1153bedea48ee2a2e543e805a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1379
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.1-stretch": {
            "manifests": [
                {
                    "digest": "sha256:34c311ac7a66006825886b5bfcfb7b83302671ce6169c75949e2961a54461c70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.2": {
            "manifests": [
                {
                    "digest": "sha256:15e0ac1a5cd5a06c11261d4d277d55af192090fd6f0a2d0f373380e8aa613fb9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2013
                },
                {
                    "digest": "sha256:65f2e4633070ecdfdd0da11228f0ed5c4e032411fe25553697c59179ad18b768",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2226
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:15e0ac1a5cd5a06c11261d4d277d55af192090fd6f0a2d0f373380e8aa613fb9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2013
                },
                {
                    "digest": "sha256:65f2e4633070ecdfdd0da11228f0ed5c4e032411fe25553697c59179ad18b768",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2226
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.2-slim": {
            "manifests": [
                {
                    "digest": "sha256:5710fa70133299563bd119b5b18a67eb0e71c18fe0bd465602aa8bcdc82a3c13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:9e09be743653c70e4941417ae0bc613e287b9214efd1b625a97dae922ac73f38",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1590
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.0.2-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:5710fa70133299563bd119b5b18a67eb0e71c18fe0bd465602aa8bcdc82a3c13",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:9e09be743653c70e4941417ae0bc613e287b9214efd1b625a97dae922ac73f38",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1590
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2": {
            "manifests": [
                {
                    "digest": "sha256:09294045998542d9ffa88e364a7b1da00233571d2e7f83b7b30b14b27f8ca55d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:1a93b47bf893fdbe766d2b4a69bf540c85e3e4ff042b140d03303f4d3c58db45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:09294045998542d9ffa88e364a7b1da00233571d2e7f83b7b30b14b27f8ca55d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:1a93b47bf893fdbe766d2b4a69bf540c85e3e4ff042b140d03303f4d3c58db45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2-slim": {
            "manifests": [
                {
                    "digest": "sha256:262e12d8aaebd58636d2754e61c0399ee850dbdaf686b7de55995cd3e8ca02a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:186a51c354039fd5cfe1b0c39b959498410940c553eed00382a857c355de2ffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:262e12d8aaebd58636d2754e61c0399ee850dbdaf686b7de55995cd3e8ca02a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:186a51c354039fd5cfe1b0c39b959498410940c553eed00382a857c355de2ffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.1": {
            "manifests": [
                {
                    "digest": "sha256:4943c75589fe0d1c6bdd515d823db8f8daa9671762cdb9feecee6fcbb47848df",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1379
                },
                {
                    "digest": "sha256:e5ca01f6b2fd2591e57b3742cc1d290295010639040a782ff071a0830d7d3422",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1167
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.1-buster": {
            "manifests": [
                {
                    "digest": "sha256:4943c75589fe0d1c6bdd515d823db8f8daa9671762cdb9feecee6fcbb47848df",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1379
                },
                {
                    "digest": "sha256:e5ca01f6b2fd2591e57b3742cc1d290295010639040a782ff071a0830d7d3422",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1167
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.1-slim": {
            "manifests": [
                {
                    "digest": "sha256:25e083d69359aa62f2f0555c68568e8f4e9a4c31a9f93a4277287c8d97bbce77",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                },
                {
                    "digest": "sha256:099fe2a124c376ec5cd9b47b01960c3175a5962af0bfcb66bab7d6d08b7fbeb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.1-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:25e083d69359aa62f2f0555c68568e8f4e9a4c31a9f93a4277287c8d97bbce77",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                },
                {
                    "digest": "sha256:099fe2a124c376ec5cd9b47b01960c3175a5962af0bfcb66bab7d6d08b7fbeb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.2": {
            "manifests": [
                {
                    "digest": "sha256:108bc14ec0eb3e7c0b883c911a4d755032f7af2aba3f69b25da6b32f9df03f23",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1379
                },
                {
                    "digest": "sha256:3baa16e33ec215278c8574bf61d913f2a4bcffc51a9faf4c5139f5b339fcaf99",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1167
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:108bc14ec0eb3e7c0b883c911a4d755032f7af2aba3f69b25da6b32f9df03f23",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1379
                },
                {
                    "digest": "sha256:3baa16e33ec215278c8574bf61d913f2a4bcffc51a9faf4c5139f5b339fcaf99",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1167
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.2-slim": {
            "manifests": [
                {
                    "digest": "sha256:2474a7aabbd3d16422e6cc23d9d840dcb571a8e2de9cb50de108b36f85111e88",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                },
                {
                    "digest": "sha256:93bafb8904be380c053fc76ae9beab297f99ab797cbebeff8e7a6960dac8308e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.2-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:2474a7aabbd3d16422e6cc23d9d840dcb571a8e2de9cb50de108b36f85111e88",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                },
                {
                    "digest": "sha256:93bafb8904be380c053fc76ae9beab297f99ab797cbebeff8e7a6960dac8308e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.3": {
            "manifests": [
                {
                    "digest": "sha256:51e250369e4671a15c247cdc5047397be88d7eb8e95b97b0fd9f417854a78bec",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:0639a09e92811bbf528f4043d361d4f03e9062725e42a023eb081f40381dfa5a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2011
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.3-buster": {
            "manifests": [
                {
                    "digest": "sha256:51e250369e4671a15c247cdc5047397be88d7eb8e95b97b0fd9f417854a78bec",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:0639a09e92811bbf528f4043d361d4f03e9062725e42a023eb081f40381dfa5a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2011
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.3-slim": {
            "manifests": [
                {
                    "digest": "sha256:f67fb72573ca7bc4c86d40cdcb86e71149e743e1192975770452045751922ed6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                },
                {
                    "digest": "sha256:3a79878b07e52d8c487b8ac17e768f78e6ceb89e3155ab28efa41d26a79a9002",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.3-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:f67fb72573ca7bc4c86d40cdcb86e71149e743e1192975770452045751922ed6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1378
                },
                {
                    "digest": "sha256:3a79878b07e52d8c487b8ac17e768f78e6ceb89e3155ab28efa41d26a79a9002",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.4": {
            "manifests": [
                {
                    "digest": "sha256:dceec00f8ad896c327c2b5c77ba91c9824bf3e26a837f538ccfb80fb379dc52f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:13423d60f9fbca2f588924aa222b6dd446dd5483be6dadc9cf0c03b7231bed91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2012
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.4-buster": {
            "manifests": [
                {
                    "digest": "sha256:dceec00f8ad896c327c2b5c77ba91c9824bf3e26a837f538ccfb80fb379dc52f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:13423d60f9fbca2f588924aa222b6dd446dd5483be6dadc9cf0c03b7231bed91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2012
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.4-slim": {
            "manifests": [
                {
                    "digest": "sha256:063884d367ba3cf8d5d05eff5d9cfbbc669f57ad5c557f2e76ca046e91aa3608",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:d629f6988e2203d8f570b3e5c04399f7bab361cc65afbeb7f63ee3e77a704a91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.4-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:063884d367ba3cf8d5d05eff5d9cfbbc669f57ad5c557f2e76ca046e91aa3608",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:d629f6988e2203d8f570b3e5c04399f7bab361cc65afbeb7f63ee3e77a704a91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.5": {
            "manifests": [
                {
                    "digest": "sha256:9c2de5946151384852b8444582aeecaee394c63b1f7f386ee9b07508c85b47c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:0e7f149a588c33b4222f21cd484bc1b45ca1a27e8c1353c1713ef5bd319ee546",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2224
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.5-buster": {
            "manifests": [
                {
                    "digest": "sha256:9c2de5946151384852b8444582aeecaee394c63b1f7f386ee9b07508c85b47c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:0e7f149a588c33b4222f21cd484bc1b45ca1a27e8c1353c1713ef5bd319ee546",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2224
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.5-slim": {
            "manifests": [
                {
                    "digest": "sha256:b48aa48e4a92419172a572569fcc4957a3f791b90836b76b28686a0a2a964da1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:601c326c6083d37d632c25272939d7cfcf2dd0b344529906e87c82472ee8120a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.5-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:b48aa48e4a92419172a572569fcc4957a3f791b90836b76b28686a0a2a964da1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:601c326c6083d37d632c25272939d7cfcf2dd0b344529906e87c82472ee8120a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.6": {
            "manifests": [
                {
                    "digest": "sha256:1cbb00abe4caef6e04ee8cb84b703852523e6b5f277754d05cd0254ac401262a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:40573228245926cb9ae98b5d1a7268065a674134a3a5e43799cd8bbd0581cc6e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2224
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.6-buster": {
            "manifests": [
                {
                    "digest": "sha256:1cbb00abe4caef6e04ee8cb84b703852523e6b5f277754d05cd0254ac401262a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:40573228245926cb9ae98b5d1a7268065a674134a3a5e43799cd8bbd0581cc6e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2224
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.6-slim": {
            "manifests": [
                {
                    "digest": "sha256:992455026a70f3db7fba2adfd6817d7933b541bd59b94894b1d04764c9721453",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:ca4ab3802cb0550225be0df4aa25000485c45b0b6e0d9f719ee5dafb975d7aa9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.6-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:992455026a70f3db7fba2adfd6817d7933b541bd59b94894b1d04764c9721453",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:ca4ab3802cb0550225be0df4aa25000485c45b0b6e0d9f719ee5dafb975d7aa9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.7": {
            "manifests": [
                {
                    "digest": "sha256:5c410c97d34497a83a67482964d9e5d8d93e6a981158e2e109eaad5fadf702a6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:93d188e87d41af7eb50de724f737fb4f734d3b63ac046f94c7c661bcc819ab42",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.7-buster": {
            "manifests": [
                {
                    "digest": "sha256:5c410c97d34497a83a67482964d9e5d8d93e6a981158e2e109eaad5fadf702a6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:93d188e87d41af7eb50de724f737fb4f734d3b63ac046f94c7c661bcc819ab42",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.7-slim": {
            "manifests": [
                {
                    "digest": "sha256:48dedc551778cbaa6e5987bc9849ae47fb9423664e5f1919641a12d5a1ff4fb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:393804cf9e25b69c91e4d15821b4942ab042726698c2c170cfff7ad88cd02e66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.7-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:48dedc551778cbaa6e5987bc9849ae47fb9423664e5f1919641a12d5a1ff4fb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:393804cf9e25b69c91e4d15821b4942ab042726698c2c170cfff7ad88cd02e66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.8": {
            "manifests": [
                {
                    "digest": "sha256:09294045998542d9ffa88e364a7b1da00233571d2e7f83b7b30b14b27f8ca55d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:1a93b47bf893fdbe766d2b4a69bf540c85e3e4ff042b140d03303f4d3c58db45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.8-buster": {
            "manifests": [
                {
                    "digest": "sha256:09294045998542d9ffa88e364a7b1da00233571d2e7f83b7b30b14b27f8ca55d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:1a93b47bf893fdbe766d2b4a69bf540c85e3e4ff042b140d03303f4d3c58db45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.8-slim": {
            "manifests": [
                {
                    "digest": "sha256:262e12d8aaebd58636d2754e61c0399ee850dbdaf686b7de55995cd3e8ca02a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:186a51c354039fd5cfe1b0c39b959498410940c553eed00382a857c355de2ffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.2.8-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:262e12d8aaebd58636d2754e61c0399ee850dbdaf686b7de55995cd3e8ca02a1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:186a51c354039fd5cfe1b0c39b959498410940c553eed00382a857c355de2ffc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4": {
            "manifests": [
                {
                    "digest": "sha256:c78075a5b347e15650623bf9e49cbe740277c9eae666cbab407a5ed9a342ee8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:e0c781968248175802cd2a4df24eb68028afb4c807411ee61117361d81958fcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4-buster": {
            "manifests": [
                {
                    "digest": "sha256:c78075a5b347e15650623bf9e49cbe740277c9eae666cbab407a5ed9a342ee8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:e0c781968248175802cd2a4df24eb68028afb4c807411ee61117361d81958fcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4-slim": {
            "manifests": [
                {
                    "digest": "sha256:8afe9554c72ddc67918e9a9126e3d7cc773c974b7235fe73968e5da4db9c7339",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:13d7f9dcaec7ee387f59eaa89f33baaaaa5f1dbfa88271bf0d7a654401df37ea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:8afe9554c72ddc67918e9a9126e3d7cc773c974b7235fe73968e5da4db9c7339",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:13d7f9dcaec7ee387f59eaa89f33baaaaa5f1dbfa88271bf0d7a654401df37ea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.1": {
            "manifests": [
                {
                    "digest": "sha256:54fc6c7e4927da8e3a6ae3e2bf3ec97481d860455adab48b8cff5f6916a69652",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:95afe59f3b9e6cbc762fa6c70202c4db7fb80355d8d8420de700cc61f3175739",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2011
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.1-buster": {
            "manifests": [
                {
                    "digest": "sha256:54fc6c7e4927da8e3a6ae3e2bf3ec97481d860455adab48b8cff5f6916a69652",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:95afe59f3b9e6cbc762fa6c70202c4db7fb80355d8d8420de700cc61f3175739",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2011
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.1-slim": {
            "manifests": [
                {
                    "digest": "sha256:71c1f4e1bfef93fa4d2c0d8bc0fc7ec390cd05581150623f9fa76ae0f4f7e0d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:26589bb37813d119473f7c6cb040cdd297269e04f8dc67ea5c1eb44f7ea78779",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.1-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:71c1f4e1bfef93fa4d2c0d8bc0fc7ec390cd05581150623f9fa76ae0f4f7e0d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:26589bb37813d119473f7c6cb040cdd297269e04f8dc67ea5c1eb44f7ea78779",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.2": {
            "manifests": [
                {
                    "digest": "sha256:7033d4a88827928604961041177511b0741c076c2c7e8e744fd2e9a169bcd9cc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:3e8a2a5e2299d87b662cb8a6eebe8967279dadf98a44b45efb6fa21bd5df3372",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2012
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:7033d4a88827928604961041177511b0741c076c2c7e8e744fd2e9a169bcd9cc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:3e8a2a5e2299d87b662cb8a6eebe8967279dadf98a44b45efb6fa21bd5df3372",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2012
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.2-slim": {
            "manifests": [
                {
                    "digest": "sha256:abe90883e6917c4aa6c68ab437f4f507db369297180109e594b3492969661a32",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:2f0d6896431197669a7dfad8ea25e9d0e8be9e85e0b978993bc58eee225dd75a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.2-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:abe90883e6917c4aa6c68ab437f4f507db369297180109e594b3492969661a32",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:2f0d6896431197669a7dfad8ea25e9d0e8be9e85e0b978993bc58eee225dd75a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.3": {
            "manifests": [
                {
                    "digest": "sha256:2c4ef6aa5b5b24cc68e1c33a6358d1d0f3fcdfc3a9bf39f54514ea2b6fea21bd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:fdd11d76260a8f4bfdfe8171ab213f50d20d611b265cb18884c76a9ba55cad05",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2012
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.3-buster": {
            "manifests": [
                {
                    "digest": "sha256:2c4ef6aa5b5b24cc68e1c33a6358d1d0f3fcdfc3a9bf39f54514ea2b6fea21bd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2224
                },
                {
                    "digest": "sha256:fdd11d76260a8f4bfdfe8171ab213f50d20d611b265cb18884c76a9ba55cad05",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2012
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.3-slim": {
            "manifests": [
                {
                    "digest": "sha256:56c0f01c2948b788a0bbc547430757cda1de6e4b261e9c7ec7d8ba9557926acb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:d060bbf1cd4e77ffbd60d8337b4e1418ad2ca72047a87c94234d02e52a13a500",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.3-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:56c0f01c2948b788a0bbc547430757cda1de6e4b261e9c7ec7d8ba9557926acb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:d060bbf1cd4e77ffbd60d8337b4e1418ad2ca72047a87c94234d02e52a13a500",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1166
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.4": {
            "manifests": [
                {
                    "digest": "sha256:6d6a8a20577b6dfe8957288c48b7b388e231342f81ab98ef9f2d7b9de218ab8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:9be911dda53ed55e44e3cd7f51d4a583888073b948ce2718672c5a513cc72366",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2224
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.4-buster": {
            "manifests": [
                {
                    "digest": "sha256:6d6a8a20577b6dfe8957288c48b7b388e231342f81ab98ef9f2d7b9de218ab8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2223
                },
                {
                    "digest": "sha256:9be911dda53ed55e44e3cd7f51d4a583888073b948ce2718672c5a513cc72366",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2224
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.4-slim": {
            "manifests": [
                {
                    "digest": "sha256:8883999eadb21b764a857279b14336a22e64ff9446226f32f10e60175c2b3a1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:faeea62ba0495ea4196d10f125797ca50e6bc20293652bcbd2ccc169a2be2a04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.4-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:8883999eadb21b764a857279b14336a22e64ff9446226f32f10e60175c2b3a1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:faeea62ba0495ea4196d10f125797ca50e6bc20293652bcbd2ccc169a2be2a04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.5": {
            "manifests": [
                {
                    "digest": "sha256:4c256abb899e945d140d4fbe03342fe8c4fd2b1838e478ca946cc67b7a3f06cc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:1e5dac7b294ddde3a1df47bcd0ac6c117c2817a76b5be5a168245c8b487c9e1d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.5-buster": {
            "manifests": [
                {
                    "digest": "sha256:4c256abb899e945d140d4fbe03342fe8c4fd2b1838e478ca946cc67b7a3f06cc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:1e5dac7b294ddde3a1df47bcd0ac6c117c2817a76b5be5a168245c8b487c9e1d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.5-slim": {
            "manifests": [
                {
                    "digest": "sha256:5853f4d84618f91545e9522b47a6e609f842d6fc85c5cb6393bf7606e10991cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:6e4eef4e7708682417b2893cd94d1199d9b283757a086bf73fdfb3dfb3354a1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.5-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:5853f4d84618f91545e9522b47a6e609f842d6fc85c5cb6393bf7606e10991cd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:6e4eef4e7708682417b2893cd94d1199d9b283757a086bf73fdfb3dfb3354a1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.6": {
            "manifests": [
                {
                    "digest": "sha256:ee2a63f261fd3105f820e5e59860a4dce0826c1e99a03687304cf6577a627e7d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:f944965190ef34144a1d33a32e4197b50faa406ccec3a4b6ed6f6af1204c98ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.6-buster": {
            "manifests": [
                {
                    "digest": "sha256:ee2a63f261fd3105f820e5e59860a4dce0826c1e99a03687304cf6577a627e7d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:f944965190ef34144a1d33a32e4197b50faa406ccec3a4b6ed6f6af1204c98ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.6-slim": {
            "manifests": [
                {
                    "digest": "sha256:39cc7ea010befd810bcf7ad16c6a52386816a738b469b0b0136d1010f09185ab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:aca654d71d0000f8cb1041dfb77334c048823ddbed8fe3fdbb136799b1936561",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.6-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:39cc7ea010befd810bcf7ad16c6a52386816a738b469b0b0136d1010f09185ab",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:aca654d71d0000f8cb1041dfb77334c048823ddbed8fe3fdbb136799b1936561",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.7": {
            "manifests": [
                {
                    "digest": "sha256:83415ee552f20d721587c2df541a952b28d3bdaf5ef8572fdb70929239901562",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:80347229213bacd059170ce980b671d6205c4180b485b695528bbf89e40f1719",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.7-buster": {
            "manifests": [
                {
                    "digest": "sha256:83415ee552f20d721587c2df541a952b28d3bdaf5ef8572fdb70929239901562",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:80347229213bacd059170ce980b671d6205c4180b485b695528bbf89e40f1719",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.7-slim": {
            "manifests": [
                {
                    "digest": "sha256:9200972ba54cacb51308d0f28823acfda6e2f6d7bf842dec3c423f94ec08a7ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:d2b9f7dec3b42d8fc2554c1817f4fc92ba81c2b66e2642a271644a62a8ab295f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.7-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:9200972ba54cacb51308d0f28823acfda6e2f6d7bf842dec3c423f94ec08a7ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:d2b9f7dec3b42d8fc2554c1817f4fc92ba81c2b66e2642a271644a62a8ab295f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.8": {
            "manifests": [
                {
                    "digest": "sha256:c78075a5b347e15650623bf9e49cbe740277c9eae666cbab407a5ed9a342ee8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:e0c781968248175802cd2a4df24eb68028afb4c807411ee61117361d81958fcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.8-buster": {
            "manifests": [
                {
                    "digest": "sha256:c78075a5b347e15650623bf9e49cbe740277c9eae666cbab407a5ed9a342ee8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:e0c781968248175802cd2a4df24eb68028afb4c807411ee61117361d81958fcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.8-slim": {
            "manifests": [
                {
                    "digest": "sha256:8afe9554c72ddc67918e9a9126e3d7cc773c974b7235fe73968e5da4db9c7339",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:13d7f9dcaec7ee387f59eaa89f33baaaaa5f1dbfa88271bf0d7a654401df37ea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.4.8-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:8afe9554c72ddc67918e9a9126e3d7cc773c974b7235fe73968e5da4db9c7339",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:13d7f9dcaec7ee387f59eaa89f33baaaaa5f1dbfa88271bf0d7a654401df37ea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6": {
            "manifests": [
                {
                    "digest": "sha256:772877aaafbb84301aa1f68fb2dcbfb305598b9c12c751ef39ca1df2b5d6d258",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:902467c4936f93530325a7663bc841df49fa41e4752c5241669ca8fdd724775c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6-buster": {
            "manifests": [
                {
                    "digest": "sha256:772877aaafbb84301aa1f68fb2dcbfb305598b9c12c751ef39ca1df2b5d6d258",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:902467c4936f93530325a7663bc841df49fa41e4752c5241669ca8fdd724775c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6-slim": {
            "manifests": [
                {
                    "digest": "sha256:04a7293eb792b82335dffa7f08532657517ed9b4f01d52c1b499ad22deb3c6b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:c830ebf875dcc81dd26821c6b398a2dd45b4574a20cf4ebb48da68423a4345c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:04a7293eb792b82335dffa7f08532657517ed9b4f01d52c1b499ad22deb3c6b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:c830ebf875dcc81dd26821c6b398a2dd45b4574a20cf4ebb48da68423a4345c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.2": {
            "manifests": [
                {
                    "digest": "sha256:0f037e1ad13f671ee46b175dd745ae1d3483f99cdf8f7ab13825ac182c5dfbae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:a2ca82eaef961bfc55c0ee1f185c8a83da043bd3f90c68da303aa79afb7f533b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:0f037e1ad13f671ee46b175dd745ae1d3483f99cdf8f7ab13825ac182c5dfbae",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:a2ca82eaef961bfc55c0ee1f185c8a83da043bd3f90c68da303aa79afb7f533b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.2-slim": {
            "manifests": [
                {
                    "digest": "sha256:d28bd762c6013dd57190771aaa18f948aa45aa43fc469235da9effa06a2d1fad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:ca504e05614cdf448f53e2fc250d85053bfd54c7be246103165874cdf8558a53",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.2-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:d28bd762c6013dd57190771aaa18f948aa45aa43fc469235da9effa06a2d1fad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:ca504e05614cdf448f53e2fc250d85053bfd54c7be246103165874cdf8558a53",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.3": {
            "manifests": [
                {
                    "digest": "sha256:2ca634f58f9486558ca8893ef218aaf0e45221e5ee343f3532f975b6b13a89a2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:5d82db053eb640e770b29f7e955f8df0bf24436b036a19a830debd0a4d006dbb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.3-buster": {
            "manifests": [
                {
                    "digest": "sha256:2ca634f58f9486558ca8893ef218aaf0e45221e5ee343f3532f975b6b13a89a2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:5d82db053eb640e770b29f7e955f8df0bf24436b036a19a830debd0a4d006dbb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.3-slim": {
            "manifests": [
                {
                    "digest": "sha256:4fb5b8a6302769f6e3093fa763b1171eb640cc2bfd71fde0ba2c192fe962bb6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:3a8e26cabc28afacdc951fdd82e29c2bb739a8bc187e5b7bede9df2a7aaca4bc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.3-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:4fb5b8a6302769f6e3093fa763b1171eb640cc2bfd71fde0ba2c192fe962bb6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:3a8e26cabc28afacdc951fdd82e29c2bb739a8bc187e5b7bede9df2a7aaca4bc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.4": {
            "manifests": [
                {
                    "digest": "sha256:030753085c272117259be2dab206610ba77bcc701d15d0ea3251adc636fe9fee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:fae6875e7af0d477a4f64522d5bdbada9c6f343c6116e7da965000647d050a3a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.4-buster": {
            "manifests": [
                {
                    "digest": "sha256:030753085c272117259be2dab206610ba77bcc701d15d0ea3251adc636fe9fee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:fae6875e7af0d477a4f64522d5bdbada9c6f343c6116e7da965000647d050a3a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.4-slim": {
            "manifests": [
                {
                    "digest": "sha256:6a30f3ffdb6569868ce7670b50b3f5bd0dcd9586f4a02ff0dc7a61f046e4e55a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:89d174caaf2ada341449492d1f0911a3494f30076f6b671dd70bab7c509624e0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.4-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:6a30f3ffdb6569868ce7670b50b3f5bd0dcd9586f4a02ff0dc7a61f046e4e55a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:89d174caaf2ada341449492d1f0911a3494f30076f6b671dd70bab7c509624e0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.5": {
            "manifests": [
                {
                    "digest": "sha256:772877aaafbb84301aa1f68fb2dcbfb305598b9c12c751ef39ca1df2b5d6d258",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:902467c4936f93530325a7663bc841df49fa41e4752c5241669ca8fdd724775c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.5-buster": {
            "manifests": [
                {
                    "digest": "sha256:772877aaafbb84301aa1f68fb2dcbfb305598b9c12c751ef39ca1df2b5d6d258",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:902467c4936f93530325a7663bc841df49fa41e4752c5241669ca8fdd724775c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.5-slim": {
            "manifests": [
                {
                    "digest": "sha256:04a7293eb792b82335dffa7f08532657517ed9b4f01d52c1b499ad22deb3c6b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:c830ebf875dcc81dd26821c6b398a2dd45b4574a20cf4ebb48da68423a4345c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.6.5-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:04a7293eb792b82335dffa7f08532657517ed9b4f01d52c1b499ad22deb3c6b1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:c830ebf875dcc81dd26821c6b398a2dd45b4574a20cf4ebb48da68423a4345c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8-buster": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8-slim": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.1": {
            "manifests": [
                {
                    "digest": "sha256:5907c12f408a734fbf06dbd7ad854aa3e5dfda7908e2bcd833ac786cd11d9cc4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:8fd2abffb60291a0354d6cc0a71c405417a329c9b1e44a36719dfa6218821146",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.1-buster": {
            "manifests": [
                {
                    "digest": "sha256:5907c12f408a734fbf06dbd7ad854aa3e5dfda7908e2bcd833ac786cd11d9cc4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:8fd2abffb60291a0354d6cc0a71c405417a329c9b1e44a36719dfa6218821146",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.1-slim": {
            "manifests": [
                {
                    "digest": "sha256:063d2e6827fbee34623778cc399ef9a7325f9b8f4829a2f03b121f3c08a428ce",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:1546ed65cabf345de1c41fbf933a24e3d7826932b0eb9fe2cc7f5a8ab1d69e55",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.1-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:063d2e6827fbee34623778cc399ef9a7325f9b8f4829a2f03b121f3c08a428ce",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:1546ed65cabf345de1c41fbf933a24e3d7826932b0eb9fe2cc7f5a8ab1d69e55",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.2": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.2-buster": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.2-slim": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "9.8.2-slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "buster": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "latest": {
            "manifests": [
                {
                    "digest": "sha256:9b74c5e15fbd354728bb73c34497889a2d956687a49d14d216d707593ed08c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2012
                },
                {
                    "digest": "sha256:2dd6cb5acd4b4dc22ffd2b34b98d5a014d2de3620777b7a8dc53d63e7f54ef67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2013
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "slim": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "slim-buster": {
            "manifests": [
                {
                    "digest": "sha256:edc85fc3caa4e0c7448794565aa6d55c89b6231dc389c0766dc17d9c6e0e8233",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                },
                {
                    "digest": "sha256:045ca837ffdef3da9983c67df3a50e77ded446ae33a33f9393e08e8d46633701",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1378
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "stretch": {
            "manifests": [
                {
                    "digest": "sha256:34c311ac7a66006825886b5bfcfb7b83302671ce6169c75949e2961a54461c70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1377
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        }
    },
    "tags": [
        "7",
        "7.10",
        "7.10.1",
        "7.10.2",
        "7.10.3",
        "7.8",
        "7.8.4",
        "8",
        "8-buster",
        "8-slim",
        "8-slim-buster",
        "8-stretch",
        "8.0",
        "8.0.1",
        "8.0.2",
        "8.10",
        "8.10-buster",
        "8.10-slim",
        "8.10-slim-buster",
        "8.10-stretch",
        "8.10.1",
        "8.10.1-buster",
        "8.10.1-stretch",
        "8.10.2",
        "8.10.2-buster",
        "8.10.2-stretch",
        "8.10.3",
        "8.10.3-buster",
        "8.10.3-stretch",
        "8.10.4",
        "8.10.4-buster",
        "8.10.4-stretch",
        "8.10.5",
        "8.10.5-buster",
        "8.10.5-stretch",
        "8.10.6",
        "8.10.6-buster",
        "8.10.6-stretch",
        "8.10.7",
        "8.10.7-buster",
        "8.10.7-slim",
        "8.10.7-slim-buster",
        "8.10.7-stretch",
        "8.2",
        "8.2.1",
        "8.2.2",
        "8.4",
        "8.4.3",
        "8.4.4",
        "8.6",
        "8.6.2",
        "8.6.3",
        "8.6.5",
        "8.8",
        "8.8-buster",
        "8.8-stretch",
        "8.8.1",
        "8.8.2",
        "8.8.3",
        "8.8.3-buster",
        "8.8.3-stretch",
        "8.8.4",
        "8.8.4-buster",
        "8.8.4-stretch",
        "9",
        "9-buster",
        "9-slim",
        "9-slim-buster",
        "9-stretch",
        "9.0",
        "9.0-buster",
        "9.0-slim",
        "9.0-slim-buster",
        "9.0-stretch",
        "9.0.1",
        "9.0.1-buster",
        "9.0.1-stretch",
        "9.0.2",
        "9.0.2-buster",
        "9.0.2-slim",
        "9.0.2-slim-buster",
        "9.2",
        "9.2-buster",
        "9.2-slim",
        "9.2-slim-buster",
        "9.2.1",
        "9.2.1-buster",
        "9.2.1-slim",
        "9.2.1-slim-buster",
        "9.2.2",
        "9.2.2-buster",
        "9.2.2-slim",
        "9.2.2-slim-buster",
        "9.2.3",
        "9.2.3-buster",
        "9.2.3-slim",
        "9.2.3-slim-buster",
        "9.2.4",
        "9.2.4-buster",
        "9.2.4-slim",
        "9.2.4-slim-buster",
        "9.2.5",
        "9.2.5-buster",
        "9.2.5-slim",
        "9.2.5-slim-buster",
        "9.2.6",
        "9.2.6-buster",
        "9.2.6-slim",
        "9.2.6-slim-buster",
        "9.2.7",
        "9.2.7-buster",
        "9.2.7-slim",
        "9.2.7-slim-buster",
        "9.2.8",
        "9.2.8-buster",
        "9.2.8-slim",
        "9.2.8-slim-buster",
        "9.4",
        "9.4-buster",
        "9.4-slim",
        "9.4-slim-buster",
        "9.4.1",
        "9.4.1-buster",
        "9.4.1-slim",
        "9.4.1-slim-buster",
        "9.4.2",
        "9.4.2-buster",
        "9.4.2-slim",
        "9.4.2-slim-buster",
        "9.4.3",
        "9.4.3-buster",
        "9.4.3-slim",
        "9.4.3-slim-buster",
        "9.4.4",
        "9.4.4-buster",
        "9.4.4-slim",
        "9.4.4-slim-buster",
        "9.4.5",
        "9.4.5-buster",
        "9.4.5-slim",
        "9.4.5-slim-buster",
        "9.4.6",
        "9.4.6-buster",
        "9.4.6-slim",
        "9.4.6-slim-buster",
        "9.4.7",
        "9.4.7-buster",
        "9.4.7-slim",
        "9.4.7-slim-buster",
        "9.4.8",
        "9.4.8-buster",
        "9.4.8-slim",
        "9.4.8-slim-buster",
        "9.6",
        "9.6-buster",
        "9.6-slim",
        "9.6-slim-buster",
        "9.6.2",
        "9.6.2-buster",
        "9.6.2-slim",
        "9.6.2-slim-buster",
        "9.6.3",
        "9.6.3-buster",
        "9.6.3-slim",
        "9.6.3-slim-buster",
        "9.6.4",
        "9.6.4-buster",
        "9.6.4-slim",
        "9.6.4-slim-buster",
        "9.6.5",
        "9.6.5-buster",
        "9.6.5-slim",
        "9.6.5-slim-buster",
        "9.8",
        "9.8-buster",
        "9.8-slim",
        "9.8-slim-buster",
        "9.8.1",
        "9.8.1-buster",
        "9.8.1-slim",
        "9.8.1-slim-buster",
        "9.8.2",
        "9.8.2-buster",
        "9.8.2-slim",
        "9.8.2-slim-buster",
        "buster",
        "latest",
        "slim",
        "slim-buster",
        "stretch"
    ],
    "configs": {
        "7": {
            "architecture": "amd64",
            "author": "Chris Biscardi <chris@christopherbiscardi.com>",
            "config": {
                "Hostname": "b0cf605c7757",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "9e59a26519105c89fe35a9de39e2540f33e46c6e5eebcd14b9bd4ecbae64d460",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "0e4429ec64e1b725720fa3a9d8b77a18f666023fcfffa13c3ff0526af7e6152d",
            "container_config": {
                "Hostname": "b0cf605c7757",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) CMD [\"ghci\"]"
                ],
                "Image": "9e59a26519105c89fe35a9de39e2540f33e46c6e5eebcd14b9bd4ecbae64d460",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-05-24T01:21:30.050211012Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-05-23T22:57:20.19311015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d8521419ad6cfb6956ed26ab70a44422d512f82462046ba8e68b7dcb8283f7e in /"
                },
                {
                    "created": "2016-05-23T22:57:23.255025884Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-05-24T01:19:35.271717841Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Chris Biscardi <chris@christopherbiscardi.com>"
                },
                {
                    "created": "2016-05-24T01:19:36.207887351Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) ENV LANG=C.UTF-8"
                },
                {
                    "created": "2016-05-24T01:21:22.381340168Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     echo 'deb http://download.fpcomplete.com/debian/jessie stable main'| tee /etc/apt/sources.list.d/fpco.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.10.3 happy-1.19.5 alex-3.1.4             stack zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-05-24T01:21:29.21996888Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                },
                {
                    "created": "2016-05-24T01:21:30.050211012Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) CMD [\"ghci\"]"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e325932fe2aaf12080eb8c921887daf6c3b3b62a3ed1d1384a74c5ab2aa82e3d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "7.10": {
            "architecture": "amd64",
            "author": "Chris Biscardi <chris@christopherbiscardi.com>",
            "config": {
                "Hostname": "b0cf605c7757",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "9e59a26519105c89fe35a9de39e2540f33e46c6e5eebcd14b9bd4ecbae64d460",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "0e4429ec64e1b725720fa3a9d8b77a18f666023fcfffa13c3ff0526af7e6152d",
            "container_config": {
                "Hostname": "b0cf605c7757",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) CMD [\"ghci\"]"
                ],
                "Image": "9e59a26519105c89fe35a9de39e2540f33e46c6e5eebcd14b9bd4ecbae64d460",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-05-24T01:21:30.050211012Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-05-23T22:57:20.19311015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d8521419ad6cfb6956ed26ab70a44422d512f82462046ba8e68b7dcb8283f7e in /"
                },
                {
                    "created": "2016-05-23T22:57:23.255025884Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-05-24T01:19:35.271717841Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Chris Biscardi <chris@christopherbiscardi.com>"
                },
                {
                    "created": "2016-05-24T01:19:36.207887351Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) ENV LANG=C.UTF-8"
                },
                {
                    "created": "2016-05-24T01:21:22.381340168Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     echo 'deb http://download.fpcomplete.com/debian/jessie stable main'| tee /etc/apt/sources.list.d/fpco.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.10.3 happy-1.19.5 alex-3.1.4             stack zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-05-24T01:21:29.21996888Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                },
                {
                    "created": "2016-05-24T01:21:30.050211012Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) CMD [\"ghci\"]"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e325932fe2aaf12080eb8c921887daf6c3b3b62a3ed1d1384a74c5ab2aa82e3d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "7.10.3": {
            "architecture": "amd64",
            "author": "Chris Biscardi <chris@christopherbiscardi.com>",
            "config": {
                "Hostname": "b0cf605c7757",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "9e59a26519105c89fe35a9de39e2540f33e46c6e5eebcd14b9bd4ecbae64d460",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "0e4429ec64e1b725720fa3a9d8b77a18f666023fcfffa13c3ff0526af7e6152d",
            "container_config": {
                "Hostname": "b0cf605c7757",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) CMD [\"ghci\"]"
                ],
                "Image": "9e59a26519105c89fe35a9de39e2540f33e46c6e5eebcd14b9bd4ecbae64d460",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2016-05-24T01:21:30.050211012Z",
            "docker_version": "1.9.1",
            "history": [
                {
                    "created": "2016-05-23T22:57:20.19311015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d8521419ad6cfb6956ed26ab70a44422d512f82462046ba8e68b7dcb8283f7e in /"
                },
                {
                    "created": "2016-05-23T22:57:23.255025884Z",
                    "created_by": "/bin/sh -c #(nop) CMD [\"/bin/bash\"]"
                },
                {
                    "created": "2016-05-24T01:19:35.271717841Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) MAINTAINER Chris Biscardi <chris@christopherbiscardi.com>"
                },
                {
                    "created": "2016-05-24T01:19:36.207887351Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) ENV LANG=C.UTF-8"
                },
                {
                    "created": "2016-05-24T01:21:22.381340168Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     echo 'deb http://download.fpcomplete.com/debian/jessie stable main'| tee /etc/apt/sources.list.d/fpco.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-1.22 ghc-7.10.3 happy-1.19.5 alex-3.1.4             stack zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2016-05-24T01:21:29.21996888Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.3/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                },
                {
                    "created": "2016-05-24T01:21:30.050211012Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop) CMD [\"ghci\"]"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e325932fe2aaf12080eb8c921887daf6c3b3b62a3ed1d1384a74c5ab2aa82e3d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "354c2717d80cc5d877669e20f36822c129675defb246742e0e953307f1925319",
            "container_config": {
                "Hostname": "354c2717d80c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:15:42.822266063Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:13:07.532940482Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:07.634114572Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:08.210528622Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.301173223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.39957537Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:36.011468914Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:15:42.717699165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:42.822266063Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:9a54593893fa3a5cfab3b328a712878508a97c7a1fc7564ced5263ce951aff79"
                ]
            }
        },
        "8-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "354c2717d80cc5d877669e20f36822c129675defb246742e0e953307f1925319",
            "container_config": {
                "Hostname": "354c2717d80c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:15:42.822266063Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:13:07.532940482Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:07.634114572Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:08.210528622Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.301173223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.39957537Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:36.011468914Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:15:42.717699165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:42.822266063Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:9a54593893fa3a5cfab3b328a712878508a97c7a1fc7564ced5263ce951aff79"
                ]
            }
        },
        "8-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "546eacdee1ecbd15ef4c5c39f550fcafe3473a9c65ea3b6db4f86466ae682778",
            "container_config": {
                "Hostname": "546eacdee1ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:16:19.837385624Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:14:07.201130307Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.304120936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.905335072Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.187618692Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.285788191Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:15.940909122Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:16:19.724627159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:19.837385624Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:72834e7eee7509f08d18b3ebb97d1bdf6100f0b015437119b9eaf80af6ea38bd"
                ]
            }
        },
        "8-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "546eacdee1ecbd15ef4c5c39f550fcafe3473a9c65ea3b6db4f86466ae682778",
            "container_config": {
                "Hostname": "546eacdee1ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:16:19.837385624Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:14:07.201130307Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.304120936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.905335072Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.187618692Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.285788191Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:15.940909122Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:16:19.724627159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:19.837385624Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:72834e7eee7509f08d18b3ebb97d1bdf6100f0b015437119b9eaf80af6ea38bd"
                ]
            }
        },
        "8-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b445f8ca54d984e5a0911a382a8c3bdb7b53922553a56648af02906924d5e79",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c6ce0689572a819e4fed8b4253584cbad823a73469998973b83ed9b93005288",
            "container_config": {
                "Hostname": "1c6ce0689572",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b445f8ca54d984e5a0911a382a8c3bdb7b53922553a56648af02906924d5e79",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:05:23.188602228Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:04:02.417961264Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:04:02.651899309Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:04:02.845034003Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:07.446563383Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:05:11.27559677Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:11.527865579Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:11.735622822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:22.643286003Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:05:22.968072412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:23.188602228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:2794a71e2bdda04349d3deb366036a1ca9d9e5606d4f7e3a1da017aca0d205fe",
                    "sha256:dd68741a0379c28cee7bdc1878c941462bf81c6002e41bd13e69db977486d291"
                ]
            }
        },
        "8.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "c9aa76d9d154",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c6555971546dabc92478e65d28f631164a5c85ee075f5acb031b9af93c5b7ef",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "bd6d8e9f97b6b8655ed08bb350c5d35b9b281bf1ba6af7107363202587f72b25",
            "container_config": {
                "Hostname": "c9aa76d9d154",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c6555971546dabc92478e65d28f631164a5c85ee075f5acb031b9af93c5b7ef",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T01:36:30.498910073Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-07T23:04:40.78590236Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7333b3e0bc6479d2faed32e06d85f1975e5b23e13e75555aeed0f639770413b in / "
                },
                {
                    "created": "2017-09-07T23:04:41.195374308Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T01:34:39.035516546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T01:36:29.948529023Z",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-1.24 ghc-8.0.2 happy-1.19.5 alex-3.1.7             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ git curl &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.3.2/stack-1.3.2-linux-x86_64-static.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.3.2/stack-1.3.2-linux-x86_64-static.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2017-09-13T01:36:30.331072474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T01:36:30.498910073Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:18f9b4e2e1bcd5abe381a557c44cba379884c88f6049564f58fd8c10ab5733df",
                    "sha256:6eb3fe16f5726cd4dcf7500b93e2a09ec7f6df431dcb5b6c457c7e34dfffc4a4"
                ]
            }
        },
        "8.0.1": {
            "architecture": "amd64",
            "author": "Chris Biscardi <chris@christopherbiscardi.com>",
            "config": {
                "Hostname": "33842653d6db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98541d6861feb596156e2fa46bbfc3ca4826fd11d224dac25a222391f94808bf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "479e51799056263869f1f55e14825b2fb60f0967d7ec1e322aab179972823837",
            "container_config": {
                "Hostname": "33842653d6db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98541d6861feb596156e2fa46bbfc3ca4826fd11d224dac25a222391f94808bf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-01-17T00:46:18.827791855Z",
            "docker_version": "1.12.3",
            "history": [
                {
                    "created": "2017-01-16T20:35:09.371844927Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:89ecb642d662ee7edbb868340551106d51336c7e589fdaca4111725ec64da957 in / "
                },
                {
                    "created": "2017-01-16T20:35:16.587175871Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-17T00:44:50.515773361Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Chris Biscardi <chris@christopherbiscardi.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-17T00:44:50.803907552Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-17T00:46:17.855206572Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     echo 'deb http://download.fpcomplete.com/debian/jessie stable main'| tee /etc/apt/sources.list.d/fpco.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-1.24 ghc-8.0.1 happy-1.19.5 alex-3.1.7             stack zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ git &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-01-17T00:46:18.52708244Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-17T00:46:18.827791855Z",
                    "author": "Chris Biscardi <chris@christopherbiscardi.com>",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a2ae92ffcd29f7ededa0320f4a4fd709a723beae9a4e681696874932db7aee2c",
                    "sha256:80e695b992eceab2b3643fa242d1bd94ead5da4c7226df2687c787d19848fb37"
                ]
            }
        },
        "8.0.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "c9aa76d9d154",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c6555971546dabc92478e65d28f631164a5c85ee075f5acb031b9af93c5b7ef",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "bd6d8e9f97b6b8655ed08bb350c5d35b9b281bf1ba6af7107363202587f72b25",
            "container_config": {
                "Hostname": "c9aa76d9d154",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c6555971546dabc92478e65d28f631164a5c85ee075f5acb031b9af93c5b7ef",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-09-13T01:36:30.498910073Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-09-07T23:04:40.78590236Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d7333b3e0bc6479d2faed32e06d85f1975e5b23e13e75555aeed0f639770413b in / "
                },
                {
                    "created": "2017-09-07T23:04:41.195374308Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T01:34:39.035516546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T01:36:29.948529023Z",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-1.24 ghc-8.0.2 happy-1.19.5 alex-3.1.7             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ git curl &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.3.2/stack-1.3.2-linux-x86_64-static.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.3.2/stack-1.3.2-linux-x86_64-static.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2017-09-13T01:36:30.331072474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/1.24/bin:/opt/ghc/8.0.2/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-09-13T01:36:30.498910073Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:18f9b4e2e1bcd5abe381a557c44cba379884c88f6049564f58fd8c10ab5733df",
                    "sha256:6eb3fe16f5726cd4dcf7500b93e2a09ec7f6df431dcb5b6c457c7e34dfffc4a4"
                ]
            }
        },
        "8.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "354c2717d80cc5d877669e20f36822c129675defb246742e0e953307f1925319",
            "container_config": {
                "Hostname": "354c2717d80c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:15:42.822266063Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:13:07.532940482Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:07.634114572Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:08.210528622Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.301173223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.39957537Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:36.011468914Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:15:42.717699165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:42.822266063Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:9a54593893fa3a5cfab3b328a712878508a97c7a1fc7564ced5263ce951aff79"
                ]
            }
        },
        "8.10-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "354c2717d80cc5d877669e20f36822c129675defb246742e0e953307f1925319",
            "container_config": {
                "Hostname": "354c2717d80c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:15:42.822266063Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:13:07.532940482Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:07.634114572Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:08.210528622Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.301173223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.39957537Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:36.011468914Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:15:42.717699165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:42.822266063Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:9a54593893fa3a5cfab3b328a712878508a97c7a1fc7564ced5263ce951aff79"
                ]
            }
        },
        "8.10-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "546eacdee1ecbd15ef4c5c39f550fcafe3473a9c65ea3b6db4f86466ae682778",
            "container_config": {
                "Hostname": "546eacdee1ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:16:19.837385624Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:14:07.201130307Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.304120936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.905335072Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.187618692Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.285788191Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:15.940909122Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:16:19.724627159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:19.837385624Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:72834e7eee7509f08d18b3ebb97d1bdf6100f0b015437119b9eaf80af6ea38bd"
                ]
            }
        },
        "8.10-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "546eacdee1ecbd15ef4c5c39f550fcafe3473a9c65ea3b6db4f86466ae682778",
            "container_config": {
                "Hostname": "546eacdee1ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:16:19.837385624Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:14:07.201130307Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.304120936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.905335072Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.187618692Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.285788191Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:15.940909122Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:16:19.724627159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:19.837385624Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:72834e7eee7509f08d18b3ebb97d1bdf6100f0b015437119b9eaf80af6ea38bd"
                ]
            }
        },
        "8.10-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b445f8ca54d984e5a0911a382a8c3bdb7b53922553a56648af02906924d5e79",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c6ce0689572a819e4fed8b4253584cbad823a73469998973b83ed9b93005288",
            "container_config": {
                "Hostname": "1c6ce0689572",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b445f8ca54d984e5a0911a382a8c3bdb7b53922553a56648af02906924d5e79",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:05:23.188602228Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:04:02.417961264Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:04:02.651899309Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:04:02.845034003Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:07.446563383Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:05:11.27559677Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:11.527865579Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:11.735622822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:22.643286003Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:05:22.968072412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:23.188602228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:2794a71e2bdda04349d3deb366036a1ca9d9e5606d4f7e3a1da017aca0d205fe",
                    "sha256:dd68741a0379c28cee7bdc1878c941462bf81c6002e41bd13e69db977486d291"
                ]
            }
        },
        "8.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5bafc508b69a16eb6e6f3919b7bb973b1ad830a13adf4c2631c48a9b1a9a73d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9fed38f1a2167131ddf9e69377e8f0d7ec9123466c2966485d2db5f3eb2c9a18",
            "container_config": {
                "Hostname": "9fed38f1a216",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5bafc508b69a16eb6e6f3919b7bb973b1ad830a13adf4c2631c48a9b1a9a73d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T22:53:13.319302745Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T15:42:33.850643052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b03b5f551e3fbdf47ec609712007327828f7530cc3455c43bbcdcaf449a75a9 in / "
                },
                {
                    "created": "2020-08-04T15:42:34.128304606Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.268406952Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:52:27.492477777Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.702271413Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.898462577Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:28.079589345Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:28.267615881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:28.447157952Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:09.676528585Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.1 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:53:12.904809305Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.1 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-08-04T22:53:13.114699173Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:13.319302745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0ced13fcf9441aea6c4ee1defc1549772aa2df72017588a1e05bc11dd30b97b6",
                    "sha256:4b98b7eb99931795ce1ae48f183834b1f1ea131848b56596aa0c7af5da4770a4",
                    "sha256:25bfd5ef7caaf3932791e0ea9582f89e0f50b0985864065f10a876b7f788e388",
                    "sha256:5ebeaa6db5057585c541afe30db02d4ca213fb5a225882824e2fe5cfe7b63c68"
                ]
            }
        },
        "8.10.1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5bafc508b69a16eb6e6f3919b7bb973b1ad830a13adf4c2631c48a9b1a9a73d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9fed38f1a2167131ddf9e69377e8f0d7ec9123466c2966485d2db5f3eb2c9a18",
            "container_config": {
                "Hostname": "9fed38f1a216",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5bafc508b69a16eb6e6f3919b7bb973b1ad830a13adf4c2631c48a9b1a9a73d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T22:53:13.319302745Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T15:42:33.850643052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b03b5f551e3fbdf47ec609712007327828f7530cc3455c43bbcdcaf449a75a9 in / "
                },
                {
                    "created": "2020-08-04T15:42:34.128304606Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.268406952Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:52:27.492477777Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.702271413Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.898462577Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:28.079589345Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:28.267615881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:28.447157952Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:09.676528585Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.1 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:53:12.904809305Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.1 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-08-04T22:53:13.114699173Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:13.319302745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0ced13fcf9441aea6c4ee1defc1549772aa2df72017588a1e05bc11dd30b97b6",
                    "sha256:4b98b7eb99931795ce1ae48f183834b1f1ea131848b56596aa0c7af5da4770a4",
                    "sha256:25bfd5ef7caaf3932791e0ea9582f89e0f50b0985864065f10a876b7f788e388",
                    "sha256:5ebeaa6db5057585c541afe30db02d4ca213fb5a225882824e2fe5cfe7b63c68"
                ]
            }
        },
        "8.10.1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dfa6484ca6f7b5bbb54738635a9919f585d09d842f8ee85a2f4813c56c6f432c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4cbcf3d3e214fd29a54b3a0f13214f584f1e1cbaa7b13c4aae4d26127fea4e71",
            "container_config": {
                "Hostname": "4cbcf3d3e214",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dfa6484ca6f7b5bbb54738635a9919f585d09d842f8ee85a2f4813c56c6f432c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T22:54:37.195044417Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T15:45:32.745374737Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a28d8a949b7577768d87fcbac346797fc5f7bad0539625339edcd09a32d6bf77 in / "
                },
                {
                    "created": "2020-08-04T15:45:33.054443549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:35.452279524Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:53:35.655843691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:35.8382852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:36.022842275Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:36.210526182Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:36.423403388Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:36.62387413Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:24.638233455Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.1 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:54:33.782678955Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.1 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-08-04T22:54:35.458043534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:37.195044417Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4e38024e7e09292105545a625272c47b49dbd1db721040f2e85662e0a41ad587",
                    "sha256:3079d379c58dec5b0cde792753637273f91ced33d6861eb1e409113594bdc3b0",
                    "sha256:e7f7aeb548b241d7e3c0b156bcadafe8c6f151d4e7f7855523fba56fab3d29b3",
                    "sha256:ee6719c49c055975c95ba7312da2b704eff3394b7e0d77b21958a9487c8bf5b1"
                ]
            }
        },
        "8.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:14d29bc6634127427584e95534b5ccb8fe252d4f87e9404aed785702c61be30e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "765fe99797a6e41fcb186aaa2249fd98467384180d8aceef1c3c7fd0b3923b1d",
            "container_config": {
                "Hostname": "765fe99797a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:14d29bc6634127427584e95534b5ccb8fe252d4f87e9404aed785702c61be30e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-03-31T04:04:09.561333266Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:03:05.986978169Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.171794952Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.365689169Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.576362848Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.773809609Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.966468946Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:59.211229463Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.2 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:04:08.83800593Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.2 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-03-31T04:04:09.251430952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:09.561333266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:354847c41ab41d82083dcefb37f7ba76eacbada7ddd7eda7b88ced03e7a5a846",
                    "sha256:9a4be98224dae4c2df4fe33e11bbc7f3d0f4100d7b31ac6dc0ff5b5cea2c6b66"
                ]
            }
        },
        "8.10.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:14d29bc6634127427584e95534b5ccb8fe252d4f87e9404aed785702c61be30e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "765fe99797a6e41fcb186aaa2249fd98467384180d8aceef1c3c7fd0b3923b1d",
            "container_config": {
                "Hostname": "765fe99797a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:14d29bc6634127427584e95534b5ccb8fe252d4f87e9404aed785702c61be30e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-03-31T04:04:09.561333266Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:03:05.986978169Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.171794952Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.365689169Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.576362848Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.773809609Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:06.966468946Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:59.211229463Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.2 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:04:08.83800593Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.2 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-03-31T04:04:09.251430952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:09.561333266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:354847c41ab41d82083dcefb37f7ba76eacbada7ddd7eda7b88ced03e7a5a846",
                    "sha256:9a4be98224dae4c2df4fe33e11bbc7f3d0f4100d7b31ac6dc0ff5b5cea2c6b66"
                ]
            }
        },
        "8.10.2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:70ba8a78e66b1851b85deec5daab5c2374867c790cbc535d3d684b9442ab345a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "60af1f5c955dc3c981d8dfa10f8a8ae44a9953a57dfb304d8d16f9540b23c8ee",
            "container_config": {
                "Hostname": "60af1f5c955d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:70ba8a78e66b1851b85deec5daab5c2374867c790cbc535d3d684b9442ab345a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-03-31T04:05:47.557633527Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:50:43.07834601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e52290391b221e1a4e52cf4e41ffe7e14f162475964fa01638e03b3ead673ba1 in / "
                },
                {
                    "created": "2021-03-30T21:50:43.586713767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:22.534440122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:41.59362931Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:04:42.037390723Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:42.446196114Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:42.686203754Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:43.024216577Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:43.403046846Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:43.856354259Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:05:36.317878981Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.2 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:05:46.964552928Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.2 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-03-31T04:05:47.339161844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.10.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:05:47.557633527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:44f663453d2dce9ab089db335f17029cc605f15512c13ac7e7bea1770ce37248",
                    "sha256:fa4f71253f9d757aa13dbcda3bf5eae4610afd9add50d82f550be71a23168c70",
                    "sha256:638c17c2e478d18a4b247bca20bd9607eac16b17168fb5010e0833f58cd9d175",
                    "sha256:041d64454425ab75b16f4747da3d6afc22fa01808723db5e1feae184f6693e2e"
                ]
            }
        },
        "8.10.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8bcb4f4ef613427f496db5ccc27e072e75f2613481eaa62ff6418cb09615145c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "819835a9cd58c1f7e9d933c7a8b7c8cb020e5c0947a91afa4e0527fcc9ac25fe",
            "container_config": {
                "Hostname": "819835a9cd58",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8bcb4f4ef613427f496db5ccc27e072e75f2613481eaa62ff6418cb09615145c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:25:05.847660802Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:23:57.263294005Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:57.462839588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:57.65658784Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:57.843426353Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:58.033645674Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:58.229806729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:24:51.147998463Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.3 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:25:05.008279967Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.3 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:25:05.5230282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:05.847660802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:3c23d4b29472ec4dcb49e3a259eee6d67a7b3745c7e29713f30ecf86c8aa7c77",
                    "sha256:1765f39808b0a82ecc9b05a707dfdc5f98f0553afd665dc08ae76621d1054019"
                ]
            }
        },
        "8.10.3-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8bcb4f4ef613427f496db5ccc27e072e75f2613481eaa62ff6418cb09615145c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "819835a9cd58c1f7e9d933c7a8b7c8cb020e5c0947a91afa4e0527fcc9ac25fe",
            "container_config": {
                "Hostname": "819835a9cd58",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8bcb4f4ef613427f496db5ccc27e072e75f2613481eaa62ff6418cb09615145c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:25:05.847660802Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:23:57.263294005Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:57.462839588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:57.65658784Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:57.843426353Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:58.033645674Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:23:58.229806729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:24:51.147998463Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.3 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:25:05.008279967Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.3 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:25:05.5230282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:05.847660802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:3c23d4b29472ec4dcb49e3a259eee6d67a7b3745c7e29713f30ecf86c8aa7c77",
                    "sha256:1765f39808b0a82ecc9b05a707dfdc5f98f0553afd665dc08ae76621d1054019"
                ]
            }
        },
        "8.10.3-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:5c45bcc10d63df12c0726f588a0ffc41b504b6806e00bd7e42d2f5e52341f896",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "716ed3c8bec42778c01c9b596fcda9a6d2a5c8d4820d5085f9a06ff594b525f9",
            "container_config": {
                "Hostname": "716ed3c8bec4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:5c45bcc10d63df12c0726f588a0ffc41b504b6806e00bd7e42d2f5e52341f896",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:26:22.891879135Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:50:43.07834601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e52290391b221e1a4e52cf4e41ffe7e14f162475964fa01638e03b3ead673ba1 in / "
                },
                {
                    "created": "2021-03-30T21:50:43.586713767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:22.534440122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:41.59362931Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:25:10.783136456Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:11.216087745Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:11.534448076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:11.986377152Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:12.377396005Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:25:12.779088828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:08.757107815Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.3 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:26:22.21910269Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.3 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:26:22.618595824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:22.891879135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:44f663453d2dce9ab089db335f17029cc605f15512c13ac7e7bea1770ce37248",
                    "sha256:fa4f71253f9d757aa13dbcda3bf5eae4610afd9add50d82f550be71a23168c70",
                    "sha256:63dc322ba387c99e297914f9c45053c1bec86ba0c1ca84d7b4c970981467e5d4",
                    "sha256:01f4404d1847ff349e4e23e69a5172cff981b3bf652838a8f62fe007388b05a2"
                ]
            }
        },
        "8.10.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b483302c724e702680a21229b319f1e1b2090ebcc83c802fb2df44c207eaeafc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80b86b85f347588a932b5d75d4ffe195b4319f4ec4dd331c4fbae3ae4512d5c4",
            "container_config": {
                "Hostname": "80b86b85f347",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b483302c724e702680a21229b319f1e1b2090ebcc83c802fb2df44c207eaeafc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-09-28T07:38:42.551845923Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:22:54.875464952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f2a417d653b625cf79b88a517dc7e0ce5ace15a7acbd952daeee3bb4bf6042a1 in / "
                },
                {
                    "created": "2021-09-28T01:22:55.468393309Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:03.884388791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:26.485802264Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         g++         git         gnupg         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-28T07:37:54.99235474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:37:55.194842187Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:37:55.402865588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:29.967885844Z",
                    "created_by": "|3 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.4 /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         ghc-${GHC} &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-28T07:38:32.686860958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:32.910936319Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:33.13540759Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:41.9367241Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.4 STACK=2.7.3 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-09-28T07:38:42.323344058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:42.551845923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22f8b5520ced37a5744a50e6acee876a11782e55ebe17464efe34222a0a9a9d2",
                    "sha256:f879d2480d56cf18fff67ef433dcb481da22df8fb38f640838b308f99c875246",
                    "sha256:c341407ed74dd00421e8c0a94c5f01c32d214ba8d9acd8322a054b0fa8c07500",
                    "sha256:1f98e4fa137796aa6c79102303e2fa066f2103e58f4c44e653ffe2aa32f8e736"
                ]
            }
        },
        "8.10.4-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b483302c724e702680a21229b319f1e1b2090ebcc83c802fb2df44c207eaeafc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "80b86b85f347588a932b5d75d4ffe195b4319f4ec4dd331c4fbae3ae4512d5c4",
            "container_config": {
                "Hostname": "80b86b85f347",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b483302c724e702680a21229b319f1e1b2090ebcc83c802fb2df44c207eaeafc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-09-28T07:38:42.551845923Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:22:54.875464952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f2a417d653b625cf79b88a517dc7e0ce5ace15a7acbd952daeee3bb4bf6042a1 in / "
                },
                {
                    "created": "2021-09-28T01:22:55.468393309Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:03.884388791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:26.485802264Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         g++         git         gnupg         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-28T07:37:54.99235474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:37:55.194842187Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:37:55.402865588Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:29.967885844Z",
                    "created_by": "|3 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.4 /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         ghc-${GHC} &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-28T07:38:32.686860958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:32.910936319Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:33.13540759Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:41.9367241Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.4 STACK=2.7.3 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-09-28T07:38:42.323344058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:42.551845923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22f8b5520ced37a5744a50e6acee876a11782e55ebe17464efe34222a0a9a9d2",
                    "sha256:f879d2480d56cf18fff67ef433dcb481da22df8fb38f640838b308f99c875246",
                    "sha256:c341407ed74dd00421e8c0a94c5f01c32d214ba8d9acd8322a054b0fa8c07500",
                    "sha256:1f98e4fa137796aa6c79102303e2fa066f2103e58f4c44e653ffe2aa32f8e736"
                ]
            }
        },
        "8.10.4-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3d7f8777d234853fd852420dae89c7dbd19c6eb9369e045c3297e8205ed47492",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "96e66d7b78d6916f37ab4f85dcdf443c1154fed16662c792185d0dbbb55b515d",
            "container_config": {
                "Hostname": "96e66d7b78d6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3d7f8777d234853fd852420dae89c7dbd19c6eb9369e045c3297e8205ed47492",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-09-28T07:39:37.223931956Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:25:15.453020576Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:36e7d2a782d933f47ccfc8692ebf95cacda9f109a51c46514f00b78754070254 in / "
                },
                {
                    "created": "2021-09-28T01:25:15.962704808Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:36:29.452814075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:36:49.835445388Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         g++         git         gnupg         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-28T07:38:46.907576755Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:47.119194238Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:38:47.300482037Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:39:20.976938729Z",
                    "created_by": "|3 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.4 /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         ghc-${GHC} &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-09-28T07:39:22.312018753Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:39:22.519214939Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:39:22.722689792Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:39:36.759902114Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.10.4 STACK=2.7.3 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-09-28T07:39:37.043610421Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.10.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:39:37.223931956Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3ef76d3424890543783a7f27e7b8573ce2b94e6d9d03cf3b396b41e43548ad8e",
                    "sha256:5609b72217c299261301db0932485c6d24b2ea7b9020edef0fbf0fecfd49b167",
                    "sha256:bb6fc4684d62c3d7bb59de493e6a4429ef7267d43bd711cb999e7f16d449f872",
                    "sha256:5f3ae0ccb0d29a8e7b753b62dd1d718bb4bc7909af383a326dd8d28b53ac549f"
                ]
            }
        },
        "8.10.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:72c4903b93bc7e0fa46096563d8a0afb6d4700ab2f21d883c01f8e7223bd33fa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e50f67a379b4698bb95eae49e165d8c3cb60460496ed0f9cfd0aab0cdc2a646e",
            "container_config": {
                "Hostname": "e50f67a379b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:72c4903b93bc7e0fa46096563d8a0afb6d4700ab2f21d883c01f8e7223bd33fa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-07T22:23:41.425097331Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:22:54.875464952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f2a417d653b625cf79b88a517dc7e0ce5ace15a7acbd952daeee3bb4bf6042a1 in / "
                },
                {
                    "created": "2021-09-28T01:22:55.468393309Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:03.884388791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:09.945502515Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-07T22:15:10.871814332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.0878676Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.332978908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:20.368586012Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:22:01.506960026Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:22:01.703941278Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:22:01.916139634Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=BC623C20CA4C5C18E952071BA14AA0CFC5C94D34219BFFAA615F7B491F376787",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:25.351663091Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=BC623C20CA4C5C18E952071BA14AA0CFC5C94D34219BFFAA615F7B491F376787 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-07T22:23:29.298564208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:29.498512534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:29.688246227Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:40.939605432Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=BC623C20CA4C5C18E952071BA14AA0CFC5C94D34219BFFAA615F7B491F376787 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:23:41.251126829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:41.425097331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22f8b5520ced37a5744a50e6acee876a11782e55ebe17464efe34222a0a9a9d2",
                    "sha256:6908275154a383ab8ba2ebc745d6c5829d76705b7a98ab5ba3f0c80a83bda02a",
                    "sha256:069c52aa861078c82a1e5a72fef4ea900a715839ac45cfc8730ed4dc864cb87b",
                    "sha256:a639f29d8700b390806b82769a849b987ea67683ee2052a28e45b998a4508e56",
                    "sha256:3ccba54d0adea587ea5726142a2ab0618f92bed00dd98da3ff7e3f5e158dbc99"
                ]
            }
        },
        "8.10.5-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:72c4903b93bc7e0fa46096563d8a0afb6d4700ab2f21d883c01f8e7223bd33fa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e50f67a379b4698bb95eae49e165d8c3cb60460496ed0f9cfd0aab0cdc2a646e",
            "container_config": {
                "Hostname": "e50f67a379b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:72c4903b93bc7e0fa46096563d8a0afb6d4700ab2f21d883c01f8e7223bd33fa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-07T22:23:41.425097331Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:22:54.875464952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f2a417d653b625cf79b88a517dc7e0ce5ace15a7acbd952daeee3bb4bf6042a1 in / "
                },
                {
                    "created": "2021-09-28T01:22:55.468393309Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:03.884388791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:09.945502515Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-07T22:15:10.871814332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.0878676Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.332978908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:20.368586012Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:22:01.506960026Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:22:01.703941278Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:22:01.916139634Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=BC623C20CA4C5C18E952071BA14AA0CFC5C94D34219BFFAA615F7B491F376787",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:25.351663091Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=BC623C20CA4C5C18E952071BA14AA0CFC5C94D34219BFFAA615F7B491F376787 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-07T22:23:29.298564208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:29.498512534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:29.688246227Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:40.939605432Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=BC623C20CA4C5C18E952071BA14AA0CFC5C94D34219BFFAA615F7B491F376787 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:23:41.251126829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:41.425097331Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22f8b5520ced37a5744a50e6acee876a11782e55ebe17464efe34222a0a9a9d2",
                    "sha256:6908275154a383ab8ba2ebc745d6c5829d76705b7a98ab5ba3f0c80a83bda02a",
                    "sha256:069c52aa861078c82a1e5a72fef4ea900a715839ac45cfc8730ed4dc864cb87b",
                    "sha256:a639f29d8700b390806b82769a849b987ea67683ee2052a28e45b998a4508e56",
                    "sha256:3ccba54d0adea587ea5726142a2ab0618f92bed00dd98da3ff7e3f5e158dbc99"
                ]
            }
        },
        "8.10.5-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:460e0de3fe88353b50016fd2cc1ce6487ccb55df77c32cb7a596b298bac2fc73",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3d97430666bf60e294d1a4b5b6e91f457ca5d274e15f2da0b235170de7951980",
            "container_config": {
                "Hostname": "3d97430666bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:460e0de3fe88353b50016fd2cc1ce6487ccb55df77c32cb7a596b298bac2fc73",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-07T22:25:23.537024104Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:25:15.453020576Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:36e7d2a782d933f47ccfc8692ebf95cacda9f109a51c46514f00b78754070254 in / "
                },
                {
                    "created": "2021-09-28T01:25:15.962704808Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:36:29.452814075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:20.453279474Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-07T22:17:21.323710467Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:21.523552926Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:21.755981733Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:30.527898553Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:23:57.208206852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:57.39921821Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:23:57.619036718Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=15E71325C3BDFE3804BE0F84C2FC5C913D811322D19B0F4D4CFF20F29CDD804D",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:09.302934927Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=15E71325C3BDFE3804BE0F84C2FC5C913D811322D19B0F4D4CFF20F29CDD804D /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-07T22:25:13.199588873Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:13.438815628Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:13.647854786Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:22.988761623Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=15E71325C3BDFE3804BE0F84C2FC5C913D811322D19B0F4D4CFF20F29CDD804D STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:25:23.320747583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:23.537024104Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3ef76d3424890543783a7f27e7b8573ce2b94e6d9d03cf3b396b41e43548ad8e",
                    "sha256:a78547db49c4fce9b51b223fbf7fe24095511c399b1b7bdf3620bc5fd813391e",
                    "sha256:6377d98841356ad54e394d16b6c5bfa98f50dad342e9288f8ec351b2bc606d1c",
                    "sha256:a677a3e00965de17abd5dff1371b80880235e4b4364a10a07e0ad8a53b36f989",
                    "sha256:f35b3eb5a4c2ccb28aea997ccc59042964bf23a556c34f47e84c87f0a341c438"
                ]
            }
        },
        "8.10.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b3ec6fa31d51b8d0f93957e1858b71479b4e334736a8b56ee66d1eb72d9e5733",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f61a89658f8b92c8a0f4f2f98db11efb6fd488fab39a7c5b66a23c996d244fe7",
            "container_config": {
                "Hostname": "f61a89658f8b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b3ec6fa31d51b8d0f93957e1858b71479b4e334736a8b56ee66d1eb72d9e5733",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-07T22:27:11.275778301Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:22:54.875464952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f2a417d653b625cf79b88a517dc7e0ce5ace15a7acbd952daeee3bb4bf6042a1 in / "
                },
                {
                    "created": "2021-09-28T01:22:55.468393309Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:03.884388791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:09.945502515Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-07T22:15:10.871814332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.0878676Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.332978908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:20.368586012Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:25:37.780445018Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:38.036010688Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:38.220525693Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=95BE925E310B8C419E1099D620A727A1CA2D8C918F33EB905A8221D7EB16467B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:01.402089932Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=95BE925E310B8C419E1099D620A727A1CA2D8C918F33EB905A8221D7EB16467B /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-07T22:27:05.379192536Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:05.594651568Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:05.798223637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:10.763005238Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=95BE925E310B8C419E1099D620A727A1CA2D8C918F33EB905A8221D7EB16467B STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:27:11.050681898Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:11.275778301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22f8b5520ced37a5744a50e6acee876a11782e55ebe17464efe34222a0a9a9d2",
                    "sha256:6908275154a383ab8ba2ebc745d6c5829d76705b7a98ab5ba3f0c80a83bda02a",
                    "sha256:069c52aa861078c82a1e5a72fef4ea900a715839ac45cfc8730ed4dc864cb87b",
                    "sha256:64a567603a091f505197afc24942734d7472bcb62987cb92efbd8ac2193451cb",
                    "sha256:e6b68351c02e2ff57fc9b480cb6b2522be89b96dd314675116ec3aad68f34b16"
                ]
            }
        },
        "8.10.6-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b3ec6fa31d51b8d0f93957e1858b71479b4e334736a8b56ee66d1eb72d9e5733",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f61a89658f8b92c8a0f4f2f98db11efb6fd488fab39a7c5b66a23c996d244fe7",
            "container_config": {
                "Hostname": "f61a89658f8b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b3ec6fa31d51b8d0f93957e1858b71479b4e334736a8b56ee66d1eb72d9e5733",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-07T22:27:11.275778301Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:22:54.875464952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f2a417d653b625cf79b88a517dc7e0ce5ace15a7acbd952daeee3bb4bf6042a1 in / "
                },
                {
                    "created": "2021-09-28T01:22:55.468393309Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:35:03.884388791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:09.945502515Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-07T22:15:10.871814332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.0878676Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:11.332978908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:15:20.368586012Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:25:37.780445018Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:38.036010688Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:25:38.220525693Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=95BE925E310B8C419E1099D620A727A1CA2D8C918F33EB905A8221D7EB16467B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:01.402089932Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=95BE925E310B8C419E1099D620A727A1CA2D8C918F33EB905A8221D7EB16467B /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-07T22:27:05.379192536Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:05.594651568Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:05.798223637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:10.763005238Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=95BE925E310B8C419E1099D620A727A1CA2D8C918F33EB905A8221D7EB16467B STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:27:11.050681898Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:11.275778301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22f8b5520ced37a5744a50e6acee876a11782e55ebe17464efe34222a0a9a9d2",
                    "sha256:6908275154a383ab8ba2ebc745d6c5829d76705b7a98ab5ba3f0c80a83bda02a",
                    "sha256:069c52aa861078c82a1e5a72fef4ea900a715839ac45cfc8730ed4dc864cb87b",
                    "sha256:64a567603a091f505197afc24942734d7472bcb62987cb92efbd8ac2193451cb",
                    "sha256:e6b68351c02e2ff57fc9b480cb6b2522be89b96dd314675116ec3aad68f34b16"
                ]
            }
        },
        "8.10.6-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3c867351de9d28501ae81cfa4c205098b1b4ac745e9826d3b9e70c2a55a58cc4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "84de57642f78767cd69848393060d58ee60472f35570324b918414c9f0ff7fcf",
            "container_config": {
                "Hostname": "84de57642f78",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3c867351de9d28501ae81cfa4c205098b1b4ac745e9826d3b9e70c2a55a58cc4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-07T22:28:45.707540918Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-09-28T01:25:15.453020576Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:36e7d2a782d933f47ccfc8692ebf95cacda9f109a51c46514f00b78754070254 in / "
                },
                {
                    "created": "2021-09-28T01:25:15.962704808Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T07:36:29.452814075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:20.453279474Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-07T22:17:21.323710467Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:21.523552926Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:21.755981733Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:17:30.527898553Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:27:18.326855245Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:18.569080533Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:27:18.762432069Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=C14B631437EBC867F1FE1648579BC1DBE1A9B9AD31D7C801C3C77639523A83AE",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:28:33.290554336Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=C14B631437EBC867F1FE1648579BC1DBE1A9B9AD31D7C801C3C77639523A83AE /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-07T22:28:37.160787515Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:28:37.375036104Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:28:37.584032988Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:28:45.187647344Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=C14B631437EBC867F1FE1648579BC1DBE1A9B9AD31D7C801C3C77639523A83AE STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-07T22:28:45.495389986Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T22:28:45.707540918Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3ef76d3424890543783a7f27e7b8573ce2b94e6d9d03cf3b396b41e43548ad8e",
                    "sha256:a78547db49c4fce9b51b223fbf7fe24095511c399b1b7bdf3620bc5fd813391e",
                    "sha256:6377d98841356ad54e394d16b6c5bfa98f50dad342e9288f8ec351b2bc606d1c",
                    "sha256:cd1948a1c9a1ebda2715d67b0e7eefb63ef3b27980df6dce7c287a40a5ebaeec",
                    "sha256:91b8944edaa521da12fb8f767e6527872e516980e3debf0e51d816047f2ceabf"
                ]
            }
        },
        "8.10.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "354c2717d80cc5d877669e20f36822c129675defb246742e0e953307f1925319",
            "container_config": {
                "Hostname": "354c2717d80c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:15:42.822266063Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:13:07.532940482Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:07.634114572Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:08.210528622Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.301173223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.39957537Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:36.011468914Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:15:42.717699165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:42.822266063Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:9a54593893fa3a5cfab3b328a712878508a97c7a1fc7564ced5263ce951aff79"
                ]
            }
        },
        "8.10.7-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "354c2717d80cc5d877669e20f36822c129675defb246742e0e953307f1925319",
            "container_config": {
                "Hostname": "354c2717d80c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:949696d1f326804db208a1e79d7590808ff801430fd696cd9efdc17aefcfcc76",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:15:42.822266063Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:13:07.532940482Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:07.634114572Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:13:08.210528622Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.301173223Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:14:32.39957537Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:36.011468914Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:15:42.717699165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:15:42.822266063Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:9a54593893fa3a5cfab3b328a712878508a97c7a1fc7564ced5263ce951aff79"
                ]
            }
        },
        "8.10.7-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "546eacdee1ecbd15ef4c5c39f550fcafe3473a9c65ea3b6db4f86466ae682778",
            "container_config": {
                "Hostname": "546eacdee1ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:16:19.837385624Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:14:07.201130307Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.304120936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.905335072Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.187618692Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.285788191Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:15.940909122Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:16:19.724627159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:19.837385624Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:72834e7eee7509f08d18b3ebb97d1bdf6100f0b015437119b9eaf80af6ea38bd"
                ]
            }
        },
        "8.10.7-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "546eacdee1ecbd15ef4c5c39f550fcafe3473a9c65ea3b6db4f86466ae682778",
            "container_config": {
                "Hostname": "546eacdee1ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9732534b9a2922bc2a0f7933a9aa8a91b05b2d369d40ddcb3e74249df90f09fc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:16:19.837385624Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:14:07.201130307Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.304120936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:14:07.905335072Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.187618692Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:15:18.285788191Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:15.940909122Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fad2417f9b295233bf8ade79c0e6140896359e87be46cb61cd1d35863d9d0e55';             ;;         'x86_64')             GHC_SHA256='a13719bca87a0d3ac0c7d4157a4e60887009a7f1a8dbe95c4759ec413e086d30';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:16:19.724627159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:16:19.837385624Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:72834e7eee7509f08d18b3ebb97d1bdf6100f0b015437119b9eaf80af6ea38bd"
                ]
            }
        },
        "8.10.7-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b445f8ca54d984e5a0911a382a8c3bdb7b53922553a56648af02906924d5e79",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c6ce0689572a819e4fed8b4253584cbad823a73469998973b83ed9b93005288",
            "container_config": {
                "Hostname": "1c6ce0689572",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b445f8ca54d984e5a0911a382a8c3bdb7b53922553a56648af02906924d5e79",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:05:23.188602228Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:04:02.417961264Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:04:02.651899309Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:04:02.845034003Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:07.446563383Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 588764FBE22D19C4 --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:05:11.27559677Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:11.527865579Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:11.735622822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:22.643286003Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=8.10.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 GHC_RELEASE_SHA256=CED9870EA351AF64FB48274B81A664CDB6A9266775F1598A79CBB6FDD5770A23 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:05:22.968072412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/8.10.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:05:23.188602228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:2794a71e2bdda04349d3deb366036a1ca9d9e5606d4f7e3a1da017aca0d205fe",
                    "sha256:dd68741a0379c28cee7bdc1878c941462bf81c6002e41bd13e69db977486d291"
                ]
            }
        },
        "8.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a6cc7f759e9fb5edab3a6847ab2c1c497d68e50c360ec55fd33caa86ce0a25cd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4ee1667ece7baa02f0e1d893a20bf70b40ded884927699193d9af67f0e0c2c70",
            "container_config": {
                "Hostname": "4ee1667ece7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a6cc7f759e9fb5edab3a6847ab2c1c497d68e50c360ec55fd33caa86ce0a25cd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T01:51:09.807115594Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:47:09.055873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:51:08.51858696Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.2.2 cabal-install-2.2         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2018-10-16T01:51:09.474857488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:51:09.807115594Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:78e6fb1b14abf67190f8ddc6fdf702083d244a1f5cf62a0f4ffdca9ea33a3d7b"
                ]
            }
        },
        "8.2.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.0/bin:/opt/ghc/8.2.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77903de350a88900ec3d45da6bfbe3a9caa4fce697b5922a4d46b2f1cb4d3d4f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "59f06b82c46a674be04a76de30372d65fcce113b82eba5558f5539a9f7c43251",
            "container_config": {
                "Hostname": "59f06b82c46a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.0/bin:/opt/ghc/8.2.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77903de350a88900ec3d45da6bfbe3a9caa4fce697b5922a4d46b2f1cb4d3d4f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-30T02:57:49.967676975Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T06:44:15.690554988Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3e6141c0c9cb74b14a281eb3ab7aaf162a625733e652c3948b323bb2ec8b4343 in / "
                },
                {
                    "created": "2018-04-28T06:44:16.202044334Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-30T02:53:56.876248447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-30T02:57:49.170129794Z",
                    "created_by": "/bin/sh -c echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 &&     apt-get update &&     apt-get install -y --no-install-recommends cabal-install-2.0 ghc-8.2.1 happy-1.19.5 alex-3.1.7             zlib1g-dev libtinfo-dev libsqlite3-0 libsqlite3-dev ca-certificates g++ git curl &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.5.1/stack-1.5.1-linux-x86_64-static.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.5.1/stack-1.5.1-linux-x86_64-static.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2018-04-30T02:57:49.633901121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.0/bin:/opt/ghc/8.2.1/bin:/opt/happy/1.19.5/bin:/opt/alex/3.1.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-30T02:57:49.967676975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c833f307fd8f18a378b71d3c43c575fabdb88955a2198662938ac2a08a99928",
                    "sha256:e1bb1ff6cc2a830ea97383c78eae9f135bffbd572b902fb4bfc04ae2a1d636e0"
                ]
            }
        },
        "8.2.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a6cc7f759e9fb5edab3a6847ab2c1c497d68e50c360ec55fd33caa86ce0a25cd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4ee1667ece7baa02f0e1d893a20bf70b40ded884927699193d9af67f0e0c2c70",
            "container_config": {
                "Hostname": "4ee1667ece7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a6cc7f759e9fb5edab3a6847ab2c1c497d68e50c360ec55fd33caa86ce0a25cd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T01:51:09.807115594Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:47:09.055873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:51:08.51858696Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.2.2 cabal-install-2.2         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2018-10-16T01:51:09.474857488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:51:09.807115594Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:78e6fb1b14abf67190f8ddc6fdf702083d244a1f5cf62a0f4ffdca9ea33a3d7b"
                ]
            }
        },
        "8.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4f085e4d823be9d44a35993d07780eafdcd4dfae8fa0e320a995de14cd2e3c5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c04100c0b101cce4d078a6b3fe76aa0b0e278ef8d9967df327d418d232e7a38a",
            "container_config": {
                "Hostname": "c04100c0b101",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4f085e4d823be9d44a35993d07780eafdcd4dfae8fa0e320a995de14cd2e3c5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T04:21:15.642013797Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:27:26.526904575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 in / "
                },
                {
                    "created": "2019-09-11T23:27:26.803363994Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T04:19:20.2233993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T04:21:14.926459904Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.4.4 cabal-install-2.4         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2019-09-12T04:21:15.489915804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T04:21:15.642013797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:55e6b89812f369277290d098c1e44c9e85a5ab0286c649f37e66e11074f8ebd1",
                    "sha256:15206928e9a1a6b7bf0d998c733f27fc48459af3ee5cd9bbf22cbcf8ec1c218f"
                ]
            }
        },
        "8.4.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0fe018d349d05a2a176a2d4851dcf61a32320c2ba8c63d07f3c299b9d238846d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c59ff2aa21c2176f599b043954e5b754062589bb3e5696681fb8342b311b654d",
            "container_config": {
                "Hostname": "c59ff2aa21c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0fe018d349d05a2a176a2d4851dcf61a32320c2ba8c63d07f3c299b9d238846d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T01:48:23.566826939Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:47:09.055873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:48:22.329493402Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.4.3 cabal-install-2.2         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2018-10-16T01:48:23.27114603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.2/bin:/opt/ghc/8.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:48:23.566826939Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:73791fc007cf23cfe78f6d92d50d4d3b2d6e7ea13d9cacb4697eba8e9203fb0e"
                ]
            }
        },
        "8.4.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4f085e4d823be9d44a35993d07780eafdcd4dfae8fa0e320a995de14cd2e3c5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c04100c0b101cce4d078a6b3fe76aa0b0e278ef8d9967df327d418d232e7a38a",
            "container_config": {
                "Hostname": "c04100c0b101",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4f085e4d823be9d44a35993d07780eafdcd4dfae8fa0e320a995de14cd2e3c5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T04:21:15.642013797Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:27:26.526904575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 in / "
                },
                {
                    "created": "2019-09-11T23:27:26.803363994Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T04:19:20.2233993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T04:21:14.926459904Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.4.4 cabal-install-2.4         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2019-09-12T04:21:15.489915804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T04:21:15.642013797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:55e6b89812f369277290d098c1e44c9e85a5ab0286c649f37e66e11074f8ebd1",
                    "sha256:15206928e9a1a6b7bf0d998c733f27fc48459af3ee5cd9bbf22cbcf8ec1c218f"
                ]
            }
        },
        "8.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:333e87ecb71623aa82ce1365d874bbdde7624951f5a8233208544ccb76504433",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8ad7a92a38ba937d6d9aaa7ef32203ed35c47f6d793fecc27252e949a6e36f1b",
            "container_config": {
                "Hostname": "8ad7a92a38ba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:333e87ecb71623aa82ce1365d874bbdde7624951f5a8233208544ccb76504433",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T01:39:07.042387044Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T00:22:48.32243543Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:21bf6969c2166c361350c07b1089a1a4b34b7cd3e802a602385d83c49f44a7f6 in / "
                },
                {
                    "created": "2020-04-23T00:22:48.610302198Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:36:57.643581943Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T01:38:18.986350347Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:38:19.196346799Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=1.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:38:19.404434324Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=2.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:39:01.14279474Z",
                    "created_by": "|3 CABAL_INSTALL=2.4 GHC=8.6.5 STACK=1.9.3 /bin/sh -c apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T01:39:06.667119929Z",
                    "created_by": "|3 CABAL_INSTALL=2.4 GHC=8.6.5 STACK=1.9.3 /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-04-23T01:39:06.854037343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:39:07.042387044Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86ab2c6c5d587c5805ad401b4c8beb4c3e61a8b832d7882d98da5070381bd86b",
                    "sha256:eb07dbeb6ebff1bc455ed81e1651ab4a49c07ae8419130f4bbdbf8d4fbbedb85",
                    "sha256:89a82219a90f2cd7110fc647ef68a7244c9a11f1bed2dc061b6350024408b437",
                    "sha256:867518b57a41b356d66a4e8e44b8be96e510241e12ea43e0607e5b5de0eac7e1"
                ]
            }
        },
        "8.6.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3cb7504eb21b9f383dfc7d49fb8e031a91ee12e8c0a89b8ded179d4f88b99bbe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4e9b028b7cff1e239ad3c62f5111fa415a3a86654437c18614c975070003026e",
            "container_config": {
                "Hostname": "4e9b028b7cff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3cb7504eb21b9f383dfc7d49fb8e031a91ee12e8c0a89b8ded179d4f88b99bbe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-29T01:46:05.019389328Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-28T23:29:37.981962131Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:da71baf0d22cb2ede91c5e3ff959607e47459a9d7bda220a62a3da362b0e59ea in / "
                },
                {
                    "created": "2018-12-28T23:29:38.226681736Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T01:44:58.734299728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T01:46:03.373931215Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.6.2 cabal-install-2.4         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     apt-get purge -y --auto-remove curl &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2018-12-29T01:46:04.303132249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T01:46:05.019389328Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c581f4ede92df7272da388a45126ddd2944a4eeb27d3b0d80ee71cd633761394",
                    "sha256:1e1d308ec59f99ea3094ff0142aad9bf454c84c22e37aa14e8b83364b1018bcb"
                ]
            }
        },
        "8.6.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:83468ec65768e76bc4946b6f59b7c71f0766ccc5d4b39254443e4098ffbd41ff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5d4094f3cb693259245729aa01bdce38b354384d971a2bbf3f61ec72638be152",
            "container_config": {
                "Hostname": "5d4094f3cb69",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:83468ec65768e76bc4946b6f59b7c71f0766ccc5d4b39254443e4098ffbd41ff",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-08T02:20:34.07853183Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T00:33:09.837482517Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf91edab64f988bc24766c58ee66c00311c7c921296b8e5b51d7023422a1485 in / "
                },
                {
                    "created": "2019-05-08T00:33:10.318602909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T02:19:32.328662235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T02:20:32.783571658Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.6.3 cabal-install-2.4         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v1.9.1/stack-1.9.1-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2019-05-08T02:20:33.662681725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T02:20:34.07853183Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f94641f1fe1f5c42c325652bf55f0513c881c86b620b912b15460e0bca07cc12",
                    "sha256:7870e92d611a7d5abdd82c49ecd566743b259b32b3d918a2c759794bd72a4e06"
                ]
            }
        },
        "8.6.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:333e87ecb71623aa82ce1365d874bbdde7624951f5a8233208544ccb76504433",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8ad7a92a38ba937d6d9aaa7ef32203ed35c47f6d793fecc27252e949a6e36f1b",
            "container_config": {
                "Hostname": "8ad7a92a38ba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:333e87ecb71623aa82ce1365d874bbdde7624951f5a8233208544ccb76504433",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T01:39:07.042387044Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T00:22:48.32243543Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:21bf6969c2166c361350c07b1089a1a4b34b7cd3e802a602385d83c49f44a7f6 in / "
                },
                {
                    "created": "2020-04-23T00:22:48.610302198Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:36:57.643581943Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T01:38:18.986350347Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:38:19.196346799Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=1.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:38:19.404434324Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=2.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:39:01.14279474Z",
                    "created_by": "|3 CABAL_INSTALL=2.4 GHC=8.6.5 STACK=1.9.3 /bin/sh -c apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T01:39:06.667119929Z",
                    "created_by": "|3 CABAL_INSTALL=2.4 GHC=8.6.5 STACK=1.9.3 /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-04-23T01:39:06.854037343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/2.4/bin:/opt/ghc/8.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T01:39:07.042387044Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86ab2c6c5d587c5805ad401b4c8beb4c3e61a8b832d7882d98da5070381bd86b",
                    "sha256:eb07dbeb6ebff1bc455ed81e1651ab4a49c07ae8419130f4bbdbf8d4fbbedb85",
                    "sha256:89a82219a90f2cd7110fc647ef68a7244c9a11f1bed2dc061b6350024408b437",
                    "sha256:867518b57a41b356d66a4e8e44b8be96e510241e12ea43e0607e5b5de0eac7e1"
                ]
            }
        },
        "8.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f7d7bf71dd70bbd0e5031db96dc08498243d61e2ff3587eb88194c3f37b1671",
            "container_config": {
                "Hostname": "8f7d7bf71dd7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:27:53.886815923Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:06:03.288084586Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:06:03.530261882Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.200516636Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.519198344Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.807058417Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:38.115840925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:47.205957759Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:27:53.069093687Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:27:53.450119384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:53.886815923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:1b62577fb9abf6613403b99a75fd1cb8a44eecc95c8d972c22149f3b63145f82",
                    "sha256:acdbbc0f5bafbfcaad046af42b01e10187b81725bb36bc984709723a65dead86"
                ]
            }
        },
        "8.8-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f7d7bf71dd70bbd0e5031db96dc08498243d61e2ff3587eb88194c3f37b1671",
            "container_config": {
                "Hostname": "8f7d7bf71dd7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:27:53.886815923Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:06:03.288084586Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:06:03.530261882Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.200516636Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.519198344Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.807058417Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:38.115840925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:47.205957759Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:27:53.069093687Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:27:53.450119384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:53.886815923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:1b62577fb9abf6613403b99a75fd1cb8a44eecc95c8d972c22149f3b63145f82",
                    "sha256:acdbbc0f5bafbfcaad046af42b01e10187b81725bb36bc984709723a65dead86"
                ]
            }
        },
        "8.8-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:0dd26f21e6dc199ef09c0a4010f260338a9eebdfb85a44bf8e3697847f728ffe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a42a7ff7313cf533228e6390b15bd1b583c6735e4f9c9dc425d69441139d5423",
            "container_config": {
                "Hostname": "a42a7ff7313c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:0dd26f21e6dc199ef09c0a4010f260338a9eebdfb85a44bf8e3697847f728ffe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:29:19.251277535Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:50:43.07834601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e52290391b221e1a4e52cf4e41ffe7e14f162475964fa01638e03b3ead673ba1 in / "
                },
                {
                    "created": "2021-03-30T21:50:43.586713767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:22.534440122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:41.59362931Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:07:15.336219186Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:07:15.575936515Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:03.790778878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:04.105839263Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:04.464419782Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:04.872860327Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:29:07.383381292Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:29:18.505295461Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:29:18.962039565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:29:19.251277535Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:44f663453d2dce9ab089db335f17029cc605f15512c13ac7e7bea1770ce37248",
                    "sha256:fa4f71253f9d757aa13dbcda3bf5eae4610afd9add50d82f550be71a23168c70",
                    "sha256:e22a98159f3ef4f20f7d3556d9c5b7821a41b75ee0e2062a519fe238fe6030cb",
                    "sha256:5ffed74ee5339f7088a9c30a8f0142758be8fa1c029664e18e54ad760a00753b"
                ]
            }
        },
        "8.8.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.0/bin:/opt/ghc/8.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4f362953eba6e7fa2c697343ec3f671bcf32c4485cecefeb19bad997fa7c411",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5ad39cd049e986b10f4fff04d3e03bdc50bd0b6b7edecc4f7220d69879ca7c26",
            "container_config": {
                "Hostname": "5ad39cd049e9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.0/bin:/opt/ghc/8.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4f362953eba6e7fa2c697343ec3f671bcf32c4485cecefeb19bad997fa7c411",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T02:07:45.44535846Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:41:14.483064866Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:08c5ab7c53526da155d6be40a9795fc08afc9f47bd333c096e90185fe9fab2b1 in / "
                },
                {
                    "created": "2020-02-26T00:41:14.914967855Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:06:12.41472963Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:07:40.945035557Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA3CBA3FFE22B574 &&     apt-get update &&     apt-get install -y --no-install-recommends ghc-8.8.1 cabal-install-3.0         zlib1g-dev libtinfo-dev libsqlite3-dev g++ netbase xz-utils make openssh-client &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v2.1.3/stack-2.1.3-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v2.1.3/stack-2.1.3-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 2C6A674E85EE3FB896AFC9B965101FF31C5C154D &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-02-26T02:07:43.599661612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.0/bin:/opt/ghc/8.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:07:45.44535846Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c995a2087c1d96cf0dff249abef60efa99b33d4c27c373105168d11db8e930f",
                    "sha256:0707e3e587cd24e38e9fc89046d24d5afb15351a03218cfee602d483a368b73f"
                ]
            }
        },
        "8.8.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.0/bin:/opt/ghc/8.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce2310612be6f1f503cd6d4792f568faeb7d428c0f67aea779af85553fffb7bd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f883c1ffae925ca0f4f2bf5aeb8dccbb41b37a441365950a26752c3682d6fc5f",
            "container_config": {
                "Hostname": "f883c1ffae92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.0/bin:/opt/ghc/8.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce2310612be6f1f503cd6d4792f568faeb7d428c0f67aea779af85553fffb7bd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-06T23:32:52.847574395Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:41:14.483064866Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:08c5ab7c53526da155d6be40a9795fc08afc9f47bd333c096e90185fe9fab2b1 in / "
                },
                {
                    "created": "2020-02-26T00:41:14.914967855Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T23:30:53.847697134Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-06T23:31:58.8078251Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T23:31:58.999029941Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.1.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T23:31:59.187034254Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T23:32:42.467105395Z",
                    "created_by": "|3 CABAL_INSTALL=3.0 GHC=8.8.2 STACK=2.1.3 /bin/sh -c apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-06T23:32:48.51129713Z",
                    "created_by": "|3 CABAL_INSTALL=3.0 GHC=8.8.2 STACK=2.1.3 /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys C5705533DA4F78D8664B5DC0575159689BEFB442 &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 2C6A674E85EE3FB896AFC9B965101FF31C5C154D &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-03-06T23:32:50.060760692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.0/bin:/opt/ghc/8.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-06T23:32:52.847574395Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c995a2087c1d96cf0dff249abef60efa99b33d4c27c373105168d11db8e930f",
                    "sha256:58a72b58074cc4de031d63761f32bfd01e4dca03cefb6e653228fccbb001a136",
                    "sha256:d6af418f849dc1f59fbcfdea634c408828eed2a94e1f58203b67d4c15c165d4e",
                    "sha256:7ffa7875e9649cf96d7d125c6838f2d60c2ca10863c68b9715f4a859d0e39ab5"
                ]
            }
        },
        "8.8.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:120e738e4049a86e175172f9dffed9073d31e9cbc2096011b4bcc7a46311fda9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3f4a8cbfdbc6b65ae4a375994e8ce981a437dcdb4a86c5adc4ee24cbd158422",
            "container_config": {
                "Hostname": "e3f4a8cbfdbc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:120e738e4049a86e175172f9dffed9073d31e9cbc2096011b4bcc7a46311fda9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T22:55:41.917692446Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T15:42:33.850643052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b03b5f551e3fbdf47ec609712007327828f7530cc3455c43bbcdcaf449a75a9 in / "
                },
                {
                    "created": "2020-08-04T15:42:34.128304606Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.268406952Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:54:54.691001302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:54.882843766Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.07568539Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.25895738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.46787851Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.662961918Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:38.526624231Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.3 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:55:41.501167271Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.3 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-08-04T22:55:41.716875534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:41.917692446Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0ced13fcf9441aea6c4ee1defc1549772aa2df72017588a1e05bc11dd30b97b6",
                    "sha256:4b98b7eb99931795ce1ae48f183834b1f1ea131848b56596aa0c7af5da4770a4",
                    "sha256:79c92edd7375351c4f39f32bee8ca1c11a879bf73467bc9b45afe576c303b43b",
                    "sha256:7bb57ab64c437b389422a7187aac1de2b7ec66013c240932744f8e87489f2f0e"
                ]
            }
        },
        "8.8.3-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:120e738e4049a86e175172f9dffed9073d31e9cbc2096011b4bcc7a46311fda9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3f4a8cbfdbc6b65ae4a375994e8ce981a437dcdb4a86c5adc4ee24cbd158422",
            "container_config": {
                "Hostname": "e3f4a8cbfdbc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:120e738e4049a86e175172f9dffed9073d31e9cbc2096011b4bcc7a46311fda9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T22:55:41.917692446Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T15:42:33.850643052Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b03b5f551e3fbdf47ec609712007327828f7530cc3455c43bbcdcaf449a75a9 in / "
                },
                {
                    "created": "2020-08-04T15:42:34.128304606Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:52:27.268406952Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:54:54.691001302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:54.882843766Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.07568539Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.25895738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.46787851Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:54:55.662961918Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:38.526624231Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.3 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:55:41.501167271Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.3 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-08-04T22:55:41.716875534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:41.917692446Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0ced13fcf9441aea6c4ee1defc1549772aa2df72017588a1e05bc11dd30b97b6",
                    "sha256:4b98b7eb99931795ce1ae48f183834b1f1ea131848b56596aa0c7af5da4770a4",
                    "sha256:79c92edd7375351c4f39f32bee8ca1c11a879bf73467bc9b45afe576c303b43b",
                    "sha256:7bb57ab64c437b389422a7187aac1de2b7ec66013c240932744f8e87489f2f0e"
                ]
            }
        },
        "8.8.3-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "ghci"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b75d689f835cc6f094c0e5268f0a702ca19be72bfec32ed1aee2554c85a0a2c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f01eca50825be1b373ba812084b4a8e84e7989b8934141848fd9b4ee23e922ae",
            "container_config": {
                "Hostname": "f01eca50825b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b75d689f835cc6f094c0e5268f0a702ca19be72bfec32ed1aee2554c85a0a2c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T22:57:07.432778176Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T15:45:32.745374737Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a28d8a949b7577768d87fcbac346797fc5f7bad0539625339edcd09a32d6bf77 in / "
                },
                {
                    "created": "2020-08-04T15:45:33.054443549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:53:35.452279524Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:55:50.485193129Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:51.857168768Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:53.099829974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:54.879283002Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.3.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:55.847635923Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:55:56.015389715Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:56:56.521550985Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.3 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T22:57:02.571943904Z",
                    "created_by": "|6 CABAL_INSTALL=3.2 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.3 STACK=2.3.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2020-08-04T22:57:04.928148114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.2/bin:/opt/ghc/8.8.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T22:57:07.432778176Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4e38024e7e09292105545a625272c47b49dbd1db721040f2e85662e0a41ad587",
                    "sha256:3079d379c58dec5b0cde792753637273f91ced33d6861eb1e409113594bdc3b0",
                    "sha256:80bf256d024eec467616e4fe8de0ef071ed85167bf27f9a34b0fcb15e68af633",
                    "sha256:e4dab203e2e37ee46d8d402ae81b46abdc7dbea0067ff53696d937a70c6c3049"
                ]
            }
        },
        "8.8.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f7d7bf71dd70bbd0e5031db96dc08498243d61e2ff3587eb88194c3f37b1671",
            "container_config": {
                "Hostname": "8f7d7bf71dd7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:27:53.886815923Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:06:03.288084586Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:06:03.530261882Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.200516636Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.519198344Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.807058417Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:38.115840925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:47.205957759Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:27:53.069093687Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:27:53.450119384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:53.886815923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:1b62577fb9abf6613403b99a75fd1cb8a44eecc95c8d972c22149f3b63145f82",
                    "sha256:acdbbc0f5bafbfcaad046af42b01e10187b81725bb36bc984709723a65dead86"
                ]
            }
        },
        "8.8.4-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f7d7bf71dd70bbd0e5031db96dc08498243d61e2ff3587eb88194c3f37b1671",
            "container_config": {
                "Hostname": "8f7d7bf71dd7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:748bc53712102eefb05059cb1c1986dafceb40e5181d1a93dc2afe6d218f8534",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:27:53.886815923Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:49:16.340970155Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c254898ceb4172f05cd40460f8d0b1ca2d39d5178bdddd4e794c7d3fc5a60a03 in / "
                },
                {
                    "created": "2021-03-30T21:49:16.881534222Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:02:56.549756259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:03:05.700924165Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:06:03.288084586Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:06:03.530261882Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.200516636Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.519198344Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:37.807058417Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:26:38.115840925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:47.205957759Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian buster main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:27:53.069093687Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:27:53.450119384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:27:53.886815923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4ef4adca5c3b96107661045d947bf51f1f27f47c2557c9eea367c32a8bc8c399",
                    "sha256:a6d51be8dbc5dc573cfe73abfbdffec882cd2304cf04a55fed002aaf49d82f97",
                    "sha256:1b62577fb9abf6613403b99a75fd1cb8a44eecc95c8d972c22149f3b63145f82",
                    "sha256:acdbbc0f5bafbfcaad046af42b01e10187b81725bb36bc984709723a65dead86"
                ]
            }
        },
        "8.8.4-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:0dd26f21e6dc199ef09c0a4010f260338a9eebdfb85a44bf8e3697847f728ffe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a42a7ff7313cf533228e6390b15bd1b583c6735e4f9c9dc425d69441139d5423",
            "container_config": {
                "Hostname": "a42a7ff7313c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:0dd26f21e6dc199ef09c0a4010f260338a9eebdfb85a44bf8e3697847f728ffe",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T02:29:19.251277535Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T21:50:43.07834601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e52290391b221e1a4e52cf4e41ffe7e14f162475964fa01638e03b3ead673ba1 in / "
                },
                {
                    "created": "2021-03-30T21:50:43.586713767Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:22.534440122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:04:41.59362931Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T04:07:15.336219186Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=8.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T04:07:15.575936515Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:03.790778878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.4",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:04.105839263Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.5.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:04.464419782Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:28:04.872860327Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:29:07.383381292Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${DEBIAN_KEY} &&     gpg --batch --armor --export ${DEBIAN_KEY} > /etc/apt/trusted.gpg.d/haskell.org.gpg.asc &&     gpgconf --kill all &&     echo 'deb http://downloads.haskell.org/debian stretch main' > /etc/apt/sources.list.d/ghc.list &&     apt-get update &&     apt-get install -y --no-install-recommends         cabal-install-${CABAL_INSTALL}         curl         g++         ghc-${GHC}         git         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-01T02:29:18.505295461Z",
                    "created_by": "|6 CABAL_INSTALL=3.4 DEBIAN_KEY=427CB69AAC9D00F2A43CAF1CBA3CBA3FFE22B574 GHC=8.8.4 STACK=2.5.1 STACK_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_KEY=2C6A674E85EE3FB896AFC9B965101FF31C5C154D /bin/sh -c export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_KEY} &&     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 0x575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /stack.tar.gz.asc /stack.tar.gz"
                },
                {
                    "created": "2021-04-01T02:29:18.962039565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/cabal/3.4/bin:/opt/ghc/8.8.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T02:29:19.251277535Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:44f663453d2dce9ab089db335f17029cc605f15512c13ac7e7bea1770ce37248",
                    "sha256:fa4f71253f9d757aa13dbcda3bf5eae4610afd9add50d82f550be71a23168c70",
                    "sha256:e22a98159f3ef4f20f7d3556d9c5b7821a41b75ee0e2062a519fe238fe6030cb",
                    "sha256:5ffed74ee5339f7088a9c30a8f0142758be8fa1c029664e18e54ad760a00753b"
                ]
            }
        },
        "9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "9-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "9-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "9-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "9-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0b04e3e3fe73844d0b037c51c6af6c535748c2439e72fdd91ff29ea08df9a87d",
            "container_config": {
                "Hostname": "0b04e3e3fe73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:02:10.406640131Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:00:50.319938852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.523051897Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.727762716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:01:59.507108832Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 2DE04D4E97DB64AD --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:03.281582194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.516665205Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.743979992Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:09.897233579Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:10.220829481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:10.406640131Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:b282a02fa0de2d5e36880f687b139daf7977f4b09c2d8939a13b02b02e0dc48f",
                    "sha256:a2a464bef31f23e55b7d75a584e5d889bca7069c4242e47e29cab101b663b63c"
                ]
            }
        },
        "9.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "81dce2865f19cfd90171cf96710df5acdc56de743180294ef78169c680b04db9",
            "container_config": {
                "Hostname": "81dce2865f19",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:05:32.991969868Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:04:13.268183353Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.361756874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.920684835Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.018163933Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.109377691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:26.316678535Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:05:32.901866356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:32.991969868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:95674276c4f39821343ca2259fd70edde65e8ab2b5d37c6de38b093b695a92a9"
                ]
            }
        },
        "9.0-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "81dce2865f19cfd90171cf96710df5acdc56de743180294ef78169c680b04db9",
            "container_config": {
                "Hostname": "81dce2865f19",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:05:32.991969868Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:04:13.268183353Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.361756874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.920684835Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.018163933Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.109377691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:26.316678535Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:05:32.901866356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:32.991969868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:95674276c4f39821343ca2259fd70edde65e8ab2b5d37c6de38b093b695a92a9"
                ]
            }
        },
        "9.0-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da425b809a1c6656f02dc7bbdf24e65479fb69819a0119acbe9a44e5cece29df",
            "container_config": {
                "Hostname": "da425b809a1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:06:54.755095588Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:05:37.235078912Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.326127302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.927616267Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.023150874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.114660996Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:48.993205464Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:06:54.659706434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:54.755095588Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:fc52d78a7e459aa895c354d8e987ea82dd129196b2dfe9b1889f97dd6d22af65"
                ]
            }
        },
        "9.0-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da425b809a1c6656f02dc7bbdf24e65479fb69819a0119acbe9a44e5cece29df",
            "container_config": {
                "Hostname": "da425b809a1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:06:54.755095588Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:05:37.235078912Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.326127302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.927616267Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.023150874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.114660996Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:48.993205464Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:06:54.659706434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:54.755095588Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:fc52d78a7e459aa895c354d8e987ea82dd129196b2dfe9b1889f97dd6d22af65"
                ]
            }
        },
        "9.0-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0b04e3e3fe73844d0b037c51c6af6c535748c2439e72fdd91ff29ea08df9a87d",
            "container_config": {
                "Hostname": "0b04e3e3fe73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:02:10.406640131Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:00:50.319938852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.523051897Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.727762716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:01:59.507108832Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 2DE04D4E97DB64AD --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:03.281582194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.516665205Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.743979992Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:09.897233579Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:10.220829481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:10.406640131Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:b282a02fa0de2d5e36880f687b139daf7977f4b09c2d8939a13b02b02e0dc48f",
                    "sha256:a2a464bef31f23e55b7d75a584e5d889bca7069c4242e47e29cab101b663b63c"
                ]
            }
        },
        "9.0.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:99b863d9ff5825ed72fa05cb50e12a9adbf8a5e3b3411aa31e99ac317d63213e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5399a2f62b5ca5fa28259ebb9e0b1cd16de36642452c81739fdae73da4dd99a6",
            "container_config": {
                "Hostname": "5399a2f62b5c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:99b863d9ff5825ed72fa05cb50e12a9adbf8a5e3b3411aa31e99ac317d63213e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-21T02:19:40.705441247Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-12-21T01:22:53.173504298Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:be998d04a8927e9c4b105995e3b9d6800ea798807389f7c5921c0f4774328e21 in / "
                },
                {
                    "created": "2021-12-21T01:22:53.82862719Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:14:56.475469948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:17:57.101886293Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-21T02:17:58.497047828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:17:58.706801022Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:17:58.921775093Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:18:04.900233336Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux-deb10.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-12-21T02:18:05.189762664Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:18:05.426492348Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:18:05.685678525Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=C253E7EB62CC9DA6524C491C85EC8D3727C2CA6035A8653388E636AAA30A2A0F",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:31.095812166Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=C253E7EB62CC9DA6524C491C85EC8D3727C2CA6035A8653388E636AAA30A2A0F /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 2DE04D4E97DB64AD --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-12-21T02:19:32.798182839Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:33.027909608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:33.244844192Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:40.113767504Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=C253E7EB62CC9DA6524C491C85EC8D3727C2CA6035A8653388E636AAA30A2A0F STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-12-21T02:19:40.4924019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:40.705441247Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc4f2875405c870b41c87aad43cee6b083faa6f122f3702899cc44739e070c49",
                    "sha256:bda05ba2c02a3bfc72149da851d7a63234b7370b27f66540fd6993d22624ffd4",
                    "sha256:f47388099c6ec9001ada502b6b555c948cf7476def211146b71d21b9e172945a",
                    "sha256:6155346fdbcef3527ca4a3a6849287c089f83a07a5d66d2659f4a66f4e1a0695",
                    "sha256:0dc704d33015ae1dcceb1d0c5918bf0ef985aa39ebca682fb66ea1692d7c4a38"
                ]
            }
        },
        "9.0.1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:99b863d9ff5825ed72fa05cb50e12a9adbf8a5e3b3411aa31e99ac317d63213e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5399a2f62b5ca5fa28259ebb9e0b1cd16de36642452c81739fdae73da4dd99a6",
            "container_config": {
                "Hostname": "5399a2f62b5c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:99b863d9ff5825ed72fa05cb50e12a9adbf8a5e3b3411aa31e99ac317d63213e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-12-21T02:19:40.705441247Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-12-21T01:22:53.173504298Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:be998d04a8927e9c4b105995e3b9d6800ea798807389f7c5921c0f4774328e21 in / "
                },
                {
                    "created": "2021-12-21T01:22:53.82862719Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:14:56.475469948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:17:57.101886293Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-12-21T02:17:58.497047828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:17:58.706801022Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:17:58.921775093Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:18:04.900233336Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux-deb10.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-12-21T02:18:05.189762664Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:18:05.426492348Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:18:05.685678525Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=C253E7EB62CC9DA6524C491C85EC8D3727C2CA6035A8653388E636AAA30A2A0F",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:31.095812166Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=C253E7EB62CC9DA6524C491C85EC8D3727C2CA6035A8653388E636AAA30A2A0F /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb10-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 2DE04D4E97DB64AD --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-12-21T02:19:32.798182839Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:33.027909608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:33.244844192Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:40.113767504Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=4759B56E9257E02F29FA374A6B25D6CB2F9D80C7E3A55D4F678A8E570925641C GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=C253E7EB62CC9DA6524C491C85EC8D3727C2CA6035A8653388E636AAA30A2A0F STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-12-21T02:19:40.4924019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-21T02:19:40.705441247Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc4f2875405c870b41c87aad43cee6b083faa6f122f3702899cc44739e070c49",
                    "sha256:bda05ba2c02a3bfc72149da851d7a63234b7370b27f66540fd6993d22624ffd4",
                    "sha256:f47388099c6ec9001ada502b6b555c948cf7476def211146b71d21b9e172945a",
                    "sha256:6155346fdbcef3527ca4a3a6849287c089f83a07a5d66d2659f4a66f4e1a0695",
                    "sha256:0dc704d33015ae1dcceb1d0c5918bf0ef985aa39ebca682fb66ea1692d7c4a38"
                ]
            }
        },
        "9.0.1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0b04e3e3fe73844d0b037c51c6af6c535748c2439e72fdd91ff29ea08df9a87d",
            "container_config": {
                "Hostname": "0b04e3e3fe73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:02:10.406640131Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:00:50.319938852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.523051897Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.727762716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:01:59.507108832Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 2DE04D4E97DB64AD --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:03.281582194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.516665205Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.743979992Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:09.897233579Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:10.220829481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:10.406640131Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:b282a02fa0de2d5e36880f687b139daf7977f4b09c2d8939a13b02b02e0dc48f",
                    "sha256:a2a464bef31f23e55b7d75a584e5d889bca7069c4242e47e29cab101b663b63c"
                ]
            }
        },
        "9.0.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "81dce2865f19cfd90171cf96710df5acdc56de743180294ef78169c680b04db9",
            "container_config": {
                "Hostname": "81dce2865f19",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:05:32.991969868Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:04:13.268183353Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.361756874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.920684835Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.018163933Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.109377691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:26.316678535Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:05:32.901866356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:32.991969868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:95674276c4f39821343ca2259fd70edde65e8ab2b5d37c6de38b093b695a92a9"
                ]
            }
        },
        "9.0.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "81dce2865f19cfd90171cf96710df5acdc56de743180294ef78169c680b04db9",
            "container_config": {
                "Hostname": "81dce2865f19",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:64e75462b70652378c0d401fa1b083ff4d6d137216ae8a29381009739dd86dbc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:05:32.991969868Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:04:13.268183353Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.361756874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:13.920684835Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.018163933Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:14.109377691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:26.316678535Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:05:32.901866356Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:32.991969868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:95674276c4f39821343ca2259fd70edde65e8ab2b5d37c6de38b093b695a92a9"
                ]
            }
        },
        "9.0.2-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da425b809a1c6656f02dc7bbdf24e65479fb69819a0119acbe9a44e5cece29df",
            "container_config": {
                "Hostname": "da425b809a1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:06:54.755095588Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:05:37.235078912Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.326127302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.927616267Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.023150874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.114660996Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:48.993205464Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:06:54.659706434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:54.755095588Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:fc52d78a7e459aa895c354d8e987ea82dd129196b2dfe9b1889f97dd6d22af65"
                ]
            }
        },
        "9.0.2-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da425b809a1c6656f02dc7bbdf24e65479fb69819a0119acbe9a44e5cece29df",
            "container_config": {
                "Hostname": "da425b809a1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:687dd76560c99a8ed7ac4c32dbbcd69376189c0febf82fc214458187e4f78b77",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:06:54.755095588Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:05:37.235078912Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_VERSION=12",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.326127302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:37.927616267Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     if [ \"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\" = \"aarch64\" ]; then         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         mkdir -p /usr/local/share/keyrings/;         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$LLVM_KEY\";         gpg --batch --armor --export \"$LLVM_KEY\" > /usr/local/share/keyrings/apt.llvm.org.gpg.asc;         echo \"deb [ signed-by=/usr/local/share/keyrings/apt.llvm.org.gpg.asc ] http://apt.llvm.org/buster/ llvm-toolchain-buster-$LLVM_VERSION main\" > /etc/apt/sources.list.d/llvm.list;         apt-get update;         apt-get install -y --no-install-recommends llvm-$LLVM_VERSION;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/*;     fi",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.023150874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:05:38.114660996Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:48.993205464Z",
                    "created_by": "|8 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.0.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 LLVM_KEY=6084F3CF814B57C1CF12EFD515CF4D18AF4F7421 LLVM_VERSION=12 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='cb016344c70a872738a24af60bd15d3b18749087b9905c1b3f1b1549dc01f46d';             ;;         'x86_64')             GHC_SHA256='5d0b9414b10cfb918453bcd01c5ea7a1824fe95948b08498d6780f20ba247afc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:06:54.659706434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:06:54.755095588Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:fc52d78a7e459aa895c354d8e987ea82dd129196b2dfe9b1889f97dd6d22af65"
                ]
            }
        },
        "9.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "457b64eb715ccd47b563b6959b67869189c957d6a629affa4983a7dafc6d55bf",
            "container_config": {
                "Hostname": "457b64eb715c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:02:34.321230194Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:01:13.366194704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.457374313Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:27.657060749Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:02:34.223020699Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:34.321230194Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:6ad7b51711b4f23512a66cb1896369f474077847258e46cc9dde043973d30e56"
                ]
            }
        },
        "9.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "457b64eb715ccd47b563b6959b67869189c957d6a629affa4983a7dafc6d55bf",
            "container_config": {
                "Hostname": "457b64eb715c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:02:34.321230194Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:01:13.366194704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.457374313Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:27.657060749Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:02:34.223020699Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:34.321230194Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:6ad7b51711b4f23512a66cb1896369f474077847258e46cc9dde043973d30e56"
                ]
            }
        },
        "9.2-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f0dfb3bf0590a20c94f267fb26bf428c0fe78ce098224e2c95acaca086b3b23",
            "container_config": {
                "Hostname": "7f0dfb3bf059",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:04:09.29179117Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:02:52.058630637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:52.151587668Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:02.720857897Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:04:09.19207006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:09.29179117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:dc305445178a950a64792b78c09c943ba95dd7c5be4c48a4c1d6d82424ce11f4"
                ]
            }
        },
        "9.2-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f0dfb3bf0590a20c94f267fb26bf428c0fe78ce098224e2c95acaca086b3b23",
            "container_config": {
                "Hostname": "7f0dfb3bf059",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:04:09.29179117Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:02:52.058630637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:52.151587668Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:02.720857897Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:04:09.19207006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:09.29179117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:dc305445178a950a64792b78c09c943ba95dd7c5be4c48a4c1d6d82424ce11f4"
                ]
            }
        },
        "9.2.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:d77aeea4d8d9412d06a2fa6af733961d0070f6caa2d41aa04c57bdb1923dcd78",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0306359cb2da204f86798b80ec73fdd6e2121f3500140e7b1273a9760edca592",
            "container_config": {
                "Hostname": "0306359cb2da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:d77aeea4d8d9412d06a2fa6af733961d0070f6caa2d41aa04c57bdb1923dcd78",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-01T02:50:14.140643833Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:47:20.966051002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:47:42.133200862Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T02:47:42.843523491Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:47:42.933769691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:48:12.256929117Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-03-01T02:48:12.430478722Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:48:12.524697366Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:49:46.703835268Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='717d4246a8b407a807048ce6eddb2785aca2e4c73b6b634c01e1726f42d539a1';             ;;         'x86_64')             GHC_SHA256='53f1650ed092230480ff5750b94f409e5dfe66bd07ced00bbbcdf5d6b180234c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-03-01T02:49:51.057554964Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:49:51.14954589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:13.767494164Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='a6c090555fa1c64aa61c29aa4449765a51d79e870cf759cde192937cd614e72b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-03-01T02:50:14.030712345Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:14.140643833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:a0eff6b4775bdb371a65bec767f9d0668389b221d678caf36f15add3eb13d7fc",
                    "sha256:9e1358718d04bb6b7e28f98699387964011fb4249244d179b988866d72861bcc",
                    "sha256:3b9ef599ed9d761a8a07743558083b92f94ab4481030e798ec0dcb38031d0e7f",
                    "sha256:b56947a3a876b2a5db5ebf1c02cc37649bb8c0e62e2f360c430397a14e4e44c6"
                ]
            }
        },
        "9.2.1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:d77aeea4d8d9412d06a2fa6af733961d0070f6caa2d41aa04c57bdb1923dcd78",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0306359cb2da204f86798b80ec73fdd6e2121f3500140e7b1273a9760edca592",
            "container_config": {
                "Hostname": "0306359cb2da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:d77aeea4d8d9412d06a2fa6af733961d0070f6caa2d41aa04c57bdb1923dcd78",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-01T02:50:14.140643833Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-03-01T02:13:41.776485401Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8b516b464e535b435a6ed8609bac98acc90ee30e2a0667f68932f0d924f6e49 in / "
                },
                {
                    "created": "2022-03-01T02:13:42.210868364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:47:20.966051002Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:47:42.133200862Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T02:47:42.843523491Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:47:42.933769691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:48:12.256929117Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-03-01T02:48:12.430478722Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:48:12.524697366Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:49:46.703835268Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='717d4246a8b407a807048ce6eddb2785aca2e4c73b6b634c01e1726f42d539a1';             ;;         'x86_64')             GHC_SHA256='53f1650ed092230480ff5750b94f409e5dfe66bd07ced00bbbcdf5d6b180234c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-03-01T02:49:51.057554964Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:49:51.14954589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:13.767494164Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='a6c090555fa1c64aa61c29aa4449765a51d79e870cf759cde192937cd614e72b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-03-01T02:50:14.030712345Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:14.140643833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:024595e1462f5b0d48917c6b4132135a753cb80e3f31b7d327d948a9911c345a",
                    "sha256:a0eff6b4775bdb371a65bec767f9d0668389b221d678caf36f15add3eb13d7fc",
                    "sha256:9e1358718d04bb6b7e28f98699387964011fb4249244d179b988866d72861bcc",
                    "sha256:3b9ef599ed9d761a8a07743558083b92f94ab4481030e798ec0dcb38031d0e7f",
                    "sha256:b56947a3a876b2a5db5ebf1c02cc37649bb8c0e62e2f360c430397a14e4e44c6"
                ]
            }
        },
        "9.2.1-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:7a9920aef4165a723284ab5c7b3a6fadd979c5b87aae3b632c2c7321e690cd28",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cc59a28730e811f8dd2b33d7aca7c628e92f8afb002d0d69f97157e25f2088a1",
            "container_config": {
                "Hostname": "cc59a28730e8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:7a9920aef4165a723284ab5c7b3a6fadd979c5b87aae3b632c2c7321e690cd28",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-01T02:53:16.727288019Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-03-01T02:13:56.003285969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:702017714ad3e1567b4f60b688750f8b631d91088e4dcf41351c4bb07749c579 in / "
                },
                {
                    "created": "2022-03-01T02:13:56.277459353Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:28.946595597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:48.254003931Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T02:50:48.807824721Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:48.898528552Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:51:12.262201747Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-03-01T02:51:12.43048132Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:51:12.52417173Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:52:30.729319279Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='717d4246a8b407a807048ce6eddb2785aca2e4c73b6b634c01e1726f42d539a1';             ;;         'x86_64')             GHC_SHA256='53f1650ed092230480ff5750b94f409e5dfe66bd07ced00bbbcdf5d6b180234c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-03-01T02:52:34.107277145Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:52:34.231282437Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:53:16.395044409Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='a6c090555fa1c64aa61c29aa4449765a51d79e870cf759cde192937cd614e72b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-03-01T02:53:16.622710282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:53:16.727288019Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e5baccb54724b971f73bbfa46d477b947c9066e4040d0e002e8f04314f58b58f",
                    "sha256:9f62f7ae50c9410d4279b15f814f455d0ea8e6adcad64859c9fb705f98cdf6d3",
                    "sha256:a17a69db8e56bde5d357e7311b3cad58f16f597dca339c955db6ca9acc754142",
                    "sha256:5b9120ebc0a056f0efdbd744f460ec6d1a63676a4e959889d242fb45a3f66cd8",
                    "sha256:f98e84c5127b335c33b8d39322d7d1652701ae988df7ab1ec9935a85698822da"
                ]
            }
        },
        "9.2.1-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:7a9920aef4165a723284ab5c7b3a6fadd979c5b87aae3b632c2c7321e690cd28",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cc59a28730e811f8dd2b33d7aca7c628e92f8afb002d0d69f97157e25f2088a1",
            "container_config": {
                "Hostname": "cc59a28730e8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:7a9920aef4165a723284ab5c7b3a6fadd979c5b87aae3b632c2c7321e690cd28",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-03-01T02:53:16.727288019Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-03-01T02:13:56.003285969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:702017714ad3e1567b4f60b688750f8b631d91088e4dcf41351c4bb07749c579 in / "
                },
                {
                    "created": "2022-03-01T02:13:56.277459353Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:28.946595597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:48.254003931Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-03-01T02:50:48.807824721Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:50:48.898528552Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:51:12.262201747Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-03-01T02:51:12.43048132Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:51:12.52417173Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:52:30.729319279Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='717d4246a8b407a807048ce6eddb2785aca2e4c73b6b634c01e1726f42d539a1';             ;;         'x86_64')             GHC_SHA256='53f1650ed092230480ff5750b94f409e5dfe66bd07ced00bbbcdf5d6b180234c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-03-01T02:52:34.107277145Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:52:34.231282437Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:53:16.395044409Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='a6c090555fa1c64aa61c29aa4449765a51d79e870cf759cde192937cd614e72b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-03-01T02:53:16.622710282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-01T02:53:16.727288019Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e5baccb54724b971f73bbfa46d477b947c9066e4040d0e002e8f04314f58b58f",
                    "sha256:9f62f7ae50c9410d4279b15f814f455d0ea8e6adcad64859c9fb705f98cdf6d3",
                    "sha256:a17a69db8e56bde5d357e7311b3cad58f16f597dca339c955db6ca9acc754142",
                    "sha256:5b9120ebc0a056f0efdbd744f460ec6d1a63676a4e959889d242fb45a3f66cd8",
                    "sha256:f98e84c5127b335c33b8d39322d7d1652701ae988df7ab1ec9935a85698822da"
                ]
            }
        },
        "9.2.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3afe025df4c02932b7f1ad355a99b81db1be789af7746d0a5ce6eeed39bbf028",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f546fc7a13c84bf9ee65a0c85231f5a4d11cdccc105d7ffb5f56cc6d614dbeb6",
            "container_config": {
                "Hostname": "f546fc7a13c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3afe025df4c02932b7f1ad355a99b81db1be789af7746d0a5ce6eeed39bbf028",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-28T11:19:52.617933399Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-05-28T01:20:32.737327065Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c5cde050dbdbd5c7c0d9c723f436d37ab4a8b1a498647a719771eccce99d9cb in / "
                },
                {
                    "created": "2022-05-28T01:20:33.261352775Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:10.532692752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:31.505303359Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:18:32.217679723Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:32.313102101Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:34.845481636Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-05-28T11:18:35.020825228Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:35.141196932Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:41.569823892Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='f3621ccba7ae48fcd67a9505f61bb5ccfb05c4cbfecd5a6ea65fe3f150af0e98';             ;;         'x86_64')             GHC_SHA256='fb61dea556a2023dc2d50ee61a22144bb23e4229a378e533065124c218f40cfc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-05-28T11:19:48.446505595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:48.558915992Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:52.32387776Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-05-28T11:19:52.521869723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:52.617933399Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f14da82c36e2e3bf6a7aaf7b88aae73135408f79738e5be67a1c8a6d7f6590d3",
                    "sha256:a966bed1984a09886c21b78e0e8c51935a7496377913a2abeacdd97a8ca78fa4",
                    "sha256:dc1243380e99dab13d0a3d8bb601422d313338c28c6a6c52f1098d7a91141462",
                    "sha256:6bf09c01f86582209210e7d1f7cb9e612e17ccc483a08a31cfa368e4c5145686",
                    "sha256:1728c4164d6fe689169afe5e24839fe021a9338c9126827d823fc923d8ed857c"
                ]
            }
        },
        "9.2.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3afe025df4c02932b7f1ad355a99b81db1be789af7746d0a5ce6eeed39bbf028",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f546fc7a13c84bf9ee65a0c85231f5a4d11cdccc105d7ffb5f56cc6d614dbeb6",
            "container_config": {
                "Hostname": "f546fc7a13c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3afe025df4c02932b7f1ad355a99b81db1be789af7746d0a5ce6eeed39bbf028",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-28T11:19:52.617933399Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-05-28T01:20:32.737327065Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c5cde050dbdbd5c7c0d9c723f436d37ab4a8b1a498647a719771eccce99d9cb in / "
                },
                {
                    "created": "2022-05-28T01:20:33.261352775Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:10.532692752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:31.505303359Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:18:32.217679723Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:32.313102101Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:34.845481636Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-05-28T11:18:35.020825228Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:18:35.141196932Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:41.569823892Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='f3621ccba7ae48fcd67a9505f61bb5ccfb05c4cbfecd5a6ea65fe3f150af0e98';             ;;         'x86_64')             GHC_SHA256='fb61dea556a2023dc2d50ee61a22144bb23e4229a378e533065124c218f40cfc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-05-28T11:19:48.446505595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:48.558915992Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:52.32387776Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-05-28T11:19:52.521869723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:19:52.617933399Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f14da82c36e2e3bf6a7aaf7b88aae73135408f79738e5be67a1c8a6d7f6590d3",
                    "sha256:a966bed1984a09886c21b78e0e8c51935a7496377913a2abeacdd97a8ca78fa4",
                    "sha256:dc1243380e99dab13d0a3d8bb601422d313338c28c6a6c52f1098d7a91141462",
                    "sha256:6bf09c01f86582209210e7d1f7cb9e612e17ccc483a08a31cfa368e4c5145686",
                    "sha256:1728c4164d6fe689169afe5e24839fe021a9338c9126827d823fc923d8ed857c"
                ]
            }
        },
        "9.2.2-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:18e2f137e53567f81f4917cb188c85602071d47cbecf56897ff3c984fa1c61b3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "018568a30a2aee2879e8a51b865bd2912e962e2ae1fb1ae554e8302d0c2247d3",
            "container_config": {
                "Hostname": "018568a30a2a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:18e2f137e53567f81f4917cb188c85602071d47cbecf56897ff3c984fa1c61b3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-28T11:21:33.502461977Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-05-28T01:20:43.434508271Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0513eda9512e010cb9459591b62e0c9d9319750923df091b64250ad6e98c2878 in / "
                },
                {
                    "created": "2022-05-28T01:20:43.772969742Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:03.292881856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:22.258595863Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:20:22.869446285Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:22.964753259Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:26.210610694Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-05-28T11:20:26.395401539Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:26.489134351Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:26.274365999Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='f3621ccba7ae48fcd67a9505f61bb5ccfb05c4cbfecd5a6ea65fe3f150af0e98';             ;;         'x86_64')             GHC_SHA256='fb61dea556a2023dc2d50ee61a22144bb23e4229a378e533065124c218f40cfc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-05-28T11:21:30.191363421Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:30.289514375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:33.192259339Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-05-28T11:21:33.405659141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:33.502461977Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:10e6bc6fdee2d9a0d1ac5e78a031b5670f37d75599ba609cbd1d027af78f7bf4",
                    "sha256:7e15b6dab798a2378ef7e575baed6c60ab846ed0021c32e65b866b862c47da2b",
                    "sha256:a297f579465a1ce11dc1c178bc7f056b64ebde3132298b921f7089826154e5b2",
                    "sha256:770d093899507d045722646e3fa6656c4010d70f176daa9db5e464ba16aeaa7a",
                    "sha256:919159d834fa9f0fca8815bfd73d5e1d3cd6ef7c3e8782c1d71039ce63d91afe"
                ]
            }
        },
        "9.2.2-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:18e2f137e53567f81f4917cb188c85602071d47cbecf56897ff3c984fa1c61b3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "018568a30a2aee2879e8a51b865bd2912e962e2ae1fb1ae554e8302d0c2247d3",
            "container_config": {
                "Hostname": "018568a30a2a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:18e2f137e53567f81f4917cb188c85602071d47cbecf56897ff3c984fa1c61b3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-28T11:21:33.502461977Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-05-28T01:20:43.434508271Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0513eda9512e010cb9459591b62e0c9d9319750923df091b64250ad6e98c2878 in / "
                },
                {
                    "created": "2022-05-28T01:20:43.772969742Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:03.292881856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:22.258595863Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-05-28T11:20:22.869446285Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:22.964753259Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:26.210610694Z",
                    "created_by": "|2 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-05-28T11:20:26.395401539Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:20:26.489134351Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:26.274365999Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='f3621ccba7ae48fcd67a9505f61bb5ccfb05c4cbfecd5a6ea65fe3f150af0e98';             ;;         'x86_64')             GHC_SHA256='fb61dea556a2023dc2d50ee61a22144bb23e4229a378e533065124c218f40cfc';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-05-28T11:21:30.191363421Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:30.289514375Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:33.192259339Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-05-28T11:21:33.405659141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-28T11:21:33.502461977Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:10e6bc6fdee2d9a0d1ac5e78a031b5670f37d75599ba609cbd1d027af78f7bf4",
                    "sha256:7e15b6dab798a2378ef7e575baed6c60ab846ed0021c32e65b866b862c47da2b",
                    "sha256:a297f579465a1ce11dc1c178bc7f056b64ebde3132298b921f7089826154e5b2",
                    "sha256:770d093899507d045722646e3fa6656c4010d70f176daa9db5e464ba16aeaa7a",
                    "sha256:919159d834fa9f0fca8815bfd73d5e1d3cd6ef7c3e8782c1d71039ce63d91afe"
                ]
            }
        },
        "9.2.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:a6b0699aa294ec8ed520e827d8aeb78e52ed165a97bad5b778a4241563acad18",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "230bad0010f36b6f2e3b7535420c8f6eaca3067093db8686edb7e672b63f4772",
            "container_config": {
                "Hostname": "230bad0010f3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:a6b0699aa294ec8ed520e827d8aeb78e52ed165a97bad5b778a4241563acad18",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-28T16:33:09.205516281Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-12T01:20:20.645152261Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d738977543f4afc4c3040c6fca3e3f15388ec3b7263a29a6aa83f9a4bf05fed1 in / "
                },
                {
                    "created": "2022-07-12T01:20:21.203852641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:49:24.449058445Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:49:29.810481633Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:49:47.578413254Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:50:37.272224055Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T04:13:29.905644325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:49.842552358Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T04:16:49.939717498Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:50.045240316Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:53.29813677Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-07-12T04:16:53.542044436Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:53.631949015Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:55.972139126Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-07-28T16:31:55.540855055Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T16:31:55.649162081Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T16:33:02.174631035Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.3 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='4b0b3848606ca83923b666dc8325df6a93986682c57b2865a44c52795a30f808';             ;;         'x86_64')             GHC_SHA256='6cfe876a334443438dbe47079ddf9c3b0768c7b3af5ce9cdb1dee7e72497f4f5';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-07-28T16:33:09.101864063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T16:33:09.205516281Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86eecfa8066ec2f3b68dbbc2a4b0f1cc4110cbbdf297021043dd947878dbf2a3",
                    "sha256:9791176553792e1d82a0c1a27fd2a9e676cc3c4cbc5dea78f67cfea4dd4a59b6",
                    "sha256:92a02f6117f5bf2913dafdbeda998919d30194af06639cadf52c845657499294",
                    "sha256:4afd7e355699603f4e43405c807e8f4873908b0a4e9d91bd4d822bc47e80426d",
                    "sha256:5339eeb11bed6ab208113d8d3baaaf719e3f5cdb3fa9767905048118ae87a2b1",
                    "sha256:09369d7f5a423719a475e9f579617d927d9fdd16c297f8ff1008f23811bbc2ae",
                    "sha256:bd2b11b67981165d5d3b5276fb5079f32daf88d8887950ad7195b9d11c60bc3d",
                    "sha256:895144f725c46c349755988be6a755edcbc03793d50e5ffab1a7ac22d959e881",
                    "sha256:9f5fe0afa5667c6c34fd66872ed75f8114d8a19ea9750ae9407fccd4ecd5d229"
                ]
            }
        },
        "9.2.3-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:a6b0699aa294ec8ed520e827d8aeb78e52ed165a97bad5b778a4241563acad18",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "230bad0010f36b6f2e3b7535420c8f6eaca3067093db8686edb7e672b63f4772",
            "container_config": {
                "Hostname": "230bad0010f3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:a6b0699aa294ec8ed520e827d8aeb78e52ed165a97bad5b778a4241563acad18",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-28T16:33:09.205516281Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-12T01:20:20.645152261Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d738977543f4afc4c3040c6fca3e3f15388ec3b7263a29a6aa83f9a4bf05fed1 in / "
                },
                {
                    "created": "2022-07-12T01:20:21.203852641Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T02:49:24.449058445Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:49:29.810481633Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-07-12T02:49:47.578413254Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T02:50:37.272224055Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T04:13:29.905644325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:49.842552358Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T04:16:49.939717498Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:50.045240316Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:53.29813677Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-07-12T04:16:53.542044436Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:53.631949015Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:55.972139126Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-07-28T16:31:55.540855055Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T16:31:55.649162081Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T16:33:02.174631035Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.3 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='4b0b3848606ca83923b666dc8325df6a93986682c57b2865a44c52795a30f808';             ;;         'x86_64')             GHC_SHA256='6cfe876a334443438dbe47079ddf9c3b0768c7b3af5ce9cdb1dee7e72497f4f5';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-07-28T16:33:09.101864063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-28T16:33:09.205516281Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86eecfa8066ec2f3b68dbbc2a4b0f1cc4110cbbdf297021043dd947878dbf2a3",
                    "sha256:9791176553792e1d82a0c1a27fd2a9e676cc3c4cbc5dea78f67cfea4dd4a59b6",
                    "sha256:92a02f6117f5bf2913dafdbeda998919d30194af06639cadf52c845657499294",
                    "sha256:4afd7e355699603f4e43405c807e8f4873908b0a4e9d91bd4d822bc47e80426d",
                    "sha256:5339eeb11bed6ab208113d8d3baaaf719e3f5cdb3fa9767905048118ae87a2b1",
                    "sha256:09369d7f5a423719a475e9f579617d927d9fdd16c297f8ff1008f23811bbc2ae",
                    "sha256:bd2b11b67981165d5d3b5276fb5079f32daf88d8887950ad7195b9d11c60bc3d",
                    "sha256:895144f725c46c349755988be6a755edcbc03793d50e5ffab1a7ac22d959e881",
                    "sha256:9f5fe0afa5667c6c34fd66872ed75f8114d8a19ea9750ae9407fccd4ecd5d229"
                ]
            }
        },
        "9.2.3-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:e5e8754ef4b538f3068fdca420ab11fa9cdf483dd9debfa6e0c9a53ac8398e63",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ce3242741127c5ff8d22210289ebdab9d2383548daec838132c6d8e8f39ad749",
            "container_config": {
                "Hostname": "ce3242741127",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:e5e8754ef4b538f3068fdca420ab11fa9cdf483dd9debfa6e0c9a53ac8398e63",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-12T04:16:40.885178337Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-12T01:20:32.99035291Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7f2320197e75c5169402827ce0c47d93629331875d76b9f0ddd389244747eccd in / "
                },
                {
                    "created": "2022-07-12T01:20:33.384681525Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:07.960953204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:27.627823364Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T04:15:28.303753538Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:28.399695398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:31.985575062Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-07-12T04:15:32.210253665Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:32.304713753Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:34.766245912Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-07-12T04:15:35.002554246Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:35.099192814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:36.874379646Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.3 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='4b0b3848606ca83923b666dc8325df6a93986682c57b2865a44c52795a30f808';             ;;         'x86_64')             GHC_SHA256='6cfe876a334443438dbe47079ddf9c3b0768c7b3af5ce9cdb1dee7e72497f4f5';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-07-12T04:16:40.793796977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:40.885178337Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09ebdb357ed5be11bf5c962a1ea9d72048d5260861b7a9d851cb0faa158b8177",
                    "sha256:b47d12d86c55fe5017a2def3cd6b4093a3e9660868ca9fc59a49b96b4b39114e",
                    "sha256:076a2c18fdd9567bc074974a0f4b5e67ae41ba40a5b4457b84d837ced1bb7694",
                    "sha256:276c0389a3ee373f196a95e2715726c98b5fc66f919a611f43ee4d8216151538",
                    "sha256:e764a5bd2822f954aaf18d048004eae8b807701aed6390dd4642cdaec19364c5"
                ]
            }
        },
        "9.2.3-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:e5e8754ef4b538f3068fdca420ab11fa9cdf483dd9debfa6e0c9a53ac8398e63",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ce3242741127c5ff8d22210289ebdab9d2383548daec838132c6d8e8f39ad749",
            "container_config": {
                "Hostname": "ce3242741127",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:e5e8754ef4b538f3068fdca420ab11fa9cdf483dd9debfa6e0c9a53ac8398e63",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-07-12T04:16:40.885178337Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-07-12T01:20:32.99035291Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7f2320197e75c5169402827ce0c47d93629331875d76b9f0ddd389244747eccd in / "
                },
                {
                    "created": "2022-07-12T01:20:33.384681525Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:07.960953204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:27.627823364Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-07-12T04:15:28.303753538Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:28.399695398Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:31.985575062Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-07-12T04:15:32.210253665Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:32.304713753Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:34.766245912Z",
                    "created_by": "|4 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='d9acee67d4308bc5c22d27bee034d388cc4192a25deff9e7e491e2396572b030';             ;;         'x86_64')             CABAL_INSTALL_SHA256='4759b56e9257e02f29fa374a6b25d6cb2f9d80c7e3a55d4f678a8e570925641c';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-07-12T04:15:35.002554246Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:15:35.099192814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:36.874379646Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.2.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 GHC=9.2.3 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='4b0b3848606ca83923b666dc8325df6a93986682c57b2865a44c52795a30f808';             ;;         'x86_64')             GHC_SHA256='6cfe876a334443438dbe47079ddf9c3b0768c7b3af5ce9cdb1dee7e72497f4f5';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-07-12T04:16:40.793796977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-07-12T04:16:40.885178337Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09ebdb357ed5be11bf5c962a1ea9d72048d5260861b7a9d851cb0faa158b8177",
                    "sha256:b47d12d86c55fe5017a2def3cd6b4093a3e9660868ca9fc59a49b96b4b39114e",
                    "sha256:076a2c18fdd9567bc074974a0f4b5e67ae41ba40a5b4457b84d837ced1bb7694",
                    "sha256:276c0389a3ee373f196a95e2715726c98b5fc66f919a611f43ee4d8216151538",
                    "sha256:e764a5bd2822f954aaf18d048004eae8b807701aed6390dd4642cdaec19364c5"
                ]
            }
        },
        "9.2.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:f664f35adc0eb437aad1c30676e129545807c31591ac6e01dfba562eff835ea3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26a9197393649c7dd81574f9f61ec641eed590b0722d33fefedac1a2985f516c",
            "container_config": {
                "Hostname": "26a919739364",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:f664f35adc0eb437aad1c30676e129545807c31591ac6e01dfba562eff835ea3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-26T00:57:06.384349374Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:02.196310827Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:259be79d94a2549a667ad08a093fe18f15a6c93d66a0723292f49294e31fc7a1 in / "
                },
                {
                    "created": "2022-10-25T01:44:02.651758135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T09:25:03.651210628Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:25:09.269901625Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-25T09:25:28.912038747Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:26:32.306715971Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:10.361280322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.261511736Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:14.378048822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.482845816Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.145592952Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-26T00:54:18.365421421Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.468863349Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:20.88457795Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-26T00:55:52.283069691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:55:52.385631568Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:56:59.399227918Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc7dbc6bae36ea5ac30b7e9a263b7e5be3b45b0eb3e893ad0bc2c950a61f14ec';             ;;         'x86_64')             GHC_SHA256='a77a91a39d9b0167124b7e97648b2b52973ae0978cb259e0d44f0752a75037cb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-26T00:57:06.282249191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:57:06.384349374Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f0a87eb98d2aab1705a1ffb6cfa8d876ce169d48a98db60eb8b4f7c32767e8f4",
                    "sha256:7a0f5beec8b3f9ebd24fcb606a272c940f73d9dcbd99a0c6be06aa885e73baee",
                    "sha256:ada8cfae898c36530a940ab28636179e01f56df5cfdbf55d088c12b6a34ea644",
                    "sha256:9cfc4aa8768aaafd35dd7ebac9c1066cb6b1a340e241e3d82e565187e1df4a9a",
                    "sha256:36d4a190a4f61d7f2579cd998a4666d429ecbd96a427d45d5ee64f1c6ce5f61c",
                    "sha256:b22ee3d74e8c80c305f9ff1c754bbefc3210eeab71e43baddef48eebb8f153d5",
                    "sha256:39561800c1ccd98d7d0b34bdca491f14f29aa0d2bec838e208ce67d29259ba7b",
                    "sha256:1248ee7a9f3f79ce56d985cf2c5c025fba9ebe8539dae8e3c4f051519e80a868",
                    "sha256:454bc26fea3c476e1732cf02539784508c545b448ec0d1b2d66a742b00c55286"
                ]
            }
        },
        "9.2.4-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:f664f35adc0eb437aad1c30676e129545807c31591ac6e01dfba562eff835ea3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26a9197393649c7dd81574f9f61ec641eed590b0722d33fefedac1a2985f516c",
            "container_config": {
                "Hostname": "26a919739364",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:f664f35adc0eb437aad1c30676e129545807c31591ac6e01dfba562eff835ea3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-26T00:57:06.384349374Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:02.196310827Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:259be79d94a2549a667ad08a093fe18f15a6c93d66a0723292f49294e31fc7a1 in / "
                },
                {
                    "created": "2022-10-25T01:44:02.651758135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T09:25:03.651210628Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:25:09.269901625Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-25T09:25:28.912038747Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:26:32.306715971Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:10.361280322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.261511736Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:14.378048822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.482845816Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.145592952Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-26T00:54:18.365421421Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.468863349Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:20.88457795Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-26T00:55:52.283069691Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:55:52.385631568Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:56:59.399227918Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc7dbc6bae36ea5ac30b7e9a263b7e5be3b45b0eb3e893ad0bc2c950a61f14ec';             ;;         'x86_64')             GHC_SHA256='a77a91a39d9b0167124b7e97648b2b52973ae0978cb259e0d44f0752a75037cb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-26T00:57:06.282249191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:57:06.384349374Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f0a87eb98d2aab1705a1ffb6cfa8d876ce169d48a98db60eb8b4f7c32767e8f4",
                    "sha256:7a0f5beec8b3f9ebd24fcb606a272c940f73d9dcbd99a0c6be06aa885e73baee",
                    "sha256:ada8cfae898c36530a940ab28636179e01f56df5cfdbf55d088c12b6a34ea644",
                    "sha256:9cfc4aa8768aaafd35dd7ebac9c1066cb6b1a340e241e3d82e565187e1df4a9a",
                    "sha256:36d4a190a4f61d7f2579cd998a4666d429ecbd96a427d45d5ee64f1c6ce5f61c",
                    "sha256:b22ee3d74e8c80c305f9ff1c754bbefc3210eeab71e43baddef48eebb8f153d5",
                    "sha256:39561800c1ccd98d7d0b34bdca491f14f29aa0d2bec838e208ce67d29259ba7b",
                    "sha256:1248ee7a9f3f79ce56d985cf2c5c025fba9ebe8539dae8e3c4f051519e80a868",
                    "sha256:454bc26fea3c476e1732cf02539784508c545b448ec0d1b2d66a742b00c55286"
                ]
            }
        },
        "9.2.4-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:330126e8166580e78890b56ed8c31c50762b06ad5a46d4fd1bfb13766cd91500",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f117b54a86028fa7ea7de361c5a81f358fbcda5165fbc411ba367de0c8bbc0b0",
            "container_config": {
                "Hostname": "f117b54a8602",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:330126e8166580e78890b56ed8c31c50762b06ad5a46d4fd1bfb13766cd91500",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-25T03:45:18.944404301Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:12.591994931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:14c4aa7a136ce9eb1fae0ba0f394509990d44126be801a2713cf8722fbb2e6b9 in / "
                },
                {
                    "created": "2022-10-25T01:44:12.933097776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:14.948679237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:36.777791503Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T03:42:37.473488095Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:37.576613547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:42.750432981Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-25T03:42:42.945184133Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:43.04804092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:45.568540195Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-25T03:44:10.117468967Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:44:10.216984709Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:45:14.916615449Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc7dbc6bae36ea5ac30b7e9a263b7e5be3b45b0eb3e893ad0bc2c950a61f14ec';             ;;         'x86_64')             GHC_SHA256='a77a91a39d9b0167124b7e97648b2b52973ae0978cb259e0d44f0752a75037cb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-25T03:45:18.840264059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:45:18.944404301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74f8a626d86ff49780a3ed3618155eb37a91a357fb9a5f99735a334810ecc00f",
                    "sha256:8c1d8bc8da6c72a6e88da5c83c374e078a0fc4f9d169aded44ea992fbaa71aa7",
                    "sha256:dea7e8509af8b1e65a98ee5d5e0e7b071e094aed0b6d1fdef5ea83ec798b2489",
                    "sha256:4e0dd81b12b87e334d6a5e728a4a3aee77afb8ca25ea480a010a6ed6d325826f",
                    "sha256:56a6c5aa23a5e170d4dbd2d20c707687aad79fcae1b73b6daab6f6b5941bfa27"
                ]
            }
        },
        "9.2.4-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:330126e8166580e78890b56ed8c31c50762b06ad5a46d4fd1bfb13766cd91500",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f117b54a86028fa7ea7de361c5a81f358fbcda5165fbc411ba367de0c8bbc0b0",
            "container_config": {
                "Hostname": "f117b54a8602",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:330126e8166580e78890b56ed8c31c50762b06ad5a46d4fd1bfb13766cd91500",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-25T03:45:18.944404301Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:12.591994931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:14c4aa7a136ce9eb1fae0ba0f394509990d44126be801a2713cf8722fbb2e6b9 in / "
                },
                {
                    "created": "2022-10-25T01:44:12.933097776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:14.948679237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:36.777791503Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T03:42:37.473488095Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:37.576613547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:42.750432981Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-25T03:42:42.945184133Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:43.04804092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:45.568540195Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-25T03:44:10.117468967Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:44:10.216984709Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:45:14.916615449Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc7dbc6bae36ea5ac30b7e9a263b7e5be3b45b0eb3e893ad0bc2c950a61f14ec';             ;;         'x86_64')             GHC_SHA256='a77a91a39d9b0167124b7e97648b2b52973ae0978cb259e0d44f0752a75037cb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-25T03:45:18.840264059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:45:18.944404301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74f8a626d86ff49780a3ed3618155eb37a91a357fb9a5f99735a334810ecc00f",
                    "sha256:8c1d8bc8da6c72a6e88da5c83c374e078a0fc4f9d169aded44ea992fbaa71aa7",
                    "sha256:dea7e8509af8b1e65a98ee5d5e0e7b071e094aed0b6d1fdef5ea83ec798b2489",
                    "sha256:4e0dd81b12b87e334d6a5e728a4a3aee77afb8ca25ea480a010a6ed6d325826f",
                    "sha256:56a6c5aa23a5e170d4dbd2d20c707687aad79fcae1b73b6daab6f6b5941bfa27"
                ]
            }
        },
        "9.2.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8d139bba877cc56902fe65041c8c398576427633251fcde0f8273d5bb662552c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "79d245306971bc313e3b64b0ee07437e1249ea7cf2abc841afaaf0b635f46a6f",
            "container_config": {
                "Hostname": "79d245306971",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8d139bba877cc56902fe65041c8c398576427633251fcde0f8273d5bb662552c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-09T09:54:38.478865064Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-09T03:20:33.114050088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dc52371b5f4608e5887e8c657ff951d1895e0047960f44b153c4a55ebf1726d5 in / "
                },
                {
                    "created": "2023-02-09T03:20:33.827661092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:12:20.781014856Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:12:26.033063821Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-02-09T09:12:47.38356945Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:13:52.101890276Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:49:30.232781486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:34.030761261Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:49:34.143652297Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:34.249917261Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:39.221268954Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-02-09T09:49:39.405767434Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:39.506478924Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:41.645743268Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-02-09T09:53:16.832298437Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:53:16.946090455Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:54:28.67432748Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='29c0735ada90cdbf7e4a227dee08f18d74e33ec05d7c681e4ef95b8aa13104b3';             ;;         'x86_64')             GHC_SHA256='89f2df47d86a45593d6ba3fd3a44b627d100588cd59be257570dbe3f92b17c48';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-02-09T09:54:38.378046609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:54:38.478865064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79fda049630292d45778d9b4f580ceb9952c85cb7c9baf4d83459c9b4939bab4",
                    "sha256:bc73ff7e09aba434b31704124cec9d9ee7f170a26779f1002413ff066d3572b5",
                    "sha256:1ba767521408aa3605a93e933ebc9aa8c9f4a8cbefc1404dc21bab4a0c6c0881",
                    "sha256:b3389e626b47e1b13281c4d3f6c091d66e63f0ebe96a5572d659c9b6befe2e0b",
                    "sha256:38610c0cfc18becc30c87e0af68f1c43c5cdc0ef10d920dde284df0d58fb00e1",
                    "sha256:273c1366bf230f197129baf4e316f170ad26035e75edc4a7d92bc988ebf6e9b8",
                    "sha256:b6b282b4813609cca84f9408bada1de92e1f2d4607fb6fba798c6dc89aa68c8a",
                    "sha256:a4c3793fe910013ef438b7407b16eaf6830173e903d7ff6e8a8c28247affa84e",
                    "sha256:12c8bd26d7f7580ffdc9a314b85842776a7e2324f393d6cd4c5e7def41fb250a"
                ]
            }
        },
        "9.2.5-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8d139bba877cc56902fe65041c8c398576427633251fcde0f8273d5bb662552c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "79d245306971bc313e3b64b0ee07437e1249ea7cf2abc841afaaf0b635f46a6f",
            "container_config": {
                "Hostname": "79d245306971",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8d139bba877cc56902fe65041c8c398576427633251fcde0f8273d5bb662552c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-09T09:54:38.478865064Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-09T03:20:33.114050088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dc52371b5f4608e5887e8c657ff951d1895e0047960f44b153c4a55ebf1726d5 in / "
                },
                {
                    "created": "2023-02-09T03:20:33.827661092Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:12:20.781014856Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:12:26.033063821Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-02-09T09:12:47.38356945Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:13:52.101890276Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:49:30.232781486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:34.030761261Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:49:34.143652297Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:34.249917261Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:39.221268954Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-02-09T09:49:39.405767434Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:39.506478924Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:49:41.645743268Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-02-09T09:53:16.832298437Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:53:16.946090455Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:54:28.67432748Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='29c0735ada90cdbf7e4a227dee08f18d74e33ec05d7c681e4ef95b8aa13104b3';             ;;         'x86_64')             GHC_SHA256='89f2df47d86a45593d6ba3fd3a44b627d100588cd59be257570dbe3f92b17c48';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-02-09T09:54:38.378046609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:54:38.478865064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:79fda049630292d45778d9b4f580ceb9952c85cb7c9baf4d83459c9b4939bab4",
                    "sha256:bc73ff7e09aba434b31704124cec9d9ee7f170a26779f1002413ff066d3572b5",
                    "sha256:1ba767521408aa3605a93e933ebc9aa8c9f4a8cbefc1404dc21bab4a0c6c0881",
                    "sha256:b3389e626b47e1b13281c4d3f6c091d66e63f0ebe96a5572d659c9b6befe2e0b",
                    "sha256:38610c0cfc18becc30c87e0af68f1c43c5cdc0ef10d920dde284df0d58fb00e1",
                    "sha256:273c1366bf230f197129baf4e316f170ad26035e75edc4a7d92bc988ebf6e9b8",
                    "sha256:b6b282b4813609cca84f9408bada1de92e1f2d4607fb6fba798c6dc89aa68c8a",
                    "sha256:a4c3793fe910013ef438b7407b16eaf6830173e903d7ff6e8a8c28247affa84e",
                    "sha256:12c8bd26d7f7580ffdc9a314b85842776a7e2324f393d6cd4c5e7def41fb250a"
                ]
            }
        },
        "9.2.5-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:426643c41725ea4b3ebb9fbc6e30c6680b394d3b7e770074be2bd11e25cd539c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "327017a87b5acf0f6bb960ceac2fd59342772c0ef3985ea73d9a47846c23790e",
            "container_config": {
                "Hostname": "327017a87b5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:426643c41725ea4b3ebb9fbc6e30c6680b394d3b7e770074be2bd11e25cd539c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-09T09:56:04.028023757Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-09T03:20:48.309332969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6c5da7126f75c404a5d182eb6345153d6ea45be11da8be63a1bd355011412847 in / "
                },
                {
                    "created": "2023-02-09T03:20:48.803885004Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:23.501863504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:43.58234781Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:51:44.529716852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:44.632649271Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:47.90662032Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-02-09T09:51:48.093801072Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:48.194075294Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:50.303033054Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-02-09T09:54:55.140328276Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:54:55.2421736Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:55:57.144560447Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='29c0735ada90cdbf7e4a227dee08f18d74e33ec05d7c681e4ef95b8aa13104b3';             ;;         'x86_64')             GHC_SHA256='89f2df47d86a45593d6ba3fd3a44b627d100588cd59be257570dbe3f92b17c48';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-02-09T09:56:03.925009231Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:56:04.028023757Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63b3cf45ece8eb76e566234ff33d702695c2e1336c291b8a7cd98ac51159c5b9",
                    "sha256:237ceb848f86103f3ad9e12dd8b41736cc2fd6740f328911461ea6ff4db90a4b",
                    "sha256:825ce2242ff49d8e1fae7cf1315d983b58c29e46200b6a59c491928ff635a4a7",
                    "sha256:3239670a9877c9016a8b607776a2724ca3d24e36e732f2224febfaec913eff2b",
                    "sha256:588bb16a51bf1810b659700d3a331e0b8d0d7365dfc5002e7a206938a44606ed"
                ]
            }
        },
        "9.2.5-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:426643c41725ea4b3ebb9fbc6e30c6680b394d3b7e770074be2bd11e25cd539c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "327017a87b5acf0f6bb960ceac2fd59342772c0ef3985ea73d9a47846c23790e",
            "container_config": {
                "Hostname": "327017a87b5a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:426643c41725ea4b3ebb9fbc6e30c6680b394d3b7e770074be2bd11e25cd539c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-02-09T09:56:04.028023757Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2023-02-09T03:20:48.309332969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6c5da7126f75c404a5d182eb6345153d6ea45be11da8be63a1bd355011412847 in / "
                },
                {
                    "created": "2023-02-09T03:20:48.803885004Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:23.501863504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:43.58234781Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-09T09:51:44.529716852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:44.632649271Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:47.90662032Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-02-09T09:51:48.093801072Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:48.194075294Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:51:50.303033054Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-02-09T09:54:55.140328276Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:54:55.2421736Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:55:57.144560447Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='29c0735ada90cdbf7e4a227dee08f18d74e33ec05d7c681e4ef95b8aa13104b3';             ;;         'x86_64')             GHC_SHA256='89f2df47d86a45593d6ba3fd3a44b627d100588cd59be257570dbe3f92b17c48';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-02-09T09:56:03.925009231Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-09T09:56:04.028023757Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:63b3cf45ece8eb76e566234ff33d702695c2e1336c291b8a7cd98ac51159c5b9",
                    "sha256:237ceb848f86103f3ad9e12dd8b41736cc2fd6740f328911461ea6ff4db90a4b",
                    "sha256:825ce2242ff49d8e1fae7cf1315d983b58c29e46200b6a59c491928ff635a4a7",
                    "sha256:3239670a9877c9016a8b607776a2724ca3d24e36e732f2224febfaec913eff2b",
                    "sha256:588bb16a51bf1810b659700d3a331e0b8d0d7365dfc5002e7a206938a44606ed"
                ]
            }
        },
        "9.2.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:379fd0a99eb901a10f4346c9b591e0e1db36b1ecdddf33b03fc489366254e45a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9f7d002e96172ab7739eac3f201c872907c55f4890d44c8b7985b5ef6227309d",
            "container_config": {
                "Hostname": "9f7d002e9617",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:379fd0a99eb901a10f4346c9b591e0e1db36b1ecdddf33b03fc489366254e45a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-01T07:10:24.353137533Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-01T04:10:09.513149709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ea7d74fdfdb29946ab72e1aea5810331debe27db7e50a0fc4e0d5a192ab6166 in / "
                },
                {
                    "created": "2023-03-01T04:10:10.1290797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T04:44:23.85195191Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T04:44:31.072183946Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-03-01T04:44:51.381864862Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T04:46:25.950517738Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T07:04:58.822668027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:03.171361105Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T07:05:03.271529296Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:03.377104936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:06.573775893Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-03-01T07:05:06.796017931Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:06.892652825Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:09.142530136Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-03-01T07:09:01.104031941Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:09:01.214950074Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:10:17.624851838Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='824635dc779415bdcd20c4ef432e683a10d0a6c64dedca3441b434a60d0944f1';             ;;         'x86_64')             GHC_SHA256='85b3eaf0522781244aa7618ee285713a82cab00e21d29ea99159cf69352e2bcb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-03-01T07:10:24.255536766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:10:24.353137533Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77d93c617a90f9e3aadfe9a5913d628c22c234551bc34b1533bae5cc90458b89",
                    "sha256:2586d1d87625e88fb555eaef400c4f540afa654069154bc7ba1c4902145f8ffe",
                    "sha256:23121b8fb3e7b639bfc9247722ec44b733b8c9af3c5cca704332d05337bd6519",
                    "sha256:f0ed191ead7c9e35741056e97801df64fa8fd6d6c76c691e5a16f19f51303f8e",
                    "sha256:8491cc72b95a23c929a12c3b26a50988a89b527f30b71cbbee1ff5c41d9a1fda",
                    "sha256:7892b9de664f1a6401e19313537a7276d97dc001ef29348b114401ffda1cef74",
                    "sha256:80c0cacaabe72608833ebc31b19e0ccd2d9012ea1b471933a5c06e47f6a5cf57",
                    "sha256:bd0a5deaa658343b695f6f16b4a8d7678300ef5865ba30921b6755cf263d806d",
                    "sha256:ff37d56855ad5afe26ef0efeacbc9d85fab61390f86eb463272352441c50c9cf"
                ]
            }
        },
        "9.2.6-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:379fd0a99eb901a10f4346c9b591e0e1db36b1ecdddf33b03fc489366254e45a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9f7d002e96172ab7739eac3f201c872907c55f4890d44c8b7985b5ef6227309d",
            "container_config": {
                "Hostname": "9f7d002e9617",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:379fd0a99eb901a10f4346c9b591e0e1db36b1ecdddf33b03fc489366254e45a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-01T07:10:24.353137533Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-01T04:10:09.513149709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9ea7d74fdfdb29946ab72e1aea5810331debe27db7e50a0fc4e0d5a192ab6166 in / "
                },
                {
                    "created": "2023-03-01T04:10:10.1290797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T04:44:23.85195191Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T04:44:31.072183946Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-03-01T04:44:51.381864862Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T04:46:25.950517738Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T07:04:58.822668027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:03.171361105Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T07:05:03.271529296Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:03.377104936Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:06.573775893Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-03-01T07:05:06.796017931Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:06.892652825Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:05:09.142530136Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-03-01T07:09:01.104031941Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:09:01.214950074Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:10:17.624851838Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='824635dc779415bdcd20c4ef432e683a10d0a6c64dedca3441b434a60d0944f1';             ;;         'x86_64')             GHC_SHA256='85b3eaf0522781244aa7618ee285713a82cab00e21d29ea99159cf69352e2bcb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-03-01T07:10:24.255536766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:10:24.353137533Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77d93c617a90f9e3aadfe9a5913d628c22c234551bc34b1533bae5cc90458b89",
                    "sha256:2586d1d87625e88fb555eaef400c4f540afa654069154bc7ba1c4902145f8ffe",
                    "sha256:23121b8fb3e7b639bfc9247722ec44b733b8c9af3c5cca704332d05337bd6519",
                    "sha256:f0ed191ead7c9e35741056e97801df64fa8fd6d6c76c691e5a16f19f51303f8e",
                    "sha256:8491cc72b95a23c929a12c3b26a50988a89b527f30b71cbbee1ff5c41d9a1fda",
                    "sha256:7892b9de664f1a6401e19313537a7276d97dc001ef29348b114401ffda1cef74",
                    "sha256:80c0cacaabe72608833ebc31b19e0ccd2d9012ea1b471933a5c06e47f6a5cf57",
                    "sha256:bd0a5deaa658343b695f6f16b4a8d7678300ef5865ba30921b6755cf263d806d",
                    "sha256:ff37d56855ad5afe26ef0efeacbc9d85fab61390f86eb463272352441c50c9cf"
                ]
            }
        },
        "9.2.6-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c9de69d45e0bdf2a4aaab8b048256bc66c11e5dabf1fd77c86b7c9428de6e287",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "15b4f28f2b5e8b8ec9dc18a529ea65d5daff3aab8fbc9e010f0cb6a1b6fd0ee1",
            "container_config": {
                "Hostname": "15b4f28f2b5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c9de69d45e0bdf2a4aaab8b048256bc66c11e5dabf1fd77c86b7c9428de6e287",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-01T07:11:56.513345013Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-01T04:10:22.189534005Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2254e48bf53907be7a0b1744bc4fcd7805a627672793cf5f86a01ac751a1b24d in / "
                },
                {
                    "created": "2023-03-01T04:10:22.534724926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:06:52.429788906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:15.821199079Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T07:07:16.608432295Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:16.719727513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:20.01920811Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-03-01T07:07:20.201577412Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:20.295782232Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:22.527356806Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-03-01T07:10:39.443120695Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:10:39.543519787Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:11:49.928524856Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='824635dc779415bdcd20c4ef432e683a10d0a6c64dedca3441b434a60d0944f1';             ;;         'x86_64')             GHC_SHA256='85b3eaf0522781244aa7618ee285713a82cab00e21d29ea99159cf69352e2bcb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-03-01T07:11:56.418520084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:11:56.513345013Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d413d872f3296e76bdb43273b53fe04927434954d90a7abb1a2d86718b779696",
                    "sha256:f6600e61f1f1a4244bb092e867b06da02149aa8d020b55e1d58928dc56b6b9ab",
                    "sha256:86373cc22dbd439db3aceed6bcf3fb0e02d1e7a51d9a2ffd4e3447b7203c5df4",
                    "sha256:86b16c3a71ab9f7c1de8bc57b5a4d9184a6644980038c3ee63f2ce5f5c93d7f9",
                    "sha256:8f4b484a756618fcb6897dfae9607c0e5c78f011b2ba5f0ad5bcb58bc047debd"
                ]
            }
        },
        "9.2.6-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c9de69d45e0bdf2a4aaab8b048256bc66c11e5dabf1fd77c86b7c9428de6e287",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "15b4f28f2b5e8b8ec9dc18a529ea65d5daff3aab8fbc9e010f0cb6a1b6fd0ee1",
            "container_config": {
                "Hostname": "15b4f28f2b5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c9de69d45e0bdf2a4aaab8b048256bc66c11e5dabf1fd77c86b7c9428de6e287",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-03-01T07:11:56.513345013Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-01T04:10:22.189534005Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2254e48bf53907be7a0b1744bc4fcd7805a627672793cf5f86a01ac751a1b24d in / "
                },
                {
                    "created": "2023-03-01T04:10:22.534724926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:06:52.429788906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:15.821199079Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-03-01T07:07:16.608432295Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:16.719727513Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:20.01920811Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-03-01T07:07:20.201577412Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:20.295782232Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:07:22.527356806Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-03-01T07:10:39.443120695Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:10:39.543519787Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:11:49.928524856Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.6 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='824635dc779415bdcd20c4ef432e683a10d0a6c64dedca3441b434a60d0944f1';             ;;         'x86_64')             GHC_SHA256='85b3eaf0522781244aa7618ee285713a82cab00e21d29ea99159cf69352e2bcb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-03-01T07:11:56.418520084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T07:11:56.513345013Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d413d872f3296e76bdb43273b53fe04927434954d90a7abb1a2d86718b779696",
                    "sha256:f6600e61f1f1a4244bb092e867b06da02149aa8d020b55e1d58928dc56b6b9ab",
                    "sha256:86373cc22dbd439db3aceed6bcf3fb0e02d1e7a51d9a2ffd4e3447b7203c5df4",
                    "sha256:86b16c3a71ab9f7c1de8bc57b5a4d9184a6644980038c3ee63f2ce5f5c93d7f9",
                    "sha256:8f4b484a756618fcb6897dfae9607c0e5c78f011b2ba5f0ad5bcb58bc047debd"
                ]
            }
        },
        "9.2.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:e786329c1bc403f8d6489a19be82d3728bee630a266c9c206e2f2605447f10c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5049c94faf0efd2e4d2e5af4368e8633a20a2897f0f06abf3a0b04f7454acfec",
            "container_config": {
                "Hostname": "5049c94faf0e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:e786329c1bc403f8d6489a19be82d3728bee630a266c9c206e2f2605447f10c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T06:19:23.829633364Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:21:19.393282689Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54838b3dbf7839dadd0b29835bbe53ecbfdfde657ef8671ec5ac3cf5867ea069 in / "
                },
                {
                    "created": "2023-06-12T23:21:19.887878758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T03:31:27.874873403Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T03:31:54.926523752Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T03:33:41.292612814Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T06:14:01.062141723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:05.460415086Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T06:14:05.548655454Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:05.633066364Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:08.996939194Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-06-13T06:14:09.169341284Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:09.253183749Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:11.637155331Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-06-13T06:18:03.187030873Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:18:03.274082254Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:19:17.117268417Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b4829dd2f4bdaa4b21b22b50edec17616848ab22ab64188047a3eb12bb4da85a';             ;;         'x86_64')             GHC_SHA256='3a76ad6b96915eebf960d1b757ee57341302a76c6a8f97af63fd84eddb45362b';          ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-06-13T06:19:23.74590353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:19:23.829633364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6af7a54a0a0dc3d3b622e2ffb19b80c55b3e29b07857efb3d818517cad416e3b",
                    "sha256:53d40515380c2dce4348df0565356261e1795bd9c68f0263fa14d0bdbf52521d",
                    "sha256:eccb9ed74974c6ffbb0ffe29805839db91d2b4f4e2cdc61ee70650d6210e7fbd",
                    "sha256:dcc1cfeee1ab24b1736806348df7db43070fe755d6912cba38ce80340585ec16",
                    "sha256:82eb6a01fc3cbca20d46826f67889982549446195bd41a95831352a735550b23",
                    "sha256:10df88f675fdc7d076092e9ed29be1467c9685adefc0a426d7f0904139c5e026",
                    "sha256:733ff834dae41b7b301311f40e33b5945713816769b4e5cdff62b9f0baba167c",
                    "sha256:019f82889e31d5ada0a153839df0cdb697a7255f93d52afb49218309c83ac5a3"
                ]
            }
        },
        "9.2.7-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:e786329c1bc403f8d6489a19be82d3728bee630a266c9c206e2f2605447f10c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5049c94faf0efd2e4d2e5af4368e8633a20a2897f0f06abf3a0b04f7454acfec",
            "container_config": {
                "Hostname": "5049c94faf0e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:e786329c1bc403f8d6489a19be82d3728bee630a266c9c206e2f2605447f10c8",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T06:19:23.829633364Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:21:19.393282689Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54838b3dbf7839dadd0b29835bbe53ecbfdfde657ef8671ec5ac3cf5867ea069 in / "
                },
                {
                    "created": "2023-06-12T23:21:19.887878758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T03:31:27.874873403Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T03:31:54.926523752Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T03:33:41.292612814Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T06:14:01.062141723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:05.460415086Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T06:14:05.548655454Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:05.633066364Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:08.996939194Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-06-13T06:14:09.169341284Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:09.253183749Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:14:11.637155331Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-06-13T06:18:03.187030873Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:18:03.274082254Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:19:17.117268417Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b4829dd2f4bdaa4b21b22b50edec17616848ab22ab64188047a3eb12bb4da85a';             ;;         'x86_64')             GHC_SHA256='3a76ad6b96915eebf960d1b757ee57341302a76c6a8f97af63fd84eddb45362b';          ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-06-13T06:19:23.74590353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:19:23.829633364Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6af7a54a0a0dc3d3b622e2ffb19b80c55b3e29b07857efb3d818517cad416e3b",
                    "sha256:53d40515380c2dce4348df0565356261e1795bd9c68f0263fa14d0bdbf52521d",
                    "sha256:eccb9ed74974c6ffbb0ffe29805839db91d2b4f4e2cdc61ee70650d6210e7fbd",
                    "sha256:dcc1cfeee1ab24b1736806348df7db43070fe755d6912cba38ce80340585ec16",
                    "sha256:82eb6a01fc3cbca20d46826f67889982549446195bd41a95831352a735550b23",
                    "sha256:10df88f675fdc7d076092e9ed29be1467c9685adefc0a426d7f0904139c5e026",
                    "sha256:733ff834dae41b7b301311f40e33b5945713816769b4e5cdff62b9f0baba167c",
                    "sha256:019f82889e31d5ada0a153839df0cdb697a7255f93d52afb49218309c83ac5a3"
                ]
            }
        },
        "9.2.7-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:cfdca2ebb7ff8de748ec357ed4f557f9ccf4abceb48763fa2859e50f5fe92510",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7eb49e9800c3815f8f4553c67f40d394ce5d99a3047610d453d1332c26f55d6d",
            "container_config": {
                "Hostname": "7eb49e9800c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:cfdca2ebb7ff8de748ec357ed4f557f9ccf4abceb48763fa2859e50f5fe92510",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T06:20:40.389945678Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:21:32.653385078Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2818e508d01da2188fb234b38fb19aa1ea9eeeae92d361ecdf49318d949f51a9 in / "
                },
                {
                    "created": "2023-06-12T23:21:32.973267148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:15:54.464389136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:20.757673964Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T06:16:21.409598001Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:21.487137495Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:24.671495799Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-06-13T06:16:24.843149741Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:24.925556044Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:27.261143607Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-06-13T06:19:26.822185032Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:19:26.899035417Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:20:33.810069743Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b4829dd2f4bdaa4b21b22b50edec17616848ab22ab64188047a3eb12bb4da85a';             ;;         'x86_64')             GHC_SHA256='3a76ad6b96915eebf960d1b757ee57341302a76c6a8f97af63fd84eddb45362b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-06-13T06:20:40.305899028Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:20:40.389945678Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2ef8a51359d088511d34c725305c220294a1fcd5fe5e5dbe4d698c7239ce2c9",
                    "sha256:5b77d268bf9e6f278f60a78db08f7d344e296e6bbd1491e42086212d29ba75a9",
                    "sha256:a57a503aead9a7bd1094c680520e28c51719407db44e689edb0fd706503969d9",
                    "sha256:c771b71908f659dbead1d83577a856cafe7bff4a359aa33e20dcf1781f4035fc",
                    "sha256:abb6aa370eb1f8c28710aacd753bb65ea0b84ae47ab9d2b11b736af743772c71"
                ]
            }
        },
        "9.2.7-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:cfdca2ebb7ff8de748ec357ed4f557f9ccf4abceb48763fa2859e50f5fe92510",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7eb49e9800c3815f8f4553c67f40d394ce5d99a3047610d453d1332c26f55d6d",
            "container_config": {
                "Hostname": "7eb49e9800c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:cfdca2ebb7ff8de748ec357ed4f557f9ccf4abceb48763fa2859e50f5fe92510",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T06:20:40.389945678Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:21:32.653385078Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2818e508d01da2188fb234b38fb19aa1ea9eeeae92d361ecdf49318d949f51a9 in / "
                },
                {
                    "created": "2023-06-12T23:21:32.973267148Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:15:54.464389136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:20.757673964Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T06:16:21.409598001Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:21.487137495Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:24.671495799Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-06-13T06:16:24.843149741Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:24.925556044Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:16:27.261143607Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-06-13T06:19:26.822185032Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:19:26.899035417Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:20:33.810069743Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.7 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b4829dd2f4bdaa4b21b22b50edec17616848ab22ab64188047a3eb12bb4da85a';             ;;         'x86_64')             GHC_SHA256='3a76ad6b96915eebf960d1b757ee57341302a76c6a8f97af63fd84eddb45362b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-06-13T06:20:40.305899028Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T06:20:40.389945678Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2ef8a51359d088511d34c725305c220294a1fcd5fe5e5dbe4d698c7239ce2c9",
                    "sha256:5b77d268bf9e6f278f60a78db08f7d344e296e6bbd1491e42086212d29ba75a9",
                    "sha256:a57a503aead9a7bd1094c680520e28c51719407db44e689edb0fd706503969d9",
                    "sha256:c771b71908f659dbead1d83577a856cafe7bff4a359aa33e20dcf1781f4035fc",
                    "sha256:abb6aa370eb1f8c28710aacd753bb65ea0b84ae47ab9d2b11b736af743772c71"
                ]
            }
        },
        "9.2.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "457b64eb715ccd47b563b6959b67869189c957d6a629affa4983a7dafc6d55bf",
            "container_config": {
                "Hostname": "457b64eb715c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:02:34.321230194Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:01:13.366194704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.457374313Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:27.657060749Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:02:34.223020699Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:34.321230194Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:6ad7b51711b4f23512a66cb1896369f474077847258e46cc9dde043973d30e56"
                ]
            }
        },
        "9.2.8-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "457b64eb715ccd47b563b6959b67869189c957d6a629affa4983a7dafc6d55bf",
            "container_config": {
                "Hostname": "457b64eb715c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3b026dc5d17ff05557697c1b718f16ade860e641b022c9fd55dedd4f5ff06db2",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:02:34.321230194Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:01:10.423307881Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:10.51761685Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.210135108Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:01:13.366194704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:13.457374313Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:27.657060749Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:02:34.223020699Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:34.321230194Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:90af234a00fea9e6dfa2233a601cc91e3bffd030ffe046b1275e43ecbb6fa1a9",
                    "sha256:6ad7b51711b4f23512a66cb1896369f474077847258e46cc9dde043973d30e56"
                ]
            }
        },
        "9.2.8-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f0dfb3bf0590a20c94f267fb26bf428c0fe78ce098224e2c95acaca086b3b23",
            "container_config": {
                "Hostname": "7f0dfb3bf059",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:04:09.29179117Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:02:52.058630637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:52.151587668Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:02.720857897Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:04:09.19207006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:09.29179117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:dc305445178a950a64792b78c09c943ba95dd7c5be4c48a4c1d6d82424ce11f4"
                ]
            }
        },
        "9.2.8-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f0dfb3bf0590a20c94f267fb26bf428c0fe78ce098224e2c95acaca086b3b23",
            "container_config": {
                "Hostname": "7f0dfb3bf059",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:ea3c25993daad2149995afddb5e20cc5003b8d9b568118facb3590724bd9f47d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:04:09.29179117Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T15:02:49.43377895Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:49.5288134Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:51.880480675Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T15:02:52.058630637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.2.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:02:52.151587668Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:02.720857897Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.2.8 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='645433359d8ad9e7b286f85ef5111db1b787ee3712c24c5dfde7c62769aa59a4';             ;;         'x86_64')             GHC_SHA256='10d1be25487bcf99ac8eb77beaa220c85e69f8c1106f4219ce019206ecc0ac51';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:04:09.19207006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.2.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:04:09.29179117Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:243216ec742dca4bcccb793c8b4822270390aabd01c431e0265210c571cd837f",
                    "sha256:dc305445178a950a64792b78c09c943ba95dd7c5be4c48a4c1d6d82424ce11f4"
                ]
            }
        },
        "9.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1e7c88150dd8d1590d4ee252218960e35ba73a80feebba2d32ae9637cb869677",
            "container_config": {
                "Hostname": "1e7c88150dd8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:59:15.490360468Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:57:37.495771471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:37.589637269Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:09.217859106Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:59:15.399341707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:15.490360468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:daf8fcf21ff41ccfdadb74cd5c1359440cbb83204da60f9b9e3724223ebd8dae"
                ]
            }
        },
        "9.4-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1e7c88150dd8d1590d4ee252218960e35ba73a80feebba2d32ae9637cb869677",
            "container_config": {
                "Hostname": "1e7c88150dd8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:59:15.490360468Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:57:37.495771471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:37.589637269Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:09.217859106Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:59:15.399341707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:15.490360468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:daf8fcf21ff41ccfdadb74cd5c1359440cbb83204da60f9b9e3724223ebd8dae"
                ]
            }
        },
        "9.4-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4ff471b530706fef36518c8af42f36d8d1283a2db4162ff42e913d190457f89",
            "container_config": {
                "Hostname": "f4ff471b5307",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:01:02.697476961Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:59:31.372291567Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:31.467825962Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:00:57.116005865Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:01:02.583085988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:02.697476961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:0849034b2e2569c4a06df8ffa48ee1feda1c35755d29660dca375567d36a2b97"
                ]
            }
        },
        "9.4-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4ff471b530706fef36518c8af42f36d8d1283a2db4162ff42e913d190457f89",
            "container_config": {
                "Hostname": "f4ff471b5307",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:01:02.697476961Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:59:31.372291567Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:31.467825962Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:00:57.116005865Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:01:02.583085988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:02.697476961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:0849034b2e2569c4a06df8ffa48ee1feda1c35755d29660dca375567d36a2b97"
                ]
            }
        },
        "9.4.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c97393f4aeb2121aa41c9a16920deee28f85596064ed734622d5e21ba9375ba4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d8d08a1facc3f6e16aee0980078ac94ad139f516729ee1f96fd996fbac6105e6",
            "container_config": {
                "Hostname": "d8d08a1facc3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c97393f4aeb2121aa41c9a16920deee28f85596064ed734622d5e21ba9375ba4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T22:21:59.076713871Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-02T01:20:14.090123365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:647206e0e9c1daa306e4ebbdc26c3ef1840dd316ba4ffea905d17b0858e58e34 in / "
                },
                {
                    "created": "2022-08-02T01:20:14.563306524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T01:48:15.674263587Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T01:48:21.063224423Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-02T01:48:38.577408155Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T01:49:29.070492705Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T04:14:02.239892121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:14:06.183941735Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T04:14:06.290252726Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:14:06.385200151Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:14:10.572308091Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-08-10T22:20:27.564346556Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:20:27.664603997Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:20:30.661209734Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-08-10T22:20:30.830743921Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:20:30.93478053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:21:53.075696418Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='7e8ed05533b8ed0440bfb4881e3098333a9dadf24cb6857c2446879e43f7362c';             ;;         'x86_64')             GHC_SHA256='dcbff828b14a59d01d3fda68bb01b9cbc3a321a0c013905f436df5627128aa58';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-08-10T22:21:58.973205963Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:21:59.076713871Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37a609cfa10dfc8bdc8e35c92044e0a1f3c797af46f8541bdd01a6c2b28cd135",
                    "sha256:eea33d4fb8260e8eb36158d113cdab15cddff7f5d1ff266879815a20d64234f1",
                    "sha256:a657c4b931504b91a3d03be9eaa17bd45ebb51dec575bd58d5240dc981ece13c",
                    "sha256:91a7fe198f83fb55e799eca8a47e74a393e2501c26121af0009878ea4639b942",
                    "sha256:1e90ee259bc5feefe1114791be57e1cc0c5df5efbc433fb8967c203bdd656e77",
                    "sha256:2415407aa6ff9290a9872153412f98c891c16dd4e2ad03b12ed0f3b671579e3b",
                    "sha256:ea2859cb8f71ae7242b65ef63fbd9bd0220132c67b1934487db5b361f822884f",
                    "sha256:d27023ce1381c08a104bf27970bbfe0fc778c78b73859df4fb2a5fc61b0dec90",
                    "sha256:753a9eedba4a7ee41de0416614381d3e88887047ac33b8fdbe08702de76de425"
                ]
            }
        },
        "9.4.1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c97393f4aeb2121aa41c9a16920deee28f85596064ed734622d5e21ba9375ba4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d8d08a1facc3f6e16aee0980078ac94ad139f516729ee1f96fd996fbac6105e6",
            "container_config": {
                "Hostname": "d8d08a1facc3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c97393f4aeb2121aa41c9a16920deee28f85596064ed734622d5e21ba9375ba4",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T22:21:59.076713871Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-02T01:20:14.090123365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:647206e0e9c1daa306e4ebbdc26c3ef1840dd316ba4ffea905d17b0858e58e34 in / "
                },
                {
                    "created": "2022-08-02T01:20:14.563306524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T01:48:15.674263587Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T01:48:21.063224423Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-02T01:48:38.577408155Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T01:49:29.070492705Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T04:14:02.239892121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:14:06.183941735Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T04:14:06.290252726Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:14:06.385200151Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:14:10.572308091Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-08-10T22:20:27.564346556Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:20:27.664603997Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:20:30.661209734Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-08-10T22:20:30.830743921Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:20:30.93478053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:21:53.075696418Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='7e8ed05533b8ed0440bfb4881e3098333a9dadf24cb6857c2446879e43f7362c';             ;;         'x86_64')             GHC_SHA256='dcbff828b14a59d01d3fda68bb01b9cbc3a321a0c013905f436df5627128aa58';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-08-10T22:21:58.973205963Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:21:59.076713871Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37a609cfa10dfc8bdc8e35c92044e0a1f3c797af46f8541bdd01a6c2b28cd135",
                    "sha256:eea33d4fb8260e8eb36158d113cdab15cddff7f5d1ff266879815a20d64234f1",
                    "sha256:a657c4b931504b91a3d03be9eaa17bd45ebb51dec575bd58d5240dc981ece13c",
                    "sha256:91a7fe198f83fb55e799eca8a47e74a393e2501c26121af0009878ea4639b942",
                    "sha256:1e90ee259bc5feefe1114791be57e1cc0c5df5efbc433fb8967c203bdd656e77",
                    "sha256:2415407aa6ff9290a9872153412f98c891c16dd4e2ad03b12ed0f3b671579e3b",
                    "sha256:ea2859cb8f71ae7242b65ef63fbd9bd0220132c67b1934487db5b361f822884f",
                    "sha256:d27023ce1381c08a104bf27970bbfe0fc778c78b73859df4fb2a5fc61b0dec90",
                    "sha256:753a9eedba4a7ee41de0416614381d3e88887047ac33b8fdbe08702de76de425"
                ]
            }
        },
        "9.4.1-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:22569a6b5479403011e34061907044bde2df02a570d0f25eef93e8e33b819016",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e4eaf8693a0591daacd8b941e13e578175662f6a2ab792e639b34423334cc792",
            "container_config": {
                "Hostname": "e4eaf8693a05",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:22569a6b5479403011e34061907044bde2df02a570d0f25eef93e8e33b819016",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T22:23:28.203665541Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-02T01:20:24.349338951Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:81dbfe4f9df4d280f7580380c0c5c93ba71fedba17b3072d2b7b4bce127f88a9 in / "
                },
                {
                    "created": "2022-08-02T01:20:24.647352569Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:15:40.240834704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:16:00.460375305Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T04:16:01.056896395Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:16:01.151663168Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:16:04.253555089Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-08-10T22:22:05.55776283Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:22:05.658417724Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:22:08.281286257Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-08-10T22:22:08.464970227Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:22:08.562156448Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:23:24.853016671Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='7e8ed05533b8ed0440bfb4881e3098333a9dadf24cb6857c2446879e43f7362c';             ;;         'x86_64')             GHC_SHA256='dcbff828b14a59d01d3fda68bb01b9cbc3a321a0c013905f436df5627128aa58';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-08-10T22:23:28.10552415Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:23:28.203665541Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:735956b91a18480450076b4e4a1f403cfe0c0f1dc7bf065341c2446fa045347d",
                    "sha256:a8b26d367ecb34ae85249f45c3a3a1e8e5d95872bb97689e62d79ffa032561ca",
                    "sha256:4694a1b4595f7bdf6b9b8af191e57c9f378e21cc392c8f7669feccc5e0c51bdb",
                    "sha256:986a2b32a34aa1886441f5edc73a42ffb48dfe7cb1d91f514650c68bfa3787d1",
                    "sha256:71132a8489bc17a1b99c17ab2c9891988558f8ed636769b65c1d9d549ede461a"
                ]
            }
        },
        "9.4.1-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:22569a6b5479403011e34061907044bde2df02a570d0f25eef93e8e33b819016",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e4eaf8693a0591daacd8b941e13e578175662f6a2ab792e639b34423334cc792",
            "container_config": {
                "Hostname": "e4eaf8693a05",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:22569a6b5479403011e34061907044bde2df02a570d0f25eef93e8e33b819016",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-10T22:23:28.203665541Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-02T01:20:24.349338951Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:81dbfe4f9df4d280f7580380c0c5c93ba71fedba17b3072d2b7b4bce127f88a9 in / "
                },
                {
                    "created": "2022-08-02T01:20:24.647352569Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:15:40.240834704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:16:00.460375305Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T04:16:01.056896395Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:16:01.151663168Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T04:16:04.253555089Z",
                    "created_by": "|2 STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='9bcd165358d4dcafd2b33320d4fe98ce72faaf62300cc9b0fb86a27eb670da50';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-08-10T22:22:05.55776283Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:22:05.658417724Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:22:08.281286257Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-08-10T22:22:08.464970227Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:22:08.562156448Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:23:24.853016671Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.7.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='7e8ed05533b8ed0440bfb4881e3098333a9dadf24cb6857c2446879e43f7362c';             ;;         'x86_64')             GHC_SHA256='dcbff828b14a59d01d3fda68bb01b9cbc3a321a0c013905f436df5627128aa58';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-08-10T22:23:28.10552415Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-10T22:23:28.203665541Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:735956b91a18480450076b4e4a1f403cfe0c0f1dc7bf065341c2446fa045347d",
                    "sha256:a8b26d367ecb34ae85249f45c3a3a1e8e5d95872bb97689e62d79ffa032561ca",
                    "sha256:4694a1b4595f7bdf6b9b8af191e57c9f378e21cc392c8f7669feccc5e0c51bdb",
                    "sha256:986a2b32a34aa1886441f5edc73a42ffb48dfe7cb1d91f514650c68bfa3787d1",
                    "sha256:71132a8489bc17a1b99c17ab2c9891988558f8ed636769b65c1d9d549ede461a"
                ]
            }
        },
        "9.4.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:23a69e24a20350293f76c77df42dab368c325b278a809490b36ad30e6dd697fb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c027e19e636eb56a0e44149e7618e300cc20616c1cad54260e2a26b920b176a1",
            "container_config": {
                "Hostname": "c027e19e636e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:23a69e24a20350293f76c77df42dab368c325b278a809490b36ad30e6dd697fb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-26T00:55:45.996288764Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:02.196310827Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:259be79d94a2549a667ad08a093fe18f15a6c93d66a0723292f49294e31fc7a1 in / "
                },
                {
                    "created": "2022-10-25T01:44:02.651758135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T09:25:03.651210628Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:25:09.269901625Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-25T09:25:28.912038747Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:26:32.306715971Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:10.361280322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.261511736Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:14.378048822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.482845816Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.145592952Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-26T00:54:18.365421421Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.468863349Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:20.88457795Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-26T00:54:21.052365018Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:21.162207673Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:55:40.410786354Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ea075c54143dde37ea50cd085af61abb1fcfce8913deac298adc328bbb349464';             ;;         'x86_64')             GHC_SHA256='5bf34ef70a2b824d45e525f09690c76707b7f01698962e425e8fd78b94ea9174';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-26T00:55:45.890910975Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:55:45.996288764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f0a87eb98d2aab1705a1ffb6cfa8d876ce169d48a98db60eb8b4f7c32767e8f4",
                    "sha256:7a0f5beec8b3f9ebd24fcb606a272c940f73d9dcbd99a0c6be06aa885e73baee",
                    "sha256:ada8cfae898c36530a940ab28636179e01f56df5cfdbf55d088c12b6a34ea644",
                    "sha256:9cfc4aa8768aaafd35dd7ebac9c1066cb6b1a340e241e3d82e565187e1df4a9a",
                    "sha256:36d4a190a4f61d7f2579cd998a4666d429ecbd96a427d45d5ee64f1c6ce5f61c",
                    "sha256:b22ee3d74e8c80c305f9ff1c754bbefc3210eeab71e43baddef48eebb8f153d5",
                    "sha256:39561800c1ccd98d7d0b34bdca491f14f29aa0d2bec838e208ce67d29259ba7b",
                    "sha256:1248ee7a9f3f79ce56d985cf2c5c025fba9ebe8539dae8e3c4f051519e80a868",
                    "sha256:1cba56b4356f226130d656071a38ad7087268fbc8ee803079adefe064f2c317a"
                ]
            }
        },
        "9.4.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:23a69e24a20350293f76c77df42dab368c325b278a809490b36ad30e6dd697fb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c027e19e636eb56a0e44149e7618e300cc20616c1cad54260e2a26b920b176a1",
            "container_config": {
                "Hostname": "c027e19e636e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:23a69e24a20350293f76c77df42dab368c325b278a809490b36ad30e6dd697fb",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-26T00:55:45.996288764Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:02.196310827Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:259be79d94a2549a667ad08a093fe18f15a6c93d66a0723292f49294e31fc7a1 in / "
                },
                {
                    "created": "2022-10-25T01:44:02.651758135Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T09:25:03.651210628Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:25:09.269901625Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-10-25T09:25:28.912038747Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T09:26:32.306715971Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:10.361280322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.261511736Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-26T00:54:14.378048822Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:14.482845816Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.145592952Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-26T00:54:18.365421421Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:18.468863349Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:20.88457795Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-26T00:54:21.052365018Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:54:21.162207673Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:55:40.410786354Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ea075c54143dde37ea50cd085af61abb1fcfce8913deac298adc328bbb349464';             ;;         'x86_64')             GHC_SHA256='5bf34ef70a2b824d45e525f09690c76707b7f01698962e425e8fd78b94ea9174';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-26T00:55:45.890910975Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T00:55:45.996288764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f0a87eb98d2aab1705a1ffb6cfa8d876ce169d48a98db60eb8b4f7c32767e8f4",
                    "sha256:7a0f5beec8b3f9ebd24fcb606a272c940f73d9dcbd99a0c6be06aa885e73baee",
                    "sha256:ada8cfae898c36530a940ab28636179e01f56df5cfdbf55d088c12b6a34ea644",
                    "sha256:9cfc4aa8768aaafd35dd7ebac9c1066cb6b1a340e241e3d82e565187e1df4a9a",
                    "sha256:36d4a190a4f61d7f2579cd998a4666d429ecbd96a427d45d5ee64f1c6ce5f61c",
                    "sha256:b22ee3d74e8c80c305f9ff1c754bbefc3210eeab71e43baddef48eebb8f153d5",
                    "sha256:39561800c1ccd98d7d0b34bdca491f14f29aa0d2bec838e208ce67d29259ba7b",
                    "sha256:1248ee7a9f3f79ce56d985cf2c5c025fba9ebe8539dae8e3c4f051519e80a868",
                    "sha256:1cba56b4356f226130d656071a38ad7087268fbc8ee803079adefe064f2c317a"
                ]
            }
        },
        "9.4.2-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:6ce28e79299de0fe82be18541d46b931aa49984db4bfdf607f29f3ee9ab12058",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f489e8dcd86e198e69014db1b5b9c77f946157abafdf13f730e40e441aacaa96",
            "container_config": {
                "Hostname": "f489e8dcd86e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:6ce28e79299de0fe82be18541d46b931aa49984db4bfdf607f29f3ee9ab12058",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-25T03:44:03.573089726Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:12.591994931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:14c4aa7a136ce9eb1fae0ba0f394509990d44126be801a2713cf8722fbb2e6b9 in / "
                },
                {
                    "created": "2022-10-25T01:44:12.933097776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:14.948679237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:36.777791503Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T03:42:37.473488095Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:37.576613547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:42.750432981Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-25T03:42:42.945184133Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:43.04804092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:45.568540195Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-25T03:42:45.74426732Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:45.846950919Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:44:00.608425639Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ea075c54143dde37ea50cd085af61abb1fcfce8913deac298adc328bbb349464';             ;;         'x86_64')             GHC_SHA256='5bf34ef70a2b824d45e525f09690c76707b7f01698962e425e8fd78b94ea9174';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-25T03:44:03.473523483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:44:03.573089726Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74f8a626d86ff49780a3ed3618155eb37a91a357fb9a5f99735a334810ecc00f",
                    "sha256:8c1d8bc8da6c72a6e88da5c83c374e078a0fc4f9d169aded44ea992fbaa71aa7",
                    "sha256:dea7e8509af8b1e65a98ee5d5e0e7b071e094aed0b6d1fdef5ea83ec798b2489",
                    "sha256:4e0dd81b12b87e334d6a5e728a4a3aee77afb8ca25ea480a010a6ed6d325826f",
                    "sha256:a8c4c4d3cf3437a5cdc069b3b0520d00a6b79e0c7b6716f9c0c2eb5e750e506c"
                ]
            }
        },
        "9.4.2-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:6ce28e79299de0fe82be18541d46b931aa49984db4bfdf607f29f3ee9ab12058",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f489e8dcd86e198e69014db1b5b9c77f946157abafdf13f730e40e441aacaa96",
            "container_config": {
                "Hostname": "f489e8dcd86e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:6ce28e79299de0fe82be18541d46b931aa49984db4bfdf607f29f3ee9ab12058",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-10-25T03:44:03.573089726Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-10-25T01:44:12.591994931Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:14c4aa7a136ce9eb1fae0ba0f394509990d44126be801a2713cf8722fbb2e6b9 in / "
                },
                {
                    "created": "2022-10-25T01:44:12.933097776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:14.948679237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:36.777791503Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-10-25T03:42:37.473488095Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:37.576613547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:42.750432981Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-10-25T03:42:42.945184133Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:43.04804092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:45.568540195Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-10-25T03:42:45.74426732Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:42:45.846950919Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:44:00.608425639Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ea075c54143dde37ea50cd085af61abb1fcfce8913deac298adc328bbb349464';             ;;         'x86_64')             GHC_SHA256='5bf34ef70a2b824d45e525f09690c76707b7f01698962e425e8fd78b94ea9174';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-10-25T03:44:03.473523483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T03:44:03.573089726Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:74f8a626d86ff49780a3ed3618155eb37a91a357fb9a5f99735a334810ecc00f",
                    "sha256:8c1d8bc8da6c72a6e88da5c83c374e078a0fc4f9d169aded44ea992fbaa71aa7",
                    "sha256:dea7e8509af8b1e65a98ee5d5e0e7b071e094aed0b6d1fdef5ea83ec798b2489",
                    "sha256:4e0dd81b12b87e334d6a5e728a4a3aee77afb8ca25ea480a010a6ed6d325826f",
                    "sha256:a8c4c4d3cf3437a5cdc069b3b0520d00a6b79e0c7b6716f9c0c2eb5e750e506c"
                ]
            }
        },
        "9.4.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9f4d33ca20e94e7c5e55ee1adf4bda6f09e22b4541f0afb92409f35ce5b7d98b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c574732b0e52ae8a6a9a7e4df625b441583e9a77955162e07792350f44839512",
            "container_config": {
                "Hostname": "c574732b0e52",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9f4d33ca20e94e7c5e55ee1adf4bda6f09e22b4541f0afb92409f35ce5b7d98b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:11:24.330409838Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:09:58.858851418Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.958851768Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:11:18.767942615Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.3 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9694131b02f938e72e1740b772ff1c1c81a36ef44233dc230bbd978e7dd08e71';             ;;         'x86_64')             GHC_SHA256='940ac2b1770dc63b5f3f38f829bfe69f4a572d6b26cd93094cdd99d5300b5067';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:11:24.226951011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:11:24.330409838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:706a2b43423222f1fe4d9a18183ab12ef25c355b409f89744d7f6e2dbf7ceda5"
                ]
            }
        },
        "9.4.3-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:9f4d33ca20e94e7c5e55ee1adf4bda6f09e22b4541f0afb92409f35ce5b7d98b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c574732b0e52ae8a6a9a7e4df625b441583e9a77955162e07792350f44839512",
            "container_config": {
                "Hostname": "c574732b0e52",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:9f4d33ca20e94e7c5e55ee1adf4bda6f09e22b4541f0afb92409f35ce5b7d98b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T17:11:24.330409838Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:41.678349973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c865da7afcf35b5a9538e63633f7e99ae4c40933cb8a0235e9704713042fba66 in / "
                },
                {
                    "created": "2022-12-21T01:20:42.227110967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T11:15:56.224799311Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:16:03.331581794Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-12-21T11:16:22.50536571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T11:17:27.761676548Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:47.990863692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.03203539Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T17:09:52.148770326Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:52.253644731Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.063470183Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T17:09:56.263166616Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:56.364783857Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.698640681Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T17:09:58.858851418Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:09:58.958851768Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:11:18.767942615Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.3 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9694131b02f938e72e1740b772ff1c1c81a36ef44233dc230bbd978e7dd08e71';             ;;         'x86_64')             GHC_SHA256='940ac2b1770dc63b5f3f38f829bfe69f4a572d6b26cd93094cdd99d5300b5067';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T17:11:24.226951011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T17:11:24.330409838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a416f5060b0cb3243f387da91d51af0948a3c275b93d5155ec0d61e02a5efe56",
                    "sha256:371587d8d651d49c09db3cd8c07873460999faf4542dfa44f6b2bab1e509f010",
                    "sha256:c1842b709be1a50929ba12ff16206b3febd4283b00755f850dd52a31338df4b9",
                    "sha256:713cb2b1e6c1d4b934f8b79ac3908eafb98f7b97ec76441f58e2cb54cbf143b0",
                    "sha256:b1721623f6221bd20dc30932b0b02a1147236df4201a1078b009c9fc11499a00",
                    "sha256:f3d8928c9eaf3300e3d89f170a3197a3657cae859a0b0120b21f21ae393117ee",
                    "sha256:e8eb007962ea5bed5a46338a9e763c407a31a497f9b97a11febc235476254407",
                    "sha256:050e13b6465b443a37f4772db4ea0182725933a89d9f912dec5557c527f07020",
                    "sha256:706a2b43423222f1fe4d9a18183ab12ef25c355b409f89744d7f6e2dbf7ceda5"
                ]
            }
        },
        "9.4.3-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:761fb0df89bef7ecb7e2e0d167bb5d9832e4b6e9e51a99f19f8d2faf2158bff0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "21f5eaec4210c827d01260f1faf2d91cbe68ba7b20307348d3ba2d02f43d5a02",
            "container_config": {
                "Hostname": "21f5eaec4210",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:761fb0df89bef7ecb7e2e0d167bb5d9832e4b6e9e51a99f19f8d2faf2158bff0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:12:47.681912428Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:11:30.906770657Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:31.025740917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:12:44.739494838Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.3 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9694131b02f938e72e1740b772ff1c1c81a36ef44233dc230bbd978e7dd08e71';             ;;         'x86_64')             GHC_SHA256='940ac2b1770dc63b5f3f38f829bfe69f4a572d6b26cd93094cdd99d5300b5067';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:12:47.57734272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:12:47.681912428Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:3ca5fac0ac3e54648d4abb57bf2ec141625f8f7e922eef4394c2943317307bfc"
                ]
            }
        },
        "9.4.3-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:761fb0df89bef7ecb7e2e0d167bb5d9832e4b6e9e51a99f19f8d2faf2158bff0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "21f5eaec4210c827d01260f1faf2d91cbe68ba7b20307348d3ba2d02f43d5a02",
            "container_config": {
                "Hostname": "21f5eaec4210",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:761fb0df89bef7ecb7e2e0d167bb5d9832e4b6e9e51a99f19f8d2faf2158bff0",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-12-21T03:12:47.681912428Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-12-21T01:20:52.325051963Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:660e0093a3da49e4ca41260d09d585754ccb1eff8974c4b0dd4456b76ddbbc9a in / "
                },
                {
                    "created": "2022-12-21T01:20:52.681847996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:01.375805733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:23.513380015Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-12-21T03:11:24.27981458Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.1",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:24.380106224Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.075070137Z",
                    "created_by": "|2 STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     INSTALL_STACK=\"true\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             INSTALL_STACK=\"false\";             ;;         'x86_64')             STACK_SHA256='0581cebe880b8ed47556ee73d8bbb9d602b5b82e38f89f6aa53acaec37e7760d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     if [ \"$INSTALL_STACK\" = \"true\" ]; then         curl -sSL \"$STACK_URL\" -o stack.tar.gz;         echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;                 curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;         gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";         gpg --batch --verify stack.tar.gz.asc stack.tar.gz;         gpgconf --kill all;                 tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";         stack config set system-ghc --global true;         stack config set install-ghc --global false;                 rm -rf /tmp/*;                 stack --version;     fi"
                },
                {
                    "created": "2022-12-21T03:11:28.294853719Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:28.402185595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:30.750312912Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2022-12-21T03:11:30.906770657Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:11:31.025740917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:12:44.739494838Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.3 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9694131b02f938e72e1740b772ff1c1c81a36ef44233dc230bbd978e7dd08e71';             ;;         'x86_64')             GHC_SHA256='940ac2b1770dc63b5f3f38f829bfe69f4a572d6b26cd93094cdd99d5300b5067';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;     rm -rf \"/opt/ghc/$GHC/share/\";         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2022-12-21T03:12:47.57734272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T03:12:47.681912428Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b6f75f8765bbf31140f9649562054f95b9294ed003cb02e4adf456ee87e9c4a",
                    "sha256:782c5d90dfd8b7c1f11e3d63c6a98df5a78de242f7a03873d90e14cc57cd5e3b",
                    "sha256:990a7f557f72181cf68f1451960db08e7cd1a5710819203cf70d6cc27e8a83a0",
                    "sha256:4a4e3f3c1c49966c782f7eab976eb3fcef51dd2b604d134310bab454751baca6",
                    "sha256:3ca5fac0ac3e54648d4abb57bf2ec141625f8f7e922eef4394c2943317307bfc"
                ]
            }
        },
        "9.4.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:27566c0b5d23578cf35571d546742229c4445736e488e517070122da3569f4d7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4220140f741bae383b2ef82fc140a9be51453ab313994f2e481744113f8de406",
            "container_config": {
                "Hostname": "4220140f741b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:27566c0b5d23578cf35571d546742229c4445736e488e517070122da3569f4d7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-12T19:37:20.206265622Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-04-12T00:20:15.484606186Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40953ed6e6f96703b2e0c13288437c2aaf8b3df33dbc423686290cbe0e595a5e in / "
                },
                {
                    "created": "2023-04-12T00:20:15.909443499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T07:52:41.154721255Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T07:52:47.180870942Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-04-12T07:53:05.314712075Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T07:54:04.7814266Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T19:35:39.781737117Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:43.769290743Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T19:35:43.875768531Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:43.960393343Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:47.009064467Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-04-12T19:35:47.173819383Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:47.260632968Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:49.671979062Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-04-12T19:35:49.816302331Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:49.905696618Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:37:13.630512633Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.4 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='2c0f22a7430490be3071f88240761bd7aadb7d40f22c6b9f1d2485ffcdf4e2e0';             ;;         'x86_64')             GHC_SHA256='a3ecd2426bb519d6fdad05904c386f1c74b433f07722b0d1ef606c23159ade2d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-04-12T19:37:20.118993593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:37:20.206265622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2dba74777543b60e1a5be6da44e67659f51b8df1e96922205a5dde6b92dda3c",
                    "sha256:f1186e5061f20658954f6bfdfaead0abc5ed2371d70f707da05206e868a226ab",
                    "sha256:fe0fb3ab4a0f7be72784fcab5ef9c8fda65ea9b1067e8f7cdf293c12bcd25c13",
                    "sha256:c45660adde371317a1eafb102ee1d33b059328ec73a01b5c2461c4d04a40ecec",
                    "sha256:e01a454893a9a11115c598e5dec158ded8bd41326046c993c81b76b6a963590b",
                    "sha256:89d0ed892b3f7037fa977561b695a188bbc949415c994c0ff333e6a0e585eb57",
                    "sha256:b1ce6a854397a9a3c1a2e0c955ab244a2076e158d4f93451365dc0434a704dc5",
                    "sha256:d3bc67432fc740c535f9574714c17d58655fca0fe7286eaad6a792097d105299",
                    "sha256:c02d1484094e441b3cd83b4e0d18fb6e2b42a8ae8189f430a402180879ef2f84"
                ]
            }
        },
        "9.4.4-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:27566c0b5d23578cf35571d546742229c4445736e488e517070122da3569f4d7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4220140f741bae383b2ef82fc140a9be51453ab313994f2e481744113f8de406",
            "container_config": {
                "Hostname": "4220140f741b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:27566c0b5d23578cf35571d546742229c4445736e488e517070122da3569f4d7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-12T19:37:20.206265622Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-04-12T00:20:15.484606186Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40953ed6e6f96703b2e0c13288437c2aaf8b3df33dbc423686290cbe0e595a5e in / "
                },
                {
                    "created": "2023-04-12T00:20:15.909443499Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T07:52:41.154721255Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T07:52:47.180870942Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2023-04-12T07:53:05.314712075Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T07:54:04.7814266Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T19:35:39.781737117Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:43.769290743Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T19:35:43.875768531Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:43.960393343Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:47.009064467Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-04-12T19:35:47.173819383Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:47.260632968Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:49.671979062Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-04-12T19:35:49.816302331Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:35:49.905696618Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:37:13.630512633Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.4 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='2c0f22a7430490be3071f88240761bd7aadb7d40f22c6b9f1d2485ffcdf4e2e0';             ;;         'x86_64')             GHC_SHA256='a3ecd2426bb519d6fdad05904c386f1c74b433f07722b0d1ef606c23159ade2d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-04-12T19:37:20.118993593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T19:37:20.206265622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2dba74777543b60e1a5be6da44e67659f51b8df1e96922205a5dde6b92dda3c",
                    "sha256:f1186e5061f20658954f6bfdfaead0abc5ed2371d70f707da05206e868a226ab",
                    "sha256:fe0fb3ab4a0f7be72784fcab5ef9c8fda65ea9b1067e8f7cdf293c12bcd25c13",
                    "sha256:c45660adde371317a1eafb102ee1d33b059328ec73a01b5c2461c4d04a40ecec",
                    "sha256:e01a454893a9a11115c598e5dec158ded8bd41326046c993c81b76b6a963590b",
                    "sha256:89d0ed892b3f7037fa977561b695a188bbc949415c994c0ff333e6a0e585eb57",
                    "sha256:b1ce6a854397a9a3c1a2e0c955ab244a2076e158d4f93451365dc0434a704dc5",
                    "sha256:d3bc67432fc740c535f9574714c17d58655fca0fe7286eaad6a792097d105299",
                    "sha256:c02d1484094e441b3cd83b4e0d18fb6e2b42a8ae8189f430a402180879ef2f84"
                ]
            }
        },
        "9.4.4-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8d346885c8be77aa9477c35c490aeaf403c3b9ed9c97ceac1c8508bab1fb0af5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b86a5825c26cd8bf65edf53ed39472ef48918a9a793ac6645004d9351bd06b4",
            "container_config": {
                "Hostname": "8b86a5825c26",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8d346885c8be77aa9477c35c490aeaf403c3b9ed9c97ceac1c8508bab1fb0af5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-12T01:31:25.508617646Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-04-12T00:20:25.768925434Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e614539607055bdbde0cc1a94ef9783fe3627c8553ef1b21071ecb5c27ea27e4 in / "
                },
                {
                    "created": "2023-04-12T00:20:26.064098572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:29.259333605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:51.150792138Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T01:29:51.751761976Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:51.833858879Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:54.888919483Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-04-12T01:29:55.050583238Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:55.134768053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:58.768860049Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-04-12T01:29:58.902706374Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:58.986642385Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:31:20.467923035Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.4 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='2c0f22a7430490be3071f88240761bd7aadb7d40f22c6b9f1d2485ffcdf4e2e0';             ;;         'x86_64')             GHC_SHA256='a3ecd2426bb519d6fdad05904c386f1c74b433f07722b0d1ef606c23159ade2d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-04-12T01:31:25.427767865Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:31:25.508617646Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61a5c84a1270a2da38fd32b5dd395bc404fb6c02940fa3b302a94d1c105ce499",
                    "sha256:c29c17e2b734db88dfe52f72d3bffe103b1413af1e7c9d2e124200b7ebb587a9",
                    "sha256:c02296313d80abb297aef6d60e57140c76898d6eaa88d86679e67a19f3d93988",
                    "sha256:8fd035c1efb88af3b74f2a89c0a01b287715b501e80ce4bade9a286254c8f912",
                    "sha256:9b4f19cd9b9ea9111e50193267dea059994a5251f377e884cd01b731e47980ad"
                ]
            }
        },
        "9.4.4-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8d346885c8be77aa9477c35c490aeaf403c3b9ed9c97ceac1c8508bab1fb0af5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b86a5825c26cd8bf65edf53ed39472ef48918a9a793ac6645004d9351bd06b4",
            "container_config": {
                "Hostname": "8b86a5825c26",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8d346885c8be77aa9477c35c490aeaf403c3b9ed9c97ceac1c8508bab1fb0af5",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-04-12T01:31:25.508617646Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-04-12T00:20:25.768925434Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e614539607055bdbde0cc1a94ef9783fe3627c8553ef1b21071ecb5c27ea27e4 in / "
                },
                {
                    "created": "2023-04-12T00:20:26.064098572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:29.259333605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:51.150792138Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-04-12T01:29:51.751761976Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.9.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:51.833858879Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:54.888919483Z",
                    "created_by": "|2 STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='161e1638da9efc56319f7225b3652ca3f339bcda9eadc7d6ce512f325b0f014a';             ;;         'x86_64')             STACK_SHA256='938f689dc45e2693ab1ca3ea215790b3786dfd531dcf6c0bf40842c24e579ae9';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-04-12T01:29:55.050583238Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:55.134768053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:58.768860049Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-04-12T01:29:58.902706374Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:29:58.986642385Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:31:20.467923035Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.4 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.9.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='2c0f22a7430490be3071f88240761bd7aadb7d40f22c6b9f1d2485ffcdf4e2e0';             ;;         'x86_64')             GHC_SHA256='a3ecd2426bb519d6fdad05904c386f1c74b433f07722b0d1ef606c23159ade2d';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-04-12T01:31:25.427767865Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-12T01:31:25.508617646Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61a5c84a1270a2da38fd32b5dd395bc404fb6c02940fa3b302a94d1c105ce499",
                    "sha256:c29c17e2b734db88dfe52f72d3bffe103b1413af1e7c9d2e124200b7ebb587a9",
                    "sha256:c02296313d80abb297aef6d60e57140c76898d6eaa88d86679e67a19f3d93988",
                    "sha256:8fd035c1efb88af3b74f2a89c0a01b287715b501e80ce4bade9a286254c8f912",
                    "sha256:9b4f19cd9b9ea9111e50193267dea059994a5251f377e884cd01b731e47980ad"
                ]
            }
        },
        "9.4.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:1e5ae10648a5885a64db4d9af348facf35152b1f133f1cb8a9a78aca2608a3f7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8765cef389dee690ce3b1e0e4bb53886a503d654a94ce8d9a4f13064a7a6e708",
            "container_config": {
                "Hostname": "8765cef389de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:1e5ae10648a5885a64db4d9af348facf35152b1f133f1cb8a9a78aca2608a3f7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-16T09:34:50.998754151Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:19.70415369Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30ed10904e3533aa50c332544532891f0dcf06cce020988e07af9afa6b2f5df4 in / "
                },
                {
                    "created": "2023-08-16T01:00:20.248067904Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T07:00:50.769078314Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:01:08.513704466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:02:03.205570929Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:14.921121541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.764650798Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:18.851854781Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.931573624Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.245543278Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:33:22.413117712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.49216792Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:24.661247145Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-16T09:33:24.788455194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:24.868924021Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:43.967629125Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.5 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ecf16ec503e739e727174b29e5acbe4cf0c54737dd4d5eda046e09323f9ee248';             ;;         'x86_64')             GHC_SHA256='a44c39c4cc9a147de6dd31762995a9e47467cc91757800d80667b8cd60a9b226';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-16T09:34:50.918389005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:50.998754151Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:65956a962659b03b0ebeb214c19f8b13776dfbd72444bee04ee85d2ac8b53e65",
                    "sha256:0c8609387730897b8edbb89178a3f5507347ec3e7888018c95d894c44b76d408",
                    "sha256:ebe0671257033e34565af2b481d1d4dd05fddf465c83cf97517ed73b835c5311",
                    "sha256:8bf9a4ce373447c47a797ebb64614827390aadf31101b004e24fb5a6f8f19b31",
                    "sha256:1b63e70e35cacf413f3d0052c804548d459db092e5b7281a8d7176a885843325",
                    "sha256:b34904db044fe2bf97c32bc8e59624c255d2ad431d8bf9d64449cbd3e7ac18c0",
                    "sha256:fa90491d9602df04fced2ad31d37323edc482988d85cb946124a0f744eb1fc86",
                    "sha256:47120404f7b0351519093c89fecf213c1f54e520f7e1d71b95f4b1210cf3662a"
                ]
            }
        },
        "9.4.5-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:1e5ae10648a5885a64db4d9af348facf35152b1f133f1cb8a9a78aca2608a3f7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8765cef389dee690ce3b1e0e4bb53886a503d654a94ce8d9a4f13064a7a6e708",
            "container_config": {
                "Hostname": "8765cef389de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:1e5ae10648a5885a64db4d9af348facf35152b1f133f1cb8a9a78aca2608a3f7",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-16T09:34:50.998754151Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:19.70415369Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30ed10904e3533aa50c332544532891f0dcf06cce020988e07af9afa6b2f5df4 in / "
                },
                {
                    "created": "2023-08-16T01:00:20.248067904Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T07:00:50.769078314Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:01:08.513704466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:02:03.205570929Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:14.921121541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.764650798Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:18.851854781Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.931573624Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.245543278Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:33:22.413117712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.49216792Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:24.661247145Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-16T09:33:24.788455194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:24.868924021Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:43.967629125Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.5 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ecf16ec503e739e727174b29e5acbe4cf0c54737dd4d5eda046e09323f9ee248';             ;;         'x86_64')             GHC_SHA256='a44c39c4cc9a147de6dd31762995a9e47467cc91757800d80667b8cd60a9b226';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-16T09:34:50.918389005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:50.998754151Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:65956a962659b03b0ebeb214c19f8b13776dfbd72444bee04ee85d2ac8b53e65",
                    "sha256:0c8609387730897b8edbb89178a3f5507347ec3e7888018c95d894c44b76d408",
                    "sha256:ebe0671257033e34565af2b481d1d4dd05fddf465c83cf97517ed73b835c5311",
                    "sha256:8bf9a4ce373447c47a797ebb64614827390aadf31101b004e24fb5a6f8f19b31",
                    "sha256:1b63e70e35cacf413f3d0052c804548d459db092e5b7281a8d7176a885843325",
                    "sha256:b34904db044fe2bf97c32bc8e59624c255d2ad431d8bf9d64449cbd3e7ac18c0",
                    "sha256:fa90491d9602df04fced2ad31d37323edc482988d85cb946124a0f744eb1fc86",
                    "sha256:47120404f7b0351519093c89fecf213c1f54e520f7e1d71b95f4b1210cf3662a"
                ]
            }
        },
        "9.4.5-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:88f75e0aec7212d23b83a4e3287638548ffef7932b41242def83f9bfe041104a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2bde5137123dfd55a2d6f729918c6824844a344a18840e53b472fd7acdcb976c",
            "container_config": {
                "Hostname": "2bde5137123d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:88f75e0aec7212d23b83a4e3287638548ffef7932b41242def83f9bfe041104a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-16T09:36:39.193054757Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:31.956785132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d4315fd7ceb67a5501410e4392ad3fd73642d6e2490f3626ce20a29321fa3682 in / "
                },
                {
                    "created": "2023-08-16T01:00:32.29880123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:53.640764653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:13.821842314Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:35:14.460678738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:14.542688549Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.298927094Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:35:17.454376696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.531609481Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:19.682089191Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-16T09:35:19.818253496Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:19.897867114Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:36:34.012106902Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.5 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ecf16ec503e739e727174b29e5acbe4cf0c54737dd4d5eda046e09323f9ee248';             ;;         'x86_64')             GHC_SHA256='a44c39c4cc9a147de6dd31762995a9e47467cc91757800d80667b8cd60a9b226';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-16T09:36:39.110737668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:36:39.193054757Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c05f80fc44fa80dbad9fa0ab0c41feead2c9bf1940695e821ec2150a98dfcaa2",
                    "sha256:f503bf99d9c3658dbeb75ec9b47c71026a3d3360aeb4adbf1e561bd5685df0a6",
                    "sha256:8e1cc3e182bb6f77f75a02fc7be09349fa756c155d6a7dce5c1c9a2ed4709c10",
                    "sha256:7e47b96bf399e1e0b5a950add31f421b52a432f387360e0b6f7eb7a59ca878a2",
                    "sha256:ca882a0eafdd293b3c3548b872ad96f586da0d03b92c215e47a1536ce5c51494"
                ]
            }
        },
        "9.4.5-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:88f75e0aec7212d23b83a4e3287638548ffef7932b41242def83f9bfe041104a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2bde5137123dfd55a2d6f729918c6824844a344a18840e53b472fd7acdcb976c",
            "container_config": {
                "Hostname": "2bde5137123d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:88f75e0aec7212d23b83a4e3287638548ffef7932b41242def83f9bfe041104a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-16T09:36:39.193054757Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:31.956785132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d4315fd7ceb67a5501410e4392ad3fd73642d6e2490f3626ce20a29321fa3682 in / "
                },
                {
                    "created": "2023-08-16T01:00:32.29880123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:53.640764653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:13.821842314Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:35:14.460678738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:14.542688549Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.298927094Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:35:17.454376696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.531609481Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:19.682089191Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-16T09:35:19.818253496Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:19.897867114Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:36:34.012106902Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.5 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='ecf16ec503e739e727174b29e5acbe4cf0c54737dd4d5eda046e09323f9ee248';             ;;         'x86_64')             GHC_SHA256='a44c39c4cc9a147de6dd31762995a9e47467cc91757800d80667b8cd60a9b226';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-16T09:36:39.110737668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:36:39.193054757Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c05f80fc44fa80dbad9fa0ab0c41feead2c9bf1940695e821ec2150a98dfcaa2",
                    "sha256:f503bf99d9c3658dbeb75ec9b47c71026a3d3360aeb4adbf1e561bd5685df0a6",
                    "sha256:8e1cc3e182bb6f77f75a02fc7be09349fa756c155d6a7dce5c1c9a2ed4709c10",
                    "sha256:7e47b96bf399e1e0b5a950add31f421b52a432f387360e0b6f7eb7a59ca878a2",
                    "sha256:ca882a0eafdd293b3c3548b872ad96f586da0d03b92c215e47a1536ce5c51494"
                ]
            }
        },
        "9.4.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:66ff42971d956132fa5676aa604a306773a3c2a7585d5ae86a995690068e118c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e331c9f3111dbd203deac849680e960514afeb39bf2e4c72b19f44b131d852d0",
            "container_config": {
                "Hostname": "e331c9f3111d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:66ff42971d956132fa5676aa604a306773a3c2a7585d5ae86a995690068e118c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-25T19:21:15.630581454Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:19.70415369Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30ed10904e3533aa50c332544532891f0dcf06cce020988e07af9afa6b2f5df4 in / "
                },
                {
                    "created": "2023-08-16T01:00:20.248067904Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T07:00:50.769078314Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:01:08.513704466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:02:03.205570929Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:14.921121541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.764650798Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:18.851854781Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.931573624Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.245543278Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:33:22.413117712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.49216792Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:24.661247145Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-25T19:19:46.558263034Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:19:46.656171934Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:21:08.406700272Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.6 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b27e4e4d760216457c20fdce3ec419e1bac905608e6577c2c2fa15f4a3779370';             ;;         'x86_64')             GHC_SHA256='6061c20ff4e154e81944dfc9f37afff5aaa05ce51ad25db3425ff85bb85a92a3';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-25T19:21:15.551183705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:21:15.630581454Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:65956a962659b03b0ebeb214c19f8b13776dfbd72444bee04ee85d2ac8b53e65",
                    "sha256:0c8609387730897b8edbb89178a3f5507347ec3e7888018c95d894c44b76d408",
                    "sha256:ebe0671257033e34565af2b481d1d4dd05fddf465c83cf97517ed73b835c5311",
                    "sha256:8bf9a4ce373447c47a797ebb64614827390aadf31101b004e24fb5a6f8f19b31",
                    "sha256:1b63e70e35cacf413f3d0052c804548d459db092e5b7281a8d7176a885843325",
                    "sha256:b34904db044fe2bf97c32bc8e59624c255d2ad431d8bf9d64449cbd3e7ac18c0",
                    "sha256:fa90491d9602df04fced2ad31d37323edc482988d85cb946124a0f744eb1fc86",
                    "sha256:e08376945bcc90bea0af456b87b77d97c1973ad2a3bc76072390701695cb04be"
                ]
            }
        },
        "9.4.6-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:66ff42971d956132fa5676aa604a306773a3c2a7585d5ae86a995690068e118c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e331c9f3111dbd203deac849680e960514afeb39bf2e4c72b19f44b131d852d0",
            "container_config": {
                "Hostname": "e331c9f3111d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:66ff42971d956132fa5676aa604a306773a3c2a7585d5ae86a995690068e118c",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-25T19:21:15.630581454Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:19.70415369Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:30ed10904e3533aa50c332544532891f0dcf06cce020988e07af9afa6b2f5df4 in / "
                },
                {
                    "created": "2023-08-16T01:00:20.248067904Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T07:00:50.769078314Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:01:08.513704466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T07:02:03.205570929Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:14.921121541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.764650798Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:33:18.851854781Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:18.931573624Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.245543278Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:33:22.413117712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:22.49216792Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:33:24.661247145Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-25T19:19:46.558263034Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:19:46.656171934Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:21:08.406700272Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.6 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b27e4e4d760216457c20fdce3ec419e1bac905608e6577c2c2fa15f4a3779370';             ;;         'x86_64')             GHC_SHA256='6061c20ff4e154e81944dfc9f37afff5aaa05ce51ad25db3425ff85bb85a92a3';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-25T19:21:15.551183705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:21:15.630581454Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:65956a962659b03b0ebeb214c19f8b13776dfbd72444bee04ee85d2ac8b53e65",
                    "sha256:0c8609387730897b8edbb89178a3f5507347ec3e7888018c95d894c44b76d408",
                    "sha256:ebe0671257033e34565af2b481d1d4dd05fddf465c83cf97517ed73b835c5311",
                    "sha256:8bf9a4ce373447c47a797ebb64614827390aadf31101b004e24fb5a6f8f19b31",
                    "sha256:1b63e70e35cacf413f3d0052c804548d459db092e5b7281a8d7176a885843325",
                    "sha256:b34904db044fe2bf97c32bc8e59624c255d2ad431d8bf9d64449cbd3e7ac18c0",
                    "sha256:fa90491d9602df04fced2ad31d37323edc482988d85cb946124a0f744eb1fc86",
                    "sha256:e08376945bcc90bea0af456b87b77d97c1973ad2a3bc76072390701695cb04be"
                ]
            }
        },
        "9.4.6-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:ffbc6a8d82d53399934486b0deb635c1366fdaf009645274f75809f0cec625b9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2510fe71f1e131280833210e18e49a66fadcfa7cc29f023968e3f70c8ae52f26",
            "container_config": {
                "Hostname": "2510fe71f1e1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:ffbc6a8d82d53399934486b0deb635c1366fdaf009645274f75809f0cec625b9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-25T19:22:46.832424857Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:31.956785132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d4315fd7ceb67a5501410e4392ad3fd73642d6e2490f3626ce20a29321fa3682 in / "
                },
                {
                    "created": "2023-08-16T01:00:32.29880123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:53.640764653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:13.821842314Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:35:14.460678738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:14.542688549Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.298927094Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:35:17.454376696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.531609481Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:19.682089191Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-25T19:21:25.286169965Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:21:25.36893975Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:22:41.993219538Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.6 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b27e4e4d760216457c20fdce3ec419e1bac905608e6577c2c2fa15f4a3779370';             ;;         'x86_64')             GHC_SHA256='6061c20ff4e154e81944dfc9f37afff5aaa05ce51ad25db3425ff85bb85a92a3';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-25T19:22:46.749453689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:22:46.832424857Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c05f80fc44fa80dbad9fa0ab0c41feead2c9bf1940695e821ec2150a98dfcaa2",
                    "sha256:f503bf99d9c3658dbeb75ec9b47c71026a3d3360aeb4adbf1e561bd5685df0a6",
                    "sha256:8e1cc3e182bb6f77f75a02fc7be09349fa756c155d6a7dce5c1c9a2ed4709c10",
                    "sha256:7e47b96bf399e1e0b5a950add31f421b52a432f387360e0b6f7eb7a59ca878a2",
                    "sha256:32ea199dc49544efec7db243e92282ec639d0f3266eb8b66065c3e60b2954daa"
                ]
            }
        },
        "9.4.6-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:ffbc6a8d82d53399934486b0deb635c1366fdaf009645274f75809f0cec625b9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2510fe71f1e131280833210e18e49a66fadcfa7cc29f023968e3f70c8ae52f26",
            "container_config": {
                "Hostname": "2510fe71f1e1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:ffbc6a8d82d53399934486b0deb635c1366fdaf009645274f75809f0cec625b9",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-08-25T19:22:46.832424857Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-08-16T01:00:31.956785132Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d4315fd7ceb67a5501410e4392ad3fd73642d6e2490f3626ce20a29321fa3682 in / "
                },
                {
                    "created": "2023-08-16T01:00:32.29880123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:34:53.640764653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:13.821842314Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-08-16T09:35:14.460678738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:14.542688549Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.298927094Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-08-16T09:35:17.454376696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:17.531609481Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-16T09:35:19.682089191Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-08-25T19:21:25.286169965Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.6",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:21:25.36893975Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:22:41.993219538Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.6 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='b27e4e4d760216457c20fdce3ec419e1bac905608e6577c2c2fa15f4a3779370';             ;;         'x86_64')             GHC_SHA256='6061c20ff4e154e81944dfc9f37afff5aaa05ce51ad25db3425ff85bb85a92a3';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-08-25T19:22:46.749453689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-25T19:22:46.832424857Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c05f80fc44fa80dbad9fa0ab0c41feead2c9bf1940695e821ec2150a98dfcaa2",
                    "sha256:f503bf99d9c3658dbeb75ec9b47c71026a3d3360aeb4adbf1e561bd5685df0a6",
                    "sha256:8e1cc3e182bb6f77f75a02fc7be09349fa756c155d6a7dce5c1c9a2ed4709c10",
                    "sha256:7e47b96bf399e1e0b5a950add31f421b52a432f387360e0b6f7eb7a59ca878a2",
                    "sha256:32ea199dc49544efec7db243e92282ec639d0f3266eb8b66065c3e60b2954daa"
                ]
            }
        },
        "9.4.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:920382670a2b755227f81dcb1992de8d53158e0cda20fb58e0a7f74f493f9e26",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26a5139060088b369ef48f0334e609421d6ec92e3348b3579640135d85c0c1d9",
            "container_config": {
                "Hostname": "26a513906008",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:920382670a2b755227f81dcb1992de8d53158e0cda20fb58e0a7f74f493f9e26",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-11-01T02:07:49.998268191Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-01T00:21:21.778123547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e12306e266f3e237ff7df5ea95bd339c3eb4a539f31be801afd63a76e116f522 in / "
                },
                {
                    "created": "2023-11-01T00:21:22.300113004Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T00:55:39.548715274Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T00:56:00.762572928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T00:57:04.811717332Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T01:58:03.171694365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:07.081356082Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T01:58:07.169224503Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:07.251526752Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:10.478684791Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-11-01T01:58:10.646482531Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:10.72698071Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:13.113973715Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-11-01T02:06:23.493067142Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:06:23.578504154Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:07:44.651243503Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.7 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='05896fc4bc52c117d281eac9c621c6c3a0b14f9f9eed5e42cce5e1c4485c7623';             ;;         'x86_64')             GHC_SHA256='6b5b939d20b47475358993210738578071005669500810f28746bbd856ed878b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-11-01T02:07:49.914134756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:07:49.998268191Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c1854d95a401c6afa553b8d6deb6f23c891026ec5d719d0e5ce46947d274546",
                    "sha256:9b1f212f11f1639db8c64d926779100950d50f89353a1741454e4eafede4f192",
                    "sha256:d51bb111fcff7061f2b6dc864c508501fcd38a7284a77f83faa04fb43f9862f9",
                    "sha256:b8efa3931033670bb63d775f0893d0007b055f965eadf518aef47cfb80f47244",
                    "sha256:ef7b8e1d1aad18febb67c7a7c6436ce4d7d2bf018c30bd415e2698ea47456fb2",
                    "sha256:015213e1246f0324f5e044811ca94af1e1d93b30c8b2616032a9bd09e9de2718",
                    "sha256:d0f59adf67077ba46e57f46ccd4d1b64ba48d84ca34702144c6f6fe6ead41735",
                    "sha256:83e220880bc7af86145e20055f14906b11f0a4fa4f079b7e31f3f5c905a4cb4f"
                ]
            }
        },
        "9.4.7-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:920382670a2b755227f81dcb1992de8d53158e0cda20fb58e0a7f74f493f9e26",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26a5139060088b369ef48f0334e609421d6ec92e3348b3579640135d85c0c1d9",
            "container_config": {
                "Hostname": "26a513906008",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:920382670a2b755227f81dcb1992de8d53158e0cda20fb58e0a7f74f493f9e26",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-11-01T02:07:49.998268191Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-01T00:21:21.778123547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e12306e266f3e237ff7df5ea95bd339c3eb4a539f31be801afd63a76e116f522 in / "
                },
                {
                    "created": "2023-11-01T00:21:22.300113004Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T00:55:39.548715274Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T00:56:00.762572928Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T00:57:04.811717332Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T01:58:03.171694365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:07.081356082Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T01:58:07.169224503Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:07.251526752Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:10.478684791Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-11-01T01:58:10.646482531Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:10.72698071Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T01:58:13.113973715Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-11-01T02:06:23.493067142Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:06:23.578504154Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:07:44.651243503Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.7 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='05896fc4bc52c117d281eac9c621c6c3a0b14f9f9eed5e42cce5e1c4485c7623';             ;;         'x86_64')             GHC_SHA256='6b5b939d20b47475358993210738578071005669500810f28746bbd856ed878b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-11-01T02:07:49.914134756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:07:49.998268191Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c1854d95a401c6afa553b8d6deb6f23c891026ec5d719d0e5ce46947d274546",
                    "sha256:9b1f212f11f1639db8c64d926779100950d50f89353a1741454e4eafede4f192",
                    "sha256:d51bb111fcff7061f2b6dc864c508501fcd38a7284a77f83faa04fb43f9862f9",
                    "sha256:b8efa3931033670bb63d775f0893d0007b055f965eadf518aef47cfb80f47244",
                    "sha256:ef7b8e1d1aad18febb67c7a7c6436ce4d7d2bf018c30bd415e2698ea47456fb2",
                    "sha256:015213e1246f0324f5e044811ca94af1e1d93b30c8b2616032a9bd09e9de2718",
                    "sha256:d0f59adf67077ba46e57f46ccd4d1b64ba48d84ca34702144c6f6fe6ead41735",
                    "sha256:83e220880bc7af86145e20055f14906b11f0a4fa4f079b7e31f3f5c905a4cb4f"
                ]
            }
        },
        "9.4.7-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3601ffd39bc1e3ccb949c2b70bdd3a66df61b58192a951f4cb4cddf8c975362e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0970f8384c6ba17985b06e38ba01a315289929e5de50fc8ae00297571d4f3a14",
            "container_config": {
                "Hostname": "0970f8384c6b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3601ffd39bc1e3ccb949c2b70bdd3a66df61b58192a951f4cb4cddf8c975362e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-11-01T02:09:23.658327465Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-01T00:21:33.658591207Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:29d3eb64d192a97184f2aa169407b58e969b06268c6372b49eefb72bcadb6e99 in / "
                },
                {
                    "created": "2023-11-01T00:21:34.028149221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:12.046637833Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:34.733929988Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T02:00:35.421607149Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:35.497764625Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:38.528500877Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-11-01T02:00:38.681332813Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:38.759356042Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:41.0372069Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-11-01T02:08:02.228003607Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:08:02.31622017Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:09:18.835701442Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.7 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='05896fc4bc52c117d281eac9c621c6c3a0b14f9f9eed5e42cce5e1c4485c7623';             ;;         'x86_64')             GHC_SHA256='6b5b939d20b47475358993210738578071005669500810f28746bbd856ed878b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-11-01T02:09:23.579566029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:09:23.658327465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c979220dc3ffe3cc5ddba51bf9aaaf820d1be7f3a57e9cb724ab395cc2be3cdd",
                    "sha256:b00eb5ce28599a9abfd9bf709d3d71b88d5b9c4afd26e3a23a174a1ad5c6313c",
                    "sha256:2eb46259ab1c17bdb41e745d09ea9a11b3ec496b8f6b115f63f7561194dc2ce9",
                    "sha256:2c1855972002ffab7ff39fa3beb51adbc69374899013e9a6b81eed2d5f17c792",
                    "sha256:cc3e10b76ffcf2d0e4028839c27c42105ae0322cb920ed7512d4be10aca91556"
                ]
            }
        },
        "9.4.7-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:3601ffd39bc1e3ccb949c2b70bdd3a66df61b58192a951f4cb4cddf8c975362e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0970f8384c6ba17985b06e38ba01a315289929e5de50fc8ae00297571d4f3a14",
            "container_config": {
                "Hostname": "0970f8384c6b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:3601ffd39bc1e3ccb949c2b70bdd3a66df61b58192a951f4cb4cddf8c975362e",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-11-01T02:09:23.658327465Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-01T00:21:33.658591207Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:29d3eb64d192a97184f2aa169407b58e969b06268c6372b49eefb72bcadb6e99 in / "
                },
                {
                    "created": "2023-11-01T00:21:34.028149221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:12.046637833Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:34.733929988Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-11-01T02:00:35.421607149Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:35.497764625Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:38.528500877Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-11-01T02:00:38.681332813Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:38.759356042Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:00:41.0372069Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-11-01T02:08:02.228003607Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.7",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:08:02.31622017Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:09:18.835701442Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.4.7 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='05896fc4bc52c117d281eac9c621c6c3a0b14f9f9eed5e42cce5e1c4485c7623';             ;;         'x86_64')             GHC_SHA256='6b5b939d20b47475358993210738578071005669500810f28746bbd856ed878b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-11-01T02:09:23.579566029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.7/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-01T02:09:23.658327465Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c979220dc3ffe3cc5ddba51bf9aaaf820d1be7f3a57e9cb724ab395cc2be3cdd",
                    "sha256:b00eb5ce28599a9abfd9bf709d3d71b88d5b9c4afd26e3a23a174a1ad5c6313c",
                    "sha256:2eb46259ab1c17bdb41e745d09ea9a11b3ec496b8f6b115f63f7561194dc2ce9",
                    "sha256:2c1855972002ffab7ff39fa3beb51adbc69374899013e9a6b81eed2d5f17c792",
                    "sha256:cc3e10b76ffcf2d0e4028839c27c42105ae0322cb920ed7512d4be10aca91556"
                ]
            }
        },
        "9.4.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1e7c88150dd8d1590d4ee252218960e35ba73a80feebba2d32ae9637cb869677",
            "container_config": {
                "Hostname": "1e7c88150dd8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:59:15.490360468Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:57:37.495771471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:37.589637269Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:09.217859106Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:59:15.399341707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:15.490360468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:daf8fcf21ff41ccfdadb74cd5c1359440cbb83204da60f9b9e3724223ebd8dae"
                ]
            }
        },
        "9.4.8-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1e7c88150dd8d1590d4ee252218960e35ba73a80feebba2d32ae9637cb869677",
            "container_config": {
                "Hostname": "1e7c88150dd8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:7f5b411a3eb8ee167b5ceb17a56aec91d904c07d2cdda01b58cc165a2fe2a0df",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:59:15.490360468Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:57:37.495771471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:37.589637269Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:09.217859106Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:59:15.399341707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:15.490360468Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:daf8fcf21ff41ccfdadb74cd5c1359440cbb83204da60f9b9e3724223ebd8dae"
                ]
            }
        },
        "9.4.8-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4ff471b530706fef36518c8af42f36d8d1283a2db4162ff42e913d190457f89",
            "container_config": {
                "Hostname": "f4ff471b5307",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:01:02.697476961Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:59:31.372291567Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:31.467825962Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:00:57.116005865Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:01:02.583085988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:02.697476961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:0849034b2e2569c4a06df8ffa48ee1feda1c35755d29660dca375567d36a2b97"
                ]
            }
        },
        "9.4.8-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f4ff471b530706fef36518c8af42f36d8d1283a2db4162ff42e913d190457f89",
            "container_config": {
                "Hostname": "f4ff471b5307",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b1865dcff8b6f1d3f73183e89e8d7d8eeac75c670c3b55d42aa7bf4c2557ad43",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T15:01:02.697476961Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:59:31.372291567Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.4.8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:59:31.467825962Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:00:57.116005865Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.4.8 GHC_RELEASE_KEY=88b57fcf7db53b4db3bfa4b1588764fbe22d19c4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='278e287e1ee624712b9c6d7803d1cf915ca1cce56e013b0a16215eb8dfeb1531';             ;;         'x86_64')             GHC_SHA256='fc77eaae5b89f29177bf159fd95ce438066ec64a46bf69df61b267102afdb10e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T15:01:02.583085988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.4.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T15:01:02.697476961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:0849034b2e2569c4a06df8ffa48ee1feda1c35755d29660dca375567d36a2b97"
                ]
            }
        },
        "9.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3803371ff0ba64ba4a03251dd5891402523d3d9c002507ffbf418cb5aec1aff",
            "container_config": {
                "Hostname": "e3803371ff0b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:55:37.40621858Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:53:49.538814785Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:49.632237049Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:30.9103798Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:55:37.314569725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:37.40621858Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:e69a1c34efece071bda23664febe4f02b1b2c7678143ebf8e9bc63efb7235202"
                ]
            }
        },
        "9.6-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3803371ff0ba64ba4a03251dd5891402523d3d9c002507ffbf418cb5aec1aff",
            "container_config": {
                "Hostname": "e3803371ff0b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:55:37.40621858Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:53:49.538814785Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:49.632237049Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:30.9103798Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:55:37.314569725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:37.40621858Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:e69a1c34efece071bda23664febe4f02b1b2c7678143ebf8e9bc63efb7235202"
                ]
            }
        },
        "9.6-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "efcb5b4d5c0d1c1531d03512712aa466cc99b8cdd93ddd31fd4f15eac733677d",
            "container_config": {
                "Hostname": "efcb5b4d5c0d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:57:25.721569425Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:55:43.571850234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:43.672023361Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:19.899267046Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:57:25.628180512Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:25.721569425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:82a469878f1658ab40240c4deed3e380ff73b45ee30156f02706da047d690d9b"
                ]
            }
        },
        "9.6-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "efcb5b4d5c0d1c1531d03512712aa466cc99b8cdd93ddd31fd4f15eac733677d",
            "container_config": {
                "Hostname": "efcb5b4d5c0d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:57:25.721569425Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:55:43.571850234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:43.672023361Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:19.899267046Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:57:25.628180512Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:25.721569425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:82a469878f1658ab40240c4deed3e380ff73b45ee30156f02706da047d690d9b"
                ]
            }
        },
        "9.6.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:4db75de25322ec39b7ea9ba16466cf108d7e5b4f65a05deaf0dab6512863a761",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f211bf83c541614968e4d386d04c2050f8f0e660c70c1a7d45e5ab4f6ce281b9",
            "container_config": {
                "Hostname": "f211bf83c541",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:4db75de25322ec39b7ea9ba16466cf108d7e5b4f65a05deaf0dab6512863a761",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-09-21T04:44:46.18888909Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-09-20T04:56:13.470690288Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5a868c8105f7b621ffe46e19453d846faef824601a70979f6ef2bb46076151b5 in / "
                },
                {
                    "created": "2023-09-20T04:56:13.883663949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T09:23:44.916257871Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-20T09:24:07.987458182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-20T09:25:20.607439391Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-21T04:42:51.095348649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:54.922050856Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-21T04:42:55.014615053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:55.098222356Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:58.249122518Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-09-21T04:42:58.42339937Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:58.5063062Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:43:00.79220047Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-09-21T04:43:00.926514048Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:43:01.020676894Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:44:39.916024856Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.6.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='5ad6153718d23a025f0f547f099bcecdf325edb5f5e16a9ec8bdeb17bad3c128';             ;;         'x86_64')             GHC_SHA256='63d4bbcee19a343bcdb7bc7c6ca85b1f666a26c7a64fba9014d2160ec3d4ad20';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-09-21T04:44:46.101512137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:44:46.18888909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c023d5d3301b053202d00b86178dbb293dc78b3ef12e28c9b0d9c90fac69703f",
                    "sha256:13b533ed807d8678f33493c54ec4209a892a83bf83fe080c2ad7db9ff34d72a2",
                    "sha256:66df36fb848d3b5eb2ab57ddaa4e35460cc788de34b429902c6b9f6cf7f90521",
                    "sha256:5c5f304c0fe5387a1f9d61853e647d5a7b4b04f2a3d2a0dd5bca5e91062fb25a",
                    "sha256:d2aaac8ce7efc0247a86058128d57ea03559e332f222026df366561537f81a56",
                    "sha256:6cd7c9c7a88323bb5c68d07e80fa926fea578225b29126b118f307a761f82114",
                    "sha256:d4f3d72f49dd381ac825f8af1885a56f918f0bfa0333ff2901d78e0267e9886d",
                    "sha256:8b48dffcda47f7461f2d21498208bd16f3320c45c5cec9c81d70062ebb8be23e"
                ]
            }
        },
        "9.6.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:4db75de25322ec39b7ea9ba16466cf108d7e5b4f65a05deaf0dab6512863a761",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f211bf83c541614968e4d386d04c2050f8f0e660c70c1a7d45e5ab4f6ce281b9",
            "container_config": {
                "Hostname": "f211bf83c541",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:4db75de25322ec39b7ea9ba16466cf108d7e5b4f65a05deaf0dab6512863a761",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-09-21T04:44:46.18888909Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-09-20T04:56:13.470690288Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5a868c8105f7b621ffe46e19453d846faef824601a70979f6ef2bb46076151b5 in / "
                },
                {
                    "created": "2023-09-20T04:56:13.883663949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T09:23:44.916257871Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-20T09:24:07.987458182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-20T09:25:20.607439391Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-21T04:42:51.095348649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:54.922050856Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-21T04:42:55.014615053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:55.098222356Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:58.249122518Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-09-21T04:42:58.42339937Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:42:58.5063062Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:43:00.79220047Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-09-21T04:43:00.926514048Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:43:01.020676894Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:44:39.916024856Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.6.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='5ad6153718d23a025f0f547f099bcecdf325edb5f5e16a9ec8bdeb17bad3c128';             ;;         'x86_64')             GHC_SHA256='63d4bbcee19a343bcdb7bc7c6ca85b1f666a26c7a64fba9014d2160ec3d4ad20';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-09-21T04:44:46.101512137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-21T04:44:46.18888909Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c023d5d3301b053202d00b86178dbb293dc78b3ef12e28c9b0d9c90fac69703f",
                    "sha256:13b533ed807d8678f33493c54ec4209a892a83bf83fe080c2ad7db9ff34d72a2",
                    "sha256:66df36fb848d3b5eb2ab57ddaa4e35460cc788de34b429902c6b9f6cf7f90521",
                    "sha256:5c5f304c0fe5387a1f9d61853e647d5a7b4b04f2a3d2a0dd5bca5e91062fb25a",
                    "sha256:d2aaac8ce7efc0247a86058128d57ea03559e332f222026df366561537f81a56",
                    "sha256:6cd7c9c7a88323bb5c68d07e80fa926fea578225b29126b118f307a761f82114",
                    "sha256:d4f3d72f49dd381ac825f8af1885a56f918f0bfa0333ff2901d78e0267e9886d",
                    "sha256:8b48dffcda47f7461f2d21498208bd16f3320c45c5cec9c81d70062ebb8be23e"
                ]
            }
        },
        "9.6.2-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:67f3455f2114554afa8b0cbbc72243abf2ed2b6283508c77602415dc4636b049",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8de203ba9b61190269243e6a0c1b3831e14e0663259668a86052568635e4ceb1",
            "container_config": {
                "Hostname": "8de203ba9b61",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:67f3455f2114554afa8b0cbbc72243abf2ed2b6283508c77602415dc4636b049",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-09-20T07:53:45.930529544Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-09-20T04:56:25.55192308Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a280220815a2a1eb37b2adea38333ec2f2d0c15bef81fb925d2fbb5218f0665f in / "
                },
                {
                    "created": "2023-09-20T04:56:25.916088065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:51:38.173485487Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:51:59.907980416Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-20T07:52:00.532809851Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:00.619451574Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:04.047662247Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-09-20T07:52:04.235043865Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:04.322190776Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:06.583993559Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-09-20T07:52:06.738356002Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:06.854788214Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:53:40.068193687Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.6.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='5ad6153718d23a025f0f547f099bcecdf325edb5f5e16a9ec8bdeb17bad3c128';             ;;         'x86_64')             GHC_SHA256='63d4bbcee19a343bcdb7bc7c6ca85b1f666a26c7a64fba9014d2160ec3d4ad20';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-09-20T07:53:45.848676961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:53:45.930529544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5fc4c90bc1d96291294052b400f5ba48fab688c32f01f0b1ac48471b61686ef7",
                    "sha256:0d8586fe14219b4fbf63b4be2a786537a5614ac6900c2cb458a360acb7699246",
                    "sha256:79d8317d62950f1396324f8229a939d5f728b49ce39001164caa38fbe724af4b",
                    "sha256:8a5a8fdc8b860d85f6c7301aeb2d161e7fb412a36306224ecf7eaf7adbcd4454",
                    "sha256:95dc69faef68c80f5cf724fb20bc8820dac2d5036c70905aa1149d6d0b07e180"
                ]
            }
        },
        "9.6.2-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:67f3455f2114554afa8b0cbbc72243abf2ed2b6283508c77602415dc4636b049",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8de203ba9b61190269243e6a0c1b3831e14e0663259668a86052568635e4ceb1",
            "container_config": {
                "Hostname": "8de203ba9b61",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:67f3455f2114554afa8b0cbbc72243abf2ed2b6283508c77602415dc4636b049",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-09-20T07:53:45.930529544Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-09-20T04:56:25.55192308Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a280220815a2a1eb37b2adea38333ec2f2d0c15bef81fb925d2fbb5218f0665f in / "
                },
                {
                    "created": "2023-09-20T04:56:25.916088065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:51:38.173485487Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:51:59.907980416Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-09-20T07:52:00.532809851Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:00.619451574Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:04.047662247Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2023-09-20T07:52:04.235043865Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.8.1.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:04.322190776Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:06.583993559Z",
                    "created_by": "|4 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='c7fa9029f2f829432dd9dcf764e58605fbb7431db79234feb3e46684a9b37214';             ;;         'x86_64')             CABAL_INSTALL_SHA256='c71a1a46fd42d235bb86be968660815c24950e5da2d1ff4640da025ab520424b';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2023-09-20T07:52:06.738356002Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:52:06.854788214Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:53:40.068193687Z",
                    "created_by": "|6 CABAL_INSTALL=3.8.1.0 CABAL_INSTALL_RELEASE_KEY=E9EC5616017C3EE26B33468CCE1ED8AE0B011D8C GHC=9.6.2 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='5ad6153718d23a025f0f547f099bcecdf325edb5f5e16a9ec8bdeb17bad3c128';             ;;         'x86_64')             GHC_SHA256='63d4bbcee19a343bcdb7bc7c6ca85b1f666a26c7a64fba9014d2160ec3d4ad20';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2023-09-20T07:53:45.848676961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-20T07:53:45.930529544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5fc4c90bc1d96291294052b400f5ba48fab688c32f01f0b1ac48471b61686ef7",
                    "sha256:0d8586fe14219b4fbf63b4be2a786537a5614ac6900c2cb458a360acb7699246",
                    "sha256:79d8317d62950f1396324f8229a939d5f728b49ce39001164caa38fbe724af4b",
                    "sha256:8a5a8fdc8b860d85f6c7301aeb2d161e7fb412a36306224ecf7eaf7adbcd4454",
                    "sha256:95dc69faef68c80f5cf724fb20bc8820dac2d5036c70905aa1149d6d0b07e180"
                ]
            }
        },
        "9.6.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:6e5f131a799cf702717d871cf829e4b91febca380aeb32331f16345189f3ac10",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7be5d97e6ee88726e5c664797ec029ce15ac27fd4797fad9c5c658c8a9993ef4",
            "container_config": {
                "Hostname": "7be5d97e6ee8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:6e5f131a799cf702717d871cf829e4b91febca380aeb32331f16345189f3ac10",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-01-06T00:35:55.674384868Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-12-19T01:21:00.573614335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5e3f2fedf4fa6382f3bbf6203060ba68df1aadc7ebfa3350df20bf31b102f0e in / "
                },
                {
                    "created": "2023-12-19T01:21:01.125853237Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T04:35:05.764950705Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T04:35:24.732596614Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T04:36:30.807997043Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T07:28:25.201128607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:28:29.219577919Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T07:28:29.313734856Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:28:29.4008612Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:28:33.132671132Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-01-06T00:30:06.348974543Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:30:06.442347901Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:30:09.390184422Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-01-06T00:34:08.812129122Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.3",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:34:08.914563738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:35:49.405786239Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.3 GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='03c389859319f09452081310fc13af7525063ea8930830ef76be2a14b312271e';             ;;         'x86_64')             GHC_SHA256='9ba0458c84efdbba69509c3c57497e22ad03743f816eb9c8b024abc13f7aacaa';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-01-06T00:35:55.583055436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:35:55.674384868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:68d1fa46303abcba15a51f050283a5c6919c9f68df0e99accb912172945a5181",
                    "sha256:57e84c2685c98a10c224daa372df4f93bb287f5dab1f1eed9de43ab0f481a0c3",
                    "sha256:50da86608eab6a4510daa4ae98e2646f63d43c4bb1e02bbdf21fb1c2a97d3194",
                    "sha256:b692b6b46900d58502117465293e73b4f58cce4a1c3bf61a42c5c43d6c732775",
                    "sha256:968d4133651770dc9986d9fc0e46a3978babe25d053b937f2c530573d0b55f10",
                    "sha256:91fc96872c883be87543ca3a746fdc7cfafdb89ec8ad61b873038b12c2b84377",
                    "sha256:cf6b3aa98d9d028673efd4bd185ac7bb83a5ff6ac64633ae4a0286b835a97eb5",
                    "sha256:1193433da6c35d022fa076924a071a7f4c7fcd23a4448a1ad68d094b6efe91b9"
                ]
            }
        },
        "9.6.3-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:6e5f131a799cf702717d871cf829e4b91febca380aeb32331f16345189f3ac10",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7be5d97e6ee88726e5c664797ec029ce15ac27fd4797fad9c5c658c8a9993ef4",
            "container_config": {
                "Hostname": "7be5d97e6ee8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:6e5f131a799cf702717d871cf829e4b91febca380aeb32331f16345189f3ac10",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-01-06T00:35:55.674384868Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-12-19T01:21:00.573614335Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5e3f2fedf4fa6382f3bbf6203060ba68df1aadc7ebfa3350df20bf31b102f0e in / "
                },
                {
                    "created": "2023-12-19T01:21:01.125853237Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T04:35:05.764950705Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T04:35:24.732596614Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T04:36:30.807997043Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T07:28:25.201128607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:28:29.219577919Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T07:28:29.313734856Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:28:29.4008612Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:28:33.132671132Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-01-06T00:30:06.348974543Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:30:06.442347901Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:30:09.390184422Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-01-06T00:34:08.812129122Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.3",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:34:08.914563738Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:35:49.405786239Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.3 GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='03c389859319f09452081310fc13af7525063ea8930830ef76be2a14b312271e';             ;;         'x86_64')             GHC_SHA256='9ba0458c84efdbba69509c3c57497e22ad03743f816eb9c8b024abc13f7aacaa';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-01-06T00:35:55.583055436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:35:55.674384868Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:68d1fa46303abcba15a51f050283a5c6919c9f68df0e99accb912172945a5181",
                    "sha256:57e84c2685c98a10c224daa372df4f93bb287f5dab1f1eed9de43ab0f481a0c3",
                    "sha256:50da86608eab6a4510daa4ae98e2646f63d43c4bb1e02bbdf21fb1c2a97d3194",
                    "sha256:b692b6b46900d58502117465293e73b4f58cce4a1c3bf61a42c5c43d6c732775",
                    "sha256:968d4133651770dc9986d9fc0e46a3978babe25d053b937f2c530573d0b55f10",
                    "sha256:91fc96872c883be87543ca3a746fdc7cfafdb89ec8ad61b873038b12c2b84377",
                    "sha256:cf6b3aa98d9d028673efd4bd185ac7bb83a5ff6ac64633ae4a0286b835a97eb5",
                    "sha256:1193433da6c35d022fa076924a071a7f4c7fcd23a4448a1ad68d094b6efe91b9"
                ]
            }
        },
        "9.6.3-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8d06dd80faa8d666341fe4abec5327eef209cc80800633ba9dffb2e13bc296ed",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0b5cbca316e53b9f42e343bb03b2ac9028efe64239fe3e1d175962e2e40fa2d4",
            "container_config": {
                "Hostname": "0b5cbca316e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8d06dd80faa8d666341fe4abec5327eef209cc80800633ba9dffb2e13bc296ed",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-01-06T00:37:45.299609192Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-12-19T01:21:12.78061662Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ae5c65eea20f7ddcf93a0aa255b6a08a906ac1a1a65cd2c4b5d1529bf9f6eaf8 in / "
                },
                {
                    "created": "2023-12-19T01:21:13.089341858Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:30:34.020012111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:30:56.484058199Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T07:30:57.323755713Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:30:57.412601217Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:31:01.061090333Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-01-06T00:32:15.088856427Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:32:15.181961859Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:32:17.833378426Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-01-06T00:36:02.54942178Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.3",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:36:02.640537276Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:37:39.475269993Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.3 GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='03c389859319f09452081310fc13af7525063ea8930830ef76be2a14b312271e';             ;;         'x86_64')             GHC_SHA256='9ba0458c84efdbba69509c3c57497e22ad03743f816eb9c8b024abc13f7aacaa';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-01-06T00:37:45.206762812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:37:45.299609192Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2897ab29b0ec0aa813838250f2a2d47cbb5529d09573b5a296144cf75117eb7",
                    "sha256:238b4b48bcaf75219aa87910f7ae3fc88a8db2f88c34eac05ee3a105bd91e18b",
                    "sha256:044b115e1b3ab21170d7bf3968a09af627e30f5e7993e6139a989b042ae21294",
                    "sha256:65d411b7ab4be722a992d0a5efc3e88db1742acd2f64723337298380f11f8c71",
                    "sha256:eb57e8b37f22637ef40d6ab6899ced1acc63789af4517c76f7dfe23e2e2a5a74"
                ]
            }
        },
        "9.6.3-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:8d06dd80faa8d666341fe4abec5327eef209cc80800633ba9dffb2e13bc296ed",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0b5cbca316e53b9f42e343bb03b2ac9028efe64239fe3e1d175962e2e40fa2d4",
            "container_config": {
                "Hostname": "0b5cbca316e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:8d06dd80faa8d666341fe4abec5327eef209cc80800633ba9dffb2e13bc296ed",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-01-06T00:37:45.299609192Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-12-19T01:21:12.78061662Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ae5c65eea20f7ddcf93a0aa255b6a08a906ac1a1a65cd2c4b5d1529bf9f6eaf8 in / "
                },
                {
                    "created": "2023-12-19T01:21:13.089341858Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:30:34.020012111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:30:56.484058199Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-12-19T07:30:57.323755713Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:30:57.412601217Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-19T07:31:01.061090333Z",
                    "created_by": "|2 STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='c7733d07ed78d6f4d82e0ebf6d260eb693c6c9df2208003d60caba69766f9c15';             ;;         'x86_64')             STACK_SHA256='408a120e824ed6e6b24c548a2ff6f210fcb0eed246f204a280ed4c75af0517e7';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-01-06T00:32:15.088856427Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:32:15.181961859Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:32:17.833378426Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-01-06T00:36:02.54942178Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.3",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:36:02.640537276Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:37:39.475269993Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.3 GHC_RELEASE_KEY=33C3A599DB85EA9B8BAA1866B202264020068BFB STACK=2.11.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='03c389859319f09452081310fc13af7525063ea8930830ef76be2a14b312271e';             ;;         'x86_64')             GHC_SHA256='9ba0458c84efdbba69509c3c57497e22ad03743f816eb9c8b024abc13f7aacaa';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-01-06T00:37:45.206762812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-06T00:37:45.299609192Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2897ab29b0ec0aa813838250f2a2d47cbb5529d09573b5a296144cf75117eb7",
                    "sha256:238b4b48bcaf75219aa87910f7ae3fc88a8db2f88c34eac05ee3a105bd91e18b",
                    "sha256:044b115e1b3ab21170d7bf3968a09af627e30f5e7993e6139a989b042ae21294",
                    "sha256:65d411b7ab4be722a992d0a5efc3e88db1742acd2f64723337298380f11f8c71",
                    "sha256:eb57e8b37f22637ef40d6ab6899ced1acc63789af4517c76f7dfe23e2e2a5a74"
                ]
            }
        },
        "9.6.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:251749154394c06c2d969450cb2f32764658843c471de3ef1f292fa224e63923",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "819d22d085625d3f298b3862140f9b0beabefc050176a487a8cf974d10a83929",
            "container_config": {
                "Hostname": "819d22d08562",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:251749154394c06c2d969450cb2f32764658843c471de3ef1f292fa224e63923",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-04-10T09:25:31.481343985Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-10T01:51:21.773621841Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c76ecdf17d2140aebb59f0261fd464e159af74b6489e79a1a10ad55941a63582 in / "
                },
                {
                    "created": "2024-04-10T01:51:22.271827104Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T05:27:59.275716926Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T05:28:20.009692997Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T05:29:27.573983531Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T09:19:12.216663369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:16.166952413Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T09:19:16.268805533Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:16.360498625Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:20.560540651Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-04-10T09:19:20.767130837Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:20.855191828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:23.158217599Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-04-10T09:23:45.031535654Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:23:45.125774963Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:25:25.486163788Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='d430345a66128c858e09dd9a90e5beabc045a9a3cedf776aea3adb45d1286276';             ;;         'x86_64')             GHC_SHA256='59885c43902110262cda168513dc6a9cc750e3e728dffb0cdb168e44929cb014';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-04-10T09:25:31.380969961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:25:31.481343985Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f74c00a8e5c31181ca67078ac9f496454a08dac9f78262ba4d3b66eb8e792b4b",
                    "sha256:f6d420b2a918b8cb542c269a459d29ce21d155b83d8ee20a85be35d47f880b03",
                    "sha256:f15c646224f04a93b3999e8a63d02c9795a367d4c7c2912e5be1d6df769af4e0",
                    "sha256:b7c9c494a27474acf3a5f6faf95f9cfb85c6d51c3baca3f300b213fc7f2dce8d",
                    "sha256:104aafa984daa72680aa9712971a16ab498008a6da5acd5e318c656e357a3200",
                    "sha256:63499bf5304619b3669e86f99ea87408c3d3322531f7e422ab261efa869f977b",
                    "sha256:8287520e050c5e82d1416b4d906a95234fe5c2156fe5c4a02a8baf36f14ffaaf",
                    "sha256:67ae21e583c31cc16a6c27a3d78023e03fd8e510fa360ab7589a243a44b1ad2b"
                ]
            }
        },
        "9.6.4-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:251749154394c06c2d969450cb2f32764658843c471de3ef1f292fa224e63923",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "819d22d085625d3f298b3862140f9b0beabefc050176a487a8cf974d10a83929",
            "container_config": {
                "Hostname": "819d22d08562",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:251749154394c06c2d969450cb2f32764658843c471de3ef1f292fa224e63923",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-04-10T09:25:31.481343985Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-10T01:51:21.773621841Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c76ecdf17d2140aebb59f0261fd464e159af74b6489e79a1a10ad55941a63582 in / "
                },
                {
                    "created": "2024-04-10T01:51:22.271827104Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T05:27:59.275716926Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T05:28:20.009692997Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T05:29:27.573983531Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T09:19:12.216663369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:16.166952413Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T09:19:16.268805533Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:16.360498625Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:20.560540651Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-04-10T09:19:20.767130837Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:20.855191828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:19:23.158217599Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-04-10T09:23:45.031535654Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:23:45.125774963Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:25:25.486163788Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='d430345a66128c858e09dd9a90e5beabc045a9a3cedf776aea3adb45d1286276';             ;;         'x86_64')             GHC_SHA256='59885c43902110262cda168513dc6a9cc750e3e728dffb0cdb168e44929cb014';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-04-10T09:25:31.380969961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:25:31.481343985Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f74c00a8e5c31181ca67078ac9f496454a08dac9f78262ba4d3b66eb8e792b4b",
                    "sha256:f6d420b2a918b8cb542c269a459d29ce21d155b83d8ee20a85be35d47f880b03",
                    "sha256:f15c646224f04a93b3999e8a63d02c9795a367d4c7c2912e5be1d6df769af4e0",
                    "sha256:b7c9c494a27474acf3a5f6faf95f9cfb85c6d51c3baca3f300b213fc7f2dce8d",
                    "sha256:104aafa984daa72680aa9712971a16ab498008a6da5acd5e318c656e357a3200",
                    "sha256:63499bf5304619b3669e86f99ea87408c3d3322531f7e422ab261efa869f977b",
                    "sha256:8287520e050c5e82d1416b4d906a95234fe5c2156fe5c4a02a8baf36f14ffaaf",
                    "sha256:67ae21e583c31cc16a6c27a3d78023e03fd8e510fa360ab7589a243a44b1ad2b"
                ]
            }
        },
        "9.6.4-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:fed6c17036588ea809cdc4e2c9e096a4e9d0513a074009cd4833f35923f348dc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9fc279145d201e377ad6adf8c61cc3c1d157205447c8a4ca352367facffc17b8",
            "container_config": {
                "Hostname": "9fc279145d20",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:fed6c17036588ea809cdc4e2c9e096a4e9d0513a074009cd4833f35923f348dc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-04-10T09:27:19.770636981Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-10T01:51:34.637383315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e2af322a9017b39b3ef71f2a62c8741e8f586798b9dec008de592186d3d9defc in / "
                },
                {
                    "created": "2024-04-10T01:51:35.031087571Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:21.045697948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:44.51574668Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T09:21:45.226132534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:45.31296303Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:48.994905834Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-04-10T09:21:49.194150878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:49.277971871Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:51.516480391Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-04-10T09:25:38.966361016Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:25:39.059807312Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:27:13.934158322Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='d430345a66128c858e09dd9a90e5beabc045a9a3cedf776aea3adb45d1286276';             ;;         'x86_64')             GHC_SHA256='59885c43902110262cda168513dc6a9cc750e3e728dffb0cdb168e44929cb014';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-04-10T09:27:19.676650628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:27:19.770636981Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d4d15ae34764fe2bfe74e810ba7cbcaa42f5f737b96df668ba06270c856b250",
                    "sha256:aae1ffdd66be3e927c4c5d8e185a48a85f6c175b31aed6a52adf28c90249adf7",
                    "sha256:c5ced2d0aacf2abd73b15f3c5a84bf217e5501952a70edbe5085db56bd4b88f3",
                    "sha256:f62c9e814eff2d91e5eb3f61180bca6f857f0b2a2922341df6f9696d46750279",
                    "sha256:e22f1dad66c21765f4e8ac720cace4a6656ee725825ed61e0f3e192c9771c544"
                ]
            }
        },
        "9.6.4-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:fed6c17036588ea809cdc4e2c9e096a4e9d0513a074009cd4833f35923f348dc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9fc279145d201e377ad6adf8c61cc3c1d157205447c8a4ca352367facffc17b8",
            "container_config": {
                "Hostname": "9fc279145d20",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:fed6c17036588ea809cdc4e2c9e096a4e9d0513a074009cd4833f35923f348dc",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-04-10T09:27:19.770636981Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-04-10T01:51:34.637383315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e2af322a9017b39b3ef71f2a62c8741e8f586798b9dec008de592186d3d9defc in / "
                },
                {
                    "created": "2024-04-10T01:51:35.031087571Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:21.045697948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:44.51574668Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-04-10T09:21:45.226132534Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:45.31296303Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:48.994905834Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-04-10T09:21:49.194150878Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:49.277971871Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:21:51.516480391Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-04-10T09:25:38.966361016Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:25:39.059807312Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:27:13.934158322Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.4 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='d430345a66128c858e09dd9a90e5beabc045a9a3cedf776aea3adb45d1286276';             ;;         'x86_64')             GHC_SHA256='59885c43902110262cda168513dc6a9cc750e3e728dffb0cdb168e44929cb014';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-04-10T09:27:19.676650628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.4/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-10T09:27:19.770636981Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d4d15ae34764fe2bfe74e810ba7cbcaa42f5f737b96df668ba06270c856b250",
                    "sha256:aae1ffdd66be3e927c4c5d8e185a48a85f6c175b31aed6a52adf28c90249adf7",
                    "sha256:c5ced2d0aacf2abd73b15f3c5a84bf217e5501952a70edbe5085db56bd4b88f3",
                    "sha256:f62c9e814eff2d91e5eb3f61180bca6f857f0b2a2922341df6f9696d46750279",
                    "sha256:e22f1dad66c21765f4e8ac720cace4a6656ee725825ed61e0f3e192c9771c544"
                ]
            }
        },
        "9.6.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3803371ff0ba64ba4a03251dd5891402523d3d9c002507ffbf418cb5aec1aff",
            "container_config": {
                "Hostname": "e3803371ff0b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:55:37.40621858Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:53:49.538814785Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:49.632237049Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:30.9103798Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:55:37.314569725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:37.40621858Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:e69a1c34efece071bda23664febe4f02b1b2c7678143ebf8e9bc63efb7235202"
                ]
            }
        },
        "9.6.5-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3803371ff0ba64ba4a03251dd5891402523d3d9c002507ffbf418cb5aec1aff",
            "container_config": {
                "Hostname": "e3803371ff0b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:91ae8bfccbd1b934a6d43eb5c697b661647a494466633fb134a833a062adb431",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:55:37.40621858Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:53:49.538814785Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:49.632237049Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:30.9103798Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:55:37.314569725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:37.40621858Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:e69a1c34efece071bda23664febe4f02b1b2c7678143ebf8e9bc63efb7235202"
                ]
            }
        },
        "9.6.5-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "efcb5b4d5c0d1c1531d03512712aa466cc99b8cdd93ddd31fd4f15eac733677d",
            "container_config": {
                "Hostname": "efcb5b4d5c0d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:57:25.721569425Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:55:43.571850234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:43.672023361Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:19.899267046Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:57:25.628180512Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:25.721569425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:82a469878f1658ab40240c4deed3e380ff73b45ee30156f02706da047d690d9b"
                ]
            }
        },
        "9.6.5-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "efcb5b4d5c0d1c1531d03512712aa466cc99b8cdd93ddd31fd4f15eac733677d",
            "container_config": {
                "Hostname": "efcb5b4d5c0d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:c0aa55bd8e0706730ecbf01ee4cfec766ae0141bd69cdb14a5e126e6add3845d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:57:25.721569425Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:55:43.571850234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.6.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:55:43.672023361Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:19.899267046Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.6.5 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='fc4e2df394b9d6f48bdb0abaabad1c97825264cbe4e75e7463fc794cb3f87047';             ;;         'x86_64')             GHC_SHA256='3851029d4af6353e75f5a6d4055e0a3ab95ad986d71a603901000af048ff106e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:57:25.628180512Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.6.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:57:25.721569425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:82a469878f1658ab40240c4deed3e380ff73b45ee30156f02706da047d690d9b"
                ]
            }
        },
        "9.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "9.8-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "9.8-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "9.8-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "9.8.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:84944e3265db061a3e73176e1cf181329da5e9b53e1fe4762beb80583f809a70",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "af4239551c9aec3dd47beecc2f4793fdb1cc8899c0933473b44ad65b0604418b",
            "container_config": {
                "Hostname": "af4239551c9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:84944e3265db061a3e73176e1cf181329da5e9b53e1fe4762beb80583f809a70",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-02-16T19:22:05.675910563Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-02-13T00:37:53.876812591Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dccb5d0cbcf502fb7c4135575f44ac26d665fc92f50546f3a7f9e4d433726453 in / "
                },
                {
                    "created": "2024-02-13T00:37:54.331250712Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T01:24:19.25166376Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-13T01:24:41.63627276Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-13T01:25:48.019283528Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-13T04:23:52.26408164Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T04:23:56.130592279Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-16T19:20:03.584185774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:03.691827543Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:07.744795104Z",
                    "created_by": "|2 STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='450126245044aa37ea8ba33f70c3c5bad331a3b4d3138f7b7ad0dee2a4ca1613';             ;;         'x86_64')             STACK_SHA256='3e8d85c4c9d24905498edc8c0ec0b4fa207093d9817f281d842c203f33ad9f5e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-02-16T19:20:07.965102722Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:08.054808975Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:10.446309088Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-02-16T19:20:10.606346571Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:10.701395253Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:21:58.854245968Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='aab7af72614f8bf9ca624407aa4dbc69bc009c2b4cc1a0f3c062008db81bdb95';             ;;         'x86_64')             GHC_SHA256='d498657ca00514bc4620b591f74b93f9a3b64e5282e5c4e2876a734c130f1fbf';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-02-16T19:22:05.584221298Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:05.675910563Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b77645f7917850ece38608a186317d53f07d59c94be2d2dd7d251e1407b9ed92",
                    "sha256:a248abcd65d774545f277ec50326dfacef8b8efc1ddb40bcf5077305807ff7b6",
                    "sha256:1ceb790b214c415e47d1c573029c4f427bbbb267425a299ee85db936d0d5be11",
                    "sha256:78538a5a3bd892148d96ae550625d2b4912dbac695129e2ad8d09aafa93c52c9",
                    "sha256:12284951e4d8b0c241a983c3fc85f2547f0c698778d795a8a11bde9938dd1629",
                    "sha256:a8ab20fb65b7ec558d7b4b1cd50a85b5cb6a84165ac1d942d67a3a10fc31441b",
                    "sha256:80740fc955dfbb04fb02547bb39d878e1dd407c6564d3f5635dd70468daa1bde",
                    "sha256:c3812882562fe7e3c92bdd0b889627bf11fe1605ad0291e9970e1770d181b5f6"
                ]
            }
        },
        "9.8.1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:84944e3265db061a3e73176e1cf181329da5e9b53e1fe4762beb80583f809a70",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "af4239551c9aec3dd47beecc2f4793fdb1cc8899c0933473b44ad65b0604418b",
            "container_config": {
                "Hostname": "af4239551c9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:84944e3265db061a3e73176e1cf181329da5e9b53e1fe4762beb80583f809a70",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-02-16T19:22:05.675910563Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-02-13T00:37:53.876812591Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dccb5d0cbcf502fb7c4135575f44ac26d665fc92f50546f3a7f9e4d433726453 in / "
                },
                {
                    "created": "2024-02-13T00:37:54.331250712Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T01:24:19.25166376Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-13T01:24:41.63627276Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-13T01:25:48.019283528Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-13T04:23:52.26408164Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T04:23:56.130592279Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-16T19:20:03.584185774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:03.691827543Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:07.744795104Z",
                    "created_by": "|2 STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='450126245044aa37ea8ba33f70c3c5bad331a3b4d3138f7b7ad0dee2a4ca1613';             ;;         'x86_64')             STACK_SHA256='3e8d85c4c9d24905498edc8c0ec0b4fa207093d9817f281d842c203f33ad9f5e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-02-16T19:20:07.965102722Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:08.054808975Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:10.446309088Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-02-16T19:20:10.606346571Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:20:10.701395253Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:21:58.854245968Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='aab7af72614f8bf9ca624407aa4dbc69bc009c2b4cc1a0f3c062008db81bdb95';             ;;         'x86_64')             GHC_SHA256='d498657ca00514bc4620b591f74b93f9a3b64e5282e5c4e2876a734c130f1fbf';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-02-16T19:22:05.584221298Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:05.675910563Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b77645f7917850ece38608a186317d53f07d59c94be2d2dd7d251e1407b9ed92",
                    "sha256:a248abcd65d774545f277ec50326dfacef8b8efc1ddb40bcf5077305807ff7b6",
                    "sha256:1ceb790b214c415e47d1c573029c4f427bbbb267425a299ee85db936d0d5be11",
                    "sha256:78538a5a3bd892148d96ae550625d2b4912dbac695129e2ad8d09aafa93c52c9",
                    "sha256:12284951e4d8b0c241a983c3fc85f2547f0c698778d795a8a11bde9938dd1629",
                    "sha256:a8ab20fb65b7ec558d7b4b1cd50a85b5cb6a84165ac1d942d67a3a10fc31441b",
                    "sha256:80740fc955dfbb04fb02547bb39d878e1dd407c6564d3f5635dd70468daa1bde",
                    "sha256:c3812882562fe7e3c92bdd0b889627bf11fe1605ad0291e9970e1770d181b5f6"
                ]
            }
        },
        "9.8.1-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b17057e6575f6be77a42d346176884459434ded4896a96e393cc040825102b65",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "656f14569c72271c23223eefdb96e89d7abc9a5bc561e76ad355484fee4d3f47",
            "container_config": {
                "Hostname": "656f14569c72",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b17057e6575f6be77a42d346176884459434ded4896a96e393cc040825102b65",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-02-16T19:24:06.802515439Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-02-13T00:38:06.299177832Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:232125261662ceeb0126b96defe05092c121fecd55c99db5f76a03ab0c87d07e in / "
                },
                {
                    "created": "2024-02-13T00:38:06.577647571Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T04:26:01.25666997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T04:26:26.315894078Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-16T19:22:12.464062033Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:12.55393805Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:16.483804527Z",
                    "created_by": "|2 STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='450126245044aa37ea8ba33f70c3c5bad331a3b4d3138f7b7ad0dee2a4ca1613';             ;;         'x86_64')             STACK_SHA256='3e8d85c4c9d24905498edc8c0ec0b4fa207093d9817f281d842c203f33ad9f5e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-02-16T19:22:16.719309262Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:16.815587107Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:19.066609122Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-02-16T19:22:19.222593102Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:19.325629413Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:24:00.326632334Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='aab7af72614f8bf9ca624407aa4dbc69bc009c2b4cc1a0f3c062008db81bdb95';             ;;         'x86_64')             GHC_SHA256='d498657ca00514bc4620b591f74b93f9a3b64e5282e5c4e2876a734c130f1fbf';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-02-16T19:24:06.713171702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:24:06.802515439Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53a6fc14d6c95bb842190a5371629848ba20e00f4c27a081127142743149ccd9",
                    "sha256:291b0db5a20f5f15c9c9de1fa3e10fb8159cb905dc03ee9ebb554b030f1872d6",
                    "sha256:2b1a1821f49d5474f2399d29000fe01f14a510342abc7475cda2f53c2d36c7df",
                    "sha256:be12d11030b0ddc552a3d0917b9ad521d5a11c1bd37715e7b73076b5b86aa078",
                    "sha256:adc0afecf2c2325ed808c4bcc48f0034b44fcfc8898e68de30b0bca406c39659"
                ]
            }
        },
        "9.8.1-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:b17057e6575f6be77a42d346176884459434ded4896a96e393cc040825102b65",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "656f14569c72271c23223eefdb96e89d7abc9a5bc561e76ad355484fee4d3f47",
            "container_config": {
                "Hostname": "656f14569c72",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:b17057e6575f6be77a42d346176884459434ded4896a96e393cc040825102b65",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-02-16T19:24:06.802515439Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-02-13T00:38:06.299177832Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:232125261662ceeb0126b96defe05092c121fecd55c99db5f76a03ab0c87d07e in / "
                },
                {
                    "created": "2024-02-13T00:38:06.577647571Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T04:26:01.25666997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T04:26:26.315894078Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-02-16T19:22:12.464062033Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:12.55393805Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:16.483804527Z",
                    "created_by": "|2 STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='450126245044aa37ea8ba33f70c3c5bad331a3b4d3138f7b7ad0dee2a4ca1613';             ;;         'x86_64')             STACK_SHA256='3e8d85c4c9d24905498edc8c0ec0b4fa207093d9817f281d842c203f33ad9f5e';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-02-16T19:22:16.719309262Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:16.815587107Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:19.066609122Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='004ed4a7ca890fadee23f58f9cb606c066236a43e16b34be2532b177b231b06d';             ;;         'x86_64')             CABAL_INSTALL_SHA256='bdeb27c008b09c3b86f8a2768018d62a1aee02565304d123fda87ed432549418';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-02-16T19:22:19.222593102Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:22:19.325629413Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:24:00.326632334Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.2.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD STACK=2.15.1 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='aab7af72614f8bf9ca624407aa4dbc69bc009c2b4cc1a0f3c062008db81bdb95';             ;;         'x86_64')             GHC_SHA256='d498657ca00514bc4620b591f74b93f9a3b64e5282e5c4e2876a734c130f1fbf';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-02-16T19:24:06.713171702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-16T19:24:06.802515439Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53a6fc14d6c95bb842190a5371629848ba20e00f4c27a081127142743149ccd9",
                    "sha256:291b0db5a20f5f15c9c9de1fa3e10fb8159cb905dc03ee9ebb554b030f1872d6",
                    "sha256:2b1a1821f49d5474f2399d29000fe01f14a510342abc7475cda2f53c2d36c7df",
                    "sha256:be12d11030b0ddc552a3d0917b9ad521d5a11c1bd37715e7b73076b5b86aa078",
                    "sha256:adc0afecf2c2325ed808c4bcc48f0034b44fcfc8898e68de30b0bca406c39659"
                ]
            }
        },
        "9.8.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "9.8.2-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "9.8.2-slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "9.8.2-slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f9b6b1879b8019f5bd9e7807eea40004637227458c77c2d23c5cf8a99367fd0a",
            "container_config": {
                "Hostname": "f9b6b1879b80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:296e1920040267af4cd7b99f27271e6cd5f083c99bc500695486c57b731c4b47",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:51:04.394484982Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:36.892090407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9062f3516bb9d149bc29e8f3ee94806152277d05a3f2ee0ba7bc2040d8bfc8d5 in / "
                },
                {
                    "created": "2024-05-14T01:28:37.468933512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T02:57:37.000018583Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:57:57.331986442Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T02:59:06.604484388Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdefault-libmysqlclient-dev \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:01.297791647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.123529541Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libnuma-dev         libtinfo-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:49:05.219009831Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:05.309151917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.377693665Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:49:09.611939521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:09.700127712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:11.923221336Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:49:12.07421215Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:49:12.164012716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:50:57.59516812Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:51:04.29946588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:04.394484982Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:77dd7e63360b147459cfb0109ad62a5198b7abb9a98a7b68331f18cbf2e2f1d7",
                    "sha256:ec6bd537fcdad9e0e6b370855a69cfb75cf7669433afc9867988159d68f49916",
                    "sha256:b6e91fd903bea2f12cd588adf2011327bb28bd32a0b6159e6ceb8ef9f1a6006b",
                    "sha256:76a9651a1918b56ca0e89810e6645d0efd9a4b6dd760717d978e34f5bc9898fa",
                    "sha256:44f535bed2243b6a18352dbe7cbc3ca5b7ee9c689a3e974fe131d9963addf569",
                    "sha256:2a72409dd6528c222efc076d3f9ee9c1568ed7af1d5f7138809771b773821c40",
                    "sha256:cc99dc2ce0df5ca4b52546c9fe47de9761a61ebe42d77561147bb635893f9e77",
                    "sha256:6fb53584299914a1a6d716b9411cbc8bcc09c509f8a2b7d9664c8bfad618d8dd"
                ]
            }
        },
        "slim": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "slim-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "64f4127e3b92d0174e094b49040f4bd2b1472a2187b9447528e60af76f991962",
            "container_config": {
                "Hostname": "64f4127e3b92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:68601828f00252b24ab88d3ecb00c636952724acb4cde6ae8b7573256094a201",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2024-05-14T14:53:35.73330976Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2024-05-14T01:28:45.806356774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea1fe4f19165d885a1f3d523e0ebdcc3e863e6b93717c8022529edb674a52e2d in / "
                },
                {
                    "created": "2024-05-14T01:28:46.206346034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:10.479840931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:35.236116806Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dpkg-dev         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libnuma-dev         libtinfo-dev         make         netbase         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-14T14:51:35.963056076Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.15.5",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:36.056476974Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:39.87885976Z",
                    "created_by": "|2 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     STACK_URL=\"https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-$ARCH.tar.gz\";     case \"$ARCH\" in         'aarch64')             STACK_SHA256='52cd9d9c2ee4dbf2841bba856f5fca15fbf6ba23fced7256aa3f7c8b76381c91';             ;;         'x86_64')             STACK_SHA256='d55f8554932aad23f7b1198e0d5ebe332073d73fe60e3f324d0b315c156d8c43';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$STACK_URL\" -o stack.tar.gz;     echo \"$STACK_SHA256 stack.tar.gz\" | sha256sum --strict --check;         curl -sSL \"$STACK_URL.asc\" -o stack.tar.gz.asc;     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$STACK_RELEASE_KEY\";     gpg --batch --verify stack.tar.gz.asc stack.tar.gz;     gpgconf --kill all;         tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 \"stack-$STACK-linux-$ARCH/stack\";     stack config set system-ghc --global true;     stack config set install-ghc --global false;         rm -rf /tmp/*;         stack --version;"
                },
                {
                    "created": "2024-05-14T14:51:40.17437704Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.10.3.0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:40.266483109Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.544293724Z",
                    "created_by": "|4 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     CABAL_INSTALL_TAR=\"cabal-install-$CABAL_INSTALL-$ARCH-linux-deb10.tar.xz\";     CABAL_INSTALL_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/$CABAL_INSTALL_TAR\";     CABAL_INSTALL_SHA256SUMS_URL=\"https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS\";     case \"$ARCH\" in         'aarch64')             CABAL_INSTALL_SHA256='92d341620c60294535f03098bff796ef6de2701de0c4fcba249cde18a2923013';             ;;         'x86_64')             CABAL_INSTALL_SHA256='1d7a7131402295b01f25be5373fde095a404c45f9b5a5508fb7474bb0d3d057a';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\"; exit 1 ;;     esac;     curl -fSL \"$CABAL_INSTALL_URL\" -o cabal-install.tar.gz;     echo \"$CABAL_INSTALL_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check;         curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL\";     curl -sSLO \"$CABAL_INSTALL_SHA256SUMS_URL.sig\";     GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$CABAL_INSTALL_RELEASE_KEY\";     gpg --batch --verify SHA256SUMS.sig SHA256SUMS;     grep \"$CABAL_INSTALL_SHA256  $CABAL_INSTALL_TAR\" SHA256SUMS;     gpgconf --kill all;         tar -xf cabal-install.tar.gz -C /usr/local/bin;         rm -rf /tmp/*;         cabal --version"
                },
                {
                    "created": "2024-05-14T14:51:42.701015208Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:51:42.787446332Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:29.568138188Z",
                    "created_by": "|6 CABAL_INSTALL=3.10.3.0 CABAL_INSTALL_RELEASE_KEY=EAF2A9A722C0C96F2B431CA511AAD8CEDEE0CAEF GHC=9.8.2 GHC_RELEASE_KEY=88B57FCF7DB53B4DB3BFA4B1588764FBE22D19C4 STACK=2.15.5 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 /bin/sh -c set -eux;     cd /tmp;     ARCH=\"$(dpkg-architecture --query DEB_BUILD_GNU_CPU)\";     GHC_URL=\"https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-$ARCH-deb10-linux.tar.xz\";     case \"$ARCH\" in         'aarch64')             GHC_SHA256='9a3776fd8dc02f95b751f0e44823d6727dea2c212857e2c5c5f6a38a034d1575';             ;;         'x86_64')             GHC_SHA256='7449e1c8ef351ec326f36d9eba2885ba7b75d9900df35b2069c4d6fd151b09eb';             ;;         *) echo >&2 \"error: unsupported architecture '$ARCH'\" ; exit 1 ;;     esac;     curl -sSL \"$GHC_URL\" -o ghc.tar.xz;     echo \"$GHC_SHA256 ghc.tar.xz\" | sha256sum --strict --check;         GNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME;     curl -sSL \"$GHC_URL.sig\" -o ghc.tar.xz.sig;     gpg --batch --keyserver keyserver.ubuntu.com --receive-keys \"$GHC_RELEASE_KEY\";     gpg --batch --verify ghc.tar.xz.sig ghc.tar.xz;     gpgconf --kill all;         tar xf ghc.tar.xz;     cd \"ghc-$GHC-$ARCH-unknown-linux\";     ./configure --prefix \"/opt/ghc/$GHC\";     make install;     find \"/opt/ghc/$GHC/\" \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete;         rm -rf /tmp/*;         \"/opt/ghc/$GHC/bin/ghc\" --version"
                },
                {
                    "created": "2024-05-14T14:53:35.633490424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.8.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T14:53:35.73330976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3abc5824e812e0d6eecaf90681fa59535b4aec43abd90f1406402231286a0aeb",
                    "sha256:c42fd6f9a16640c4e41f33573f3a518853254bee3ba01efe36963d2f380f08af",
                    "sha256:d554a6bc60f4b71b7c24d8f1acdd63a42a5aacc2f81cde0037064dcb6ba60fbe",
                    "sha256:54d6b1b3fc76196e7e4842a5f88efff6b074b4ff46d680f51124c1a0d44d16af",
                    "sha256:3cbb16dee41d4615f847f7b6315ca5ce86191fe6bc4c190af8c6477521bed2a9"
                ]
            }
        },
        "stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "ghci"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0b04e3e3fe73844d0b037c51c6af6c535748c2439e72fdd91ff29ea08df9a87d",
            "container_config": {
                "Hostname": "0b04e3e3fe73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LANG=C.UTF-8"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "CMD [\"ghci\"]"
                ],
                "Image": "sha256:edaf8953c7483f66b1066c906d14922e5853b18d956169ffd36010db3c7c0d32",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-10-12T17:02:10.406640131Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-10-12T01:22:41.85473113Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:084c8b3d38d578aa3910f3786b67b058962dbfdfd4a49d6e0201f2e91670873b in / "
                },
                {
                    "created": "2021-10-12T01:22:42.328361762Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:16.937221495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:40.724122917Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         ca-certificates         curl         dirmngr         git         gcc         gnupg         g++         libc6-dev         libffi-dev         libgmp-dev         libsqlite3-dev         libtinfo-dev         make         netbase         openssh-client         xz-utils         zlib1g-dev &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-10-12T17:00:41.46462774Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL=3.6.0.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.667198031Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:41.847362201Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.02085096Z",
                    "created_by": "|3 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${CABAL_INSTALL_RELEASE_KEY} &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS &&     curl -fSLO https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/SHA256SUMS.sig &&     gpg --batch --trusted-key B3D9F94B8DCAE210 --verify SHA256SUMS.sig SHA256SUMS &&     curl -fSL https://downloads.haskell.org/~cabal/cabal-install-$CABAL_INSTALL/cabal-install-$CABAL_INSTALL-x86_64-linux.tar.xz -o cabal-install.tar.gz &&     echo \"$CABAL_INSTALL_RELEASE_SHA256 cabal-install.tar.gz\" | sha256sum --strict --check &&     tar -xf cabal-install.tar.gz -C /usr/local/bin &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:00:50.319938852Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC=9.0.1",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.523051897Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:00:50.727762716Z",
                    "created_by": "/bin/sh -c #(nop)  ARG GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:01:59.507108832Z",
                    "created_by": "|6 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 /bin/sh -c cd /tmp &&   export GNUPGHOME=\"$(mktemp -d)\" &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz -o ghc.tar.xz &&   curl -sSL https://downloads.haskell.org/~ghc/$GHC/ghc-$GHC-x86_64-deb9-linux.tar.xz.sig -o ghc.tar.xz.sig &&   gpg --batch --keyserver keyserver.ubuntu.com --receive-keys ${GHC_RELEASE_KEY} &&   gpg --batch --trusted-key 2DE04D4E97DB64AD --verify ghc.tar.xz.sig ghc.tar.xz &&   echo \"$GHC_RELEASE_SHA256 ghc.tar.xz\" | sha256sum --strict --check &&   tar xf ghc.tar.xz &&   cd ghc-$GHC &&   ./configure --prefix /opt/ghc/$GHC &&   make install &&   find /opt/ghc/$GHC/ \\( -name \"*_p.a\" -o -name \"*.p_hi\" \\) -type f -delete &&   rm -rf /opt/ghc/$GHC/share/ &&   rm -rf \"$GNUPGHOME\" /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:03.281582194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK=2.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.516665205Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:03.743979992Z",
                    "created_by": "/bin/sh -c #(nop)  ARG STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:09.897233579Z",
                    "created_by": "|9 CABAL_INSTALL=3.6.0.0 CABAL_INSTALL_RELEASE_KEY=A970DF3AC3B9709706D74544B3D9F94B8DCAE210 CABAL_INSTALL_RELEASE_SHA256=BFCB7350966DAFE95051B5FC9FCB989C5708AB9E78191E71FC04647061668A11 GHC=9.0.1 GHC_RELEASE_KEY=FFEB7CE81E16A36B3E2DED6F2DE04D4E97DB64AD GHC_RELEASE_SHA256=4CA6252492F59FE589029FADCA4B6F922D6A9F0FF39D19A2BD9886FDE4E183D5 STACK=2.7.3 STACK_RELEASE_KEY=C5705533DA4F78D8664B5DC0575159689BEFB442 STACK_RELEASE_SHA256=A6C090555FA1C64AA61C29AA4449765A51D79E870CF759CDE192937CD614E72B /bin/sh -c cd /tmp &&     export GNUPGHOME=\"$(mktemp -d)\" &&     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${STACK_RELEASE_KEY} &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz -o stack.tar.gz &&     curl -fSL https://github.com/commercialhaskell/stack/releases/download/v${STACK}/stack-${STACK}-linux-x86_64.tar.gz.asc -o stack.tar.gz.asc &&     gpg --batch --trusted-key 575159689BEFB442 --verify stack.tar.gz.asc stack.tar.gz &&     echo \"$STACK_RELEASE_SHA256 stack.tar.gz\" | sha256sum --strict --check &&     tar -xf stack.tar.gz -C /usr/local/bin --strip-components=1 stack-$STACK-linux-x86_64/stack &&     /usr/local/bin/stack config set system-ghc --global true &&     /usr/local/bin/stack config set install-ghc --global false &&     rm -rf \"$GNUPGHOME\" /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2021-10-12T17:02:10.220829481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/.cabal/bin:/root/.local/bin:/opt/ghc/9.0.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-12T17:02:10.406640131Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"ghci\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73c3e7ef7bc684d1773acb3dfb5935ecfff616ea54b8ed17c0377ddb39434bd5",
                    "sha256:47291e467bddf76c3765e5866da56906bfe0d394b229574d6b633db8d7dfb87e",
                    "sha256:5f65ee6a4f99818db5dbfd506c0677ca21536baea0cec2233da861aad78907f8",
                    "sha256:b282a02fa0de2d5e36880f687b139daf7977f4b09c2d8939a13b02b02e0dc48f",
                    "sha256:a2a464bef31f23e55b7d75a584e5d889bca7069c4242e47e29cab101b663b63c"
                ]
            }
        }
    }
}